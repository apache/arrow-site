<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="plasma_2common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes refid="compat_8h" local="yes">plasma/compat.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includedby refid="plasma_2client_8h" local="yes">/arrow/cpp/src/plasma/client.h</includedby>
    <includedby refid="eviction__policy_8h" local="yes">/arrow/cpp/src/plasma/eviction_policy.h</includedby>
    <includedby refid="plasma_8h" local="yes">/arrow/cpp/src/plasma/plasma.h</includedby>
    <includedby refid="quota__aware__policy_8h" local="yes">/arrow/cpp/src/plasma/quota_aware_policy.h</includedby>
    <includedby refid="store_8h" local="yes">/arrow/cpp/src/plasma/store.h</includedby>
    <incdepgraph>
      <node id="9031">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="9024" relation="include">
        </childnode>
        <childnode refid="9032" relation="include">
        </childnode>
        <childnode refid="9030" relation="include">
        </childnode>
        <childnode refid="9033" relation="include">
        </childnode>
      </node>
      <node id="9034">
        <label>cstdint</label>
      </node>
      <node id="9028">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="9023" relation="include">
        </childnode>
        <childnode refid="9029" relation="include">
        </childnode>
        <childnode refid="9024" relation="include">
        </childnode>
        <childnode refid="9025" relation="include">
        </childnode>
        <childnode refid="9030" relation="include">
        </childnode>
        <childnode refid="9031" relation="include">
        </childnode>
        <childnode refid="9033" relation="include">
        </childnode>
        <childnode refid="9035" relation="include">
        </childnode>
        <childnode refid="9037" relation="include">
        </childnode>
      </node>
      <node id="9025">
        <label>string</label>
      </node>
      <node id="9022">
        <label>stddef.h</label>
      </node>
      <node id="9036">
        <label>ostream</label>
      </node>
      <node id="9037">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="9030">
        <label>utility</label>
      </node>
      <node id="9029">
        <label>iosfwd</label>
      </node>
      <node id="9027">
        <label>plasma/compat.h</label>
        <link refid="compat_8h"/>
      </node>
      <node id="9026">
        <label>unordered_map</label>
      </node>
      <node id="9032">
        <label>type_traits</label>
      </node>
      <node id="9021">
        <label>/arrow/cpp/src/plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="9022" relation="include">
        </childnode>
        <childnode refid="9023" relation="include">
        </childnode>
        <childnode refid="9024" relation="include">
        </childnode>
        <childnode refid="9025" relation="include">
        </childnode>
        <childnode refid="9026" relation="include">
        </childnode>
        <childnode refid="9027" relation="include">
        </childnode>
        <childnode refid="9028" relation="include">
        </childnode>
      </node>
      <node id="9023">
        <label>cstring</label>
      </node>
      <node id="9035">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="9024" relation="include">
        </childnode>
        <childnode refid="9036" relation="include">
        </childnode>
        <childnode refid="9025" relation="include">
        </childnode>
        <childnode refid="9030" relation="include">
        </childnode>
        <childnode refid="9037" relation="include">
        </childnode>
      </node>
      <node id="9024">
        <label>memory</label>
      </node>
      <node id="9033">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9039">
        <label>/arrow/cpp/src/plasma/client.h</label>
        <link refid="plasma_2client_8h"/>
        <childnode refid="9040" relation="include">
        </childnode>
      </node>
      <node id="9045">
        <label>/arrow/cpp/src/plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="9043" relation="include">
        </childnode>
        <childnode refid="9046" relation="include">
        </childnode>
        <childnode refid="9044" relation="include">
        </childnode>
        <childnode refid="9042" relation="include">
        </childnode>
      </node>
      <node id="9046">
        <label>/arrow/cpp/src/plasma/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="9042" relation="include">
        </childnode>
      </node>
      <node id="9043">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="9044" relation="include">
        </childnode>
      </node>
      <node id="9041">
        <label>/arrow/cpp/src/plasma/hash_table_store.h</label>
        <link refid="hash__table__store_8h"/>
      </node>
      <node id="9042">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="9044">
        <label>/arrow/cpp/src/plasma/quota_aware_policy.h</label>
        <link refid="quota__aware__policy_8h"/>
        <childnode refid="9042" relation="include">
        </childnode>
      </node>
      <node id="9040">
        <label>/arrow/cpp/src/plasma/external_store.h</label>
        <link refid="external__store_8h"/>
        <childnode refid="9041" relation="include">
        </childnode>
        <childnode refid="9042" relation="include">
        </childnode>
      </node>
      <node id="9038">
        <label>/arrow/cpp/src/plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="9039" relation="include">
        </childnode>
        <childnode refid="9043" relation="include">
        </childnode>
        <childnode refid="9045" relation="include">
        </childnode>
        <childnode refid="9044" relation="include">
        </childnode>
        <childnode refid="9042" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classplasma_1_1_unique_i_d" prot="public">plasma::UniqueID</innerclass>
    <innerclass refid="structplasma_1_1_object_table_entry" prot="public">plasma::ObjectTableEntry</innerclass>
    <innerclass refid="structstd_1_1hash_3_1_1plasma_1_1_unique_i_d_01_4" prot="public">std::hash&lt;::plasma::UniqueID &gt;</innerclass>
    <innernamespace refid="namespaceplasma">plasma</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(pcm):<sp/>Convert<sp/>getopt<sp/>and<sp/>sscanf<sp/>in<sp/>the<sp/>store<sp/>to<sp/>use<sp/>more<sp/>idiomatic<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>next<sp/>three<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STDC_FORMAT_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STDC_FORMAT_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compat_8h" kindref="compound">plasma/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PLASMA_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cuda__api_8h" kindref="compound">arrow/gpu/cuda_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceplasma" kindref="compound">plasma</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceplasma_1a1c81245984dbccd8316cc42f98bacb45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a1c81245984dbccd8316cc42f98bacb45" kindref="member">ObjectLocation</ref><sp/>:<sp/>int32_t<sp/>{<sp/><ref refid="namespaceplasma_1a1c81245984dbccd8316cc42f98bacb45a509820290d57f333403f490dde7316f4" kindref="member">Local</ref>,<sp/><ref refid="namespaceplasma_1a1c81245984dbccd8316cc42f98bacb45af8508f576cd3f742dfc268258dcdf0dd" kindref="member">Remote</ref>,<sp/><ref refid="namespaceplasma_1a1c81245984dbccd8316cc42f98bacb45a38c300f4fc9ce8a77aad4a30de05cad8" kindref="member">NotFound</ref><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198" kindref="member">PlasmaErrorCode</ref><sp/>:<sp/>int8_t<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198aa28166d3ea8fe93848f8e63f233c21f9" kindref="member">PlasmaObjectExists</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198adeedf341fc9d8cb5567343c35c7691f3" kindref="member">PlasmaObjectNotFound</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198a0eb600736e91ace6e9125aba8f0ebf98" kindref="member">PlasmaStoreFull</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198a1c1a82ff5b211dfbed2bfd5bdd245356" kindref="member">PlasmaObjectAlreadySealed</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref><sp/><ref refid="namespaceplasma_1acee1e06f131bbbfa8881bdc3589beb4a" kindref="member">MakePlasmaError</ref>(<ref refid="namespaceplasma_1a57d04d585d40f8545ff6e31e58a1d198" kindref="member">PlasmaErrorCode</ref><sp/>code,<sp/>std::string<sp/>message);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1ae1c50e561766242d0f2d1c6a943f5d8e" kindref="member">IsPlasmaObjectExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a3cba8d56364006c334a38c85ff18f18a" kindref="member">IsPlasmaObjectNotFound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a7bf4032db70828eba7f3c917236912c8" kindref="member">IsPlasmaObjectAlreadySealed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a9c06524b90447a8c18eb8544c25ab2a5" kindref="member">IsPlasmaStoreFull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespaceplasma_1aa4472f35b20c7f87cfd8343de3efbd14" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceplasma_1aa4472f35b20c7f87cfd8343de3efbd14" kindref="member">kUniqueIDSize</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classplasma_1_1_unique_i_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref><sp/>from_binary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1stl_1a232ce3f7139c816ba00d677ac277c4b1" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>mutable_data();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::string<sp/>hex()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71" refid="classplasma_1_1_unique_i_d_1aa88147dccaf669a0e220c367feb5120d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classplasma_1_1_unique_i_d_1aa88147dccaf669a0e220c367feb5120d" kindref="member">size</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1aa4472f35b20c7f87cfd8343de3efbd14" kindref="member">kUniqueIDSize</ref>;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint8_t<sp/>id_[<ref refid="namespaceplasma_1aa4472f35b20c7f87cfd8343de3efbd14" kindref="member">kUniqueIDSize</ref>];</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" refkind="member"><highlight class="normal">static_assert(std::is_pod&lt;UniqueID&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;UniqueID<sp/>must<sp/>be<sp/>plain<sp/>old<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref><sp/><ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespaceplasma_1a9063b8c2b48b267f01082f522b5a3d61" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceplasma_1a9063b8c2b48b267f01082f522b5a3d61" kindref="member">kDigestSize</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdc" kindref="member">ObjectState</ref><sp/>:<sp/>int<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdca719df393e8a50579639ab2278715b788" kindref="member">PLASMA_CREATED</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdca8b8234a4599538aa87ac9abc6562efbd" kindref="member">PLASMA_SEALED</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdca9a5543b89708c4578da00939bdc333bf" kindref="member">PLASMA_EVICTED</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CudaIpcPlaceholder<sp/>{};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structplasma_1_1_object_table_entry" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_object_table_entry" kindref="compound">ObjectTableEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="structplasma_1_1_object_table_entry" kindref="compound">ObjectTableEntry</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>~<ref refid="structplasma_1_1_object_table_entry" kindref="compound">ObjectTableEntry</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structplasma_1_1_object_table_entry_1a017587b5df1643c7784318decc20d34e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_object_table_entry_1a017587b5df1643c7784318decc20d34e" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="109" refid="structplasma_1_1_object_table_entry_1ab207201f0078aad245feded8863296f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_object_table_entry_1ab207201f0078aad245feded8863296f9" kindref="member">device_num</ref>;</highlight></codeline>
<codeline lineno="111" refid="structplasma_1_1_object_table_entry_1ad8d70024aa976b7d1e71a5b76f3a9704" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_object_table_entry_1ad8d70024aa976b7d1e71a5b76f3a9704" kindref="member">map_size</ref>;</highlight></codeline>
<codeline lineno="113" refid="structplasma_1_1_object_table_entry_1a119a8275cb3f0749c6e2aedd7d938bd8" refkind="member"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/><ref refid="structplasma_1_1_object_table_entry_1a119a8275cb3f0749c6e2aedd7d938bd8" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="115" refid="structplasma_1_1_object_table_entry_1a81c1540a4fba32f6aadb56b617f549bf" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><ref refid="structplasma_1_1_object_table_entry_1a81c1540a4fba32f6aadb56b617f549bf" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="117" refid="structplasma_1_1_object_table_entry_1a784f47afe16f6fe8f050a7ee4202a7b7" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_object_table_entry_1a784f47afe16f6fe8f050a7ee4202a7b7" kindref="member">data_size</ref>;</highlight></codeline>
<codeline lineno="119" refid="structplasma_1_1_object_table_entry_1aafb5dad8eeaee308a4756796a037a827" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_object_table_entry_1aafb5dad8eeaee308a4756796a037a827" kindref="member">metadata_size</ref>;</highlight></codeline>
<codeline lineno="121" refid="structplasma_1_1_object_table_entry_1a58a99155925ac7ebaf67e2b9db4d4ecf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_object_table_entry_1a58a99155925ac7ebaf67e2b9db4d4ecf" kindref="member">ref_count</ref>;</highlight></codeline>
<codeline lineno="123" refid="structplasma_1_1_object_table_entry_1a64602b0026b3a8ba7f26db07ff388aed" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_object_table_entry_1a64602b0026b3a8ba7f26db07ff388aed" kindref="member">create_time</ref>;</highlight></codeline>
<codeline lineno="125" refid="structplasma_1_1_object_table_entry_1a2e3691b896fc704f6ee9310c3019ffa1" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_object_table_entry_1a2e3691b896fc704f6ee9310c3019ffa1" kindref="member">construct_duration</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="structplasma_1_1_object_table_entry_1a4b97f2a94714686c9318ba0eab5124cc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a6a1816422abb257eda0498d6df72cfdc" kindref="member">ObjectState</ref><sp/><ref refid="structplasma_1_1_object_table_entry_1a4b97f2a94714686c9318ba0eab5124cc" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="130" refid="structplasma_1_1_object_table_entry_1a5e9f1f13f1276feb7ea9f3f0d3cfb9f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[<ref refid="namespaceplasma_1a9063b8c2b48b267f01082f522b5a3d61" kindref="member">kDigestSize</ref>];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PLASMA_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;::arrow::cuda::CudaIpcMemHandle&gt;<sp/>ipc_handle;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structplasma_1_1_object_table_entry_1abfc540181d3a80029d5c120718cb7a17" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;internal::CudaIpcPlaceholder&gt;<sp/><ref refid="structplasma_1_1_object_table_entry_1abfc540181d3a80029d5c120718cb7a17" kindref="member">ipc_handle</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="namespaceplasma_1a115d6577b87e1cc4d9f547eae6b372d6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_map&lt;ObjectID,<sp/>std::unique_ptr&lt;ObjectTableEntry&gt;&gt;<sp/><ref refid="namespaceplasma_1a115d6577b87e1cc4d9f547eae6b372d6" kindref="member">ObjectTable</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref>*<sp/><ref refid="namespaceplasma_1a79f03df6bdbea4f7c9bc644473aef03d" kindref="member">plasma_config</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>plasma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="namespacestd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="152" refid="structstd_1_1hash_3_1_1plasma_1_1_unique_i_d_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hash&lt;::<ref refid="classplasma_1_1_unique_i_d" kindref="compound">plasma::UniqueID</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="153" refid="structstd_1_1hash_3_1_1plasma_1_1_unique_i_d_01_4_1a0cb9452ea9f0f886310bbe761ad816ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1hash_3_1_1plasma_1_1_unique_i_d_01_4_1a0cb9452ea9f0f886310bbe761ad816ae" kindref="member">operator()</ref>(const<sp/>::plasma::UniqueID&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.hash();<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/plasma/common.h"/>
  </compounddef>
</doxygen>
