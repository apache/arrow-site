<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_sum_aggregate_function" kind="class" language="C++" prot="public" final="yes">
    <compoundname>arrow::compute::SumAggregateFunction</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_aggregate_function_static_state" prot="public" virt="non-virtual">arrow::compute::AggregateFunctionStaticState&lt; StateType &gt;</basecompoundref>
    <includes refid="sum__internal_8h" local="no">arrow/compute/kernels/sum_internal.h</includes>
    <templateparamlist>
      <param>
        <type>typename ArrowType</type>
      </param>
      <param>
        <type>typename StateType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a0b82e393da73aa8b92687e97e6e3cd7f" prot="private" static="no">
        <type>typename <ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt; ArrowType &gt;::CType</type>
        <definition>using arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::CType =  typename TypeTraits&lt;ArrowType&gt;::CType</definition>
        <argsstring></argsstring>
        <name>CType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="59" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a2f1d5c6fb2af3c2585533641787154aa" prot="private" static="no">
        <type>typename <ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt; ArrowType &gt;::ArrayType</type>
        <definition>using arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::ArrayType =  typename TypeTraits&lt;ArrowType&gt;::ArrayType</definition>
        <argsstring></argsstring>
        <name>ArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="60" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a4504b5916166d175a4ab77f9e51c2120" prot="private" static="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::kTinyThreshold</definition>
        <argsstring></argsstring>
        <name>kTinyThreshold</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1ab305571f0f358bc3cde0e5052d722ac5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::Consume</definition>
        <argsstring>(const Array &amp;input, StateType *state) const override</argsstring>
        <name>Consume</name>
        <reimplements refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ad0b7e10c7ff16c49da81100c5332f33a">Consume</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>StateType *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="70" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="70" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a56a0e4199e05b646fbbd89cfa57a6bba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::Merge</definition>
        <argsstring>(const StateType &amp;src, StateType *dst) const override</argsstring>
        <name>Merge</name>
        <reimplements refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1acc680a778a64e7820b7b876d3e70bec5">Merge</reimplements>
        <param>
          <type>const StateType &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>StateType *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="86" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1aa2694d835f2b8f005571134e6a5fc31d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::Finalize</definition>
        <argsstring>(const StateType &amp;src, Datum *output) const override</argsstring>
        <name>Finalize</name>
        <reimplements refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1a54ef4a30eb0f58c953620baa70e3763e">Finalize</reimplements>
        <param>
          <type>const StateType &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="91" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a9b1b098f9f32dbfd1a9bdaabf9cc4883" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::out_type</definition>
        <argsstring>() const override</argsstring>
        <name>out_type</name>
        <reimplements refid="classarrow_1_1compute_1_1_aggregate_function_1af5efd6754d2fdd5e0f9881b53efe2322">out_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="96" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="96" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a9040d4debac86ffd85d6e5b696cf0406" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>StateType</type>
        <definition>StateType arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::ConsumeDense</definition>
        <argsstring>(const ArrayType &amp;array) const</argsstring>
        <name>ConsumeDense</name>
        <param>
          <type>const ArrayType &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="99" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="99" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a008b5613b7166d8cb4f36c26c64a6c88" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>StateType</type>
        <definition>StateType arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::ConsumeTiny</definition>
        <argsstring>(const ArrayType &amp;array) const</argsstring>
        <name>ConsumeTiny</name>
        <param>
          <type>const ArrayType &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="113" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="113" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a9bfd0c23c76e8be0e2ffa7b29cc2dcae" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CType</type>
        <definition>CType arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::MaskedValue</definition>
        <argsstring>(bool valid, CType value) const</argsstring>
        <name>MaskedValue</name>
        <param>
          <type>bool</type>
          <declname>valid</declname>
        </param>
        <param>
          <type>CType</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="133" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1ab23e72e3c4068afd60562797e8db4719" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>StateType</type>
        <definition>StateType arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::UnrolledSum</definition>
        <argsstring>(uint8_t bits, const CType *values) const</argsstring>
        <name>UnrolledSum</name>
        <param>
          <type>uint8_t</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const CType *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="135" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="135" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_sum_aggregate_function_1a1593b046c040ae948ba3cab2c403336e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>StateType</type>
        <definition>StateType arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;::ConsumeSparse</definition>
        <argsstring>(const ArrayType &amp;array) const</argsstring>
        <name>ConsumeSparse</name>
        <param>
          <type>const ArrayType &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="155" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="155" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4446">
        <label>arrow::compute::AggregateFunction</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function"/>
      </node>
      <node id="4444">
        <label>arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_sum_aggregate_function"/>
        <childnode refid="4445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4445">
        <label>arrow::compute::AggregateFunctionStaticState&lt; StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function_static_state"/>
        <childnode refid="4446" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4449">
        <label>arrow::compute::AggregateFunction</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function"/>
      </node>
      <node id="4447">
        <label>arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_sum_aggregate_function"/>
        <childnode refid="4448" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4448">
        <label>arrow::compute::AggregateFunctionStaticState&lt; StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function_static_state"/>
        <childnode refid="4449" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" line="58" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/sum_internal.h" bodystart="58" bodyend="204"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a2f1d5c6fb2af3c2585533641787154aa" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>ArrayType</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1ab305571f0f358bc3cde0e5052d722ac5" prot="public" virt="virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>Consume</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a9040d4debac86ffd85d6e5b696cf0406" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>ConsumeDense</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a1593b046c040ae948ba3cab2c403336e" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>ConsumeSparse</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a008b5613b7166d8cb4f36c26c64a6c88" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>ConsumeTiny</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a0b82e393da73aa8b92687e97e6e3cd7f" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>CType</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1aa2694d835f2b8f005571134e6a5fc31d" prot="public" virt="virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>Finalize</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a4504b5916166d175a4ab77f9e51c2120" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>kTinyThreshold</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a9bfd0c23c76e8be0e2ffa7b29cc2dcae" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>MaskedValue</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a56a0e4199e05b646fbbd89cfa57a6bba" prot="public" virt="virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>Merge</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a9b1b098f9f32dbfd1a9bdaabf9cc4883" prot="public" virt="virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>out_type</name></member>
      <member refid="classarrow_1_1compute_1_1_sum_aggregate_function_1ab23e72e3c4068afd60562797e8db4719" prot="private" virt="non-virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>UnrolledSum</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a826b5a193e24381ddf54d9f8f1a69d3b" prot="public" virt="virtual"><scope>arrow::compute::SumAggregateFunction</scope><name>~AggregateFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
