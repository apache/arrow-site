<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_writer_properties" kind="class" language="C++" prot="public">
    <compoundname>parquet::WriterProperties</compoundname>
    <includes refid="properties_8h" local="no">parquet/properties.h</includes>
    <innerclass refid="classparquet_1_1_writer_properties_1_1_builder" prot="public">parquet::WriterProperties::Builder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a6789f8677cfbf1ff8614171af3028b0f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref> *</type>
        <definition>MemoryPool* parquet::WriterProperties::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="544" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1ac344cec4139e2b1c71dd8f55e3e3f1da" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::dictionary_pagesize_limit_</definition>
        <argsstring></argsstring>
        <name>dictionary_pagesize_limit_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="545" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1acbdc432fdc7e238875dcea0bef323bba" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::write_batch_size_</definition>
        <argsstring></argsstring>
        <name>write_batch_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="546" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a6fef796339596b6d5149bb864da6bf27" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::max_row_group_length_</definition>
        <argsstring></argsstring>
        <name>max_row_group_length_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="547" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a4ae944770cd9f8f4503a57b38ee18ab1" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::pagesize_</definition>
        <argsstring></argsstring>
        <name>pagesize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="548" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1aa36234263eb562b41bd5116834fdd3ef" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1a3b810e9624755684659547697975539a" kindref="member">ParquetDataPageVersion</ref></type>
        <definition>ParquetDataPageVersion parquet::WriterProperties::parquet_data_page_version_</definition>
        <argsstring></argsstring>
        <name>parquet_data_page_version_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="549" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a12f3f550473580b32964d25bd90b5301" prot="private" static="no" mutable="no">
        <type><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref></type>
        <definition>ParquetVersion::type parquet::WriterProperties::parquet_version_</definition>
        <argsstring></argsstring>
        <name>parquet_version_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="550" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a376fb430a20f7c1c7261835d43a8db7b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::WriterProperties::parquet_created_by_</definition>
        <argsstring></argsstring>
        <name>parquet_created_by_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="551" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1af6b13df4b6717910596bfed180bab2f5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileEncryptionProperties&gt; parquet::WriterProperties::file_encryption_properties_</definition>
        <argsstring></argsstring>
        <name>file_encryption_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="553" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a7d61a08a5f3a9c2c67e9398c2de72273" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref></type>
        <definition>ColumnProperties parquet::WriterProperties::default_column_properties_</definition>
        <argsstring></argsstring>
        <name>default_column_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="555" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1a658e38692efccd97b481c273040a4c0e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, ColumnProperties&gt; parquet::WriterProperties::column_properties_</definition>
        <argsstring></argsstring>
        <name>column_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="556" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a1bfe1694fe2a218b1706ca502bb58cd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref> *</type>
        <definition>MemoryPool* parquet::WriterProperties::memory_pool</definition>
        <argsstring>() const</argsstring>
        <name>memory_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="445" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="445" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a92a08b937fe769434a5652689c448512" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::dictionary_pagesize_limit</definition>
        <argsstring>() const</argsstring>
        <name>dictionary_pagesize_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="447" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1ab917c732a975a96fb458a7c03d824b13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::write_batch_size</definition>
        <argsstring>() const</argsstring>
        <name>write_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="449" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="449" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a0b7459b350829e523261732fdffd36fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::max_row_group_length</definition>
        <argsstring>() const</argsstring>
        <name>max_row_group_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="451" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="451" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a06150c6c50774ee11c39aafaa95f5f4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::data_pagesize</definition>
        <argsstring>() const</argsstring>
        <name>data_pagesize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="453" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a171fe1bd7c67efe13b8536688a54083f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceparquet_1a3b810e9624755684659547697975539a" kindref="member">ParquetDataPageVersion</ref></type>
        <definition>ParquetDataPageVersion parquet::WriterProperties::data_page_version</definition>
        <argsstring>() const</argsstring>
        <name>data_page_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="455" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="455" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a817c99555d9bdb14d2ba7d413ac79a95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref></type>
        <definition>ParquetVersion::type parquet::WriterProperties::version</definition>
        <argsstring>() const</argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="459" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a31c51a4b298a965c43f2d6e4233f00c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::WriterProperties::created_by</definition>
        <argsstring>() const</argsstring>
        <name>created_by</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="461" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a0b61e842af913e6a0d95cbdbf26b1764" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
        <definition>Encoding::type parquet::WriterProperties::dictionary_index_encoding</definition>
        <argsstring>() const</argsstring>
        <name>dictionary_index_encoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="463" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="463" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a5658f8dcc4ffb4872e717b1e003c1726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
        <definition>Encoding::type parquet::WriterProperties::dictionary_page_encoding</definition>
        <argsstring>() const</argsstring>
        <name>dictionary_page_encoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="471" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="471" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a1d689f5e496e646d181cf344b5761e20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref> &amp;</type>
        <definition>const ColumnProperties&amp; parquet::WriterProperties::column_properties</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>column_properties</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="479" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="479" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1ad16adad26f21ebe28eb7d41b4bf7877b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
        <definition>Encoding::type parquet::WriterProperties::encoding</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>encoding</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="486" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="486" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1afa694d949ee46bfd3cbe7a79fd11cc5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
        <definition>Compression::type parquet::WriterProperties::compression</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>compression</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="490" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a7b8a38b1639edc1c3acb8ceef14aacdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::WriterProperties::compression_level</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>compression_level</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="494" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="494" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a2ff2717e1f523075dff60ac882f99bc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::WriterProperties::dictionary_enabled</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>dictionary_enabled</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="498" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="498" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a34758fa8040280ebd5559c6ab1bb9986" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::WriterProperties::statistics_enabled</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>statistics_enabled</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="502" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="502" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a649f6c412c6c83423163d1cc6eb9b726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t parquet::WriterProperties::max_statistics_size</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path) const</argsstring>
        <name>max_statistics_size</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="506" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="506" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1abdb7f6df9c44e3dbd5a161938aa7e29d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> *</type>
        <definition>FileEncryptionProperties* parquet::WriterProperties::file_encryption_properties</definition>
        <argsstring>() const</argsstring>
        <name>file_encryption_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="510" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="510" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1a19c02ea8199986851d8861e5de29ac5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ColumnEncryptionProperties&gt; parquet::WriterProperties::column_encryption_properties</definition>
        <argsstring>(const std::string &amp;path) const</argsstring>
        <name>column_encryption_properties</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="514" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="514" bodyend="521"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1af17827f52c48e2d187ac40eaccabb76d" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::WriterProperties::WriterProperties</definition>
        <argsstring>(MemoryPool *pool, int64_t dictionary_pagesize_limit, int64_t write_batch_size, int64_t max_row_group_length, int64_t pagesize, ParquetVersion::type version, const std::string &amp;created_by, std::shared_ptr&lt; FileEncryptionProperties &gt; file_encryption_properties, const ColumnProperties &amp;default_column_properties, const std::unordered_map&lt; std::string, ColumnProperties &gt; &amp;column_properties, ParquetDataPageVersion data_page_version)</argsstring>
        <name>WriterProperties</name>
        <param>
          <type><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dictionary_pagesize_limit</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>write_batch_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>max_row_group_length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pagesize</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref></type>
          <declname>version</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>created_by</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> &gt;</type>
          <declname>file_encryption_properties</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref> &amp;</type>
          <declname>default_column_properties</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, <ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref> &gt; &amp;</type>
          <declname>column_properties</declname>
        </param>
        <param>
          <type><ref refid="namespaceparquet_1a3b810e9624755684659547697975539a" kindref="member">ParquetDataPageVersion</ref></type>
          <declname>data_page_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="524" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="524" bodyend="542"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/properties.h" line="170" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="170" bodyend="557"/>
    <listofallmembers>
      <member refid="classparquet_1_1_writer_properties_1a19c02ea8199986851d8861e5de29ac5e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>column_encryption_properties</name></member>
      <member refid="classparquet_1_1_writer_properties_1a1d689f5e496e646d181cf344b5761e20" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>column_properties</name></member>
      <member refid="classparquet_1_1_writer_properties_1a658e38692efccd97b481c273040a4c0e" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>column_properties_</name></member>
      <member refid="classparquet_1_1_writer_properties_1afa694d949ee46bfd3cbe7a79fd11cc5e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>compression</name></member>
      <member refid="classparquet_1_1_writer_properties_1a7b8a38b1639edc1c3acb8ceef14aacdb" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>compression_level</name></member>
      <member refid="classparquet_1_1_writer_properties_1a31c51a4b298a965c43f2d6e4233f00c4" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>created_by</name></member>
      <member refid="classparquet_1_1_writer_properties_1a171fe1bd7c67efe13b8536688a54083f" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>data_page_version</name></member>
      <member refid="classparquet_1_1_writer_properties_1a06150c6c50774ee11c39aafaa95f5f4d" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>data_pagesize</name></member>
      <member refid="classparquet_1_1_writer_properties_1a7d61a08a5f3a9c2c67e9398c2de72273" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>default_column_properties_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a2ff2717e1f523075dff60ac882f99bc1" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>dictionary_enabled</name></member>
      <member refid="classparquet_1_1_writer_properties_1a0b61e842af913e6a0d95cbdbf26b1764" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>dictionary_index_encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1a5658f8dcc4ffb4872e717b1e003c1726" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>dictionary_page_encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1a92a08b937fe769434a5652689c448512" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>dictionary_pagesize_limit</name></member>
      <member refid="classparquet_1_1_writer_properties_1ac344cec4139e2b1c71dd8f55e3e3f1da" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>dictionary_pagesize_limit_</name></member>
      <member refid="classparquet_1_1_writer_properties_1ad16adad26f21ebe28eb7d41b4bf7877b" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1abdb7f6df9c44e3dbd5a161938aa7e29d" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>file_encryption_properties</name></member>
      <member refid="classparquet_1_1_writer_properties_1af6b13df4b6717910596bfed180bab2f5" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>file_encryption_properties_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a0b7459b350829e523261732fdffd36fb" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>max_row_group_length</name></member>
      <member refid="classparquet_1_1_writer_properties_1a6fef796339596b6d5149bb864da6bf27" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>max_row_group_length_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a649f6c412c6c83423163d1cc6eb9b726" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>max_statistics_size</name></member>
      <member refid="classparquet_1_1_writer_properties_1a1bfe1694fe2a218b1706ca502bb58cd8" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>memory_pool</name></member>
      <member refid="classparquet_1_1_writer_properties_1a4ae944770cd9f8f4503a57b38ee18ab1" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>pagesize_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a376fb430a20f7c1c7261835d43a8db7b" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>parquet_created_by_</name></member>
      <member refid="classparquet_1_1_writer_properties_1aa36234263eb562b41bd5116834fdd3ef" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>parquet_data_page_version_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a12f3f550473580b32964d25bd90b5301" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>parquet_version_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a6789f8677cfbf1ff8614171af3028b0f" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>pool_</name></member>
      <member refid="classparquet_1_1_writer_properties_1a34758fa8040280ebd5559c6ab1bb9986" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>statistics_enabled</name></member>
      <member refid="classparquet_1_1_writer_properties_1a817c99555d9bdb14d2ba7d413ac79a95" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>version</name></member>
      <member refid="classparquet_1_1_writer_properties_1ab917c732a975a96fb458a7c03d824b13" prot="public" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>write_batch_size</name></member>
      <member refid="classparquet_1_1_writer_properties_1acbdc432fdc7e238875dcea0bef323bba" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>write_batch_size_</name></member>
      <member refid="classparquet_1_1_writer_properties_1af17827f52c48e2d187ac40eaccabb76d" prot="private" virt="non-virtual"><scope>parquet::WriterProperties</scope><name>WriterProperties</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
