<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_list_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::ListBuilder</compoundname>
    <basecompoundref refid="classarrow_1_1_base_list_builder" prot="public" virt="non-virtual">arrow::BaseListBuilder&lt; ListType &gt;</basecompoundref>
    <includes refid="builder__nested_8h" local="no">arrow/array/builder_nested.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_list_builder_1ac80f4e40b925001e0b21814f41b77eaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ListBuilder::Finish</definition>
        <argsstring>(std::shared_ptr&lt; ListArray &gt; *out)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_list_array" kindref="compound">ListArray</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_nested.h" line="180" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_nested.h" bodystart="180" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Builder class for variable-length list array value types. </para>    </briefdescription>
    <detaileddescription>
<para>To use this class, you must append values to the child array builder and use the Append function to delimit each distinct list value (once the values have been appended to the child array) or use the bulk API to append a sequence of offsets and null values.</para><para>A note on types. Per <ref refid="type_8h" kindref="compound">arrow/type.h</ref> all types in the c++ implementation are logical so even though this class always builds list array, this can represent multiple different logical types. If no logical type is provided at construction time, the class defaults to List&lt;T&gt; where t is taken from the value_builder/values that the object is constructed with. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2836">
        <label>arrow::ListBuilder</label>
        <link refid="classarrow_1_1_list_builder"/>
        <childnode refid="2837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2837">
        <label>arrow::BaseListBuilder&lt; ListType &gt;</label>
        <link refid="classarrow_1_1_base_list_builder"/>
        <childnode refid="2838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2838">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2839">
        <label>arrow::ListBuilder</label>
        <link refid="classarrow_1_1_list_builder"/>
        <childnode refid="2840" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2842">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="2840">
        <label>arrow::BaseListBuilder&lt; ListType &gt;</label>
        <link refid="classarrow_1_1_base_list_builder"/>
        <childnode refid="2841" relation="public-inheritance">
        </childnode>
        <childnode refid="2844" relation="usage">
          <edgelabel>offsets_builder_</edgelabel>
        </childnode>
      </node>
      <node id="2843">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="2841">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="2842" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="2843" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
      <node id="2844">
        <label>arrow::TypedBufferBuilder&lt; offset_type &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_nested.h" line="172" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_nested.h" bodystart="172" bodyend="181"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_base_list_builder_1ada18b5551213c8eb7b7a56dceabaefb7" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a4762c55554790935d6d838ca0a0f1225" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>AppendNextOffset</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a5f01529de25a28eeeac92463264bb801" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_base_list_builder_1aeac3db7650e6fad0c89be433eb79e650" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a901b86feaa270241a0f46564a2be9afa" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a079b2be2a52ddb19ddb3dee9a485bfd9" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>BaseListBuilder</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a93eabbf9ec21a104af65a0fa36164a18" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>BaseListBuilder</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a347a02df95c2fd8a52f6d919b56aa96b" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>CheckNextOffset</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_list_builder_1ac80f4e40b925001e0b21814f41b77eaf" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual" ambiguityscope="BaseListBuilder&lt; ListType &gt;::"><scope>arrow::ListBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a935a4b7804a1f9eec4e334c31838d679" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_base_list_builder_1ac07f9c0c2d1547125e21226aa8583b38" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>maximum_elements</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a4a684e5301785b173ddda7430b1c0e22" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>offset_type</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a9ff0d0d1d84ef6e57e313facd2f246c3" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>offsets_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a5e18aaf8fc9c940e1adf8d20c3658531" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_base_list_builder_1ae82a9301ca92b957b7db7e1362cffb16" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a1665bd1f7c2e96da2507950d46e03998" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_base_list_builder_1a1586a61bdd6589ebf50956af61760930" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>TypeClass</name></member>
      <member refid="classarrow_1_1_array_builder_1a44b3f511e5aefdba55aebfd4afa99c8f" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_base_list_builder_1af84e8c826e4a14ce8866128608c1d660" prot="public" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>value_builder</name></member>
      <member refid="classarrow_1_1_base_list_builder_1afff8260b6999ef8f40b4ae438c577900" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>value_builder_</name></member>
      <member refid="classarrow_1_1_base_list_builder_1ab3c06311b7fe489012e8c50fcc02ec50" prot="protected" virt="non-virtual"><scope>arrow::ListBuilder</scope><name>value_field_</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::ListBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
