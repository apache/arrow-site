<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1arrow_1_1_multipath_level_builder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::arrow::MultipathLevelBuilder</compoundname>
    <includes refid="path__internal_8h" local="no">parquet/arrow/path_internal.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classparquet_1_1arrow_1_1_multipath_level_builder_1acb11cc2470ebc36e91904b2e3faf4ac1" prot="public" static="no">
        <type>std::function&lt;::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>(const <ref refid="structparquet_1_1arrow_1_1_multipath_level_builder_result" kindref="compound">MultipathLevelBuilderResult</ref> &amp;)&gt;</type>
        <definition>using parquet::arrow::MultipathLevelBuilder::CallbackFunction =  std::function&lt;::arrow::Status(const MultipathLevelBuilderResult&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackFunction</name>
        <briefdescription>
<para>A callback function that will receive results from the call to Write(...) below. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="structparquet_1_1arrow_1_1_multipath_level_builder_result" kindref="compound">MultipathLevelBuilderResult</ref> passed in will only remain valid for the function call (i.e. storing it and relying for its data to be consistent afterwards will result in undefined behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="105" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_multipath_level_builder_1aad9b70121585e84435937c2f48ab2324" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::MultipathLevelBuilder::Write</definition>
        <argsstring>(const ::arrow::Array &amp;array, bool array_field_nullable, ArrowWriteContext *context, CallbackFunction write_leaf_callback)</argsstring>
        <name>Write</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>array_field_nullable</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_arrow_write_context" kindref="compound">ArrowWriteContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classparquet_1_1arrow_1_1_multipath_level_builder_1acb11cc2470ebc36e91904b2e3faf4ac1" kindref="member">CallbackFunction</ref></type>
          <declname>write_leaf_callback</declname>
        </param>
        <briefdescription>
<para>Determine rep/def level information for the array. </para>        </briefdescription>
        <detaileddescription>
<para>The callback will be invoked for each leaf Array that is a descendant of array. Each leaf array is processed in a depth first traversal-order.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array_field_nullable</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the algorithm should consider the the array column as nullable (as determined by its type&apos;s parent field). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">context</parametername>
</parameternamelist>
<parameterdescription>
<para>for use when allocating memory, etc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">write_leaf_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to receive results. There will be one call to the write_leaf_callback for each leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="121" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_multipath_level_builder_1a62fa8a46d615573c974e1677cffd8c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; std::unique_ptr&lt; <ref refid="classparquet_1_1arrow_1_1_multipath_level_builder" kindref="compound">MultipathLevelBuilder</ref> &gt; &gt;</type>
        <definition>static ::arrow::Result&lt;std::unique_ptr&lt;MultipathLevelBuilder&gt; &gt; parquet::arrow::MultipathLevelBuilder::Make</definition>
        <argsstring>(const ::arrow::Array &amp;array, bool array_field_nullable)</argsstring>
        <name>Make</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>array_field_nullable</declname>
        </param>
        <briefdescription>
<para>Construct a new instance of the builder. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array_field_nullable</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the algorithm should consider the the array column as nullable (as determined by its type&apos;s parent field). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_multipath_level_builder_1a16b5d075a4f2b151a9fda3aa0d63faeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual parquet::arrow::MultipathLevelBuilder::~MultipathLevelBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>~MultipathLevelBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_multipath_level_builder_1ad8f837c3e03e97a6979cb253838e5725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::arrow::MultipathLevelBuilder::GetLeafCount</definition>
        <argsstring>() const =0</argsstring>
        <name>GetLeafCount</name>
        <briefdescription>
<para>Returns the number of leaf columns that need to be written to Parquet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_multipath_level_builder_1aed9a19956ed9f6058b49b4857b8a5873" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>virtual ::arrow::Status parquet::arrow::MultipathLevelBuilder::Write</definition>
        <argsstring>(int leaf_index, ArrowWriteContext *context, CallbackFunction write_leaf_callback)=0</argsstring>
        <name>Write</name>
        <param>
          <type>int</type>
          <declname>leaf_index</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_arrow_write_context" kindref="compound">ArrowWriteContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classparquet_1_1arrow_1_1_multipath_level_builder_1acb11cc2470ebc36e91904b2e3faf4ac1" kindref="member">CallbackFunction</ref></type>
          <declname>write_leaf_callback</declname>
        </param>
        <briefdescription>
<para>Calls write_leaf_callback with the <ref refid="structparquet_1_1arrow_1_1_multipath_level_builder_result" kindref="compound">MultipathLevelBuilderResult</ref> corresponding to |leaf_index|. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">leaf_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the leaf column to write. Must be in the range [0, <ref refid="classparquet_1_1arrow_1_1_multipath_level_builder_1ad8f837c3e03e97a6979cb253838e5725" kindref="member">GetLeafCount()</ref>]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">context</parametername>
</parameternamelist>
<parameterdescription>
<para>for use when allocating memory, etc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">write_leaf_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to receive the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="147" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Logic for being able to write out nesting (rep/def level) data that is needed for writing to parquet. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="98" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="98" bodyend="149"/>
    <listofallmembers>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1acb11cc2470ebc36e91904b2e3faf4ac1" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>CallbackFunction</name></member>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1ad8f837c3e03e97a6979cb253838e5725" prot="public" virt="pure-virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>GetLeafCount</name></member>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1a62fa8a46d615573c974e1677cffd8c90" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>Make</name></member>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1aad9b70121585e84435937c2f48ab2324" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>Write</name></member>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1aed9a19956ed9f6058b49b4857b8a5873" prot="public" virt="pure-virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>Write</name></member>
      <member refid="classparquet_1_1arrow_1_1_multipath_level_builder_1a16b5d075a4f2b151a9fda3aa0d63faeb" prot="public" virt="virtual"><scope>parquet::arrow::MultipathLevelBuilder</scope><name>~MultipathLevelBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
