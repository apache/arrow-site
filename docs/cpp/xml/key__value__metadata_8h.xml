<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="key__value__metadata_8h" kind="file" language="C++">
    <compoundname>key_value_metadata.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="result_8h" local="yes">arrow/result.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="api_8h" local="yes">/arrow/cpp/src/arrow/api.h</includedby>
    <includedby refid="json_2parser_8h" local="yes">/arrow/cpp/src/arrow/json/parser.h</includedby>
    <includedby refid="metadata_8h" local="yes">/arrow/cpp/src/parquet/metadata.h</includedby>
    <incdepgraph>
      <node id="12795">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="12784" relation="include">
        </childnode>
        <childnode refid="12791" relation="include">
        </childnode>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12796" relation="include">
        </childnode>
      </node>
      <node id="12783">
        <label>cstdint</label>
      </node>
      <node id="12792">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="12793" relation="include">
        </childnode>
        <childnode refid="12794" relation="include">
        </childnode>
        <childnode refid="12784" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12795" relation="include">
        </childnode>
        <childnode refid="12796" relation="include">
        </childnode>
        <childnode refid="12797" relation="include">
        </childnode>
        <childnode refid="12799" relation="include">
        </childnode>
      </node>
      <node id="12785">
        <label>string</label>
      </node>
      <node id="12798">
        <label>ostream</label>
      </node>
      <node id="12799">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="12788">
        <label>vector</label>
      </node>
      <node id="12790">
        <label>new</label>
      </node>
      <node id="12787">
        <label>utility</label>
      </node>
      <node id="12782">
        <label>/arrow/cpp/src/arrow/util/key_value_metadata.h</label>
        <link refid="key__value__metadata_8h"/>
        <childnode refid="12783" relation="include">
        </childnode>
        <childnode refid="12784" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12786" relation="include">
        </childnode>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12792" relation="include">
        </childnode>
        <childnode refid="12796" relation="include">
        </childnode>
        <childnode refid="12799" relation="include">
        </childnode>
      </node>
      <node id="12794">
        <label>iosfwd</label>
      </node>
      <node id="12786">
        <label>unordered_map</label>
      </node>
      <node id="12789">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="12790" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12791" relation="include">
        </childnode>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12792" relation="include">
        </childnode>
        <childnode refid="12795" relation="include">
        </childnode>
      </node>
      <node id="12791">
        <label>type_traits</label>
      </node>
      <node id="12793">
        <label>cstring</label>
      </node>
      <node id="12797">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="12784" relation="include">
        </childnode>
        <childnode refid="12798" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12799" relation="include">
        </childnode>
      </node>
      <node id="12784">
        <label>memory</label>
      </node>
      <node id="12796">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="12783" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12810">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="12802">
        <label>/arrow/cpp/src/arrow/json/parser.h</label>
        <link refid="json_2parser_8h"/>
      </node>
      <node id="12808">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="12806">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="12804" relation="include">
        </childnode>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12805" relation="include">
        </childnode>
        <childnode refid="12808" relation="include">
        </childnode>
      </node>
      <node id="12801">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="12803">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="12804" relation="include">
        </childnode>
        <childnode refid="12805" relation="include">
        </childnode>
        <childnode refid="12806" relation="include">
        </childnode>
        <childnode refid="12809" relation="include">
        </childnode>
        <childnode refid="12812" relation="include">
        </childnode>
      </node>
      <node id="12804">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="12805">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="12800">
        <label>/arrow/cpp/src/arrow/util/key_value_metadata.h</label>
        <link refid="key__value__metadata_8h"/>
        <childnode refid="12801" relation="include">
        </childnode>
        <childnode refid="12802" relation="include">
        </childnode>
        <childnode refid="12803" relation="include">
        </childnode>
      </node>
      <node id="12809">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="12810" relation="include">
        </childnode>
        <childnode refid="12811" relation="include">
        </childnode>
      </node>
      <node id="12812">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="12811">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="12808" relation="include">
        </childnode>
      </node>
      <node id="12807">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_key_value_metadata" prot="public">arrow::KeyValueMetadata</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="result_8h" kindref="compound">arrow/result.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classarrow_1_1_key_value_metadata" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref>(std::vector&lt;std::string&gt;<sp/>keys,<sp/>std::vector&lt;std::string&gt;<sp/>values);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;&amp;<sp/><ref refid="group__type-factories_1ga18349773a5006d18cc0071b89715cb7a" kindref="member">map</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToUnorderedMap(std::unordered_map&lt;std::string,<sp/>std::string&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Delete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(int64_t<sp/>n);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>int64_t<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key(int64_t<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value(int64_t<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>sorted_pairs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FindKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;KeyValueMetadata&gt;<sp/>Copy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;KeyValueMetadata&gt;<sp/>Merge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>keys_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>values_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">std::shared_ptr&lt;KeyValueMetadata&gt;<sp/>ARROW_EXPORT</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>pairs);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">std::shared_ptr&lt;KeyValueMetadata&gt;<sp/>ARROW_EXPORT</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref>(std::vector&lt;std::string&gt;<sp/>keys,<sp/>std::vector&lt;std::string&gt;<sp/>values);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h"/>
  </compounddef>
</doxygen>
