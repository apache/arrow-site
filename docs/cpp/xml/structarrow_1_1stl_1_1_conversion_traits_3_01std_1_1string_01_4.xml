<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4" kind="struct" language="C++" prot="public">
    <compoundname>arrow::stl::ConversionTraits&lt; std::string &gt;</compoundname>
    <basecompoundref refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4" prot="public" virt="non-virtual">arrow::CTypeTraits&lt; std::string &gt;</basecompoundref>
    <includes refid="stl_8h" local="no">arrow/stl.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4_1aa4c06e29dad03b588d6e6dc4a98a3fbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::stl::ConversionTraits&lt; std::string &gt;::AppendRow</definition>
        <argsstring>(StringBuilder &amp;builder, const std::string &amp;cell)</argsstring>
        <name>AppendRow</name>
        <param>
          <type><ref refid="classarrow_1_1_string_builder" kindref="compound">StringBuilder</ref> &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/stl.h" line="132" column="1" bodyfile="/arrow/cpp/src/arrow/stl.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4_1a09de4606bdfb910f0f562252fc7d6ca9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string arrow::stl::ConversionTraits&lt; std::string &gt;::GetEntry</definition>
        <argsstring>(const StringArray &amp;array, size_t j)</argsstring>
        <name>GetEntry</name>
        <param>
          <type>const <ref refid="classarrow_1_1_string_array" kindref="compound">StringArray</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/stl.h" line="135" column="1" bodyfile="/arrow/cpp/src/arrow/stl.h" bodystart="135" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="697">
        <label>arrow::TypeTraits&lt; StringType &gt;</label>
        <link refid="structarrow_1_1_type_traits_3_01_string_type_01_4"/>
      </node>
      <node id="696">
        <label>arrow::CTypeTraits&lt; std::string &gt;</label>
        <link refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="695">
        <label>arrow::stl::ConversionTraits&lt; std::string &gt;</label>
        <link refid="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="700">
        <label>arrow::TypeTraits&lt; StringType &gt;</label>
        <link refid="structarrow_1_1_type_traits_3_01_string_type_01_4"/>
      </node>
      <node id="699">
        <label>arrow::CTypeTraits&lt; std::string &gt;</label>
        <link refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4"/>
        <childnode refid="700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="698">
        <label>arrow::stl::ConversionTraits&lt; std::string &gt;</label>
        <link refid="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4"/>
        <childnode refid="699" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/stl.h" line="131" column="1" bodyfile="/arrow/cpp/src/arrow/stl.h" bodystart="131" bodyend="138"/>
    <listofallmembers>
      <member refid="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4_1aa4c06e29dad03b588d6e6dc4a98a3fbd" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>AppendRow</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1af47730a78c0ff078ccbf0bc48dd3fd21" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>ArrayType</name></member>
      <member refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4_1a771bfebd136e074600dc649c4b486ee3" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>ArrowType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1af59feae426da02991fa66b7f3a9afa10" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>BuilderType</name></member>
      <member refid="structarrow_1_1stl_1_1_conversion_traits_3_01std_1_1string_01_4_1a09de4606bdfb910f0f562252fc7d6ca9" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>GetEntry</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1aa6ca9bdb541994ee37d7aba62bdc8fb6" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>is_parameter_free</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1ae1411b2b41569a52ac8c87de933b0b04" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>ScalarType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1acf544e734357d7d7be20ad1ec5a3fd77" prot="public" virt="non-virtual"><scope>arrow::stl::ConversionTraits&lt; std::string &gt;</scope><name>type_singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
