<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_taker" prot="public" virt="non-virtual">arrow::compute::Taker&lt; IndexSequence &gt;</basecompoundref>
    <includes refid="take__internal_8h" local="no">arrow/compute/kernels/take_internal.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndexSequence</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a567c39ca32a3fee2c4b03d0dda6ed8e7" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classarrow_1_1_union_type" kindref="compound">UnionType</ref> *</type>
        <definition>const UnionType* arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::union_type_</definition>
        <argsstring></argsstring>
        <name>union_type_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="666" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1ad28a34826855b2be1c93753a9eec9a1a" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="667" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a7e03f57c1b29729d88f9ab6f93958c14" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; bool &gt; &gt;</type>
        <definition>std::unique_ptr&lt;TypedBufferBuilder&lt;bool&gt; &gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::null_bitmap_builder_</definition>
        <argsstring></argsstring>
        <name>null_bitmap_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="668" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2878c66cf597cb25713b71c575e4ac03" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; int8_t &gt; &gt;</type>
        <definition>std::unique_ptr&lt;TypedBufferBuilder&lt;int8_t&gt; &gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::type_code_builder_</definition>
        <argsstring></argsstring>
        <name>type_code_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="669" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a79adde1169e92e8f5d6b82a2596ff846" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; int32_t &gt; &gt;</type>
        <definition>std::unique_ptr&lt;TypedBufferBuilder&lt;int32_t&gt; &gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::offset_builder_</definition>
        <argsstring></argsstring>
        <name>offset_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="670" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a646acd4e1f1315267d5c50f4742d85bd" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt; IndexSequence &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Taker&lt;IndexSequence&gt; &gt; &gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::sparse_children_</definition>
        <argsstring></argsstring>
        <name>sparse_children_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="671" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1afaa9ecfb43e4c6a48c848edeaaab4b8c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt; <ref refid="classarrow_1_1compute_1_1_array_index_sequence" kindref="compound">ArrayIndexSequence</ref>&lt; <ref refid="classarrow_1_1_int32_type" kindref="compound">Int32Type</ref> &gt; &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Taker&lt;ArrayIndexSequence&lt;Int32Type&gt; &gt; &gt; &gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::dense_children_</definition>
        <argsstring></argsstring>
        <name>dense_children_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="672" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2f0fb1291ebfdee1cc1e8785efc45ead" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int32_t &gt;</type>
        <definition>std::vector&lt;int32_t&gt; arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::child_length_</definition>
        <argsstring></argsstring>
        <name>child_length_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="673" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a1430b03d5dda7042e2cc07b721edf56a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::Init</definition>
        <argsstring>() override</argsstring>
        <name>Init</name>
        <reimplements refid="classarrow_1_1compute_1_1_taker_1aac186bd69dfcb58f439f95e85c7d6594">Init</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="506" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="506" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a6c01c87731dc2a6e649a5dae3b8230bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::SetContext</definition>
        <argsstring>(FunctionContext *ctx) override</argsstring>
        <name>SetContext</name>
        <reimplements refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121">SetContext</reimplements>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="529" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="529" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1aa12ea96bd3d7ea1ec6415917f6bb5a7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::Take</definition>
        <argsstring>(const Array &amp;values, IndexSequence indices) override</argsstring>
        <name>Take</name>
        <reimplements refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b">Take</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>IndexSequence</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="550" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="550" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a790da9ca608d2402f7dae233c0e4e020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::Finish</definition>
        <argsstring>(std::shared_ptr&lt; Array &gt; *out) override</argsstring>
        <name>Finish</name>
        <reimplements refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812">Finish</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="635" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="635" bodyend="659"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1add84c4f76a08b23d23712e21d458d87a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t *</type>
        <definition>int32_t* arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;::GetInt32</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;b) const</argsstring>
        <name>GetInt32</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="662" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="662" bodyend="664"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4527">
        <label>arrow::compute::Taker&lt; IndexSequence &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker"/>
      </node>
      <node id="4526">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4"/>
        <childnode refid="4527" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4534">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="4531">
        <label>arrow::NestedType</label>
        <link refid="classarrow_1_1_nested_type"/>
        <childnode refid="4532" relation="public-inheritance">
        </childnode>
        <childnode refid="4534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4532">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="4533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4535">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="4533">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="4530">
        <label>arrow::UnionType</label>
        <link refid="classarrow_1_1_union_type"/>
        <childnode refid="4531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4529">
        <label>arrow::compute::Taker&lt; IndexSequence &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker"/>
      </node>
      <node id="4528">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4"/>
        <childnode refid="4529" relation="public-inheritance">
        </childnode>
        <childnode refid="4530" relation="usage">
          <edgelabel>union_type_</edgelabel>
        </childnode>
        <childnode refid="4535" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="502" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="502" bodyend="674"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2f0fb1291ebfdee1cc1e8785efc45ead" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>child_length_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1afaa9ecfb43e4c6a48c848edeaaab4b8c" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>dense_children_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a790da9ca608d2402f7dae233c0e4e020" prot="public" virt="virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>Finish</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1add84c4f76a08b23d23712e21d458d87a" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>GetInt32</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a1430b03d5dda7042e2cc07b721edf56a" prot="public" virt="virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>Init</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" prot="public" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>Make</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>MakeBuilder</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a7e03f57c1b29729d88f9ab6f93958c14" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a79adde1169e92e8f5d6b82a2596ff846" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>offset_builder_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1ad28a34826855b2be1c93753a9eec9a1a" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>pool_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a6c01c87731dc2a6e649a5dae3b8230bb" prot="public" virt="virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>SetContext</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a646acd4e1f1315267d5c50f4742d85bd" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>sparse_children_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1aa12ea96bd3d7ea1ec6415917f6bb5a7a" prot="public" virt="virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>Take</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a65a0c52cbd68141029bf12610d4c95c4" prot="public" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>Taker</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>type_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2878c66cf597cb25713b71c575e4ac03" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>type_code_builder_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a567c39ca32a3fee2c4b03d0dda6ed8e7" prot="protected" virt="non-virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>union_type_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1ad5830b3d718a2ffe42515cfd2731b7a8" prot="public" virt="virtual"><scope>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</scope><name>~Taker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
