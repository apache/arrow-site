<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_fixed_size_binary_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::FixedSizeBinaryBuilder</compoundname>
    <basecompoundref refid="classarrow_1_1_array_builder" prot="public" virt="non-virtual">arrow::ArrayBuilder</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1_decimal128_builder" prot="public" virt="non-virtual">arrow::Decimal128Builder</derivedcompoundref>
    <includes refid="builder__binary_8h" local="no">arrow/array/builder_binary.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_fixed_size_binary_builder_1a796f56a09a4ee136a5165f2e1aa2a264" prot="public" static="no">
        <type><ref refid="classarrow_1_1_fixed_size_binary_type" kindref="compound">FixedSizeBinaryType</ref></type>
        <definition>using arrow::FixedSizeBinaryBuilder::TypeClass =  FixedSizeBinaryType</definition>
        <argsstring></argsstring>
        <name>TypeClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="400" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_binary_builder_1a2ca6f2ee6431aa975c45e39e3fc96de8" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeBinaryBuilder::byte_width_</definition>
        <argsstring></argsstring>
        <name>byte_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="495" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_binary_builder_1a6654f531fb3815787771d127094a5006" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_buffer_builder" kindref="compound">BufferBuilder</ref></type>
        <definition>BufferBuilder arrow::FixedSizeBinaryBuilder::byte_builder_</definition>
        <argsstring></argsstring>
        <name>byte_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="496" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a716dcd9e7e25c24096a2b3890532fef6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::FixedSizeBinaryBuilder::FixedSizeBinaryBuilder</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>FixedSizeBinaryBuilder</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a82c313b8b1f21e1b7db9bd4232791acd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Append</definition>
        <argsstring>(const uint8_t *value)</argsstring>
        <name>Append</name>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="405" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="405" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ac5f6b94fa7197465e2130c4fc05637bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Append</definition>
        <argsstring>(const char *value)</argsstring>
        <name>Append</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="411" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="411" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ab5111c4be864c91ec25290a1219c8608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Append</definition>
        <argsstring>(const util::string_view &amp;view)</argsstring>
        <name>Append</name>
        <param>
          <type>const util::string_view &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="415" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="415" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1af385532e333b14d8f13551d60d9ec1db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Append</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>Append</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="421" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a6bc284a561d8ec3ec6980ca7929edca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>NBYTES</declname>
            <defname>NBYTES</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Append</definition>
        <argsstring>(const std::array&lt; uint8_t, NBYTES &gt; &amp;value)</argsstring>
        <name>Append</name>
        <param>
          <type>const std::array&lt; uint8_t, NBYTES &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="428" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="428" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a9e5984ed4dd80e67ad18a6058dd238e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::AppendValues</definition>
        <argsstring>(const uint8_t *data, int64_t length, const uint8_t *valid_bytes=NULLPTR)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1aef21d518e5d67d6ee0bf71bd0dc699a0" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::AppendNull</definition>
        <argsstring>() final</argsstring>
        <name>AppendNull</name>
        <reimplements refid="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015">AppendNull</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a1b0f9b13338aef6618b24898542189f8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::AppendNulls</definition>
        <argsstring>(int64_t length) final</argsstring>
        <name>AppendNulls</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14">AppendNulls</reimplements>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ad116f564ead985e5302b231e7b53335b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeBinaryBuilder::UnsafeAppend</definition>
        <argsstring>(const uint8_t *value)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="442" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="442" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1aa113a3c7d86165b888cc3476d9a96461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeBinaryBuilder::UnsafeAppend</definition>
        <argsstring>(util::string_view value)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>util::string_view</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="449" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ad4f1c5f69a4b859e8cba350ecdc15ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeBinaryBuilder::UnsafeAppendNull</definition>
        <argsstring>()</argsstring>
        <name>UnsafeAppendNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="456" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1af646f4d380162134d7d18ad4af81f056" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeBinaryBuilder::Reset</definition>
        <argsstring>() override</argsstring>
        <name>Reset</name>
        <reimplements refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98">Reset</reimplements>
        <briefdescription>
<para>Reset the builder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1acab2531151f38e2752dc0d6400a22ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Resize</definition>
        <argsstring>(int64_t capacity) override</argsstring>
        <name>Resize</name>
        <reimplements refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b">Resize</reimplements>
        <param>
          <type>int64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Ensure that enough memory has been allocated to fit the indicated number of total elements in the builder, including any that have already been appended. </para>        </briefdescription>
        <detaileddescription>
<para>Does not account for reallocations that may be due to variable size data, like binary values. To make space for incremental appends, use Reserve instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum number of total array values to accommodate. Must be greater than the current capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1af4abbc3596d4e7bb4b5bb843f361540e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::FinishInternal</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; *out) override</argsstring>
        <name>FinishInternal</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0e0aea1c332b472f3671bea9da5ec473">FinishInternal</reimplements>
        <reimplementedby refid="classarrow_1_1_decimal128_builder_1a1024061ca0b17d1af0967f008ec47313">FinishInternal</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an internal generic <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Resets builder except for dictionary builder</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a2f6ef013df137b7077e270539104466f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FixedSizeBinaryBuilder::Finish</definition>
        <argsstring>(std::shared_ptr&lt; FixedSizeBinaryArray &gt; *out)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_fixed_size_binary_array" kindref="compound">FixedSizeBinaryArray</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="469" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="469" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a9d4ee907329c71703a139b803a4ba4fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::FixedSizeBinaryBuilder::value_data_length</definition>
        <argsstring>() const</argsstring>
        <name>value_data_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of values buffer so far </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="472" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="472" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ae91da8cbfd27487ea829928c2d46bd62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeBinaryBuilder::byte_width</definition>
        <argsstring>() const</argsstring>
        <name>byte_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="474" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="474" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ac232789ccc1f36f3d847e6736e78fa9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* arrow::FixedSizeBinaryBuilder::GetValue</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>GetValue</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Temporary access to a value. </para>        </briefdescription>
        <detaileddescription>
<para>This pointer becomes invalid on the next modifying operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1aa44ba82709b2beff369bf0b34bce1f6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>util::string_view</type>
        <definition>util::string_view arrow::FixedSizeBinaryBuilder::GetView</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>GetView</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Temporary access to a value. </para>        </briefdescription>
        <detaileddescription>
<para>This view becomes invalid on the next modifying operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a76883cc379d8422428762e902bed364c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::FixedSizeBinaryBuilder::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classarrow_1_1_array_builder_1a39b4b420be1fcf4fe7219fe953eb65c7">type</reimplements>
        <reimplementedby refid="classarrow_1_1_decimal128_builder_1a0c86d55c78f2080023eaa290cb40c01f">type</reimplementedby>
        <briefdescription>
<para>Return the type of the built <ref refid="classarrow_1_1_array" kindref="compound">Array</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="490" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="490" bodyend="492"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1ae1398d12baa14b6ed3b3b95b7e12cfb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int64_t</type>
        <definition>static constexpr int64_t arrow::FixedSizeBinaryBuilder::memory_limit</definition>
        <argsstring>()</argsstring>
        <name>memory_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="486" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="486" bodyend="488"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a812c5fc0fcf199b8261d57f197799d14" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* arrow::FixedSizeBinaryBuilder::GetMutableValue</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>GetMutableValue</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Temporary access to a value. </para>        </briefdescription>
        <detaileddescription>
<para>This pointer becomes invalid on the next modifying operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="501" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_binary_builder_1a0571bcb86e5c06a5dd427e6bb3e81b07" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeBinaryBuilder::CheckValueSize</definition>
        <argsstring>(int64_t size)</argsstring>
        <name>CheckValueSize</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="506" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1720">
        <label>arrow::FixedSizeBinaryBuilder</label>
        <link refid="classarrow_1_1_fixed_size_binary_builder"/>
        <childnode refid="1721" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1721">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
      <node id="1722">
        <label>arrow::Decimal128Builder</label>
        <link refid="classarrow_1_1_decimal128_builder"/>
        <childnode refid="1720" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1723">
        <label>arrow::FixedSizeBinaryBuilder</label>
        <link refid="classarrow_1_1_fixed_size_binary_builder"/>
        <childnode refid="1724" relation="public-inheritance">
        </childnode>
        <childnode refid="1727" relation="usage">
          <edgelabel>byte_builder_</edgelabel>
        </childnode>
      </node>
      <node id="1725">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="1727">
        <label>arrow::BufferBuilder</label>
        <link refid="classarrow_1_1_buffer_builder"/>
      </node>
      <node id="1726">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="1724">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="1725" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="1726" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_binary.h" line="398" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_binary.h" bodystart="398" bodyend="507"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a82c313b8b1f21e1b7db9bd4232791acd" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ac5f6b94fa7197465e2130c4fc05637bb" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ab5111c4be864c91ec25290a1219c8608" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1af385532e333b14d8f13551d60d9ec1db" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a6bc284a561d8ec3ec6980ca7929edca9" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1aef21d518e5d67d6ee0bf71bd0dc699a0" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a1b0f9b13338aef6618b24898542189f8" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a9e5984ed4dd80e67ad18a6058dd238e7" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a6654f531fb3815787771d127094a5006" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>byte_builder_</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ae91da8cbfd27487ea829928c2d46bd62" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>byte_width</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a2ca6f2ee6431aa975c45e39e3fc96de8" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>byte_width_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a0571bcb86e5c06a5dd427e6bb3e81b07" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>CheckValueSize</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a2f6ef013df137b7077e270539104466f" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual" ambiguityscope="arrow::ArrayBuilder::"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1af4abbc3596d4e7bb4b5bb843f361540e" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a716dcd9e7e25c24096a2b3890532fef6" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>FixedSizeBinaryBuilder</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a812c5fc0fcf199b8261d57f197799d14" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>GetMutableValue</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ac232789ccc1f36f3d847e6736e78fa9d" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>GetValue</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1aa44ba82709b2beff369bf0b34bce1f6b" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>GetView</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ae1398d12baa14b6ed3b3b95b7e12cfb2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>memory_limit</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1af646f4d380162134d7d18ad4af81f056" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1acab2531151f38e2752dc0d6400a22ec2" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a76883cc379d8422428762e902bed364c" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a796f56a09a4ee136a5165f2e1aa2a264" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>TypeClass</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ad116f564ead985e5302b231e7b53335b" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1aa113a3c7d86165b888cc3476d9a96461" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1ad4f1c5f69a4b859e8cba350ecdc15ee2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_builder_1a9d4ee907329c71703a139b803a4ba4fe" prot="public" virt="non-virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>value_data_length</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::FixedSizeBinaryBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
