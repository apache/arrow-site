<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1hiveserver2_1_1_service" kind="class" language="C++" prot="public">
    <compoundname>arrow::hiveserver2::Service</compoundname>
    <includes refid="service_8h" local="no">arrow/dbi/hiveserver2/service.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1hiveserver2_1_1_service_1a813e637d03f5d9d12bb924da405504c4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::hiveserver2::Service::host_</definition>
        <argsstring></argsstring>
        <name>host_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="131" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1hiveserver2_1_1_service_1af799823ab5eed4b2f397d9db52bfa68c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::hiveserver2::Service::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="132" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1hiveserver2_1_1_service_1a750a0fd341cd7a298f1e9677c59f3867" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::hiveserver2::Service::conn_timeout_</definition>
        <argsstring></argsstring>
        <name>conn_timeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="133" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1hiveserver2_1_1_service_1a468e41ba2bffa81d105cd58d4b7021eb" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; ServiceImpl &gt;</type>
        <definition>std::unique_ptr&lt;ServiceImpl&gt; arrow::hiveserver2::Service::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="135" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1hiveserver2_1_1_service_1a3795d35b162c14f8dcab3d10ec6a80c6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structarrow_1_1hiveserver2_1_1_thrift_r_p_c" kindref="compound">ThriftRPC</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ThriftRPC&gt; arrow::hiveserver2::Service::rpc_</definition>
        <argsstring></argsstring>
        <name>rpc_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="136" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a43321dbf0c7c9535d74d4df616ffc716" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::hiveserver2::Service::Connect</definition>
        <argsstring>(const std::string &amp;host, int port, int conn_timeout, ProtocolVersion protocol_version, std::unique_ptr&lt; Service &gt; *service)</argsstring>
        <name>Connect</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>conn_timeout</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" kindref="member">ProtocolVersion</ref></type>
          <declname>protocol_version</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref> &gt; *</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a917f86f563b99978b41e83b3d790b92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::hiveserver2::Service::~Service</definition>
        <argsstring>()</argsstring>
        <name>~Service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1aae1513e900a3c1998f6212e5bd92856d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::hiveserver2::Service::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a63bf4ef54caaab96334b4a15dded65d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::hiveserver2::Service::IsConnected</definition>
        <argsstring>() const</argsstring>
        <name>IsConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1af2277fcddd73d3b1c4179b2afbb5afcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::hiveserver2::Service::SetRecvTimeout</definition>
        <argsstring>(int timeout)</argsstring>
        <name>SetRecvTimeout</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a26bcaea3b8076795d71a45f3a6384934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::hiveserver2::Service::SetSendTimeout</definition>
        <argsstring>(int timeout)</argsstring>
        <name>SetSendTimeout</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1abd1273a72e727af01b1c3a23e72172ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::hiveserver2::Service::OpenSession</definition>
        <argsstring>(const std::string &amp;user, const HS2ClientConfig &amp;config, std::unique_ptr&lt; Session &gt; *session) const</argsstring>
        <name>OpenSession</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const <ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config" kindref="compound">HS2ClientConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1hiveserver2_1_1_session" kindref="compound">Session</ref> &gt; *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1ae94ea1147afef5e4d9ca7a1640c48da8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::hiveserver2::Service::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(Service)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a9c9ed74858ee2d4a72c38eb16e780368" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::hiveserver2::Service::Service</definition>
        <argsstring>(const std::string &amp;host, int port, int conn_timeout, ProtocolVersion protocol_version)</argsstring>
        <name>Service</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>conn_timeout</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" kindref="member">ProtocolVersion</ref></type>
          <declname>protocol_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1hiveserver2_1_1_service_1a4d288d25c57ddf6059779be758afcb61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::hiveserver2::Service::Open</definition>
        <argsstring>()</argsstring>
        <name>Open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" line="82" column="1" bodyfile="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h" bodystart="82" bodyend="137"/>
    <listofallmembers>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1ae94ea1147afef5e4d9ca7a1640c48da8" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1aae1513e900a3c1998f6212e5bd92856d" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>Close</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a750a0fd341cd7a298f1e9677c59f3867" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>conn_timeout_</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a43321dbf0c7c9535d74d4df616ffc716" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>Connect</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a813e637d03f5d9d12bb924da405504c4" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>host_</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a468e41ba2bffa81d105cd58d4b7021eb" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>impl_</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a63bf4ef54caaab96334b4a15dded65d0" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>IsConnected</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a4d288d25c57ddf6059779be758afcb61" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>Open</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1abd1273a72e727af01b1c3a23e72172ab" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>OpenSession</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1af799823ab5eed4b2f397d9db52bfa68c" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>port_</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a3795d35b162c14f8dcab3d10ec6a80c6" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>rpc_</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a9c9ed74858ee2d4a72c38eb16e780368" prot="private" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>Service</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1af2277fcddd73d3b1c4179b2afbb5afcb" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>SetRecvTimeout</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a26bcaea3b8076795d71a45f3a6384934" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>SetSendTimeout</name></member>
      <member refid="classarrow_1_1hiveserver2_1_1_service_1a917f86f563b99978b41e83b3d790b92e" prot="public" virt="non-virtual"><scope>arrow::hiveserver2::Service</scope><name>~Service</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
