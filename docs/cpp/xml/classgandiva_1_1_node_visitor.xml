<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_node_visitor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gandiva::NodeVisitor</compoundname>
    <derivedcompoundref refid="classgandiva_1_1_expr_decomposer" prot="public" virt="non-virtual">gandiva::ExprDecomposer</derivedcompoundref>
    <derivedcompoundref refid="classgandiva_1_1_expr_validator" prot="public" virt="non-virtual">gandiva::ExprValidator</derivedcompoundref>
    <includes refid="node__visitor_8h" local="no">gandiva/node_visitor.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a897bcc379c8b844c74dc32e77a445b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual gandiva::NodeVisitor::~NodeVisitor</definition>
        <argsstring>()=default</argsstring>
        <name>~NodeVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const FieldNode &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1a1a4c5537e58f3f8f609e4d469e8ce8b9">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1a4a61ed4115211b1c40c04363cd5f286b">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_field_node" kindref="compound">FieldNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a09d499c2d3b35d74dbee7229e7246331" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const FunctionNode &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1aa444966e38ee3668ca38a1a7ea7e1e9e">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1ab7c8f315d21c1f3aaffbf9da6b75658d">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_function_node" kindref="compound">FunctionNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a3ce1ab66ad7c8604c5113c84f5ebb71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const IfNode &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1a196724af1589cd9be19e84aae0e4a9de">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1a17c62498ab2dc95fc382a5fb0c0213a3">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_if_node" kindref="compound">IfNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1aa626388db2d288fadaf4f068a03a370f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const LiteralNode &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1a7016cf2750fd0ac0f6f524348e780095">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1aab71831a51fb37e651776d3a008fbc68">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_literal_node" kindref="compound">LiteralNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1ab8df9dcf0f4506f980720a037aee2bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const BooleanNode &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1a380ad9a40bebf534fb47ec9784f2d8f8">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1a2387a1990526c92578b2f61772bfb6df">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_boolean_node" kindref="compound">BooleanNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1aa8478c2ec83c07bd63b21e9f73e29ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const InExpressionNode&lt; int32_t &gt; &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1afc5df0408a925b626323d2467f879f75">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1adcfbbf2dec8acb5779be27b70c2bc628">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expression_node" kindref="compound">InExpressionNode</ref>&lt; int32_t &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a8f41dd56c1e1f2b6178f7d31db8d816a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const InExpressionNode&lt; int64_t &gt; &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1af30e19b104802765ed9ee34f35c9a131">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1a7d9ee03303d527e64a9cadd2d0d52bdd">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expression_node" kindref="compound">InExpressionNode</ref>&lt; int64_t &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_node_visitor_1a16c30d3fe1f5e2230af81bfa95df534d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>virtual Status gandiva::NodeVisitor::Visit</definition>
        <argsstring>(const InExpressionNode&lt; std::string &gt; &amp;node)=0</argsstring>
        <name>Visit</name>
        <reimplementedby refid="classgandiva_1_1_expr_validator_1af0d264d4c87c0df49f18d080eaa9c623">Visit</reimplementedby>
        <reimplementedby refid="classgandiva_1_1_expr_decomposer_1ad1f89fa5f2c942c839ea3947588f8c5c">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expression_node" kindref="compound">InExpressionNode</ref>&lt; std::string &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Visitor for nodes in the expression tree. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3150">
        <label>gandiva::ExprValidator</label>
        <link refid="classgandiva_1_1_expr_validator"/>
        <childnode refid="3148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3148">
        <label>gandiva::NodeVisitor</label>
        <link refid="classgandiva_1_1_node_visitor"/>
      </node>
      <node id="3149">
        <label>gandiva::ExprDecomposer</label>
        <link refid="classgandiva_1_1_expr_decomposer"/>
        <childnode refid="3148" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/gandiva/node_visitor.h" line="38" column="1" bodyfile="/arrow/cpp/src/gandiva/node_visitor.h" bodystart="38" bodyend="50"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1a09d499c2d3b35d74dbee7229e7246331" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1a3ce1ab66ad7c8604c5113c84f5ebb71c" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1aa626388db2d288fadaf4f068a03a370f" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1ab8df9dcf0f4506f980720a037aee2bab" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1aa8478c2ec83c07bd63b21e9f73e29ee5" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1a8f41dd56c1e1f2b6178f7d31db8d816a" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1a16c30d3fe1f5e2230af81bfa95df534d" prot="public" virt="pure-virtual"><scope>gandiva::NodeVisitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_node_visitor_1a897bcc379c8b844c74dc32e77a445b6e" prot="public" virt="virtual"><scope>gandiva::NodeVisitor</scope><name>~NodeVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
