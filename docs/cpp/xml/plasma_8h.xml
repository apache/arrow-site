<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="plasma_8h" kind="file" language="C++">
    <compoundname>plasma.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes refid="compat_8h" local="yes">plasma/compat.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="arrow_2util_2logging_8h" local="yes">arrow/util/logging.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="plasma_2common_8h" local="yes">plasma/common.h</includes>
    <includedby refid="eviction__policy_8h" local="yes">/arrow/cpp/src/plasma/eviction_policy.h</includedby>
    <includedby refid="protocol_8h" local="yes">/arrow/cpp/src/plasma/protocol.h</includedby>
    <includedby refid="quota__aware__policy_8h" local="yes">/arrow/cpp/src/plasma/quota_aware_policy.h</includedby>
    <includedby refid="store_8h" local="yes">/arrow/cpp/src/plasma/store.h</includedby>
    <incdepgraph>
      <node id="20164">
        <label>stdbool.h</label>
      </node>
      <node id="20184">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20185" relation="include">
        </childnode>
        <childnode refid="20183" relation="include">
        </childnode>
        <childnode refid="20186" relation="include">
        </childnode>
      </node>
      <node id="20161">
        <label>/arrow/cpp/src/plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="20162" relation="include">
        </childnode>
        <childnode refid="20163" relation="include">
        </childnode>
        <childnode refid="20164" relation="include">
        </childnode>
        <childnode refid="20165" relation="include">
        </childnode>
        <childnode refid="20166" relation="include">
        </childnode>
        <childnode refid="20167" relation="include">
        </childnode>
        <childnode refid="20168" relation="include">
        </childnode>
        <childnode refid="20175" relation="include">
        </childnode>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20177" relation="include">
        </childnode>
        <childnode refid="20178" relation="include">
        </childnode>
        <childnode refid="20170" relation="include">
        </childnode>
        <childnode refid="20179" relation="include">
        </childnode>
        <childnode refid="20180" relation="include">
        </childnode>
        <childnode refid="20189" relation="include">
        </childnode>
        <childnode refid="20186" relation="include">
        </childnode>
        <childnode refid="20190" relation="include">
        </childnode>
      </node>
      <node id="20172">
        <label>cstdint</label>
      </node>
      <node id="20167">
        <label>stdlib.h</label>
      </node>
      <node id="20180">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="20181" relation="include">
        </childnode>
        <childnode refid="20182" relation="include">
        </childnode>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20183" relation="include">
        </childnode>
        <childnode refid="20184" relation="include">
        </childnode>
        <childnode refid="20186" relation="include">
        </childnode>
        <childnode refid="20187" relation="include">
        </childnode>
        <childnode refid="20174" relation="include">
        </childnode>
      </node>
      <node id="20162">
        <label>errno.h</label>
      </node>
      <node id="20169">
        <label>string</label>
      </node>
      <node id="20173">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="20178">
        <label>unordered_set</label>
      </node>
      <node id="20165">
        <label>stddef.h</label>
      </node>
      <node id="20188">
        <label>ostream</label>
      </node>
      <node id="20174">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="20189">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20188" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20186" relation="include">
        </childnode>
        <childnode refid="20174" relation="include">
        </childnode>
      </node>
      <node id="20168">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20170" relation="include">
        </childnode>
        <childnode refid="20171" relation="include">
        </childnode>
        <childnode refid="20174" relation="include">
        </childnode>
      </node>
      <node id="20175">
        <label>unistd.h</label>
      </node>
      <node id="20170">
        <label>vector</label>
      </node>
      <node id="20183">
        <label>utility</label>
      </node>
      <node id="20171">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="20172" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20173" relation="include">
        </childnode>
      </node>
      <node id="20182">
        <label>iosfwd</label>
      </node>
      <node id="20179">
        <label>plasma/compat.h</label>
        <link refid="compat_8h"/>
      </node>
      <node id="20177">
        <label>unordered_map</label>
      </node>
      <node id="20185">
        <label>type_traits</label>
      </node>
      <node id="20190">
        <label>plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="20165" relation="include">
        </childnode>
        <childnode refid="20181" relation="include">
        </childnode>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20177" relation="include">
        </childnode>
        <childnode refid="20179" relation="include">
        </childnode>
        <childnode refid="20180" relation="include">
        </childnode>
      </node>
      <node id="20166">
        <label>stdio.h</label>
      </node>
      <node id="20181">
        <label>cstring</label>
      </node>
      <node id="20187">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="20176" relation="include">
        </childnode>
        <childnode refid="20188" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
        <childnode refid="20183" relation="include">
        </childnode>
        <childnode refid="20174" relation="include">
        </childnode>
      </node>
      <node id="20176">
        <label>memory</label>
      </node>
      <node id="20163">
        <label>inttypes.h</label>
      </node>
      <node id="20186">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="20172" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20191">
        <label>/arrow/cpp/src/plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="20192" relation="include">
        </childnode>
        <childnode refid="20195" relation="include">
        </childnode>
        <childnode refid="20193" relation="include">
        </childnode>
        <childnode refid="20194" relation="include">
        </childnode>
      </node>
      <node id="20195">
        <label>/arrow/cpp/src/plasma/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="20194" relation="include">
        </childnode>
      </node>
      <node id="20192">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="20193" relation="include">
        </childnode>
      </node>
      <node id="20194">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="20193">
        <label>/arrow/cpp/src/plasma/quota_aware_policy.h</label>
        <link refid="quota__aware__policy_8h"/>
        <childnode refid="20194" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structplasma_1_1_client" prot="public">plasma::Client</innerclass>
    <innerclass refid="structplasma_1_1_plasma_object" prot="public">plasma::PlasmaObject</innerclass>
    <innerclass refid="structplasma_1_1_plasma_store_info" prot="public">plasma::PlasmaStoreInfo</innerclass>
    <innernamespace refid="namespaceplasma">plasma</innernamespace>
    <innernamespace refid="namespaceplasma_1_1flatbuf">plasma::flatbuf</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="plasma_8h_1a5a339f6de3598691949f20d166212131" prot="public" static="no">
        <name>HANDLE_SIGPIPE</name>
        <param><defname>s</defname></param>
        <param><defname>fd_</defname></param>
        <initializer>do {                                                                      \
    Status _s = (s);                                                        \
    if (!_s.ok()) {                                                         \
      if (errno == EPIPE || errno == EBADF || errno == ECONNRESET) {        \
        <ref refid="arrow_2util_2logging_8h_1a6297ec7b42990f6318ea902765172cf0" kindref="member">ARROW_LOG</ref>(WARNING)                                                  \
            &lt;&lt; &quot;Received SIGPIPE, BAD FILE DESCRIPTOR, or ECONNRESET when &quot; \
               &quot;sending a message to client on fd &quot;                         \
            &lt;&lt; fd_                                                          \
            &lt;&lt; &quot;. &quot;                                                         \
               &quot;The client on the other end may have hung up.&quot;;             \
      } else {                                                              \
        return _s;                                                          \
      }                                                                     \
    }                                                                       \
  } while (0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="52" column="9" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pid_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compat_8h" kindref="compound">plasma/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2logging_8h" kindref="compound">arrow/util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_2common_8h" kindref="compound">plasma/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PLASMA_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1cuda_1_1_cuda_ipc_mem_handle" kindref="compound">arrow::cuda::CudaIpcMemHandle</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceplasma" kindref="compound">plasma</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flatbuf<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ObjectInfoT;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>flatbuf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="plasma_8h_1a5a339f6de3598691949f20d166212131" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HANDLE_SIGPIPE(s,<sp/>fd_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Status<sp/>_s<sp/>=<sp/>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!_s.ok())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(errno<sp/>==<sp/>EPIPE<sp/>||<sp/>errno<sp/>==<sp/>EBADF<sp/>||<sp/>errno<sp/>==<sp/>ECONNRESET)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARROW_LOG(WARNING)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;Received<sp/>SIGPIPE,<sp/>BAD<sp/>FILE<sp/>DESCRIPTOR,<sp/>or<sp/>ECONNRESET<sp/>when<sp/>&quot;<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;sending<sp/>a<sp/>message<sp/>to<sp/>client<sp/>on<sp/>fd<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fd_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;.<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;The<sp/>client<sp/>on<sp/>the<sp/>other<sp/>end<sp/>may<sp/>have<sp/>hung<sp/>up.&quot;;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_s;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="namespaceplasma_1a1cb36d2ae0e90107e1b466197706e24c" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceplasma_1a1cb36d2ae0e90107e1b466197706e24c" kindref="member">kBlockSize</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structplasma_1_1_client" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_client" kindref="compound">Client</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_client" kindref="compound">Client</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structplasma_1_1_client_1aa62f177326fcd6c98c356dc0e5dec603" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_client_1aa62f177326fcd6c98c356dc0e5dec603" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structplasma_1_1_client_1a609c2917180d9c137a32f81509820113" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;ObjectID&gt;<sp/><ref refid="structplasma_1_1_client_1a609c2917180d9c137a32f81509820113" kindref="member">object_ids</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structplasma_1_1_client_1aebf43e216da5b9b8701f031f6385d996" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;int&gt;<sp/><ref refid="structplasma_1_1_client_1aebf43e216da5b9b8701f031f6385d996" kindref="member">used_fds</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structplasma_1_1_client_1aa43ab98a6d2142b06dfca1518f113105" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_client_1aa43ab98a6d2142b06dfca1518f113105" kindref="member">notification_fd</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structplasma_1_1_client_1ac904e73c964c39622ce32b076c9e7de2" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;anonymous_client&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(pcm):<sp/>Replace<sp/>this<sp/>by<sp/>the<sp/>flatbuffers<sp/>message<sp/>PlasmaObjectSpec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structplasma_1_1_plasma_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_plasma_object" kindref="compound">PlasmaObject</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PLASMA_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IPC<sp/>handle<sp/>for<sp/>Cuda.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;CudaIpcMemHandle&gt;<sp/>ipc_handle;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>store_fd;</highlight></codeline>
<codeline lineno="103" refid="structplasma_1_1_plasma_object_1a70bc754d9973cfcc954610464fa53443" refkind="member"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/><ref refid="structplasma_1_1_plasma_object_1a70bc754d9973cfcc954610464fa53443" kindref="member">data_offset</ref>;</highlight></codeline>
<codeline lineno="105" refid="structplasma_1_1_plasma_object_1ad12648a15f841885eb9543b200382352" refkind="member"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/><ref refid="structplasma_1_1_plasma_object_1ad12648a15f841885eb9543b200382352" kindref="member">metadata_offset</ref>;</highlight></codeline>
<codeline lineno="107" refid="structplasma_1_1_plasma_object_1ab4867adc5a1cc19e492ac0b4f3f28c1e" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_plasma_object_1ab4867adc5a1cc19e492ac0b4f3f28c1e" kindref="member">data_size</ref>;</highlight></codeline>
<codeline lineno="109" refid="structplasma_1_1_plasma_object_1a82a59120f6c86f8cf5121c6a100718fb" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structplasma_1_1_plasma_object_1a82a59120f6c86f8cf5121c6a100718fb" kindref="member">metadata_size</ref>;</highlight></codeline>
<codeline lineno="111" refid="structplasma_1_1_plasma_object_1ab03153afe375e6725965cee6d22e80d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_plasma_object_1ab03153afe375e6725965cee6d22e80d8" kindref="member">device_num</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structplasma_1_1_plasma_object_1a80422514e7d8b56f0c873d04df865830" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_plasma_object_1a80422514e7d8b56f0c873d04df865830" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_plasma_object" kindref="compound">PlasmaObject</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal">#ifdef<sp/>PLASMA_CUDA</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ipc_handle<sp/>==<sp/>other.ipc_handle)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(store_fd<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1a5dc6549d0495eeca800dcb15a070b228" kindref="member">store_fd</ref>)<sp/>&amp;&amp;<sp/>(data_offset<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1a70bc754d9973cfcc954610464fa53443" kindref="member">data_offset</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(metadata_offset<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1ad12648a15f841885eb9543b200382352" kindref="member">metadata_offset</ref>)<sp/>&amp;&amp;<sp/>(data_size<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1ab4867adc5a1cc19e492ac0b4f3f28c1e" kindref="member">data_size</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(metadata_size<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1a82a59120f6c86f8cf5121c6a100718fb" kindref="member">metadata_size</ref>)<sp/>&amp;&amp;<sp/>(device_num<sp/>==<sp/>other.<ref refid="structplasma_1_1_plasma_object_1ab03153afe375e6725965cee6d22e80d8" kindref="member">device_num</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespaceplasma_1a730a54bdeef458d4c0e17ba9b349e884" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a730a54bdeef458d4c0e17ba9b349e884" kindref="member">ObjectStatus</ref><sp/>:<sp/>int<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a730a54bdeef458d4c0e17ba9b349e884a76a2a975f3363fabb39417b4f6217c11" kindref="member">OBJECT_NOT_FOUND</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a730a54bdeef458d4c0e17ba9b349e884a6c48201d40a60b7390aee409913f8ab5" kindref="member">OBJECT_FOUND</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structplasma_1_1_plasma_store_info" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="134" refid="structplasma_1_1_plasma_store_info_1aeacaaec165e6cfce66aea28960ceb3a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceplasma_1a115d6577b87e1cc4d9f547eae6b372d6" kindref="member">ObjectTable</ref><sp/><ref refid="structplasma_1_1_plasma_store_info_1aeacaaec165e6cfce66aea28960ceb3a6" kindref="member">objects</ref>;</highlight></codeline>
<codeline lineno="139" refid="structplasma_1_1_plasma_store_info_1adfe6fe4ff281fdd8e613b82349755b40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_plasma_store_info_1adfe6fe4ff281fdd8e613b82349755b40" kindref="member">hugepages_enabled</ref>;</highlight></codeline>
<codeline lineno="141" refid="structplasma_1_1_plasma_store_info_1ad02e9ada92a04926e44d0f602e137211" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structplasma_1_1_plasma_store_info_1ad02e9ada92a04926e44d0f602e137211" kindref="member">directory</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="structplasma_1_1_object_table_entry" kindref="compound">ObjectTableEntry</ref>*<sp/><ref refid="namespaceplasma_1a518ed937fbf133b16a18f020f0ea2d2d" kindref="member">GetObjectTableEntry</ref>(<ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref>*<sp/>store_info,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceplasma_1a34ce316d4c9054366305963c1b3b7d4a" kindref="member">WarnIfSigpipe</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>client_sock);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">std::unique_ptr&lt;uint8_t[]&gt;<sp/><ref refid="namespaceplasma_1a2294be960d6390b135146489ba00d31a" kindref="member">CreateObjectInfoBuffer</ref>(flatbuf::ObjectInfoT*<sp/>object_info);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">std::unique_ptr&lt;uint8_t[]&gt;<sp/><ref refid="namespaceplasma_1a24347d9f48b5e9975e93e4f08bd45ad0" kindref="member">CreatePlasmaNotificationBuffer</ref>(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;flatbuf::ObjectInfoT&gt;&amp;<sp/>object_info);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>plasma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/plasma/plasma.h"/>
  </compounddef>
</doxygen>
