<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1_record_batch_writer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::ipc::RecordBatchWriter</compoundname>
    <derivedcompoundref refid="classarrow_1_1flight_1_1_flight_stream_writer" prot="public" virt="non-virtual">arrow::flight::FlightStreamWriter</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1ipc_1_1_record_batch_stream_writer" prot="public" virt="non-virtual">arrow::ipc::RecordBatchStreamWriter</derivedcompoundref>
    <includes refid="arrow_2ipc_2writer_8h" local="no">arrow/ipc/writer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1ac1eab409618a90045b1bba229d401f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::ipc::RecordBatchWriter::~RecordBatchWriter</definition>
        <argsstring>()</argsstring>
        <name>~RecordBatchWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1a9f8bf7d6a2fa74a05e345097aa171e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ipc::RecordBatchWriter::WriteRecordBatch</definition>
        <argsstring>(const RecordBatch &amp;batch)=0</argsstring>
        <name>WriteRecordBatch</name>
        <param>
          <type>const <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &amp;</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
<para>Write a record batch to the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the record batch to write to the stream </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1ad1d588a01d6e03df40baa283d207d00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::RecordBatchWriter::WriteTable</definition>
        <argsstring>(const Table &amp;table)</argsstring>
        <name>WriteTable</name>
        <param>
          <type>const <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Write possibly-chunked table by creating sequence of record batches. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">table</parametername>
</parameternamelist>
<parameterdescription>
<para>table to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1af1d2049d61c5d3e18ccdd3001d104982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::RecordBatchWriter::WriteTable</definition>
        <argsstring>(const Table &amp;table, int64_t max_chunksize)</argsstring>
        <name>WriteTable</name>
        <param>
          <type>const <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>max_chunksize</declname>
        </param>
        <briefdescription>
<para>Write <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> with a particular chunksize. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">table</parametername>
</parameternamelist>
<parameterdescription>
<para>table to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_chunksize</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum chunk size for table chunks </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1ad1706dac64039b5e46bf03458d65ed1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ipc::RecordBatchWriter::Close</definition>
        <argsstring>()=0</argsstring>
        <name>Close</name>
        <briefdescription>
<para>Perform any logic necessary to finish the stream. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_writer_1ac8080471d5fccf8a486955932a3965ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ipc::RecordBatchWriter::set_memory_pool</definition>
        <argsstring>(MemoryPool *pool)</argsstring>
        <name>set_memory_pool</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="83" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/writer.h" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract interface for writing a stream of record batches. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3894">
        <label>arrow::ipc::RecordBatchStreamWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_writer"/>
        <childnode refid="3892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3893">
        <label>arrow::flight::FlightStreamWriter</label>
        <link refid="classarrow_1_1flight_1_1_flight_stream_writer"/>
        <childnode refid="3892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3895">
        <label>arrow::ipc::RecordBatchFileWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_file_writer"/>
        <childnode refid="3894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3892">
        <label>arrow::ipc::RecordBatchWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_writer"/>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/writer.h" bodystart="56" bodyend="84"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1706dac64039b5e46bf03458d65ed1a" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>Close</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac8080471d5fccf8a486955932a3965ed" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>set_memory_pool</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1a9f8bf7d6a2fa74a05e345097aa171e6e" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>WriteRecordBatch</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1d588a01d6e03df40baa283d207d00c" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1af1d2049d61c5d3e18ccdd3001d104982" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac1eab409618a90045b1bba229d401f28" prot="public" virt="virtual"><scope>arrow::ipc::RecordBatchWriter</scope><name>~RecordBatchWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
