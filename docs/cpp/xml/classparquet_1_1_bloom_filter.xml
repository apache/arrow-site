<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_bloom_filter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::BloomFilter</compoundname>
    <derivedcompoundref refid="classparquet_1_1_block_split_bloom_filter" prot="public" virt="non-virtual">parquet::BlockSplitBloomFilter</derivedcompoundref>
    <includes refid="bloom__filter_8h" local="no">parquet/bloom_filter.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classparquet_1_1_bloom_filter_1ae6b809e8dae61f2e9de9b41d91ed15a0" prot="protected" static="no">
        <name>HashStrategy</name>
        <enumvalue id="classparquet_1_1_bloom_filter_1ae6b809e8dae61f2e9de9b41d91ed15a0a3252a8fc24e2b4fbe9de1a87a68cbe06" prot="protected">
          <name>MURMUR3_X64_128</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="107" column="1" bodyfile="/arrow/cpp/src/parquet/bloom_filter.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="classparquet_1_1_bloom_filter_1a12154d2067f3e8a564b5c2be92b28511" prot="protected" static="no">
        <name>Algorithm</name>
        <enumvalue id="classparquet_1_1_bloom_filter_1a12154d2067f3e8a564b5c2be92b28511a4d34f53389ed7f28ca91fc31ea360a66" prot="protected">
          <name>BLOCK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="110" column="1" bodyfile="/arrow/cpp/src/parquet/bloom_filter.h" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classparquet_1_1_bloom_filter_1a1458b5b834eadd23acf273fd18e8fe26" prot="public" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t parquet::BloomFilter::kMaximumBloomFilterBytes</definition>
        <argsstring></argsstring>
        <name>kMaximumBloomFilterBytes</name>
        <initializer>= 128 * 1024 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="38" column="1" bodyfile="/arrow/cpp/src/parquet/bloom_filter.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a1c1257aa1de62fdb339caeb1bc89df61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool parquet::BloomFilter::FindHash</definition>
        <argsstring>(uint64_t hash) const =0</argsstring>
        <name>FindHash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a40df4149c8116922e46e8c587a9d25f8">FindHash</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Determine whether an element exist in set or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to contain. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if value is definitely not in set, and true means PROBABLY in set. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1ae3c78f201a9b3e276a059f9a9473f946" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::BloomFilter::InsertHash</definition>
        <argsstring>(uint64_t hash)=0</argsstring>
        <name>InsertHash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a156c2a4b2d87b148e38a27f9b36f7ec6">InsertHash</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Insert element to set represented by Bloom filter bitset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash of value to insert into Bloom filter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a062290ead992cd65b63cf96c58d96c01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::BloomFilter::WriteTo</definition>
        <argsstring>(ArrowOutputStream *sink) const =0</argsstring>
        <name>WriteTo</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a932a914363e4fbefc191ac6dd1d07a0f">WriteTo</reimplementedby>
        <param>
          <type><ref refid="namespaceparquet_1ad02e9bf40eaac38e07be6cc973d8884e" kindref="member">ArrowOutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
<para>Write this Bloom filter to an output stream. </para>        </briefdescription>
        <detaileddescription>
<para>A Bloom filter structure should include bitset length, hash strategy, algorithm, and bitset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sink</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1aae8f7082a544cb4b5729ce5e98f8a3c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t parquet::BloomFilter::GetBitsetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetBitsetSize</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a8d1c4ae9c27a83b0e37e78e922e0ec03">GetBitsetSize</reimplementedby>
        <briefdescription>
<para>Get the number of bytes of bitset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a7f43df7152dff09a10295522d91b3313" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(int32_t value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a621a1474ffaea85c29cdffcc0821e16d">Hash</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for 32 bits value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a9c109e318617eb940d7609568a184cb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(int64_t value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a0fa967ac464ea71f124edb3586a2ca73">Hash</reimplementedby>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for 64 bits value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a409ac6491a39e0f0ee732c197677351e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(float value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a8f5e50eb36aaea9bab24198dcc4f9ed0">Hash</reimplementedby>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for float value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a27c22eebf8e65da1db34a69ff234f748" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(double value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a294707e73f6095590d2e8c664553bcca">Hash</reimplementedby>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for double value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a318dad60cd961941eb80751b9f65156a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(const Int96 *value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1af4e98941311adc5c6dfc398abdc16ffd">Hash</reimplementedby>
        <param>
          <type>const Int96 *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for Int96 value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a4777144d19cd9e06f5de02141779f93a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(const ByteArray *value) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a6200699b9172d02ec00b6cc1083ea749">Hash</reimplementedby>
        <param>
          <type>const <ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for <ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a1175e872e3438b3372f77f8e462f8f81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t parquet::BloomFilter::Hash</definition>
        <argsstring>(const FLBA *value, uint32_t len) const =0</argsstring>
        <name>Hash</name>
        <reimplementedby refid="classparquet_1_1_block_split_bloom_filter_1a57dbf045a3cfeae211531fa34db7622f">Hash</reimplementedby>
        <param>
          <type>const <ref refid="namespaceparquet_1a2d74e36d45a524fd793d9d9244024098" kindref="member">FLBA</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Compute hash for fixed byte array value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the value length. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_bloom_filter_1a29b5b7306a69010e7ac649cf48c47e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::BloomFilter::~BloomFilter</definition>
        <argsstring>()</argsstring>
        <name>~BloomFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="103" column="1" bodyfile="/arrow/cpp/src/parquet/bloom_filter.h" bodystart="103" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="368">
        <label>parquet::BlockSplitBloomFilter</label>
        <link refid="classparquet_1_1_block_split_bloom_filter"/>
        <childnode refid="367" relation="public-inheritance">
        </childnode>
      </node>
      <node id="367">
        <label>parquet::BloomFilter</label>
        <link refid="classparquet_1_1_bloom_filter"/>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/parquet/bloom_filter.h" line="34" column="1" bodyfile="/arrow/cpp/src/parquet/bloom_filter.h" bodystart="34" bodyend="111"/>
    <listofallmembers>
      <member refid="classparquet_1_1_bloom_filter_1a12154d2067f3e8a564b5c2be92b28511" prot="protected" virt="non-virtual"><scope>parquet::BloomFilter</scope><name>Algorithm</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a1c1257aa1de62fdb339caeb1bc89df61" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>FindHash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1aae8f7082a544cb4b5729ce5e98f8a3c8" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>GetBitsetSize</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a7f43df7152dff09a10295522d91b3313" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a9c109e318617eb940d7609568a184cb4" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a409ac6491a39e0f0ee732c197677351e" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a27c22eebf8e65da1db34a69ff234f748" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a318dad60cd961941eb80751b9f65156a" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a4777144d19cd9e06f5de02141779f93a" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a1175e872e3438b3372f77f8e462f8f81" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1ae6b809e8dae61f2e9de9b41d91ed15a0" prot="protected" virt="non-virtual"><scope>parquet::BloomFilter</scope><name>HashStrategy</name></member>
      <member refid="classparquet_1_1_bloom_filter_1ae3c78f201a9b3e276a059f9a9473f946" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>InsertHash</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a1458b5b834eadd23acf273fd18e8fe26" prot="public" virt="non-virtual"><scope>parquet::BloomFilter</scope><name>kMaximumBloomFilterBytes</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a062290ead992cd65b63cf96c58d96c01" prot="public" virt="pure-virtual"><scope>parquet::BloomFilter</scope><name>WriteTo</name></member>
      <member refid="classparquet_1_1_bloom_filter_1a29b5b7306a69010e7ac649cf48c47e3e" prot="public" virt="virtual"><scope>parquet::BloomFilter</scope><name>~BloomFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
