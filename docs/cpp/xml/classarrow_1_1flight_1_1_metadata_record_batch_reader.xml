<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_metadata_record_batch_reader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::flight::MetadataRecordBatchReader</compoundname>
    <derivedcompoundref refid="classarrow_1_1flight_1_1_flight_message_reader" prot="public" virt="non-virtual">arrow::flight::FlightMessageReader</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1flight_1_1_flight_stream_reader" prot="public" virt="non-virtual">arrow::flight::FlightStreamReader</derivedcompoundref>
    <includes refid="arrow_2flight_2types_8h" local="no">arrow/flight/types.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a832ffeb3addd71afbb3a544fa2ec55e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::flight::MetadataRecordBatchReader::~MetadataRecordBatchReader</definition>
        <argsstring>()=default</argsstring>
        <name>~MetadataRecordBatchReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a3bebfa88cb2106508c7be7642834a3d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Schema&gt; arrow::flight::MetadataRecordBatchReader::schema</definition>
        <argsstring>() const =0</argsstring>
        <name>schema</name>
        <briefdescription>
<para>Get the schema for this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a15efb059d78e6843783bb923097a7743" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::MetadataRecordBatchReader::Next</definition>
        <argsstring>(FlightStreamChunk *next)=0</argsstring>
        <name>Next</name>
        <param>
          <type><ref refid="structarrow_1_1flight_1_1_flight_stream_chunk" kindref="compound">FlightStreamChunk</ref> *</type>
          <declname>next</declname>
        </param>
        <briefdescription>
<para>Get the next message from Flight. </para>        </briefdescription>
        <detaileddescription>
<para>If the stream is finished, then the members of <emphasis><ref refid="structarrow_1_1flight_1_1_flight_stream_chunk" kindref="compound">FlightStreamChunk</ref></emphasis> will be nullptr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a29a2d4a0fefab1fa60c8d710eaeee3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::MetadataRecordBatchReader::ReadAll</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; RecordBatch &gt;&gt; *batches)</argsstring>
        <name>ReadAll</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt;&gt; *</type>
          <declname>batches</declname>
        </param>
        <briefdescription>
<para>Consume entire stream as a vector of record batches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a79d785a9952e5c46d907426de6d9a892" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::MetadataRecordBatchReader::ReadAll</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *table)</argsstring>
        <name>ReadAll</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Consume entire stream as a <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="474" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface to read Flight data with metadata. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3055">
        <label>arrow::flight::FlightMessageReader</label>
        <link refid="classarrow_1_1flight_1_1_flight_message_reader"/>
        <childnode refid="3054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3056">
        <label>arrow::flight::FlightStreamReader</label>
        <link refid="classarrow_1_1flight_1_1_flight_stream_reader"/>
        <childnode refid="3054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3054">
        <label>arrow::flight::MetadataRecordBatchReader</label>
        <link refid="classarrow_1_1flight_1_1_metadata_record_batch_reader"/>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/flight/types.h" line="461" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="461" bodyend="475"/>
    <listofallmembers>
      <member refid="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a15efb059d78e6843783bb923097a7743" prot="public" virt="pure-virtual"><scope>arrow::flight::MetadataRecordBatchReader</scope><name>Next</name></member>
      <member refid="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a29a2d4a0fefab1fa60c8d710eaeee3ea" prot="public" virt="virtual"><scope>arrow::flight::MetadataRecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a79d785a9952e5c46d907426de6d9a892" prot="public" virt="virtual"><scope>arrow::flight::MetadataRecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a3bebfa88cb2106508c7be7642834a3d1" prot="public" virt="pure-virtual"><scope>arrow::flight::MetadataRecordBatchReader</scope><name>schema</name></member>
      <member refid="classarrow_1_1flight_1_1_metadata_record_batch_reader_1a832ffeb3addd71afbb3a544fa2ec55e2" prot="public" virt="virtual"><scope>arrow::flight::MetadataRecordBatchReader</scope><name>~MetadataRecordBatchReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
