<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_murmur_hash3" kind="class" language="C++" prot="public">
    <compoundname>parquet::MurmurHash3</compoundname>
    <basecompoundref refid="classparquet_1_1_hasher" prot="public" virt="non-virtual">parquet::Hasher</basecompoundref>
    <includes refid="murmur3_8h" local="no">parquet/murmur3.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classparquet_1_1_murmur_hash3_1a6d97ff35013111a9ba7cf18d47e3cfdf" prot="private" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int parquet::MurmurHash3::DEFAULT_SEED</definition>
        <argsstring></argsstring>
        <name>DEFAULT_SEED</name>
        <initializer>= 1361930890</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="49" column="1" bodyfile="/arrow/cpp/src/parquet/murmur3.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_murmur_hash3_1a0b7dbacd1fe5d9a38146c4f0d5f1ddc5" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t parquet::MurmurHash3::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="51" column="1" bodyfile="/arrow/cpp/src/parquet/murmur3.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1a5760c667438c98149a1aff847d2979ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::MurmurHash3::MurmurHash3</definition>
        <argsstring>()</argsstring>
        <name>MurmurHash3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="37" column="1" bodyfile="/arrow/cpp/src/parquet/murmur3.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1ab375eb818a481061fe80da9c6ea29fcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(int32_t value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1aea61186eec515bdd89129b85c63d7ac7">Hash</reimplements>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for 32 bits value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1a347613f3c8988df61e9adb93c355ce1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(int64_t value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1a6820e7d951b5e5dbd67fdd0bfb9f3f70">Hash</reimplements>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for 64 bits value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1a724810dc229f7f01f5886401f92327e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(float value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1a4e8434f7f71711d531d4f3aefcbfa2fd">Hash</reimplements>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for float value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1ad045377b621a314ef9a49e714340ff90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(double value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1acc09189eb195cad28d55bbe472f34d21">Hash</reimplements>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for double value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1a9e0bdd23627c2c0049c920d6843dd637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(const Int96 *value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1a88f9236b0039f9d1dad952965726cd31">Hash</reimplements>
        <param>
          <type>const Int96 *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for Int96 value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1abfdd12ac12e67757a748e3d0343bae2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(const ByteArray *value) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1a6349ba31c09f7f36892492333940cf98">Hash</reimplements>
        <param>
          <type>const <ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute hash for <ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to hash. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hash result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_murmur_hash3_1a39b1e818d13be136148594d2d2117023" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t parquet::MurmurHash3::Hash</definition>
        <argsstring>(const FLBA *val, uint32_t len) const override</argsstring>
        <name>Hash</name>
        <reimplements refid="classparquet_1_1_hasher_1a66d38bc91102f4377d24b6a17e3320a1">Hash</reimplements>
        <param>
          <type>const <ref refid="namespaceparquet_1a2d74e36d45a524fd793d9d9244024098" kindref="member">FLBA</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Compute hash for fixed byte array value by using its plain encoding result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the value length. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/murmur3.h" line="44" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Source: <ulink url="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp</ulink> (Modified to adapt to coding conventions and to inherit the <ref refid="classparquet_1_1_hasher" kindref="compound">Hasher</ref> abstract class) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3106">
        <label>parquet::Hasher</label>
        <link refid="classparquet_1_1_hasher"/>
      </node>
      <node id="3105">
        <label>parquet::MurmurHash3</label>
        <link refid="classparquet_1_1_murmur_hash3"/>
        <childnode refid="3106" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3108">
        <label>parquet::Hasher</label>
        <link refid="classparquet_1_1_hasher"/>
      </node>
      <node id="3107">
        <label>parquet::MurmurHash3</label>
        <link refid="classparquet_1_1_murmur_hash3"/>
        <childnode refid="3108" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/murmur3.h" line="35" column="1" bodyfile="/arrow/cpp/src/parquet/murmur3.h" bodystart="35" bodyend="52"/>
    <listofallmembers>
      <member refid="classparquet_1_1_murmur_hash3_1a6d97ff35013111a9ba7cf18d47e3cfdf" prot="private" virt="non-virtual"><scope>parquet::MurmurHash3</scope><name>DEFAULT_SEED</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1ab375eb818a481061fe80da9c6ea29fcf" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a347613f3c8988df61e9adb93c355ce1d" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a724810dc229f7f01f5886401f92327e7" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1ad045377b621a314ef9a49e714340ff90" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a9e0bdd23627c2c0049c920d6843dd637" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1abfdd12ac12e67757a748e3d0343bae2d" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a39b1e818d13be136148594d2d2117023" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>Hash</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a5760c667438c98149a1aff847d2979ef" prot="public" virt="non-virtual"><scope>parquet::MurmurHash3</scope><name>MurmurHash3</name></member>
      <member refid="classparquet_1_1_murmur_hash3_1a0b7dbacd1fe5d9a38146c4f0d5f1ddc5" prot="private" virt="non-virtual"><scope>parquet::MurmurHash3</scope><name>seed_</name></member>
      <member refid="classparquet_1_1_hasher_1a05a3a19d779b75515e5b883560760d58" prot="public" virt="virtual"><scope>parquet::MurmurHash3</scope><name>~Hasher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
