<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_decimal_scalar128" kind="class" language="C++" prot="public">
    <compoundname>gandiva::DecimalScalar128</compoundname>
    <basecompoundref refid="classgandiva_1_1_basic_decimal_scalar128" prot="public" virt="non-virtual">gandiva::BasicDecimalScalar128</basecompoundref>
    <includes refid="decimal__scalar_8h" local="no">gandiva/decimal_scalar.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_decimal_scalar128_1a267d59f43ab05cd73f8002a2731db87d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::DecimalScalar128::DecimalScalar128</definition>
        <argsstring>(const std::string &amp;value, int32_t precision, int32_t scale)</argsstring>
        <name>DecimalScalar128</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_scalar.h" line="38" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_scalar.h" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_decimal_scalar128_1aa0c68f142203db5fd051bb8a0b953385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gandiva::DecimalScalar128::DecimalScalar128</definition>
        <argsstring>(const BasicDecimalScalar128 &amp;scalar) noexcept</argsstring>
        <name>DecimalScalar128</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_basic_decimal_scalar128" kindref="compound">BasicDecimalScalar128</ref> &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>constructor creates a <ref refid="classgandiva_1_1_decimal_scalar128" kindref="compound">DecimalScalar128</ref> from a <ref refid="classgandiva_1_1_basic_decimal_scalar128" kindref="compound">BasicDecimalScalar128</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_scalar.h" line="42" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_scalar.h" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_decimal_scalar128_1abdb82fb21a764cfd063abbc9af08d5f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gandiva::DecimalScalar128::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_scalar.h" line="45" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_scalar.h" bodystart="45" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgandiva_1_1_decimal_scalar128_1a255dc181eb5da6d2efeed8d52eaf75ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const DecimalScalar128 &amp;dec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classgandiva_1_1_decimal_scalar128" kindref="compound">DecimalScalar128</ref> &amp;</type>
          <declname>dec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_scalar.h" line="51" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_scalar.h" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a 128-bit decimal value along with its precision and scale. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classgandiva_1_1_basic_decimal_scalar128" kindref="compound">BasicDecimalScalar128</ref> can be safely compiled to IR without references to libstdc++. This class has additional functionality on top of <ref refid="classgandiva_1_1_basic_decimal_scalar128" kindref="compound">BasicDecimalScalar128</ref> to deal with strings and streams. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1142">
        <label>gandiva::DecimalScalar128</label>
        <link refid="classgandiva_1_1_decimal_scalar128"/>
        <childnode refid="1143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1143">
        <label>gandiva::BasicDecimalScalar128</label>
        <link refid="classgandiva_1_1_basic_decimal_scalar128"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1144">
        <label>gandiva::DecimalScalar128</label>
        <link refid="classgandiva_1_1_decimal_scalar128"/>
        <childnode refid="1145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1145">
        <label>gandiva::BasicDecimalScalar128</label>
        <link refid="classgandiva_1_1_basic_decimal_scalar128"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/decimal_scalar.h" line="34" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_scalar.h" bodystart="34" bodyend="55"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1a16cc73161556c8c09bb471fae08e692e" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>BasicDecimalScalar128</name></member>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1ab55b772634d1ed97dfb01adf12f4d915" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>BasicDecimalScalar128</name></member>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1afb9ed4a581555c1e7e4022874dbc445b" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>BasicDecimalScalar128</name></member>
      <member refid="classgandiva_1_1_decimal_scalar128_1a267d59f43ab05cd73f8002a2731db87d" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>DecimalScalar128</name></member>
      <member refid="classgandiva_1_1_decimal_scalar128_1aa0c68f142203db5fd051bb8a0b953385" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>DecimalScalar128</name></member>
      <member refid="classgandiva_1_1_decimal_scalar128_1a255dc181eb5da6d2efeed8d52eaf75ad" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1ac82d47add5a8ce604d611a994add1b1b" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>precision</name></member>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1a95408c2df958a28323daa36a508a95a7" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>scale</name></member>
      <member refid="classgandiva_1_1_decimal_scalar128_1abdb82fb21a764cfd063abbc9af08d5f8" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>ToString</name></member>
      <member refid="classgandiva_1_1_basic_decimal_scalar128_1a3b1a7433ea74fb8e4949cb3db75e54f3" prot="public" virt="non-virtual"><scope>gandiva::DecimalScalar128</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
