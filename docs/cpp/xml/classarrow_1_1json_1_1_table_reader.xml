<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1json_1_1_table_reader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::json::TableReader</compoundname>
    <includes refid="arrow_2json_2reader_8h" local="no">arrow/json/reader.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1json_1_1_table_reader_1abaa8383d4fcdc0913d26ee6973c5e377" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::json::TableReader::~TableReader</definition>
        <argsstring>()=default</argsstring>
        <name>~TableReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/reader.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1json_1_1_table_reader_1a23e134d47fac3c0dc4acc6e2296ebfae" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::json::TableReader::Read</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *out)=0</argsstring>
        <name>Read</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read the entire JSON file and convert it to a Arrow <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/reader.h" line="50" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1json_1_1_table_reader_1a5943fb7fdb46f7b980f33aacd3c44845" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::json::TableReader::Make</definition>
        <argsstring>(MemoryPool *pool, std::shared_ptr&lt; io::InputStream &gt; input, const ReadOptions &amp;, const ParseOptions &amp;, std::shared_ptr&lt; TableReader &gt; *out)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref> &gt;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1json_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1json_1_1_parse_options" kindref="compound">ParseOptions</ref> &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1json_1_1_table_reader" kindref="compound">TableReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1json_1_1_table_reader" kindref="compound">TableReader</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/reader.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class that reads an entire JSON file into a Arrow <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>The file is expected to consist of individual line-separated JSON objects </para>    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/json/reader.h" line="45" column="1" bodyfile="/arrow/cpp/src/arrow/json/reader.h" bodystart="45" bodyend="56"/>
    <listofallmembers>
      <member refid="classarrow_1_1json_1_1_table_reader_1a5943fb7fdb46f7b980f33aacd3c44845" prot="public" virt="non-virtual"><scope>arrow::json::TableReader</scope><name>Make</name></member>
      <member refid="classarrow_1_1json_1_1_table_reader_1a23e134d47fac3c0dc4acc6e2296ebfae" prot="public" virt="pure-virtual"><scope>arrow::json::TableReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1json_1_1_table_reader_1abaa8383d4fcdc0913d26ee6973c5e377" prot="public" virt="virtual"><scope>arrow::json::TableReader</scope><name>~TableReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
