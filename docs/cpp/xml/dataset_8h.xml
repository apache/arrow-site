<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dataset_8h" kind="file" language="C++">
    <compoundname>dataset.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="dataset_2type__fwd_8h" local="yes">arrow/dataset/type_fwd.h</includes>
    <includes refid="arrow_2dataset_2visibility_8h" local="yes">arrow/dataset/visibility.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includedby refid="dataset_2api_8h" local="yes">/arrow/cpp/src/arrow/dataset/api.h</includedby>
    <includedby refid="dataset__internal_8h" local="yes">/arrow/cpp/src/arrow/dataset/dataset_internal.h</includedby>
    <includedby refid="file__base_8h" local="yes">/arrow/cpp/src/arrow/dataset/file_base.h</includedby>
    <includedby refid="arrow_2dataset_2pch_8h" local="yes">/arrow/cpp/src/arrow/dataset/pch.h</includedby>
    <includedby refid="scanner_8h" local="yes">/arrow/cpp/src/arrow/dataset/scanner.h</includedby>
    <incdepgraph>
      <node id="5119">
        <label>functional</label>
      </node>
      <node id="5128">
        <label>cstdint</label>
      </node>
      <node id="5126">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
        <childnode refid="5129" relation="include">
        </childnode>
      </node>
      <node id="5121">
        <label>string</label>
      </node>
      <node id="5129">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="5123">
        <label>vector</label>
      </node>
      <node id="5122">
        <label>utility</label>
      </node>
      <node id="5118">
        <label>/arrow/cpp/src/arrow/dataset/dataset.h</label>
        <link refid="dataset_8h"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5124" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
      </node>
      <node id="5124">
        <label>arrow/dataset/type_fwd.h</label>
        <link refid="dataset_2type__fwd_8h"/>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5126" relation="include">
        </childnode>
      </node>
      <node id="5125">
        <label>arrow/dataset/visibility.h</label>
        <link refid="arrow_2dataset_2visibility_8h"/>
      </node>
      <node id="5120">
        <label>memory</label>
      </node>
      <node id="5127">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="5128" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5136">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="5131" relation="include">
        </childnode>
      </node>
      <node id="5134">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5135" relation="include">
        </childnode>
        <childnode refid="5136" relation="include">
        </childnode>
      </node>
      <node id="5132">
        <label>/arrow/cpp/src/arrow/dataset/dataset_internal.h</label>
        <link refid="dataset__internal_8h"/>
        <childnode refid="5133" relation="include">
        </childnode>
      </node>
      <node id="5133">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="5135">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="5131" relation="include">
        </childnode>
      </node>
      <node id="5138">
        <label>/arrow/cpp/src/arrow/dataset/scanner.h</label>
        <link refid="scanner_8h"/>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5134" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5133" relation="include">
        </childnode>
      </node>
      <node id="5130">
        <label>/arrow/cpp/src/arrow/dataset/dataset.h</label>
        <link refid="dataset_8h"/>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
        <childnode refid="5134" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5138" relation="include">
        </childnode>
      </node>
      <node id="5137">
        <label>/arrow/cpp/src/arrow/dataset/pch.h</label>
        <link refid="arrow_2dataset_2pch_8h"/>
      </node>
      <node id="5131">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1dataset_1_1_fragment" prot="public">arrow::dataset::Fragment</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_in_memory_fragment" prot="public">arrow::dataset::InMemoryFragment</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_dataset" prot="public">arrow::dataset::Dataset</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_in_memory_dataset" prot="public">arrow::dataset::InMemoryDataset</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_in_memory_dataset_1_1_record_batch_generator" prot="public">arrow::dataset::InMemoryDataset::RecordBatchGenerator</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_union_dataset" prot="public">arrow::dataset::UnionDataset</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1dataset">arrow::dataset</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataset_2type__fwd_8h" kindref="compound">arrow/dataset/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2dataset_2visibility_8h" kindref="compound">arrow/dataset/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="namespacearrow_1_1dataset" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dataset<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classarrow_1_1dataset_1_1_fragment" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;ScanTaskIterator&gt;</ref><sp/>Scan(std::shared_ptr&lt;ScanContext&gt;<sp/>context)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>splittable()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>type_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classarrow_1_1dataset_1_1_fragment_1a072fa606a5fcd96704f489d04fb428be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_fragment_1a072fa606a5fcd96704f489d04fb428be" kindref="member">scan_options</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scan_options_;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classarrow_1_1dataset_1_1_fragment_1ab82dd0320741c1b6f88e904c5b01fc7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Expression&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_fragment_1ab82dd0320741c1b6f88e904c5b01fc7e" kindref="member">partition_expression</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partition_expression_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref>(std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classarrow_1_1dataset_1_1_fragment_1aee5c19c59fe9e6e55d6175dfaf04cc27" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_fragment_1aee5c19c59fe9e6e55d6175dfaf04cc27" kindref="member">Fragment</ref>(std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Expression&gt;<sp/>partition_expression)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>scan_options_(<ref refid="namespacestd" kindref="compound">std</ref>::move(scan_options)),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition_expression_(<ref refid="namespacestd" kindref="compound">std</ref>::move(partition_expression))<sp/>{}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classarrow_1_1dataset_1_1_fragment_1aa85eb2f4a74ff496303e8b5ff2857fba" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_fragment_1aa85eb2f4a74ff496303e8b5ff2857fba" kindref="member">scan_options_</ref>;</highlight></codeline>
<codeline lineno="79" refid="classarrow_1_1dataset_1_1_fragment_1adda4916f3513e0abb8c1f0df7988e8e5" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Expression&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_fragment_1adda4916f3513e0abb8c1f0df7988e8e5" kindref="member">partition_expression_</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classarrow_1_1dataset_1_1_in_memory_fragment" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment" kindref="compound">InMemoryFragment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment" kindref="compound">InMemoryFragment</ref>(<ref refid="namespacearrow_1aac5dbb97116a1738dc75b2baa2a67a7f" kindref="member">RecordBatchVector</ref><sp/>record_batches,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment" kindref="compound">InMemoryFragment</ref>(<ref refid="namespacearrow_1aac5dbb97116a1738dc75b2baa2a67a7f" kindref="member">RecordBatchVector</ref><sp/>record_batches,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Expression&gt;<sp/>partition_expression);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;ScanTaskIterator&gt;</ref><sp/>Scan(std::shared_ptr&lt;ScanContext&gt;<sp/>context)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classarrow_1_1dataset_1_1_in_memory_fragment_1a82ca5c2eb13e2a1f99f6bf37f6a41213" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment_1a82ca5c2eb13e2a1f99f6bf37f6a41213" kindref="member">splittable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classarrow_1_1dataset_1_1_in_memory_fragment_1a1f18a0af3525f53679253fb42defea9f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment_1a1f18a0af3525f53679253fb42defea9f" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;in-memory&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100" refid="classarrow_1_1dataset_1_1_in_memory_fragment_1ae6108e8566ac8a4ed3fb4fdca7ab0a1f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1aac5dbb97116a1738dc75b2baa2a67a7f" kindref="member">RecordBatchVector</ref><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_fragment_1ae6108e8566ac8a4ed3fb4fdca7ab0a1f" kindref="member">record_batches_</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classarrow_1_1dataset_1_1_dataset" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::enable_shared_from_this&lt;Dataset&gt;<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;ScannerBuilder&gt;</ref>&gt;<sp/>NewScan(std::shared_ptr&lt;ScanContext&gt;<sp/>context);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;ScannerBuilder&gt;</ref>&gt;<sp/>NewScan();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>GetFragments(std::shared_ptr&lt;ScanOptions&gt;<sp/>options);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1dataset_1_1_dataset_1ad2edfced53a0e56cf89389ee8c754702" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1ad2edfced53a0e56cf89389ee8c754702" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classarrow_1_1dataset_1_1_dataset_1aa7449d6622e0098c916528be75506236" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Expression&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1aa7449d6622e0098c916528be75506236" kindref="member">partition_expression</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partition_expression_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>type_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Dataset&gt;</ref>&gt;<sp/>ReplaceSchema(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135" refid="classarrow_1_1dataset_1_1_dataset_1acd88a02acb6fafb3f934a1117e9c41f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1acd88a02acb6fafb3f934a1117e9c41f8" kindref="member">Dataset</ref>(std::shared_ptr&lt;Schema&gt;<sp/>schema)<sp/>:<sp/>schema_(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema))<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classarrow_1_1dataset_1_1_dataset_1a32363cc3b882a036397978326b60935c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1a32363cc3b882a036397978326b60935c" kindref="member">Dataset</ref>(std::shared_ptr&lt;Schema&gt;<sp/>schema,<sp/>std::shared_ptr&lt;Expression&gt;<sp/>e)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>schema_(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema)),<sp/>partition_expression_(<ref refid="namespacestd" kindref="compound">std</ref>::move(e))<sp/>{}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>GetFragmentsImpl(std::shared_ptr&lt;ScanOptions&gt;<sp/>options)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AssumePartitionExpression(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;&amp;<sp/>scan_options,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;*<sp/>simplified_scan_options)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classarrow_1_1dataset_1_1_dataset_1a4c4752474ddf539f5d841b38f773c763" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1a4c4752474ddf539f5d841b38f773c763" kindref="member">schema_</ref>;</highlight></codeline>
<codeline lineno="150" refid="classarrow_1_1dataset_1_1_dataset_1ad1698721117105739a03725129c32a55" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Expression&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_dataset_1ad1698721117105739a03725129c32a55" kindref="member">partition_expression_</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classarrow_1_1dataset_1_1_in_memory_dataset" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset" kindref="compound">InMemoryDataset</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158" refid="classarrow_1_1dataset_1_1_in_memory_dataset_1_1_record_batch_generator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset_1_1_record_batch_generator" kindref="compound">RecordBatchGenerator</ref><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_in_memory_dataset_1_1_record_batch_generator" kindref="compound">RecordBatchGenerator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">RecordBatchIterator</ref><sp/>Get()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classarrow_1_1dataset_1_1_in_memory_dataset_1ac0db38bfc1de7b4d13240efa6f47662c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset_1ac0db38bfc1de7b4d13240efa6f47662c" kindref="member">InMemoryDataset</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchGenerator&gt;<sp/>get_batches)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema)),<sp/>get_batches_(<ref refid="namespacestd" kindref="compound">std</ref>::move(get_batches))<sp/>{}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>constructor<sp/>taking<sp/>a<sp/>fixed<sp/>list<sp/>of<sp/>batches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset" kindref="compound">InMemoryDataset</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,<sp/><ref refid="namespacearrow_1aac5dbb97116a1738dc75b2baa2a67a7f" kindref="member">RecordBatchVector</ref><sp/>batches);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset" kindref="compound">InMemoryDataset</ref>(std::shared_ptr&lt;Table&gt;<sp/>table);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classarrow_1_1dataset_1_1_in_memory_dataset_1ae39b5d039ae08ed1c6e17bfe1641f380" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset_1ae39b5d039ae08ed1c6e17bfe1641f380" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;in-memory&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Dataset&gt;</ref>&gt;<sp/>ReplaceSchema(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>GetFragmentsImpl(std::shared_ptr&lt;ScanOptions&gt;<sp/>options)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classarrow_1_1dataset_1_1_in_memory_dataset_1a1af5c0f28c8602d295c72256b12a1675" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;RecordBatchGenerator&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_dataset_1a1af5c0f28c8602d295c72256b12a1675" kindref="member">get_batches_</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classarrow_1_1dataset_1_1_union_dataset" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_union_dataset" kindref="compound">UnionDataset</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;UnionDataset&gt;</ref>&gt;<sp/>Make(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1dataset_1a97fdb65914e23bed4df3bb02b4e66981" kindref="member">DatasetVector</ref><sp/>children);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classarrow_1_1dataset_1_1_union_dataset_1ad7fba92d2ef700090517b234e5c6a113" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1dataset_1a97fdb65914e23bed4df3bb02b4e66981" kindref="member">DatasetVector</ref>&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_union_dataset_1ad7fba92d2ef700090517b234e5c6a113" kindref="member">children</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children_;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classarrow_1_1dataset_1_1_union_dataset_1a87c9d5cb26b147127ce28259298ce52a" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_union_dataset_1a87c9d5cb26b147127ce28259298ce52a" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;union&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Dataset&gt;</ref>&gt;<sp/>ReplaceSchema(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>GetFragmentsImpl(std::shared_ptr&lt;ScanOptions&gt;<sp/>options)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classarrow_1_1dataset_1_1_union_dataset_1a06cf564342c2090bbaf02d50ef1668a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_union_dataset_1a06cf564342c2090bbaf02d50ef1668a9" kindref="member">UnionDataset</ref>(std::shared_ptr&lt;Schema&gt;<sp/>schema,<sp/><ref refid="namespacearrow_1_1dataset_1a97fdb65914e23bed4df3bb02b4e66981" kindref="member">DatasetVector</ref><sp/>children)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema)),<sp/>children_(<ref refid="namespacestd" kindref="compound">std</ref>::move(children))<sp/>{}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classarrow_1_1dataset_1_1_union_dataset_1a7380e6efcfffe8d645bb209dc6f6e882" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1dataset_1a97fdb65914e23bed4df3bb02b4e66981" kindref="member">DatasetVector</ref><sp/><ref refid="classarrow_1_1dataset_1_1_union_dataset_1a7380e6efcfffe8d645bb209dc6f6e882" kindref="member">children_</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classarrow_1_1dataset_1_1_union_dataset_1abaadee1ef675ce77fcbcae237113b92a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1dataset_1_1_union_dataset_factory" kindref="compound">UnionDatasetFactory</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/dataset/dataset.h"/>
  </compounddef>
</doxygen>
