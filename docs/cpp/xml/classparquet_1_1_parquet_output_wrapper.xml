<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_output_wrapper" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetOutputWrapper</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_output_stream" prot="public" virt="non-virtual">arrow::io::OutputStream</basecompoundref>
    <includes refid="deprecated__io_8h" local="no">parquet/deprecated_io.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_output_wrapper_1a50f8258478ef38ede1b7f2927c689b04" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt;::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> &gt;</type>
        <definition>std::unique_ptr&lt;::parquet::OutputStream&gt; parquet::ParquetOutputWrapper::owned_sink_</definition>
        <argsstring></argsstring>
        <name>owned_sink_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="118" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_output_wrapper_1a86b7bd9389102fa9df5b23bf500aa2d6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt;::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> &gt;</type>
        <definition>std::shared_ptr&lt;::parquet::OutputStream&gt; parquet::ParquetOutputWrapper::shared_sink_</definition>
        <argsstring></argsstring>
        <name>shared_sink_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="119" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_output_wrapper_1a6a2b5c7dece35d671ae871c03623c181" prot="private" static="no" mutable="no">
        <type>::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> *</type>
        <definition>::parquet::OutputStream* parquet::ParquetOutputWrapper::sink_</definition>
        <argsstring></argsstring>
        <name>sink_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="120" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_output_wrapper_1af1e1680a4c6ac4e6ffe1ad1c3779d314" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::ParquetOutputWrapper::closed_</definition>
        <argsstring></argsstring>
        <name>closed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="121" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1ae5be8495402fb324651a44e477cc0912" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetOutputWrapper::ParquetOutputWrapper</definition>
        <argsstring>(std::shared_ptr&lt;::parquet::OutputStream &gt; sink)</argsstring>
        <name>ParquetOutputWrapper</name>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> &gt;</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1af7c343340fa5b519630ff54559aae3c9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetOutputWrapper::ParquetOutputWrapper</definition>
        <argsstring>(std::unique_ptr&lt;::parquet::OutputStream &gt; sink)</argsstring>
        <name>ParquetOutputWrapper</name>
        <param>
          <type>std::unique_ptr&lt;::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> &gt;</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1a827ba0a5b08bf825344f55506f575715" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetOutputWrapper::ParquetOutputWrapper</definition>
        <argsstring>(::parquet::OutputStream *sink)</argsstring>
        <name>ParquetOutputWrapper</name>
        <param>
          <type>::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1a0cff536689c93427fb8f55170a7dcded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetOutputWrapper::~ParquetOutputWrapper</definition>
        <argsstring>() override</argsstring>
        <name>~ParquetOutputWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1afe911907f7a29497804ab66e46e2c68a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::ParquetOutputWrapper::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream cleanly. </para>        </briefdescription>
        <detaileddescription>
<para>For writable streams, this will attempt to flush any pending data before releasing the underlying resource.</para><para>After <ref refid="classparquet_1_1_parquet_output_wrapper_1afe911907f7a29497804ab66e46e2c68a" kindref="member">Close()</ref> is called, <ref refid="classparquet_1_1_parquet_output_wrapper_1a6931abe1fcac394cdf37a56b98015441" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1a9843e31cd1a1e441609c4c547f701f1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; int64_t &gt;</type>
        <definition>::arrow::Result&lt;int64_t&gt; parquet::ParquetOutputWrapper::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1a6931abe1fcac394cdf37a56b98015441" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool parquet::ParquetOutputWrapper::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_output_wrapper_1ab000fabff0d123e8ab09a8d2c6fe3812" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::ParquetOutputWrapper::Write</definition>
        <argsstring>(const void *data, int64_t nbytes) override</argsstring>
        <name>Write</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d">Write</reimplements>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This method always processes the bytes in full. Depending on the semantics of the stream, the data may be written out immediately, held in a buffer, or written asynchronously. In the case where the stream buffers the data, it will be copied. To avoid potentially large copies, use the Write variant that takes an owned Buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3498">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="3499" relation="public-inheritance">
        </childnode>
        <childnode refid="3500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3500">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="3499">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3497">
        <label>parquet::ParquetOutputWrapper</label>
        <link refid="classparquet_1_1_parquet_output_wrapper"/>
        <childnode refid="3498" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3502">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="3503" relation="public-inheritance">
        </childnode>
        <childnode refid="3504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3504">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="3503">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3501">
        <label>parquet::ParquetOutputWrapper</label>
        <link refid="classparquet_1_1_parquet_output_wrapper"/>
        <childnode refid="3502" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="101" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="101" bodyend="122"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>Abort</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1afe911907f7a29497804ab66e46e2c68a" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>Close</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a6931abe1fcac394cdf37a56b98015441" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>closed</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1af1e1680a4c6ac4e6ffe1ad1c3779d314" prot="private" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>closed_</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>Flush</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_output_stream_1a5b1e0adea7ef92368ddc07027995aca1" prot="protected" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>OutputStream</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a50f8258478ef38ede1b7f2927c689b04" prot="private" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>owned_sink_</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1ae5be8495402fb324651a44e477cc0912" prot="public" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>ParquetOutputWrapper</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1af7c343340fa5b519630ff54559aae3c9" prot="public" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>ParquetOutputWrapper</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a827ba0a5b08bf825344f55506f575715" prot="public" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>ParquetOutputWrapper</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>set_mode</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a86b7bd9389102fa9df5b23bf500aa2d6" prot="private" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>shared_sink_</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a6a2b5c7dece35d671ae871c03623c181" prot="private" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>sink_</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a9843e31cd1a1e441609c4c547f701f1a" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>Tell</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1ab000fabff0d123e8ab09a8d2c6fe3812" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069" prot="public" virt="virtual" ambiguityscope="arrow::io::OutputStream::"><scope>parquet::ParquetOutputWrapper</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" virt="non-virtual" ambiguityscope="arrow::io::OutputStream::"><scope>parquet::ParquetOutputWrapper</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>~FileInterface</name></member>
      <member refid="classparquet_1_1_parquet_output_wrapper_1a0cff536689c93427fb8f55170a7dcded" prot="public" virt="non-virtual"><scope>parquet::ParquetOutputWrapper</scope><name>~ParquetOutputWrapper</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" virt="virtual"><scope>parquet::ParquetOutputWrapper</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
