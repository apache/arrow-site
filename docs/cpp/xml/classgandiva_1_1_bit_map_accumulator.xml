<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_bit_map_accumulator" kind="class" language="C++" prot="public">
    <compoundname>gandiva::BitMapAccumulator</compoundname>
    <basecompoundref refid="classgandiva_1_1_dex_default_visitor" prot="public" virt="non-virtual">gandiva::DexDefaultVisitor</basecompoundref>
    <includes refid="bitmap__accumulator_8h" local="no">gandiva/bitmap_accumulator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_bit_map_accumulator_1a7b574ea42284c6635112cb3ab7f10782" prot="private" static="no" mutable="no">
        <type>const <ref refid="classgandiva_1_1_eval_batch" kindref="compound">EvalBatch</ref> &amp;</type>
        <definition>const EvalBatch&amp; gandiva::BitMapAccumulator::eval_batch_</definition>
        <argsstring></argsstring>
        <name>eval_batch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="73" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_bit_map_accumulator_1a424ee2d56278afea73a2d6ac25db8210" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8_t * &gt;</type>
        <definition>std::vector&lt;uint8_t*&gt; gandiva::BitMapAccumulator::src_maps_</definition>
        <argsstring></argsstring>
        <name>src_maps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="74" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_bit_map_accumulator_1ae5c21ab2bb9f605540da1c8d351e7a48" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>std::vector&lt;int64_t&gt; gandiva::BitMapAccumulator::src_map_offsets_</definition>
        <argsstring></argsstring>
        <name>src_map_offsets_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="75" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_bit_map_accumulator_1acb9537478747f68a9a6096002c266e24" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gandiva::BitMapAccumulator::all_invalid_</definition>
        <argsstring></argsstring>
        <name>all_invalid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="76" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1a24948f107533900d2305dc18b83ed389" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::BitMapAccumulator::BitMapAccumulator</definition>
        <argsstring>(const EvalBatch &amp;eval_batch)</argsstring>
        <name>BitMapAccumulator</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_eval_batch" kindref="compound">EvalBatch</ref> &amp;</type>
          <declname>eval_batch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="34" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1a8082c43534fd223b4d4d9decae93697c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gandiva::BitMapAccumulator::Visit</definition>
        <argsstring>(const VectorReadValidityDex &amp;dex)</argsstring>
        <name>Visit</name>
        <reimplements refid="classgandiva_1_1_dex_visitor_1a0e3e9a2af933fd76500282fcc4322e89">Visit</reimplements>
        <param>
          <type>const <ref refid="classgandiva_1_1_vector_read_validity_dex" kindref="compound">VectorReadValidityDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="37" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1aa4c74d099e322f546910f00aa70879ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gandiva::BitMapAccumulator::Visit</definition>
        <argsstring>(const LocalBitMapValidityDex &amp;dex)</argsstring>
        <name>Visit</name>
        <reimplements refid="classgandiva_1_1_dex_visitor_1a244c6964c67ba070e33686ba4c887a7d">Visit</reimplements>
        <param>
          <type>const <ref refid="classgandiva_1_1_local_bit_map_validity_dex" kindref="compound">LocalBitMapValidityDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="47" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1ac92f88fd71947465e6378cf474e62e11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gandiva::BitMapAccumulator::Visit</definition>
        <argsstring>(const TrueDex &amp;dex)</argsstring>
        <name>Visit</name>
        <reimplements refid="classgandiva_1_1_dex_visitor_1a989119ace7ab79bba5f349b8ee8e2494">Visit</reimplements>
        <param>
          <type>const <ref refid="classgandiva_1_1_true_dex" kindref="compound">TrueDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="54" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1af2983f129721ad64acebb3a7a7bf01ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gandiva::BitMapAccumulator::Visit</definition>
        <argsstring>(const FalseDex &amp;dex)</argsstring>
        <name>Visit</name>
        <reimplements refid="classgandiva_1_1_dex_visitor_1a45a7b2b3048093b9aba2e7e43ab3baed">Visit</reimplements>
        <param>
          <type>const <ref refid="classgandiva_1_1_false_dex" kindref="compound">FalseDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="58" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1a37b0d1689d2633050efc635059bead11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::BitMapAccumulator::ComputeResult</definition>
        <argsstring>(uint8_t *dst_bitmap)</argsstring>
        <name>ComputeResult</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst_bitmap</declname>
        </param>
        <briefdescription>
<para>Compute the dst_bmap based on the contents and type of the accumulated bitmap dex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_bit_map_accumulator_1aed5043d4bfe3ce34c0ac824751ad59db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gandiva::BitMapAccumulator::IntersectBitMaps</definition>
        <argsstring>(uint8_t *dst_map, const std::vector&lt; uint8_t *&gt; &amp;src_maps, const std::vector&lt; int64_t &gt; &amp;src_maps_offsets, int64_t num_records)</argsstring>
        <name>IntersectBitMaps</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst_map</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t *&gt; &amp;</type>
          <declname>src_maps</declname>
        </param>
        <param>
          <type>const std::vector&lt; int64_t &gt; &amp;</type>
          <declname>src_maps_offsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_records</declname>
        </param>
        <briefdescription>
<para>Compute the intersection of the accumulated bitmaps (with offsets) and save the result in dst_bmap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Extract bitmap buffer from either the input/buffer vectors or the local validity bitmap, and accumulates them to do the final computation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="350">
        <label>gandiva::DexVisitor</label>
        <link refid="classgandiva_1_1_dex_visitor"/>
      </node>
      <node id="348">
        <label>gandiva::BitMapAccumulator</label>
        <link refid="classgandiva_1_1_bit_map_accumulator"/>
        <childnode refid="349" relation="public-inheritance">
        </childnode>
      </node>
      <node id="349">
        <label>gandiva::DexDefaultVisitor</label>
        <link refid="classgandiva_1_1_dex_default_visitor"/>
        <childnode refid="350" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="353">
        <label>gandiva::DexVisitor</label>
        <link refid="classgandiva_1_1_dex_visitor"/>
      </node>
      <node id="351">
        <label>gandiva::BitMapAccumulator</label>
        <link refid="classgandiva_1_1_bit_map_accumulator"/>
        <childnode refid="352" relation="public-inheritance">
        </childnode>
      </node>
      <node id="352">
        <label>gandiva::DexDefaultVisitor</label>
        <link refid="classgandiva_1_1_dex_default_visitor"/>
        <childnode refid="353" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/bitmap_accumulator.h" line="32" column="1" bodyfile="/arrow/cpp/src/gandiva/bitmap_accumulator.h" bodystart="32" bodyend="77"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_bit_map_accumulator_1acb9537478747f68a9a6096002c266e24" prot="private" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>all_invalid_</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1a24948f107533900d2305dc18b83ed389" prot="public" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>BitMapAccumulator</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1a37b0d1689d2633050efc635059bead11" prot="public" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>ComputeResult</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1a7b574ea42284c6635112cb3ab7f10782" prot="private" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>eval_batch_</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1aed5043d4bfe3ce34c0ac824751ad59db" prot="public" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>IntersectBitMaps</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1ae5c21ab2bb9f605540da1c8d351e7a48" prot="private" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>src_map_offsets_</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1a424ee2d56278afea73a2d6ac25db8210" prot="private" virt="non-virtual"><scope>gandiva::BitMapAccumulator</scope><name>src_maps_</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1a8082c43534fd223b4d4d9decae93697c" prot="public" virt="virtual"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1aa4c74d099e322f546910f00aa70879ec" prot="public" virt="virtual"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1ac92f88fd71947465e6378cf474e62e11" prot="public" virt="virtual"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_bit_map_accumulator_1af2983f129721ad64acebb3a7a7bf01ed" prot="public" virt="virtual"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a22c94609953e9f8f667800265887d923" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a619be9010887659260f3670304014058" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1ae23ab6f22a5b3fe5f0bd48ac60fc8f6f" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a02d63ead05b2d7c25934a4e29f7e5de2" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a64509523a8646757917d76af15121f22" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1acac94f65fe66629fabb6f2d7c2c06030" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a335a6e566e06427dde0ab4730f2041b2" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1aea35810928172ae4b1cfbd8727ab7ab8" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1ad6759d8719288bf719d5cc8d89010461" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a47bc686b4574bb6c202d1612496295d6" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1ac54b54f2bf2cabb4cf446484b222f8b9" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a7a773a2ce662133823dc0c62ceae6857" prot="public" virt="pure-virtual" ambiguityscope="gandiva::DexDefaultVisitor::"><scope>gandiva::BitMapAccumulator</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a1bbf80df7f4d8ee75e81b3d4494be18e" prot="public" virt="virtual"><scope>gandiva::BitMapAccumulator</scope><name>~DexVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
