<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="int__util_8h" kind="file" language="C++">
    <compoundname>int_util.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">limits</includes>
    <includes local="no">type_traits</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="parquet_2types_8h" local="yes">/arrow/cpp/src/parquet/types.h</includedby>
    <incdepgraph>
      <node id="12704">
        <label>limits</label>
      </node>
      <node id="12703">
        <label>cstdint</label>
      </node>
      <node id="12706">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="12705">
        <label>type_traits</label>
      </node>
      <node id="12702">
        <label>/arrow/cpp/src/arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="12703" relation="include">
        </childnode>
        <childnode refid="12704" relation="include">
        </childnode>
        <childnode refid="12705" relation="include">
        </childnode>
        <childnode refid="12706" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12709">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="12717">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="12716">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="12717" relation="include">
        </childnode>
        <childnode refid="12718" relation="include">
        </childnode>
      </node>
      <node id="12736">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="12723" relation="include">
        </childnode>
      </node>
      <node id="12732">
        <label>/arrow/cpp/src/parquet/murmur3.h</label>
        <link refid="murmur3_8h"/>
      </node>
      <node id="12727">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="12715">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="12726">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="12710">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="12728">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12725" relation="include">
        </childnode>
        <childnode refid="12713" relation="include">
        </childnode>
        <childnode refid="12715" relation="include">
        </childnode>
      </node>
      <node id="12730">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12713" relation="include">
        </childnode>
        <childnode refid="12728" relation="include">
        </childnode>
        <childnode refid="12729" relation="include">
        </childnode>
        <childnode refid="12720" relation="include">
        </childnode>
      </node>
      <node id="12737">
        <label>/arrow/cpp/src/parquet/schema_internal.h</label>
        <link refid="schema__internal_8h"/>
      </node>
      <node id="12722">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="12723" relation="include">
        </childnode>
      </node>
      <node id="12714">
        <label>/arrow/cpp/src/parquet/column_scanner.h</label>
        <link refid="column__scanner_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
      </node>
      <node id="12724">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12725" relation="include">
        </childnode>
        <childnode refid="12726" relation="include">
        </childnode>
        <childnode refid="12727" relation="include">
        </childnode>
        <childnode refid="12728" relation="include">
        </childnode>
        <childnode refid="12729" relation="include">
        </childnode>
        <childnode refid="12730" relation="include">
        </childnode>
        <childnode refid="12720" relation="include">
        </childnode>
      </node>
      <node id="12712">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="12723">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="12711">
        <label>/arrow/cpp/src/parquet/column_reader.h</label>
        <link refid="column__reader_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12713" relation="include">
        </childnode>
        <childnode refid="12714" relation="include">
        </childnode>
        <childnode refid="12715" relation="include">
        </childnode>
      </node>
      <node id="12713">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="12733">
        <label>/arrow/cpp/src/parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="12734" relation="include">
        </childnode>
        <childnode refid="12713" relation="include">
        </childnode>
        <childnode refid="12735" relation="include">
        </childnode>
        <childnode refid="12711" relation="include">
        </childnode>
        <childnode refid="12714" relation="include">
        </childnode>
        <childnode refid="12721" relation="include">
        </childnode>
        <childnode refid="12729" relation="include">
        </childnode>
        <childnode refid="12736" relation="include">
        </childnode>
        <childnode refid="12722" relation="include">
        </childnode>
        <childnode refid="12730" relation="include">
        </childnode>
        <childnode refid="12720" relation="include">
        </childnode>
        <childnode refid="12724" relation="include">
        </childnode>
        <childnode refid="12737" relation="include">
        </childnode>
      </node>
      <node id="12729">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="12717" relation="include">
        </childnode>
        <childnode refid="12718" relation="include">
        </childnode>
      </node>
      <node id="12719">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="12720" relation="include">
        </childnode>
      </node>
      <node id="12738">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12717" relation="include">
        </childnode>
        <childnode refid="12710" relation="include">
        </childnode>
        <childnode refid="12723" relation="include">
        </childnode>
      </node>
      <node id="12735">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="12713" relation="include">
        </childnode>
      </node>
      <node id="12734">
        <label>/arrow/cpp/src/parquet/api/schema.h</label>
        <link refid="api_2schema_8h"/>
        <childnode refid="12712" relation="include">
        </childnode>
        <childnode refid="12717" relation="include">
        </childnode>
      </node>
      <node id="12720">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="12718">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="12715" relation="include">
        </childnode>
      </node>
      <node id="12731">
        <label>/arrow/cpp/src/parquet/hasher.h</label>
        <link refid="hasher_8h"/>
        <childnode refid="12709" relation="include">
        </childnode>
        <childnode refid="12732" relation="include">
        </childnode>
      </node>
      <node id="12707">
        <label>/arrow/cpp/src/arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="12708" relation="include">
        </childnode>
      </node>
      <node id="12721">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="12722" relation="include">
        </childnode>
        <childnode refid="12724" relation="include">
        </childnode>
      </node>
      <node id="12708">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="12709" relation="include">
        </childnode>
        <childnode refid="12710" relation="include">
        </childnode>
        <childnode refid="12711" relation="include">
        </childnode>
        <childnode refid="12714" relation="include">
        </childnode>
        <childnode refid="12716" relation="include">
        </childnode>
        <childnode refid="12719" relation="include">
        </childnode>
        <childnode refid="12721" relation="include">
        </childnode>
        <childnode refid="12727" relation="include">
        </childnode>
        <childnode refid="12731" relation="include">
        </childnode>
        <childnode refid="12730" relation="include">
        </childnode>
        <childnode refid="12732" relation="include">
        </childnode>
        <childnode refid="12720" relation="include">
        </childnode>
        <childnode refid="12724" relation="include">
        </childnode>
        <childnode refid="12733" relation="include">
        </childnode>
        <childnode refid="12737" relation="include">
        </childnode>
        <childnode refid="12738" relation="include">
        </childnode>
        <childnode refid="12723" relation="include">
        </childnode>
      </node>
      <node id="12725">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="30"><highlight class="normal">uint8_t<sp/>DetectUIntWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>values,<sp/>int64_t<sp/>length,<sp/>uint8_t<sp/>min_width<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="33"><highlight class="normal">uint8_t<sp/>DetectUIntWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>length,<sp/>uint8_t<sp/>min_width<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="37"><highlight class="normal">uint8_t<sp/>DetectIntWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>values,<sp/>int64_t<sp/>length,<sp/>uint8_t<sp/>min_width<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="40"><highlight class="normal">uint8_t<sp/>DetectIntWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>min_width<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>source,<sp/>int8_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>source,<sp/>int16_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>source,<sp/>int32_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>source,<sp/>int64_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastUInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>source,<sp/>uint8_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastUInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>source,<sp/>uint16_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastUInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>source,<sp/>uint32_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DowncastUInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>source,<sp/>uint64_t*<sp/>dest,<sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputInt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputInt&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TransposeInts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputInt*<sp/>source,<sp/>OutputInt*<sp/>dest,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t*<sp/>transpose_map);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SignedInt&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">SignedInt<sp/>SafeSignedAdd(SignedInt<sp/>u,<sp/>SignedInt<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnsignedInt<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::make_unsigned&lt;SignedInt&gt;::type;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SignedInt</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">UnsignedInt</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u)<sp/>+</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;UnsignedInt&gt;(v));</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SignedInt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Shift&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">SignedInt<sp/>SafeLeftShift(SignedInt<sp/>u,<sp/>Shift<sp/>shift)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnsignedInt<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::make_unsigned&lt;SignedInt&gt;::type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SignedInt</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">UnsignedInt</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u)<sp/>&lt;&lt;<sp/>shift);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMultiplyOverflow(Integer<sp/>value,<sp/>Integer<sp/>multiplicand)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(multiplicand<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>&gt;<sp/>std::numeric_limits&lt;Integer&gt;::max()<sp/>/<sp/>multiplicand);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasAdditionOverflow(Integer<sp/>value,<sp/>Integer<sp/>addend)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>std::numeric_limits&lt;Integer&gt;::max()<sp/>-<sp/>addend);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_integral&lt;Integer&gt;::value<sp/>&amp;&amp;<sp/>std::is_signed&lt;Integer&gt;::value,<sp/>int64_t&gt;::type</highlight></codeline>
<codeline lineno="104"><highlight class="normal">UpcastInt(Integer<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_integral&lt;Integer&gt;::value<sp/>&amp;&amp;<sp/>std::is_unsigned&lt;Integer&gt;::value,<sp/>uint64_t&gt;::type</highlight></codeline>
<codeline lineno="111"><highlight class="normal">UpcastInt(Integer<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/int_util.h"/>
  </compounddef>
</doxygen>
