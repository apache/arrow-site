<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1json_1_1_read_options" kind="struct" language="C++" prot="public">
    <compoundname>arrow::json::ReadOptions</compoundname>
    <includes refid="json_2options_8h" local="no">arrow/json/options.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1json_1_1_read_options_1a9ee476086378bf9d4f14ca96646ca226" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::json::ReadOptions::use_threads</definition>
        <argsstring></argsstring>
        <name>use_threads</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether to use the global CPU thread pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/options.h" line="63" column="1" bodyfile="/arrow/cpp/src/arrow/json/options.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1json_1_1_read_options_1a1b646b942fa1b8fb09243757774ca7fa" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::json::ReadOptions::block_size</definition>
        <argsstring></argsstring>
        <name>block_size</name>
        <initializer>= 1 &lt;&lt; 20</initializer>
        <briefdescription>
<para>Block size we request from the IO layer; also determines the size of chunks when use_threads is true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/options.h" line="66" column="1" bodyfile="/arrow/cpp/src/arrow/json/options.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1json_1_1_read_options_1a5c5b21da5280abd29077cdb608351de0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1json_1_1_read_options" kindref="compound">ReadOptions</ref></type>
        <definition>static ReadOptions arrow::json::ReadOptions::Defaults</definition>
        <argsstring>()</argsstring>
        <name>Defaults</name>
        <briefdescription>
<para>Create read options with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/options.h" line="69" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/json/options.h" line="59" column="1" bodyfile="/arrow/cpp/src/arrow/json/options.h" bodystart="59" bodyend="70"/>
    <listofallmembers>
      <member refid="structarrow_1_1json_1_1_read_options_1a1b646b942fa1b8fb09243757774ca7fa" prot="public" virt="non-virtual"><scope>arrow::json::ReadOptions</scope><name>block_size</name></member>
      <member refid="structarrow_1_1json_1_1_read_options_1a5c5b21da5280abd29077cdb608351de0" prot="public" virt="non-virtual"><scope>arrow::json::ReadOptions</scope><name>Defaults</name></member>
      <member refid="structarrow_1_1json_1_1_read_options_1a9ee476086378bf9d4f14ca96646ca226" prot="public" virt="non-virtual"><scope>arrow::json::ReadOptions</scope><name>use_threads</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
