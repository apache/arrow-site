<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classarrow_1_1_empty_iterator" kind="class" language="C++" prot="public">
    <compoundname>arrow::EmptyIterator</compoundname>
    <basecompoundref refid="classarrow_1_1_iterator" prot="public" virt="non-virtual">arrow::Iterator&lt; T &gt;</basecompoundref>
    <includes refid="iterator_8h" local="no">arrow/util/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_empty_iterator_1ac9c969eaf025a569bc8b61dd63948274" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::EmptyIterator&lt; T &gt;::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="126" column="10" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_empty_iterator_1aa65231520962036b163e2a9d205ddc57" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::EmptyIterator&lt; T &gt;::EmptyIterator</definition>
        <argsstring>(Status s=Status::OK())</argsstring>
        <name>EmptyIterator</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
          <declname>s</declname>
          <defval><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="118" column="12" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_empty_iterator_1a55a4df282cc48ddbac4d759c67f12b1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::EmptyIterator&lt; T &gt;::Next</definition>
        <argsstring>(T *out) override</argsstring>
        <name>Next</name>
        <reimplements refid="classarrow_1_1_iterator_1a96260c9b7cf11ac63ab68656a7a0d693">Next</reimplements>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return the next element of the sequence, nullptr when the iteration is completed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="120" column="10" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>arrow::Iterator&lt; T &gt;</label>
        <link refid="classarrow_1_1_iterator"/>
      </node>
      <node id="1">
        <label>arrow::EmptyIterator&lt; T &gt;</label>
        <link refid="classarrow_1_1_empty_iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>arrow::Iterator&lt; T &gt;</label>
        <link refid="classarrow_1_1_iterator"/>
      </node>
      <node id="1">
        <label>arrow::EmptyIterator&lt; T &gt;</label>
        <link refid="classarrow_1_1_empty_iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/util/iterator.h" line="116" column="37" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="116" bodyend="127"/>
    <listofallmembers>
      <member refid="classarrow_1_1_empty_iterator_1aa65231520962036b163e2a9d205ddc57" prot="public" virt="non-virtual"><scope>arrow::EmptyIterator</scope><name>EmptyIterator</name></member>
      <member refid="classarrow_1_1_empty_iterator_1a55a4df282cc48ddbac4d759c67f12b1b" prot="public" virt="virtual"><scope>arrow::EmptyIterator</scope><name>Next</name></member>
      <member refid="classarrow_1_1_empty_iterator_1ac9c969eaf025a569bc8b61dd63948274" prot="private" virt="non-virtual"><scope>arrow::EmptyIterator</scope><name>status_</name></member>
      <member refid="classarrow_1_1_iterator_1ad4ad044d48e8981dd542b1b9f1b97c9e" prot="public" virt="non-virtual"><scope>arrow::EmptyIterator</scope><name>Visit</name></member>
      <member refid="classarrow_1_1_iterator_1a4eaf5ab7381ae667cc49cb5b96349a5c" prot="public" virt="virtual"><scope>arrow::EmptyIterator</scope><name>~Iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
