<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1fs_1_1_path_forest_1_1_ref" kind="struct" language="C++" prot="public">
    <compoundname>arrow::fs::PathForest::Ref</compoundname>
    <includes refid="path__forest_8h" local="no">arrow/filesystem/path_forest.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1acc191f10c6b92a8391af3a3b14683023" prot="public" static="no" mutable="no">
        <type>const <ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">PathForest</ref> *</type>
        <definition>const PathForest* arrow::fs::PathForest::Ref::forest</definition>
        <argsstring></argsstring>
        <name>forest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="90" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/path_forest.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1aea2cbc2b4c11b80523928f8b9128b9cc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::fs::PathForest::Ref::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="91" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/path_forest.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1aa60d76230b0ad50ef460f19bce25411d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structarrow_1_1fs_1_1_file_info" kindref="compound">FileInfo</ref> &amp;</type>
        <definition>const FileInfo&amp; arrow::fs::PathForest::Ref::info</definition>
        <argsstring>() const</argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a546b842bf4a9a64bddd5331155f14b27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::fs::PathForest::Ref::num_descendants</definition>
        <argsstring>() const</argsstring>
        <name>num_descendants</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a263d60337d2e40633274835b49dfa07e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">PathForest</ref></type>
        <definition>PathForest arrow::fs::PathForest::Ref::descendants</definition>
        <argsstring>() const</argsstring>
        <name>descendants</name>
        <briefdescription>
<para>Returns a <ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">PathForest</ref> containing only nodes which are descendants of this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1ab9f043e245ec90bd3f46d9c94ed6771e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1fs_1_1_path_forest_1_1_ref" kindref="compound">Ref</ref></type>
        <definition>Ref arrow::fs::PathForest::Ref::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
<para>This node&apos;s parent or <ref refid="structarrow_1_1fs_1_1_path_forest_1_1_ref" kindref="compound">Ref</ref>{nullptr, 0} if this node has no parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a277d173ff0a24ba788eb6d0b1515b630" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::fs::PathForest::Ref::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="88" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/path_forest.h" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reference to a node in the forest. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3898">
        <label>arrow::fs::PathForest::Ref</label>
        <link refid="structarrow_1_1fs_1_1_path_forest_1_1_ref"/>
        <childnode refid="3899" relation="usage">
          <edgelabel>forest</edgelabel>
        </childnode>
      </node>
      <node id="3899">
        <label>arrow::fs::PathForest</label>
        <link refid="classarrow_1_1fs_1_1_path_forest"/>
        <childnode refid="3900" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3900">
        <label>arrow::util::EqualityComparable&lt; PathForest &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/filesystem/path_forest.h" line="77" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/path_forest.h" bodystart="77" bodyend="92"/>
    <listofallmembers>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a263d60337d2e40633274835b49dfa07e" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>descendants</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1acc191f10c6b92a8391af3a3b14683023" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>forest</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1aea2cbc2b4c11b80523928f8b9128b9cc" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>i</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1aa60d76230b0ad50ef460f19bce25411d" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>info</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a546b842bf4a9a64bddd5331155f14b27" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>num_descendants</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1a277d173ff0a24ba788eb6d0b1515b630" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>operator bool</name></member>
      <member refid="structarrow_1_1fs_1_1_path_forest_1_1_ref_1ab9f043e245ec90bd3f46d9c94ed6771e" prot="public" virt="non-virtual"><scope>arrow::fs::PathForest::Ref</scope><name>parent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
