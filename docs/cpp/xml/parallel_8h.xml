<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parallel_8h" kind="file" language="C++">
    <compoundname>parallel.h</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="thread__pool_8h" local="yes">arrow/util/thread_pool.h</includes>
    <incdepgraph>
      <node id="13361">
        <label>atomic</label>
      </node>
      <node id="13347">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="13345" relation="include">
        </childnode>
        <childnode refid="13348" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13349" relation="include">
        </childnode>
      </node>
      <node id="13357">
        <label>functional</label>
      </node>
      <node id="13350">
        <label>cstdint</label>
      </node>
      <node id="13342">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="13343" relation="include">
        </childnode>
        <childnode refid="13344" relation="include">
        </childnode>
        <childnode refid="13345" relation="include">
        </childnode>
        <childnode refid="13346" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13347" relation="include">
        </childnode>
        <childnode refid="13349" relation="include">
        </childnode>
        <childnode refid="13351" relation="include">
        </childnode>
        <childnode refid="13353" relation="include">
        </childnode>
      </node>
      <node id="13362">
        <label>cmath</label>
      </node>
      <node id="13346">
        <label>string</label>
      </node>
      <node id="13339">
        <label>/arrow/cpp/src/arrow/util/parallel.h</label>
        <link refid="parallel_8h"/>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13341" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13354" relation="include">
        </childnode>
      </node>
      <node id="13352">
        <label>ostream</label>
      </node>
      <node id="13354">
        <label>arrow/util/thread_pool.h</label>
        <link refid="thread__pool_8h"/>
        <childnode refid="13355" relation="include">
        </childnode>
        <childnode refid="13356" relation="include">
        </childnode>
        <childnode refid="13357" relation="include">
        </childnode>
        <childnode refid="13345" relation="include">
        </childnode>
        <childnode refid="13346" relation="include">
        </childnode>
        <childnode refid="13348" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13358" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13360" relation="include">
        </childnode>
        <childnode refid="13349" relation="include">
        </childnode>
        <childnode refid="13353" relation="include">
        </childnode>
      </node>
      <node id="13353">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="13360">
        <label>arrow/util/future.h</label>
        <link refid="future_8h"/>
        <childnode refid="13361" relation="include">
        </childnode>
        <childnode refid="13362" relation="include">
        </childnode>
        <childnode refid="13345" relation="include">
        </childnode>
        <childnode refid="13348" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13341" relation="include">
        </childnode>
        <childnode refid="13358" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13349" relation="include">
        </childnode>
        <childnode refid="13353" relation="include">
        </childnode>
      </node>
      <node id="13355">
        <label>unistd.h</label>
      </node>
      <node id="13341">
        <label>vector</label>
      </node>
      <node id="13359">
        <label>new</label>
      </node>
      <node id="13340">
        <label>utility</label>
      </node>
      <node id="13344">
        <label>iosfwd</label>
      </node>
      <node id="13356">
        <label>cstdlib</label>
      </node>
      <node id="13358">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="13359" relation="include">
        </childnode>
        <childnode refid="13346" relation="include">
        </childnode>
        <childnode refid="13348" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13347" relation="include">
        </childnode>
      </node>
      <node id="13348">
        <label>type_traits</label>
      </node>
      <node id="13343">
        <label>cstring</label>
      </node>
      <node id="13351">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="13345" relation="include">
        </childnode>
        <childnode refid="13352" relation="include">
        </childnode>
        <childnode refid="13346" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13353" relation="include">
        </childnode>
      </node>
      <node id="13345">
        <label>memory</label>
      </node>
      <node id="13349">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="13350" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread__pool_8h" kindref="compound">arrow/util/thread_pool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>parallelizer<sp/>that<sp/>takes<sp/>a<sp/>`Status(int)`<sp/>function<sp/>and<sp/>calls<sp/>it<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>between<sp/>0<sp/>and<sp/>`num_tasks<sp/>-<sp/>1`,<sp/>on<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTION&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ParallelFor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_tasks,<sp/>FUNCTION&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>=<sp/>internal::GetCpuThreadPool();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>std::vector&lt;Future&lt;Status&gt;&gt;<sp/>futures(num_tasks);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_tasks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="result_8h_1aaf9efe9debc83022fad249a0fa56e680" kindref="member">ARROW_ASSIGN_OR_RAISE</ref>(futures[i],<sp/>pool-&gt;Submit(func,<sp/>i));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>st<sp/>=<sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fut<sp/>:<sp/>futures)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>st<sp/>&amp;=<sp/>fut.status();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>parallelizer<sp/>that<sp/>takes<sp/>a<sp/>`Status(int)`<sp/>function<sp/>and<sp/>calls<sp/>it<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>between<sp/>0<sp/>and<sp/>`num_tasks<sp/>-<sp/>1`,<sp/>in<sp/>sequence<sp/>or<sp/>in<sp/>parallel,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>the<sp/>input<sp/>boolean.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTION&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>OptionalParallelFor(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_threads,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_tasks,<sp/>FUNCTION&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_threads)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParallelFor(num_tasks,<sp/>std::forward&lt;FUNCTION&gt;(func));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_tasks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(func(i));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/parallel.h"/>
  </compounddef>
</doxygen>
