<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1_record_batch_stream_writer" kind="class" language="C++" prot="public">
    <compoundname>arrow::ipc::RecordBatchStreamWriter</compoundname>
    <basecompoundref refid="classarrow_1_1ipc_1_1_record_batch_writer" prot="public" virt="non-virtual">arrow::ipc::RecordBatchWriter</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1ipc_1_1_record_batch_file_writer" prot="public" virt="non-virtual">arrow::ipc::RecordBatchFileWriter</derivedcompoundref>
    <includes refid="arrow_2ipc_2writer_8h" local="no">arrow/ipc/writer.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_writer_1afa77ce400799a9e9820825b38722b8de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::RecordBatchStreamWriter::Open</definition>
        <argsstring>(io::OutputStream *sink, const std::shared_ptr&lt; Schema &gt; &amp;schema, std::shared_ptr&lt; RecordBatchWriter &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_record_batch_writer" kindref="compound">RecordBatchWriter</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a new writer from stream sink and schema. </para>        </briefdescription>
        <detaileddescription>
<para>User is responsible for closing the actual OutputStream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sink</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema of the record batches to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the created stream writer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_writer_1a2f86078fb4efc9e243fc4bbc1141dcdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_record_batch_writer" kindref="compound">RecordBatchWriter</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;RecordBatchWriter&gt; &gt; arrow::ipc::RecordBatchStreamWriter::Open</definition>
        <argsstring>(io::OutputStream *sink, const std::shared_ptr&lt; Schema &gt; &amp;schema)</argsstring>
        <name>Open</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Create a new writer from stream sink and schema. </para>        </briefdescription>
        <detaileddescription>
<para>User is responsible for closing the actual OutputStream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sink</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema of the record batches to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt;std::shared_ptr&lt;RecordBatchWriter&gt;&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_writer_1abcf1a2f78d1bba19881b59c08a217e38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_record_batch_writer" kindref="compound">RecordBatchWriter</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;RecordBatchWriter&gt; &gt; arrow::ipc::RecordBatchStreamWriter::Open</definition>
        <argsstring>(io::OutputStream *sink, const std::shared_ptr&lt; Schema &gt; &amp;schema, const IpcWriteOptions &amp;options)</argsstring>
        <name>Open</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1ipc_1_1_ipc_write_options" kindref="compound">IpcWriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="370" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Synchronous batch stream writer that writes the Arrow streaming format. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3887">
        <label>arrow::ipc::RecordBatchStreamWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_writer"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3889">
        <label>arrow::ipc::RecordBatchFileWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_file_writer"/>
        <childnode refid="3887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3888">
        <label>arrow::ipc::RecordBatchWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_writer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3890">
        <label>arrow::ipc::RecordBatchStreamWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_writer"/>
        <childnode refid="3891" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3891">
        <label>arrow::ipc::RecordBatchWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_writer"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/ipc/writer.h" line="346" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/writer.h" bodystart="346" bodyend="373"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1706dac64039b5e46bf03458d65ed1a" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>Close</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_writer_1afa77ce400799a9e9820825b38722b8de" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_writer_1a2f86078fb4efc9e243fc4bbc1141dcdb" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_writer_1abcf1a2f78d1bba19881b59c08a217e38" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac8080471d5fccf8a486955932a3965ed" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>set_memory_pool</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1a9f8bf7d6a2fa74a05e345097aa171e6e" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>WriteRecordBatch</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1d588a01d6e03df40baa283d207d00c" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1af1d2049d61c5d3e18ccdd3001d104982" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac1eab409618a90045b1bba229d401f28" prot="public" virt="virtual"><scope>arrow::ipc::RecordBatchStreamWriter</scope><name>~RecordBatchWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
