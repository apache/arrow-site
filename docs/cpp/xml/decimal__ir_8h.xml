<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="decimal__ir_8h" kind="file" language="C++">
    <compoundname>decimal_ir.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="function__ir__builder_8h" local="yes">gandiva/function_ir_builder.h</includes>
    <incdepgraph>
      <node id="15194">
        <label>atomic</label>
      </node>
      <node id="15179">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
      </node>
      <node id="15189">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="15171">
        <label>gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15172" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15174" relation="include">
        </childnode>
        <childnode refid="15185" relation="include">
        </childnode>
        <childnode refid="15190" relation="include">
        </childnode>
        <childnode refid="15237" relation="include">
        </childnode>
        <childnode refid="15184" relation="include">
        </childnode>
      </node>
      <node id="15187">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="15213">
        <label>limits</label>
      </node>
      <node id="15225">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15214" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15206" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15226" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15188">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="15170">
        <label>cstdint</label>
      </node>
      <node id="15227">
        <label>arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15213" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15228" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15225" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15205" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15217" relation="include">
        </childnode>
      </node>
      <node id="15214">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15215" relation="include">
        </childnode>
        <childnode refid="15216" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15217" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15207">
        <label>endian.h</label>
      </node>
      <node id="15231">
        <label>arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15196" relation="include">
        </childnode>
      </node>
      <node id="15186">
        <label>llvm/ExecutionEngine/ExecutionEngine.h</label>
      </node>
      <node id="15175">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15177" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15179" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15181" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15169">
        <label>gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15171" relation="include">
        </childnode>
        <childnode refid="15239" relation="include">
        </childnode>
        <childnode refid="15190" relation="include">
        </childnode>
      </node>
      <node id="15219">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="15220" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
      </node>
      <node id="15200">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15212">
        <label>cmath</label>
      </node>
      <node id="15211">
        <label>cassert</label>
      </node>
      <node id="15201">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
      </node>
      <node id="15233">
        <label>arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15231" relation="include">
        </childnode>
      </node>
      <node id="15228">
        <label>numeric</label>
      </node>
      <node id="15167">
        <label>string</label>
      </node>
      <node id="15218">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="15195">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15177" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15202">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="15203" relation="include">
        </childnode>
      </node>
      <node id="15191">
        <label>map</label>
      </node>
      <node id="15185">
        <label>gandiva/llvm_includes.h</label>
        <link refid="llvm__includes_8h"/>
        <childnode refid="15186" relation="include">
        </childnode>
        <childnode refid="15187" relation="include">
        </childnode>
        <childnode refid="15188" relation="include">
        </childnode>
        <childnode refid="15189" relation="include">
        </childnode>
      </node>
      <node id="15240">
        <label>unordered_set</label>
      </node>
      <node id="15204">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15182">
        <label>ostream</label>
      </node>
      <node id="15232">
        <label>arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="15213" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15225" relation="include">
        </childnode>
      </node>
      <node id="15174">
        <label>gandiva/configuration.h</label>
        <link refid="configuration_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15184" relation="include">
        </childnode>
      </node>
      <node id="15183">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="15222">
        <label>arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15223" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15227" relation="include">
        </childnode>
        <childnode refid="15229" relation="include">
        </childnode>
        <childnode refid="15230" relation="include">
        </childnode>
        <childnode refid="15232" relation="include">
        </childnode>
        <childnode refid="15231" relation="include">
        </childnode>
        <childnode refid="15233" relation="include">
        </childnode>
        <childnode refid="15234" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15238">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15182" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15190">
        <label>gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="15191" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15192" relation="include">
        </childnode>
        <childnode refid="15185" relation="include">
        </childnode>
        <childnode refid="15237" relation="include">
        </childnode>
        <childnode refid="15184" relation="include">
        </childnode>
      </node>
      <node id="15215">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15216" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15179" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15235">
        <label>arrow/pretty_print.h</label>
        <link refid="pretty__print_8h"/>
        <childnode refid="15177" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15206">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="15207" relation="include">
        </childnode>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15209" relation="include">
        </childnode>
        <childnode refid="15210" relation="include">
        </childnode>
        <childnode refid="15211" relation="include">
        </childnode>
        <childnode refid="15212" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15213" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15214" relation="include">
        </childnode>
        <childnode refid="15198" relation="include">
        </childnode>
        <childnode refid="15179" relation="include">
        </childnode>
        <childnode refid="15219" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15181" relation="include">
        </childnode>
        <childnode refid="15217" relation="include">
        </childnode>
        <childnode refid="15221" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15230">
        <label>arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15223" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15231" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
      </node>
      <node id="15210">
        <label>bitset</label>
      </node>
      <node id="15220">
        <label>tuple</label>
      </node>
      <node id="15192">
        <label>gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
        <childnode refid="15222" relation="include">
        </childnode>
        <childnode refid="15235" relation="include">
        </childnode>
        <childnode refid="15236" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15196" relation="include">
        </childnode>
      </node>
      <node id="15237">
        <label>gandiva/logging.h</label>
        <link refid="gandiva_2logging_8h"/>
        <childnode refid="15238" relation="include">
        </childnode>
      </node>
      <node id="15223">
        <label>arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
      </node>
      <node id="15165">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15169" relation="include">
        </childnode>
      </node>
      <node id="15168">
        <label>vector</label>
      </node>
      <node id="15224">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="15208" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15213" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15225" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15196" relation="include">
        </childnode>
        <childnode refid="15205" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15221" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15229">
        <label>arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15227" relation="include">
        </childnode>
      </node>
      <node id="15199">
        <label>new</label>
      </node>
      <node id="15178">
        <label>utility</label>
      </node>
      <node id="15217">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15218" relation="include">
        </childnode>
      </node>
      <node id="15209">
        <label>array</label>
      </node>
      <node id="15205">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15206" relation="include">
        </childnode>
      </node>
      <node id="15236">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15198" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15216">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="15177">
        <label>iosfwd</label>
      </node>
      <node id="15193">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="15194" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15177" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15195" relation="include">
        </childnode>
        <childnode refid="15196" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15205" relation="include">
        </childnode>
        <childnode refid="15206" relation="include">
        </childnode>
        <childnode refid="15201" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15217" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15203">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="15198">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="15199" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15175" relation="include">
        </childnode>
        <childnode refid="15179" relation="include">
        </childnode>
      </node>
      <node id="15197">
        <label>climits</label>
      </node>
      <node id="15226">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="15176" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15180" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
      </node>
      <node id="15184">
        <label>gandiva/visibility.h</label>
        <link refid="gandiva_2visibility_8h"/>
      </node>
      <node id="15196">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="15194" relation="include">
        </childnode>
        <childnode refid="15197" relation="include">
        </childnode>
        <childnode refid="15170" relation="include">
        </childnode>
        <childnode refid="15177" relation="include">
        </childnode>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15198" relation="include">
        </childnode>
        <childnode refid="15200" relation="include">
        </childnode>
        <childnode refid="15201" relation="include">
        </childnode>
        <childnode refid="15173" relation="include">
        </childnode>
        <childnode refid="15202" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
        <childnode refid="15204" relation="include">
        </childnode>
      </node>
      <node id="15180">
        <label>type_traits</label>
      </node>
      <node id="15172">
        <label>set</label>
      </node>
      <node id="15239">
        <label>gandiva/gandiva_aliases.h</label>
        <link refid="gandiva__aliases_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15240" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
      </node>
      <node id="15208">
        <label>algorithm</label>
      </node>
      <node id="15176">
        <label>cstring</label>
      </node>
      <node id="15181">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15182" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15183" relation="include">
        </childnode>
      </node>
      <node id="15166">
        <label>memory</label>
      </node>
      <node id="15234">
        <label>arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="15166" relation="include">
        </childnode>
        <childnode refid="15167" relation="include">
        </childnode>
        <childnode refid="15178" relation="include">
        </childnode>
        <childnode refid="15168" relation="include">
        </childnode>
        <childnode refid="15193" relation="include">
        </childnode>
        <childnode refid="15224" relation="include">
        </childnode>
        <childnode refid="15225" relation="include">
        </childnode>
      </node>
      <node id="15173">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="15170" relation="include">
        </childnode>
      </node>
      <node id="15221">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="15180" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classgandiva_1_1_decimal_i_r" prot="public">gandiva::DecimalIR</innerclass>
    <innerclass refid="classgandiva_1_1_decimal_i_r_1_1_value_full" prot="private">gandiva::DecimalIR::ValueFull</innerclass>
    <innerclass refid="classgandiva_1_1_decimal_i_r_1_1_value_with_overflow" prot="private">gandiva::DecimalIR::ValueWithOverflow</innerclass>
    <innerclass refid="classgandiva_1_1_decimal_i_r_1_1_value_split" prot="private">gandiva::DecimalIR::ValueSplit</innerclass>
    <innernamespace refid="namespacegandiva">gandiva</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="function__ir__builder_8h" kindref="compound">gandiva/function_ir_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva" kindref="compound">gandiva</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classgandiva_1_1_decimal_i_r" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_function_i_r_builder" kindref="compound">FunctionIRBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classgandiva_1_1_decimal_i_r_1a0fdb6acce34a3a5165ee940f3efef35b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_decimal_i_r_1a0fdb6acce34a3a5165ee940f3efef35b" kindref="member">DecimalIR</ref>(<ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref>*<sp/>engine)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_function_i_r_builder" kindref="compound">FunctionIRBuilder</ref>(engine),<sp/>enable_ir_traces_(false)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_decimal_i_r_1a6e7cf6816e4ebd9f9870277cd3f994f6" kindref="member">AddFunctions</ref>(<ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref>*<sp/>engine);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classgandiva_1_1_decimal_i_r_1ae2eab72c23528235c03064733a7c44c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_decimal_i_r_1ae2eab72c23528235c03064733a7c44c7" kindref="member">EnableTraces</ref>()<sp/>{<sp/>enable_ir_traces_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/><ref refid="classgandiva_1_1_decimal_i_r_1ad08160fdc89828a2a034becb6f382f50" kindref="member">CallDecimalFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>function_name,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Type*<sp/>return_type,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;llvm::Value*&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kUseOverflowIntrinsics<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Holder<sp/>for<sp/>an<sp/>i128<sp/>value,<sp/>along<sp/>with<sp/>its<sp/>with<sp/>scale<sp/>and<sp/>precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueFull<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueFull(llvm::Value*<sp/>value,<sp/>llvm::Value*<sp/>precision,<sp/>llvm::Value*<sp/>scale)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value_(value),<sp/>precision_(precision),<sp/>scale_(scale)<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>precision()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>precision_;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>scale()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scale_;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>value_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>precision_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>scale_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Holder<sp/>for<sp/>an<sp/>i128<sp/>value,<sp/>and<sp/>a<sp/>boolean<sp/>indicating<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueWithOverflow<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueWithOverflow(llvm::Value*<sp/>value,<sp/>llvm::Value*<sp/>overflow)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value_(value),<sp/>overflow_(overflow)<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>from<sp/>IR<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueWithOverflow<sp/>MakeFromStruct(<ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref>*<sp/>decimal_ir,<sp/>llvm::Value*<sp/>dstruct);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>corresponding<sp/>IR<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>AsStruct(<ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref>*<sp/>decimal_ir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>overflow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overflow_;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>value_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>overflow_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Holder<sp/>for<sp/>an<sp/>i128<sp/>value<sp/>that<sp/>is<sp/>split<sp/>into<sp/>two<sp/>i64s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueSplit<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueSplit(llvm::Value*<sp/>high,<sp/>llvm::Value*<sp/>low)<sp/>:<sp/>high_(high),<sp/>low_(low)<sp/>{}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>from<sp/>i128<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueSplit<sp/>MakeFromInt128(<ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref>*<sp/>decimal_ir,<sp/>llvm::Value*<sp/>in);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>from<sp/>IR<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueSplit<sp/>MakeFromStruct(<ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref>*<sp/>decimal_ir,<sp/>llvm::Value*<sp/>dstruct);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>the<sp/>two<sp/>parts<sp/>into<sp/>an<sp/>i128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>AsInt128(<ref refid="classgandiva_1_1_decimal_i_r" kindref="compound">DecimalIR</ref>*<sp/>decimal_ir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>high()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>high_;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>low()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>low_;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>high_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>low_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>global<sp/>variables<sp/>to<sp/>the<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddGlobals(<ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref>*<sp/>engine);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>intrinsic<sp/>functions<sp/>that<sp/>are<sp/>used<sp/>by<sp/>decimal<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitializeIntrinsics();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>IR<sp/>builder<sp/>for<sp/>decimal<sp/>add<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>MakeAdd(<ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref>*<sp/>engine,<sp/>std::shared_ptr&lt;FunctionIRBuilder&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>multiplier<sp/>for<sp/>specified<sp/>scale<sp/>(i.e<sp/>10^scale)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetScaleMultiplier(llvm::Value*<sp/>scale);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>higher<sp/>of<sp/>the<sp/>two<sp/>scales</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetHigherScale(llvm::Value*<sp/>x_scale,<sp/>llvm::Value*<sp/>y_scale);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>scale<sp/>of<sp/>&apos;in_value&apos;<sp/>by<sp/>&apos;increase_scale_by&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>&apos;increase_scale_by&apos;<sp/>is<sp/>&lt;=<sp/>0,<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>IncreaseScale(llvm::Value*<sp/>in_value,<sp/>llvm::Value*<sp/>increase_scale_by);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>IncreaseScale.<sp/>but,<sp/>also<sp/>check<sp/>if<sp/>there<sp/>is<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>ValueWithOverflow<sp/>IncreaseScaleWithOverflowCheck(llvm::Value*<sp/>in_value,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Value*<sp/>increase_scale_by);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>scale<sp/>of<sp/>&apos;in_value&apos;<sp/>by<sp/>&apos;reduce_scale_by&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>&apos;reduce_scale_by&apos;<sp/>is<sp/>&lt;=<sp/>0,<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>ReduceScale(llvm::Value*<sp/>in_value,<sp/>llvm::Value*<sp/>reduce_scale_by);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>path<sp/>of<sp/>add:<sp/>guaranteed<sp/>no<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>AddFastPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>y);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>AddFastPath,<sp/>but<sp/>check<sp/>if<sp/>there&apos;s<sp/>an<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>ValueWithOverflow<sp/>AddWithOverflowCheck(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>y,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>out);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>addition<sp/>of<sp/>large<sp/>integers<sp/>(both<sp/>positive<sp/>and<sp/>negative).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>AddLarge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueFull&amp;<sp/>out);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>combined<sp/>overflow<sp/>(logical<sp/>or).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetCombinedOverflow(std::vector&lt;ValueWithOverflow&gt;<sp/>values);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>function<sp/>for<sp/>adding<sp/>decimals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildAdd();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>function<sp/>for<sp/>decimal<sp/>subtraction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildSubtract();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>function<sp/>for<sp/>decimal<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildMultiply();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>function<sp/>for<sp/>decimal<sp/>division/mod.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildDivideOrMod(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>function_name,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>internal_name);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildCompare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>function_name,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::ICmpInst::Predicate<sp/>cmp_instruction);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BuildDecimalFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>function_name,<sp/>llvm::Type*<sp/>return_type,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;NamedArg&gt;<sp/>in_types);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>trace<sp/>in<sp/>IR<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddTrace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fmt,<sp/>std::vector&lt;llvm::Value*&gt;<sp/>args);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>trace<sp/>msg<sp/>along<sp/>with<sp/>a<sp/>32-bit<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddTrace32(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/>llvm::Value*<sp/>value);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>trace<sp/>msg<sp/>along<sp/>with<sp/>a<sp/>128-bit<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddTrace128(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/>llvm::Value*<sp/>value);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>of<sp/>the<sp/>global<sp/>variable<sp/>having<sp/>the<sp/>array<sp/>of<sp/>scale<sp/>multipliers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>kScaleMultipliersName;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Intrinsic<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>llvm::Function*<sp/>sadd_with_overflow_fn_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>llvm::Function*<sp/>smul_with_overflow_fn_;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>struct<sp/>{<sp/>i128:<sp/>value,<sp/>i1:<sp/>overflow}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>llvm::Type*<sp/>i128_with_overflow_struct_type_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>set<sp/>to<sp/>true,<sp/>ir<sp/>traces<sp/>are<sp/>enabled.<sp/>Useful<sp/>for<sp/>debugging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_ir_traces_;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gandiva</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/decimal_ir.h"/>
  </compounddef>
</doxygen>
