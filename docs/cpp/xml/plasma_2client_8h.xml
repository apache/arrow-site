<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="plasma_2client_8h" kind="file" language="C++">
    <compoundname>client.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="buffer_8h" local="yes">arrow/buffer.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includes refid="plasma_2common_8h" local="yes">plasma/common.h</includes>
    <includedby refid="external__store_8h" local="yes">/arrow/cpp/src/plasma/external_store.h</includedby>
    <incdepgraph>
      <node id="7429">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7422" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
      </node>
      <node id="7415">
        <label>functional</label>
      </node>
      <node id="7414">
        <label>/arrow/cpp/src/plasma/client.h</label>
        <link refid="plasma_2client_8h"/>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
        <childnode refid="7436" relation="include">
        </childnode>
      </node>
      <node id="7420">
        <label>cstdint</label>
      </node>
      <node id="7419">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7422" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7430">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7429" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7426">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7417">
        <label>string</label>
      </node>
      <node id="7435">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="7437">
        <label>stddef.h</label>
      </node>
      <node id="7433">
        <label>ostream</label>
      </node>
      <node id="7428">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="7424">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7429" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7418">
        <label>vector</label>
      </node>
      <node id="7423">
        <label>utility</label>
      </node>
      <node id="7434">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
      </node>
      <node id="7425">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="7431">
        <label>iosfwd</label>
      </node>
      <node id="7439">
        <label>plasma/compat.h</label>
        <link refid="compat_8h"/>
      </node>
      <node id="7438">
        <label>unordered_map</label>
      </node>
      <node id="7422">
        <label>type_traits</label>
      </node>
      <node id="7436">
        <label>plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7438" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7430" relation="include">
        </childnode>
      </node>
      <node id="7421">
        <label>cstring</label>
      </node>
      <node id="7432">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7416">
        <label>memory</label>
      </node>
      <node id="7427">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7440">
        <label>/arrow/cpp/src/plasma/client.h</label>
        <link refid="plasma_2client_8h"/>
        <childnode refid="7441" relation="include">
        </childnode>
      </node>
      <node id="7442">
        <label>/arrow/cpp/src/plasma/hash_table_store.h</label>
        <link refid="hash__table__store_8h"/>
      </node>
      <node id="7443">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="7441">
        <label>/arrow/cpp/src/plasma/external_store.h</label>
        <link refid="external__store_8h"/>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7443" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structplasma_1_1_object_buffer" prot="public">plasma::ObjectBuffer</innerclass>
    <innerclass refid="classplasma_1_1_plasma_client" prot="public">plasma::PlasmaClient</innerclass>
    <innernamespace refid="namespaceplasma">plasma</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="buffer_8h" kindref="compound">arrow/buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_2common_8h" kindref="compound">plasma/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">arrow::Buffer</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">arrow::Status</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceplasma" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceplasma" kindref="compound">plasma</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structplasma_1_1_object_buffer" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplasma_1_1_object_buffer" kindref="compound">ObjectBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structplasma_1_1_object_buffer_1ace0c6be03d13cc503d665fe976557558" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structplasma_1_1_object_buffer_1ace0c6be03d13cc503d665fe976557558" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="41" refid="structplasma_1_1_object_buffer_1aa02e9306fe2ccd501d2b2d8a0c69a39b" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structplasma_1_1_object_buffer_1aa02e9306fe2ccd501d2b2d8a0c69a39b" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="43" refid="structplasma_1_1_object_buffer_1aea3d531aaf1cce269e6d8227c597d139" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_object_buffer_1aea3d531aaf1cce269e6d8227c597d139" kindref="member">device_num</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classplasma_1_1_plasma_client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classplasma_1_1_plasma_client" kindref="compound">PlasmaClient</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classplasma_1_1_plasma_client" kindref="compound">PlasmaClient</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>~<ref refid="classplasma_1_1_plasma_client" kindref="compound">PlasmaClient</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Connect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>store_socket_name,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>manager_socket_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>release_delay<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_retries<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SetClientOptions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>client_name,<sp/>int64_t<sp/>output_memory_quota);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id,<sp/>int64_t<sp/>data_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="structplasma_1_1_object_buffer_1aa02e9306fe2ccd501d2b2d8a0c69a39b" kindref="member">metadata</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>metadata_size,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/><ref refid="structplasma_1_1_object_buffer_1ace0c6be03d13cc503d665fe976557558" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma_1_1_object_buffer_1aea3d531aaf1cce269e6d8227c597d139" kindref="member">device_num</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>evict_if_full<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CreateAndSeal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>data,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>metadata,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>evict_if_full<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CreateAndSealBatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>object_ids,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>evict_if_full<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>object_ids,<sp/>int64_t<sp/>timeout_ms,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ObjectBuffer&gt;*<sp/>object_buffers);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>*<sp/>object_ids,<sp/>int64_t<sp/>num_objects,<sp/>int64_t<sp/>timeout_ms,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplasma_1_1_object_buffer" kindref="compound">ObjectBuffer</ref>*<sp/>object_buffers);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Release(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>has_object);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>List(<ref refid="namespaceplasma_1a115d6577b87e1cc4d9f547eae6b372d6" kindref="member">ObjectTable</ref>*<sp/>objects);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Abort(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Seal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Delete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Delete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>object_ids);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Evict(int64_t<sp/>num_bytes,<sp/>int64_t&amp;<sp/>num_bytes_evicted);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Refresh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>object_ids);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Hash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id,<sp/>uint8_t*<sp/>digest);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Subscribe(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>fd);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetNotification(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>*<sp/>object_id,<sp/>int64_t*<sp/>data_size,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>metadata_size);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DecodeNotifications(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buffer,<sp/>std::vector&lt;ObjectID&gt;*<sp/>object_ids,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>data_sizes,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>metadata_sizes);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Disconnect();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>std::string<sp/>DebugString();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>int64_t<sp/>store_capacity();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297" refid="classplasma_1_1_plasma_client_1a945695a7b7d9651d598860f906bc43a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PlasmaBuffer;</highlight></codeline>
<codeline lineno="298" refid="classplasma_1_1_plasma_client_1a9302af634bc8dcde2208df01531b9f1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PlasmaMutableBuffer;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestPlasmaStore,<sp/>GetTest);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestPlasmaStore,<sp/>LegacyGetTest);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestPlasmaStore,<sp/>AbortTest);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInUse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>Impl;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>plasma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/plasma/client.h"/>
  </compounddef>
</doxygen>
