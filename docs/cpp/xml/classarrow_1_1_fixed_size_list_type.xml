<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_fixed_size_list_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::FixedSizeListType</compoundname>
    <basecompoundref refid="classarrow_1_1_base_list_type" prot="public" virt="non-virtual">arrow::BaseListType</basecompoundref>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_fixed_size_list_type_1afb8571e18fc3b51ef6f671fffabdea3c" prot="public" static="no">
        <type>int32_t</type>
        <definition>using arrow::FixedSizeListType::offset_type =  int32_t</definition>
        <argsstring></argsstring>
        <name>offset_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="755" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_list_type_1a1bf5da6ca990e27adea4694e09d8a0d2" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref></type>
        <definition>constexpr Type::type arrow::FixedSizeListType::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a870656978bd9028566f88fe1c0afb127" kindref="member">Type::FIXED_SIZE_LIST</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="754" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_list_type_1ac1f5a9867029aebe997907722d66a1d3" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeListType::list_size_</definition>
        <argsstring></argsstring>
        <name>list_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="781" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1a299209d15f5a49e1846a0e3cee985680" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>static constexpr const char* arrow::FixedSizeListType::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="757" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="757" bodyend="757"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1a540da8f0d9bacead007be4ad4803a049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::FixedSizeListType::FixedSizeListType</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;value_type, int32_t list_size)</argsstring>
        <name>FixedSizeListType</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>list_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="760" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="760" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1a58340740db098ec0f42c1e301a0e4d96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::FixedSizeListType::FixedSizeListType</definition>
        <argsstring>(const std::shared_ptr&lt; Field &gt; &amp;value_field, int32_t list_size)</argsstring>
        <name>FixedSizeListType</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> &gt; &amp;</type>
          <declname>value_field</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>list_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="763" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="763" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1a81e0399d0c9af775bdbc05cd72b4b9a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structarrow_1_1_data_type_layout" kindref="compound">DataTypeLayout</ref></type>
        <definition>DataTypeLayout arrow::FixedSizeListType::layout</definition>
        <argsstring>() const override</argsstring>
        <name>layout</name>
        <reimplements refid="classarrow_1_1_data_type_1a4fe70f6a45eda029ea118c8470ff925e">layout</reimplements>
        <briefdescription>
<para>Return the data type layout. </para>        </briefdescription>
        <detaileddescription>
<para>Children are not included.</para><para><simplesect kind="note"><para>Experimental API </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="768" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="768" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1a3f30b717b3fbbf43f95e9aa991fbdcf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::FixedSizeListType::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classarrow_1_1_data_type_1a944727354fb11138ebd46368319598f2">ToString</reimplements>
        <briefdescription>
<para>A string representation of the type, including any children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1aeff3a940628ad39fbf065c8fbb7c00f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::FixedSizeListType::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classarrow_1_1_data_type_1a94985d12273f5dd353d6142921299d4d">name</reimplements>
        <briefdescription>
<para>A string name of the type, omitting any child fields. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental API </para></simplesect>
<simplesect kind="since"><para>0.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="774" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="774" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1ad4548f4e0c6706babea2b47b363cca83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeListType::list_size</definition>
        <argsstring>() const</argsstring>
        <name>list_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="776" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="776" bodyend="776"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_type_1ad65fddf4e8341985a8d4a9a4b1c25632" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::FixedSizeListType::ComputeFingerprint</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeFingerprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="779" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete type class for fixed size list data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1785">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="1782">
        <label>arrow::NestedType</label>
        <link refid="classarrow_1_1_nested_type"/>
        <childnode refid="1783" relation="public-inheritance">
        </childnode>
        <childnode refid="1785" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1783">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1784" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1784">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1780">
        <label>arrow::FixedSizeListType</label>
        <link refid="classarrow_1_1_fixed_size_list_type"/>
        <childnode refid="1781" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1781">
        <label>arrow::BaseListType</label>
        <link refid="classarrow_1_1_base_list_type"/>
        <childnode refid="1782" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1791">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="1788">
        <label>arrow::NestedType</label>
        <link refid="classarrow_1_1_nested_type"/>
        <childnode refid="1789" relation="public-inheritance">
        </childnode>
        <childnode refid="1791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1789">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1790">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1786">
        <label>arrow::FixedSizeListType</label>
        <link refid="classarrow_1_1_fixed_size_list_type"/>
        <childnode refid="1787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1787">
        <label>arrow::BaseListType</label>
        <link refid="classarrow_1_1_base_list_type"/>
        <childnode refid="1788" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/type.h" line="752" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="752" bodyend="782"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>children_</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1ad65fddf4e8341985a8d4a9a4b1c25632" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>DataType</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a540da8f0d9bacead007be4ad4803a049" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>FixedSizeListType</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a58340740db098ec0f42c1e301a0e4d96" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>FixedSizeListType</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>id_</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a81e0399d0c9af775bdbc05cd72b4b9a6" prot="public" virt="virtual"><scope>arrow::FixedSizeListType</scope><name>layout</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1ad4548f4e0c6706babea2b47b363cca83" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>list_size</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1ac1f5a9867029aebe997907722d66a1d3" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>list_size_</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1aeff3a940628ad39fbf065c8fbb7c00f8" prot="public" virt="virtual"><scope>arrow::FixedSizeListType</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1afb8571e18fc3b51ef6f671fffabdea3c" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>offset_type</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a3f30b717b3fbbf43f95e9aa991fbdcf0" prot="public" virt="virtual"><scope>arrow::FixedSizeListType</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a1bf5da6ca990e27adea4694e09d8a0d2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>type_id</name></member>
      <member refid="classarrow_1_1_fixed_size_list_type_1a299209d15f5a49e1846a0e3cee985680" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_base_list_type_1a96796f232e5c1c97fc68ee09dc097446" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>value_field</name></member>
      <member refid="classarrow_1_1_base_list_type_1ad484128f731e55fa51c1f70a704e3857" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>value_type</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListType</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
