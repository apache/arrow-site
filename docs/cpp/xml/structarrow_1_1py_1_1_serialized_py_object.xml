<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1py_1_1_serialized_py_object" kind="struct" language="C++" prot="public">
    <compoundname>arrow::py::SerializedPyObject</compoundname>
    <includes refid="serialize_8h" local="no">arrow/python/serialize.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1a312a710fae394603855035f1fb592fe6" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RecordBatch&gt; arrow::py::SerializedPyObject::batch</definition>
        <argsstring></argsstring>
        <name>batch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="52" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1a35a279cebd8cf555734d57a7da2b2754" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Tensor&gt; &gt; arrow::py::SerializedPyObject::tensors</definition>
        <argsstring></argsstring>
        <name>tensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="53" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1a5f78f4f083f2686b22dea4d03d944c64" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_sparse_tensor" kindref="compound">SparseTensor</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;SparseTensor&gt; &gt; arrow::py::SerializedPyObject::sparse_tensors</definition>
        <argsstring></argsstring>
        <name>sparse_tensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="54" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1aa9bf16c890ab6eaf422569ee0ea3610a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Tensor&gt; &gt; arrow::py::SerializedPyObject::ndarrays</definition>
        <argsstring></argsstring>
        <name>ndarrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="55" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1a609cd686849c57dff6746607e928fe40" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::py::SerializedPyObject::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1py_1_1_serialized_py_object_1a819817b56a8dcd022f27ea61f7081ea1" prot="public" static="no" mutable="no">
        <type><ref refid="structarrow_1_1ipc_1_1_ipc_write_options" kindref="compound">ipc::IpcWriteOptions</ref></type>
        <definition>ipc::IpcWriteOptions arrow::py::SerializedPyObject::ipc_options</definition>
        <argsstring></argsstring>
        <name>ipc_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="57" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1py_1_1_serialized_py_object_1a6b5c41ef5a1f0b5e67409d6e72c4966e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::py::SerializedPyObject::SerializedPyObject</definition>
        <argsstring>()</argsstring>
        <name>SerializedPyObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1py_1_1_serialized_py_object_1a289b1a8956fd83e425655d3769f1cbac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::SerializedPyObject::WriteTo</definition>
        <argsstring>(io::OutputStream *dst)</argsstring>
        <name>WriteTo</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Write serialized Python object to OutputStream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>an OutputStream </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1py_1_1_serialized_py_object_1a66feec2466708fafceb6f84c994405b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::SerializedPyObject::GetComponents</definition>
        <argsstring>(MemoryPool *pool, PyObject **out)</argsstring>
        <name>GetComponents</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Convert <ref refid="structarrow_1_1py_1_1_serialized_py_object" kindref="compound">SerializedPyObject</ref> to a dict containing the message components as <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> instances with minimal memory allocation. </para>        </briefdescription>
        <detaileddescription>
<para>{ &apos;num_tensors&apos;: M, &apos;num_sparse_tensors&apos;: N, &apos;num_buffers&apos;: K, &apos;data&apos;: [<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>] }</para><para>Each tensor is written as two buffers, one for the metadata and one for the body. Therefore, the number of buffers in &apos;data&apos; is 2 * M + 2 * N + K + 1, with the first buffer containing the serialized record batch containing the <ref refid="classarrow_1_1_union_array" kindref="compound">UnionArray</ref> that describes the whole object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/serialize.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4123">
        <label>arrow::py::SerializedPyObject</label>
        <link refid="structarrow_1_1py_1_1_serialized_py_object"/>
        <childnode refid="4124" relation="usage">
          <edgelabel>ipc_options</edgelabel>
        </childnode>
      </node>
      <node id="4125">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="4124">
        <label>arrow::ipc::IpcWriteOptions</label>
        <link refid="structarrow_1_1ipc_1_1_ipc_write_options"/>
        <childnode refid="4125" relation="usage">
          <edgelabel>memory_pool</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/python/serialize.h" line="51" column="1" bodyfile="/arrow/cpp/src/arrow/python/serialize.h" bodystart="51" bodyend="81"/>
    <listofallmembers>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a312a710fae394603855035f1fb592fe6" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>batch</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a609cd686849c57dff6746607e928fe40" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>buffers</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a66feec2466708fafceb6f84c994405b7" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>GetComponents</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a819817b56a8dcd022f27ea61f7081ea1" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>ipc_options</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1aa9bf16c890ab6eaf422569ee0ea3610a" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>ndarrays</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a6b5c41ef5a1f0b5e67409d6e72c4966e" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>SerializedPyObject</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a5f78f4f083f2686b22dea4d03d944c64" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>sparse_tensors</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a35a279cebd8cf555734d57a7da2b2754" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>tensors</name></member>
      <member refid="structarrow_1_1py_1_1_serialized_py_object_1a289b1a8956fd83e425655d3769f1cbac" prot="public" virt="non-virtual"><scope>arrow::py::SerializedPyObject</scope><name>WriteTo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
