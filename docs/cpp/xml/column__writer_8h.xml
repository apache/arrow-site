<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="column__writer_8h" kind="file" language="C++">
    <compoundname>column_writer.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes refid="exception_8h" local="yes">parquet/exception.h</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includedby refid="parquet_2api_2writer_8h" local="yes">/arrow/cpp/src/parquet/api/writer.h</includedby>
    <includedby refid="stream__writer_8h" local="yes">/arrow/cpp/src/parquet/stream_writer.h</includedby>
    <incdepgraph>
      <node id="18974">
        <label>atomic</label>
      </node>
      <node id="18960">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
      </node>
      <node id="18982">
        <label>limits</label>
      </node>
      <node id="18942">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18955" relation="include">
        </childnode>
        <childnode refid="18987" relation="include">
        </childnode>
      </node>
      <node id="18943">
        <label>cstdint</label>
      </node>
      <node id="18956">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18959" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18976">
        <label>endian.h</label>
      </node>
      <node id="18961">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18983">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="18984" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
      </node>
      <node id="18955">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18956" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18968" relation="include">
        </childnode>
        <childnode refid="18973" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18986" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
      </node>
      <node id="18951">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18967">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18959" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18981">
        <label>cmath</label>
      </node>
      <node id="18980">
        <label>cassert</label>
      </node>
      <node id="18972">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
      </node>
      <node id="18949">
        <label>string</label>
      </node>
      <node id="18966">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="18946">
        <label>parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="18947" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18955" relation="include">
        </childnode>
      </node>
      <node id="18947">
        <label>exception</label>
      </node>
      <node id="18964">
        <label>ostream</label>
      </node>
      <node id="18954">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="18958">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18959" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18973">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18975">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="18976" relation="include">
        </childnode>
        <childnode refid="18977" relation="include">
        </childnode>
        <childnode refid="18978" relation="include">
        </childnode>
        <childnode refid="18979" relation="include">
        </childnode>
        <childnode refid="18980" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18956" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18985" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18979">
        <label>bitset</label>
      </node>
      <node id="18984">
        <label>tuple</label>
      </node>
      <node id="18952">
        <label>vector</label>
      </node>
      <node id="18971">
        <label>new</label>
      </node>
      <node id="18950">
        <label>utility</label>
      </node>
      <node id="18965">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18966" relation="include">
        </childnode>
      </node>
      <node id="18978">
        <label>array</label>
      </node>
      <node id="18948">
        <label>sstream</label>
      </node>
      <node id="18968">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18969" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18959">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="18962">
        <label>iosfwd</label>
      </node>
      <node id="18969">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18970">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="18971" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
      </node>
      <node id="18957">
        <label>type_traits</label>
      </node>
      <node id="18986">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18977">
        <label>algorithm</label>
      </node>
      <node id="18988">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18944">
        <label>cstring</label>
      </node>
      <node id="18987">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="18977" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18988" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18955" relation="include">
        </childnode>
      </node>
      <node id="18963">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18964" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
      </node>
      <node id="18945">
        <label>memory</label>
      </node>
      <node id="18953">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="18943" relation="include">
        </childnode>
      </node>
      <node id="18985">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="18957" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18990">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="18989">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="18990" relation="include">
        </childnode>
        <childnode refid="18991" relation="include">
        </childnode>
      </node>
      <node id="18992">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="18991">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="18992" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_level_encoder" prot="public">parquet::LevelEncoder</innerclass>
    <innerclass refid="classparquet_1_1_page_writer" prot="public">parquet::PageWriter</innerclass>
    <innerclass refid="classparquet_1_1_column_writer" prot="public">parquet::ColumnWriter</innerclass>
    <innerclass refid="classparquet_1_1_typed_column_writer" prot="public">parquet::TypedColumnWriter</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1util">arrow::util</innernamespace>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8h" kindref="compound">parquet/exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Array;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow_1_1_bit_util" kindref="compound">BitUtil</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BitWriter;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>BitUtil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RleEncoder;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ArrowWriteContext;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnDescriptor;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataPage;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryPage;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnChunkMetaDataBuilder;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Encryptor;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WriterProperties;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classparquet_1_1_level_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_level_encoder" kindref="compound">LevelEncoder</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_level_encoder" kindref="compound">LevelEncoder</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_level_encoder" kindref="compound">LevelEncoder</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxBufferSize(<ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,<sp/>int16_t<sp/>max_level,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_buffered_values);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>LevelEncoder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init(<ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,<sp/>int16_t<sp/>max_level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_buffered_values,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_size);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Encodes<sp/>a<sp/>batch<sp/>of<sp/>levels<sp/>from<sp/>an<sp/>array<sp/>and<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>levels<sp/>encoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Encode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>levels);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classparquet_1_1_level_encoder_1a510a14e96e8b9ccbf7f6cb122a68950e" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="classparquet_1_1_level_encoder_1a510a14e96e8b9ccbf7f6cb122a68950e" kindref="member">len</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoding_<sp/>!=<sp/>Encoding::RLE)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(</highlight><highlight class="stringliteral">&quot;Only<sp/>implemented<sp/>for<sp/>RLE<sp/>encoding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rle_length_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_width_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rle_length_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding_;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;::arrow::util::RleEncoder&gt;<sp/>rle_encoder_;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;::arrow::BitUtil::BitWriter&gt;<sp/>bit_packed_encoder_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classparquet_1_1_page_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_page_writer" kindref="compound">PageWriter</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="classparquet_1_1_page_writer_1a2223c7461a013d75f63b2e24afdadca5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_page_writer_1a2223c7461a013d75f63b2e24afdadca5" kindref="member">~PageWriter</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;PageWriter&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArrowOutputStream&gt;<sp/>sink,<sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>codec,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compression_level,<sp/><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>*<sp/>metadata,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>row_group_ordinal<sp/>=<sp/>-1,<sp/>int16_t<sp/>column_chunk_ordinal<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>(),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>buffered_row_group<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Encryptor&gt;<sp/>header_encryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Encryptor&gt;<sp/>data_encryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Column<sp/>Writer<sp/>decides<sp/>if<sp/>dictionary<sp/>encoding<sp/>is<sp/>used<sp/>if<sp/>set<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>dictionary<sp/>encoding<sp/>has<sp/>fallen<sp/>back<sp/>to<sp/>default<sp/>encoding<sp/>on<sp/>reaching<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>page<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Close(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_dictionary,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fallback)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>WriteDataPage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_data_page" kindref="compound">DataPage</ref>&amp;<sp/>page)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>WriteDictionaryPage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_dictionary_page" kindref="compound">DictionaryPage</ref>&amp;<sp/>page)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_compressor()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Compress(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>src_buffer,<sp/><ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref>*<sp/>dest_buffer)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WRITE_BATCH_SIZE<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="110" refid="classparquet_1_1_column_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ColumnWriter&gt;<sp/>Make(<ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>*,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;PageWriter&gt;,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref>*<sp/>properties);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>Close()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>rows_written()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>total_compressed_bytes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>total_bytes_written()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref>*<sp/>properties()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">virtual ::arrow::Status</ref><sp/>WriteArrow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>def_levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>rep_levels,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>num_levels,<sp/>const<sp/>::arrow::Array&amp;<sp/>array,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_arrow_write_context" kindref="compound">ArrowWriteContext</ref>*<sp/>ctx)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>to<sp/>write<sp/>values<sp/>to<sp/>a<sp/>single<sp/>column.<sp/>This<sp/>is<sp/>the<sp/>main<sp/>client<sp/>facing<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="152" refid="classparquet_1_1_typed_column_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154" refid="classparquet_1_1_typed_column_writer_1a42e665a1b2612ba42760550a555b7b97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer_1a42e665a1b2612ba42760550a555b7b97" kindref="member">T</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>batch<sp/>of<sp/>repetition<sp/>levels,<sp/>definition<sp/>levels,<sp/>and<sp/>values<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteBatch(int64_t<sp/>num_values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>def_levels,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>rep_levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer_1a42e665a1b2612ba42760550a555b7b97" kindref="member">T</ref>*<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteBatchSpaced(int64_t<sp/>num_values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>def_levels,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t*<sp/>rep_levels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer_1a42e665a1b2612ba42760550a555b7b97" kindref="member">T</ref>*<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimated<sp/>size<sp/>of<sp/>the<sp/>values<sp/>that<sp/>are<sp/>not<sp/>written<sp/>to<sp/>a<sp/>page<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>EstimatedBufferedValueBytes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="namespaceparquet_1a40102cfb760c50132f8c9d4cd3c80e47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">BoolWriter</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;BooleanType&gt;</ref>;</highlight></codeline>
<codeline lineno="196" refid="namespaceparquet_1a136e073503ae0f2b0c8b7fa3578ca5bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">Int32Writer</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="197" refid="namespaceparquet_1a333238294a4d3102458284a814c526fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">Int64Writer</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="198" refid="namespaceparquet_1a967ef1f65b306f8bf6a432184df715cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">Int96Writer</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;Int96Type&gt;</ref>;</highlight></codeline>
<codeline lineno="199" refid="namespaceparquet_1ad133e8b2657f057e3166cdf724b350d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">FloatWriter</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="200" refid="namespaceparquet_1a65084149c6295f93c0bb6eb485bd8730" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">DoubleWriter</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="201" refid="namespaceparquet_1ab5a8d7a6a29cbfdd95ae84074248af95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">ByteArrayWriter</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;ByteArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="202" refid="namespaceparquet_1aecb88c5cd46826b8252549726497fb37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">FixedLenByteArrayWriter</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_column_writer" kindref="compound">TypedColumnWriter&lt;FLBAType&gt;</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">constexpr<sp/>int64_t<sp/>kJulianEpochOffsetDays<sp/>=<sp/>INT64_C(2440588);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">64_t<sp/>UnitPerDay,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">64_t<sp/>NanosecondsPerUnit&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ArrowTimestampToImpalaTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>time,<sp/>Int96*<sp/>impala_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>int64_t<sp/>julian_days<sp/>=<sp/>(time<sp/>/<sp/>UnitPerDay)<sp/>+<sp/>kJulianEpochOffsetDays;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>(*impala_timestamp).value[2]<sp/>=<sp/>(uint32_t)julian_days;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>int64_t<sp/>last_day_units<sp/>=<sp/>time<sp/>%<sp/>UnitPerDay;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_day_nanos<sp/>=<sp/>last_day_units<sp/>*<sp/>NanosecondsPerUnit;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>impala_timestamp<sp/>will<sp/>be<sp/>unaligned<sp/>every<sp/>other<sp/>entry<sp/>so<sp/>do<sp/>memcpy<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>assign<sp/>and<sp/>reinterpret<sp/>cast<sp/>to<sp/>avoid<sp/>undefined<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>std::memcpy(impala_timestamp,<sp/>&amp;last_day_nanos,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">constexpr<sp/>int64_t<sp/>kSecondsInNanos<sp/>=<sp/>INT64_C(1000000000);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SecondsToImpalaTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>seconds,<sp/>Int96*<sp/>impala_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>ArrowTimestampToImpalaTimestamp&lt;kSecondsPerDay,<sp/>kSecondsInNanos&gt;(seconds,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impala_timestamp);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">constexpr<sp/>int64_t<sp/>kMillisecondsInNanos<sp/>=<sp/>kSecondsInNanos<sp/>/<sp/>INT64_C(1000);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MillisecondsToImpalaTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>milliseconds,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int96*<sp/>impala_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>ArrowTimestampToImpalaTimestamp&lt;kMillisecondsPerDay,<sp/>kMillisecondsInNanos&gt;(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>milliseconds,<sp/>impala_timestamp);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">constexpr<sp/>int64_t<sp/>kMicrosecondsInNanos<sp/>=<sp/>kMillisecondsInNanos<sp/>/<sp/>INT64_C(1000);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MicrosecondsToImpalaTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>microseconds,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int96*<sp/>impala_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>ArrowTimestampToImpalaTimestamp&lt;kMicrosecondsPerDay,<sp/>kMicrosecondsInNanos&gt;(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>microseconds,<sp/>impala_timestamp);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">constexpr<sp/>int64_t<sp/>kNanosecondsInNanos<sp/>=<sp/>INT64_C(1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NanosecondsToImpalaTimestamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>nanoseconds,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int96*<sp/>impala_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>ArrowTimestampToImpalaTimestamp&lt;kNanosecondsPerDay,<sp/>kNanosecondsInNanos&gt;(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds,<sp/>impala_timestamp);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/column_writer.h"/>
  </compounddef>
</doxygen>
