<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_statistics" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::Statistics</compoundname>
    <derivedcompoundref refid="classparquet_1_1_typed_statistics" prot="public" virt="non-virtual">parquet::TypedStatistics&lt; DType &gt;</derivedcompoundref>
    <includes refid="statistics_8h" local="no">parquet/statistics.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_statistics_1aa735e26ab79c5230e7a17ab802b238cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::Statistics::~Statistics</definition>
        <argsstring>()</argsstring>
        <name>~Statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="190" column="1" bodyfile="/arrow/cpp/src/parquet/statistics.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a9d136f41062589b47a63b4a434af5dc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::Statistics::null_count</definition>
        <argsstring>() const =0</argsstring>
        <name>null_count</name>
        <briefdescription>
<para>The number of null values, may not be set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1ac8c774a70839963fd3c595a0d501bbff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::Statistics::distinct_count</definition>
        <argsstring>() const =0</argsstring>
        <name>distinct_count</name>
        <briefdescription>
<para>The number of distinct values, may not be set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a5ad981957c2a2cfa0e1e4f390ee935d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::Statistics::num_values</definition>
        <argsstring>() const =0</argsstring>
        <name>num_values</name>
        <briefdescription>
<para>The total number of values in the column. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a88e517ae82719e349d42386aea1a0296" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool parquet::Statistics::HasMinMax</definition>
        <argsstring>() const =0</argsstring>
        <name>HasMinMax</name>
        <briefdescription>
<para>Return true if the min and max statistics are set. </para>        </briefdescription>
        <detaileddescription>
<para>Obtain with <ref refid="classparquet_1_1_typed_statistics_1a92f6c4c689ecf4a0c1596bc78f445f91" kindref="member">TypedStatistics&lt;T&gt;::min</ref> and max </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a7b4c6de2c4d0e88cf2adbf37690d9349" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::Statistics::Reset</definition>
        <argsstring>()=0</argsstring>
        <name>Reset</name>
        <briefdescription>
<para>Reset state of object to initial (no data observed) state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a82692230085c8941e521516c460c7078" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string parquet::Statistics::EncodeMin</definition>
        <argsstring>()=0</argsstring>
        <name>EncodeMin</name>
        <briefdescription>
<para>Plain-encoded minimum value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1ac5141ac692c5564ae133dd99c15319d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string parquet::Statistics::EncodeMax</definition>
        <argsstring>()=0</argsstring>
        <name>EncodeMax</name>
        <briefdescription>
<para>Plain-encoded maximum value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1ae1c78b2339acf69f2869b9ee1b0eebee" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref></type>
        <definition>virtual EncodedStatistics parquet::Statistics::Encode</definition>
        <argsstring>()=0</argsstring>
        <name>Encode</name>
        <briefdescription>
<para>The finalized encoded form of the statistics for transport. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a1538440c9c1fbb538c63f6c0120bce06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
        <definition>virtual Type::type parquet::Statistics::physical_type</definition>
        <argsstring>() const =0</argsstring>
        <name>physical_type</name>
        <briefdescription>
<para>The physical type of the column schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a9bf46bdc28e20117a248dbc63f75aaf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
        <definition>virtual const ColumnDescriptor* parquet::Statistics::descr</definition>
        <argsstring>() const =0</argsstring>
        <name>descr</name>
        <briefdescription>
<para>The full type descriptor from the column schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_statistics_1a7497a193b1c6c8ba5bdac15c7acc658c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;Statistics&gt; parquet::Statistics::Make</definition>
        <argsstring>(const ColumnDescriptor *descr, ::arrow::MemoryPool *pool=::arrow::default_memory_pool())</argsstring>
        <name>Make</name>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a new statistics instance given a column schema definition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descr</parametername>
</parameternamelist>
<parameterdescription>
<para>the column schema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a memory pool to use for any memory allocations, optional </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_statistics_1a61823a2a3462530050d22e5dacbab10d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;Statistics&gt; parquet::Statistics::Make</definition>
        <argsstring>(const ColumnDescriptor *descr, const std::string &amp;encoded_min, const std::string &amp;encoded_max, int64_t num_values, int64_t null_count, int64_t distinct_count, bool has_min_max, ::arrow::MemoryPool *pool=::arrow::default_memory_pool())</argsstring>
        <name>Make</name>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoded_min</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoded_max</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>null_count</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>distinct_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_min_max</declname>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a new statistics instance given a column schema definition and pre-existing state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descr</parametername>
</parameternamelist>
<parameterdescription>
<para>the column schema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">encoded_min</parametername>
</parameternamelist>
<parameterdescription>
<para>the encoded minimum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">encoded_max</parametername>
</parameternamelist>
<parameterdescription>
<para>the encoded maximum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_values</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">null_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of null values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">distinct_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of distinct values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">has_min_max</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the min/max statistics are set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a memory pool to use for any memory allocations, optional </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="210" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classparquet_1_1_statistics_1aa631447a6b6f48b90437c4639667997c" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;Statistics&gt; parquet::Statistics::Make</definition>
        <argsstring>(Type::type physical_type, const void *min, const void *max, int64_t num_values, int64_t null_count, int64_t distinct_count)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
          <declname>physical_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>null_count</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>distinct_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/statistics.h" line="248" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base type for computing column statistics while writing a file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4282">
        <label>parquet::Statistics</label>
        <link refid="classparquet_1_1_statistics"/>
      </node>
      <node id="4283">
        <label>parquet::TypedStatistics&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_statistics"/>
        <childnode refid="4282" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/parquet/statistics.h" line="188" column="1" bodyfile="/arrow/cpp/src/parquet/statistics.h" bodystart="188" bodyend="251"/>
    <listofallmembers>
      <member refid="classparquet_1_1_statistics_1a9bf46bdc28e20117a248dbc63f75aaf6" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>descr</name></member>
      <member refid="classparquet_1_1_statistics_1ac8c774a70839963fd3c595a0d501bbff" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>distinct_count</name></member>
      <member refid="classparquet_1_1_statistics_1ae1c78b2339acf69f2869b9ee1b0eebee" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>Encode</name></member>
      <member refid="classparquet_1_1_statistics_1ac5141ac692c5564ae133dd99c15319d8" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>EncodeMax</name></member>
      <member refid="classparquet_1_1_statistics_1a82692230085c8941e521516c460c7078" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>EncodeMin</name></member>
      <member refid="classparquet_1_1_statistics_1a88e517ae82719e349d42386aea1a0296" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>HasMinMax</name></member>
      <member refid="classparquet_1_1_statistics_1a7497a193b1c6c8ba5bdac15c7acc658c" prot="public" virt="non-virtual"><scope>parquet::Statistics</scope><name>Make</name></member>
      <member refid="classparquet_1_1_statistics_1a61823a2a3462530050d22e5dacbab10d" prot="public" virt="non-virtual"><scope>parquet::Statistics</scope><name>Make</name></member>
      <member refid="classparquet_1_1_statistics_1aa631447a6b6f48b90437c4639667997c" prot="protected" virt="non-virtual"><scope>parquet::Statistics</scope><name>Make</name></member>
      <member refid="classparquet_1_1_statistics_1a9d136f41062589b47a63b4a434af5dc2" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>null_count</name></member>
      <member refid="classparquet_1_1_statistics_1a5ad981957c2a2cfa0e1e4f390ee935d2" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>num_values</name></member>
      <member refid="classparquet_1_1_statistics_1a1538440c9c1fbb538c63f6c0120bce06" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>physical_type</name></member>
      <member refid="classparquet_1_1_statistics_1a7b4c6de2c4d0e88cf2adbf37690d9349" prot="public" virt="pure-virtual"><scope>parquet::Statistics</scope><name>Reset</name></member>
      <member refid="classparquet_1_1_statistics_1aa735e26ab79c5230e7a17ab802b238cb" prot="public" virt="virtual"><scope>parquet::Statistics</scope><name>~Statistics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
