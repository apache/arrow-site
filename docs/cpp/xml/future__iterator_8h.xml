<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="future__iterator_8h" kind="file" language="C++">
    <compoundname>future_iterator.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="future_8h" local="yes">arrow/util/future.h</includes>
    <includes refid="iterator_8h" local="yes">arrow/util/iterator.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <incdepgraph>
      <node id="12607">
        <label>atomic</label>
      </node>
      <node id="12616">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
      </node>
      <node id="12623">
        <label>functional</label>
      </node>
      <node id="12618">
        <label>cstdint</label>
      </node>
      <node id="12613">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="12614" relation="include">
        </childnode>
        <childnode refid="12615" relation="include">
        </childnode>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12612" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12616" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
        <childnode refid="12619" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
      </node>
      <node id="12601">
        <label>/arrow/cpp/src/arrow/util/future_iterator.h</label>
        <link refid="future__iterator_8h"/>
        <childnode refid="12602" relation="include">
        </childnode>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12605" relation="include">
        </childnode>
        <childnode refid="12606" relation="include">
        </childnode>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
      </node>
      <node id="12625">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
      </node>
      <node id="12626">
        <label>arrow/util/optional.h</label>
        <link refid="optional_8h"/>
        <childnode refid="12627" relation="include">
        </childnode>
      </node>
      <node id="12608">
        <label>cmath</label>
      </node>
      <node id="12602">
        <label>cassert</label>
      </node>
      <node id="12612">
        <label>string</label>
      </node>
      <node id="12620">
        <label>ostream</label>
      </node>
      <node id="12621">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="12606">
        <label>arrow/util/future.h</label>
        <link refid="future_8h"/>
        <childnode refid="12607" relation="include">
        </childnode>
        <childnode refid="12608" relation="include">
        </childnode>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12605" relation="include">
        </childnode>
        <childnode refid="12610" relation="include">
        </childnode>
        <childnode refid="12613" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
      </node>
      <node id="12624">
        <label>tuple</label>
      </node>
      <node id="12605">
        <label>vector</label>
      </node>
      <node id="12611">
        <label>new</label>
      </node>
      <node id="12604">
        <label>utility</label>
      </node>
      <node id="12627">
        <label>arrow/vendored/optional.hpp</label>
      </node>
      <node id="12615">
        <label>iosfwd</label>
      </node>
      <node id="12610">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="12611" relation="include">
        </childnode>
        <childnode refid="12612" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12613" relation="include">
        </childnode>
        <childnode refid="12616" relation="include">
        </childnode>
      </node>
      <node id="12622">
        <label>arrow/util/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="12602" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12605" relation="include">
        </childnode>
        <childnode refid="12610" relation="include">
        </childnode>
        <childnode refid="12613" relation="include">
        </childnode>
        <childnode refid="12616" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
        <childnode refid="12626" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
      </node>
      <node id="12609">
        <label>type_traits</label>
      </node>
      <node id="12614">
        <label>cstring</label>
      </node>
      <node id="12619">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="12603" relation="include">
        </childnode>
        <childnode refid="12620" relation="include">
        </childnode>
        <childnode refid="12612" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
      </node>
      <node id="12603">
        <label>memory</label>
      </node>
      <node id="12617">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="12618" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classarrow_1_1_as_completed_iterator" prot="public">arrow::AsCompletedIterator</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="future_8h" kindref="compound">arrow/util/future.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iterator_8h" kindref="compound">arrow/util/iterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="classarrow_1_1_as_completed_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_as_completed_iterator" kindref="compound">AsCompletedIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Public<sp/>default<sp/>constructor<sp/>creates<sp/>an<sp/>empty<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_as_completed_iterator_1ad3c49662db4083aa511fd87e82dee78a" kindref="member">AsCompletedIterator</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classarrow_1_1_as_completed_iterator_1ad998989b61685044c3907f5d0f7981a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_as_completed_iterator_1ad998989b61685044c3907f5d0f7981a0" kindref="member">AsCompletedIterator</ref>(std::vector&lt;<ref refid="classarrow_1_1_future" kindref="compound">Future&lt;T&gt;</ref>&gt;<sp/>futures)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>futures_(<ref refid="namespacestd" kindref="compound">std</ref>::move(futures)),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waiter_(<ref refid="classarrow_1_1_future_waiter" kindref="compound">FutureWaiter</ref>::Make(<ref refid="classarrow_1_1_future_waiter" kindref="compound">FutureWaiter</ref>::ITERATE,<sp/>futures_))<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_as_completed_iterator_1afb2af28e5728a2e89ef23f0bc1deba7b" kindref="member">ARROW_DEFAULT_MOVE_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_as_completed_iterator" kindref="compound">AsCompletedIterator</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_as_completed_iterator_1a9893c439053dfb95573e4f8742c8701e" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_as_completed_iterator" kindref="compound">AsCompletedIterator</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classarrow_1_1_as_completed_iterator_1a0da760e0dd91658e54786ca831acbda7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;T&gt;</ref><sp/><ref refid="classarrow_1_1_as_completed_iterator_1a0da760e0dd91658e54786ca831acbda7" kindref="member">Next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fetched_<sp/>==<sp/>futures_.size())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_iteration_traits_1a3ec3a949aefcc0361ae4cc263faf4a8b" kindref="member">IterationTraits&lt;T&gt;::End</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>waiter_-&gt;WaitAndFetchOne();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>++n_fetched_;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>static_cast&lt;size_t&gt;(index)<sp/>&lt;<sp/>futures_.size());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fut<sp/>=<sp/>futures_[index];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacearrow_1a1f52379e463af0bd762c960323ba6f2b" kindref="member">IsFutureFinished</ref>(fut.state()));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(fut).result();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_fetched_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::vector&lt;Future&lt;T&gt;&gt;<sp/>futures_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FutureWaiter&gt;<sp/>waiter_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71" refid="namespacearrow_1a39ab99e5d4ce3d698c2bea62593423b6" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator&lt;T&gt;</ref><sp/><ref refid="namespacearrow_1a39ab99e5d4ce3d698c2bea62593423b6" kindref="member">MakeAsCompletedIterator</ref>(std::vector&lt;<ref refid="classarrow_1_1_future" kindref="compound">Future&lt;T&gt;</ref>&gt;<sp/>futures)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator&lt;T&gt;</ref>(<ref refid="classarrow_1_1_as_completed_iterator" kindref="compound">AsCompletedIterator&lt;T&gt;</ref>(std::move(futures)));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/future_iterator.h"/>
  </compounddef>
</doxygen>
