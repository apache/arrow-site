<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_function_node" kind="class" language="C++" prot="public">
    <compoundname>gandiva::FunctionNode</compoundname>
    <basecompoundref refid="classgandiva_1_1_node" prot="public" virt="non-virtual">gandiva::Node</basecompoundref>
    <includes refid="node_8h" local="no">gandiva/node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_function_node_1ad630cb6f05eae9c1e5150ec7e4eb3c66" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref></type>
        <definition>FuncDescriptorPtr gandiva::FunctionNode::descriptor_</definition>
        <argsstring></argsstring>
        <name>descriptor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="141" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_function_node_1a15a67bb547cd25258b6311db092f29c3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref></type>
        <definition>NodeVector gandiva::FunctionNode::children_</definition>
        <argsstring></argsstring>
        <name>children_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="142" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_function_node_1aa38b87a6486ee7404252975468bbf836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::FunctionNode::FunctionNode</definition>
        <argsstring>(const std::string &amp;name, const NodeVector &amp;children, DataTypePtr retType)</argsstring>
        <name>FunctionNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref> &amp;</type>
          <declname>children</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref></type>
          <declname>retType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="117" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_function_node_1a02e684ff69cfd649aa3a29d3d5a0aedc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::FunctionNode::Accept</definition>
        <argsstring>(NodeVisitor &amp;visitor) const override</argsstring>
        <name>Accept</name>
        <reimplements refid="classgandiva_1_1_node_1a07a1ab1f2c7f363bdd27cbba8387ffa3">Accept</reimplements>
        <param>
          <type><ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Derived classes should simply invoke the Visit api of the visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="119" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_function_node_1a3a58ea409868bb99c8708083aa2a3ecb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref> &amp;</type>
        <definition>const FuncDescriptorPtr&amp; gandiva::FunctionNode::descriptor</definition>
        <argsstring>() const</argsstring>
        <name>descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="121" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_function_node_1a4a49a23a3c1538f0cc07381ac73e8058" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref> &amp;</type>
        <definition>const NodeVector&amp; gandiva::FunctionNode::children</definition>
        <argsstring>() const</argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="122" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_function_node_1ac8dc5fd29986cecd4a670e9058e9e00f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string gandiva::FunctionNode::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classgandiva_1_1_node_1a7e458c306e2162546c96a9c8eea0eef6">ToString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="124" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="124" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref> in the expression tree, representing a function. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2074">
        <label>gandiva::FunctionNode</label>
        <link refid="classgandiva_1_1_function_node"/>
        <childnode refid="2075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2075">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2076">
        <label>gandiva::FunctionNode</label>
        <link refid="classgandiva_1_1_function_node"/>
        <childnode refid="2077" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2077">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/node.h" line="115" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="115" bodyend="143"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_function_node_1a02e684ff69cfd649aa3a29d3d5a0aedc" prot="public" virt="virtual"><scope>gandiva::FunctionNode</scope><name>Accept</name></member>
      <member refid="classgandiva_1_1_function_node_1a4a49a23a3c1538f0cc07381ac73e8058" prot="public" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>children</name></member>
      <member refid="classgandiva_1_1_function_node_1a15a67bb547cd25258b6311db092f29c3" prot="private" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>children_</name></member>
      <member refid="classgandiva_1_1_function_node_1a3a58ea409868bb99c8708083aa2a3ecb" prot="public" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>descriptor</name></member>
      <member refid="classgandiva_1_1_function_node_1ad630cb6f05eae9c1e5150ec7e4eb3c66" prot="private" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>descriptor_</name></member>
      <member refid="classgandiva_1_1_function_node_1aa38b87a6486ee7404252975468bbf836" prot="public" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>FunctionNode</name></member>
      <member refid="classgandiva_1_1_node_1abb254ba06af6ededc023d840cb4ae4ca" prot="public" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>Node</name></member>
      <member refid="classgandiva_1_1_node_1ab196d58f5e486a054ff5d49e1d932e83" prot="public" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>return_type</name></member>
      <member refid="classgandiva_1_1_node_1a01cea0ee791882a488f56df5780874df" prot="protected" virt="non-virtual"><scope>gandiva::FunctionNode</scope><name>return_type_</name></member>
      <member refid="classgandiva_1_1_function_node_1ac8dc5fd29986cecd4a670e9058e9e00f" prot="public" virt="virtual"><scope>gandiva::FunctionNode</scope><name>ToString</name></member>
      <member refid="classgandiva_1_1_node_1a8bddcf2654584db4ea12ac393a87b0d3" prot="public" virt="virtual"><scope>gandiva::FunctionNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
