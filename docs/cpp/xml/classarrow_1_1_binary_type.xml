<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_binary_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::BinaryType</compoundname>
    <basecompoundref refid="classarrow_1_1_base_binary_type" prot="public" virt="non-virtual">arrow::BaseBinaryType</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1_string_type" prot="public" virt="non-virtual">arrow::StringType</derivedcompoundref>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_binary_type_1a9622766aa289f240f21d4508efe6996d" prot="public" static="no">
        <type>int32_t</type>
        <definition>using arrow::BinaryType::offset_type =  int32_t</definition>
        <argsstring></argsstring>
        <name>offset_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="795" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1_binary_type_1ad80bf06cffec1a067ded02d208985e19" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref></type>
        <definition>constexpr Type::type arrow::BinaryType::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a442cc62761c7e5a83d26da4d3ed2fe01" kindref="member">Type::BINARY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="793" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_binary_type_1adf5b60299c46ffad9e2ab2e076ea9470" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool arrow::BinaryType::is_utf8</definition>
        <argsstring></argsstring>
        <name>is_utf8</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="794" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_binary_type_1aebac098da73098598de3cee705f0d79b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>static constexpr const char* arrow::BinaryType::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="797" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="797" bodyend="797"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_binary_type_1a38d8b09303796253fe22a85a50d03224" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::BinaryType::BinaryType</definition>
        <argsstring>()</argsstring>
        <name>BinaryType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="799" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="799" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_binary_type_1a0db59e35b5b3afa44fc15f53ff86235f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structarrow_1_1_data_type_layout" kindref="compound">DataTypeLayout</ref></type>
        <definition>DataTypeLayout arrow::BinaryType::layout</definition>
        <argsstring>() const override</argsstring>
        <name>layout</name>
        <reimplements refid="classarrow_1_1_data_type_1a4fe70f6a45eda029ea118c8470ff925e">layout</reimplements>
        <briefdescription>
<para>Return the data type layout. </para>        </briefdescription>
        <detaileddescription>
<para>Children are not included.</para><para><simplesect kind="note"><para>Experimental API </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="801" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="801" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_binary_type_1af5d9c85c40f4c48adce11196aaa4c0c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::BinaryType::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classarrow_1_1_data_type_1a944727354fb11138ebd46368319598f2">ToString</reimplements>
        <reimplementedby refid="classarrow_1_1_string_type_1a9ad23b52d91b108a0598f1ca40b88538">ToString</reimplementedby>
        <briefdescription>
<para>A string representation of the type, including any children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_binary_type_1a4c345ca9ef34a6099b29c3e694bedae3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::BinaryType::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classarrow_1_1_data_type_1a94985d12273f5dd353d6142921299d4d">name</reimplements>
        <reimplementedby refid="classarrow_1_1_string_type_1ac286b24f3c2b3eeaf1e7d897ecd7a8d1">name</reimplementedby>
        <briefdescription>
<para>A string name of the type, omitting any child fields. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental API </para></simplesect>
<simplesect kind="since"><para>0.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="808" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="808" bodyend="808"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_binary_type_1a179f0f2a206a6930e3874cc04bfac696" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::BinaryType::ComputeFingerprint</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeFingerprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="811" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_binary_type_1a678c380577aca8bd39edbcf02842a61c" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::BinaryType::BinaryType</definition>
        <argsstring>(Type::type logical_type)</argsstring>
        <name>BinaryType</name>
        <param>
          <type><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref></type>
          <declname>logical_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="814" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="814" bodyend="814"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete type class for variable-size binary data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="341">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="343">
        <label>arrow::StringType</label>
        <link refid="classarrow_1_1_string_type"/>
        <childnode refid="339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="342">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="339">
        <label>arrow::BinaryType</label>
        <link refid="classarrow_1_1_binary_type"/>
        <childnode refid="340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="340">
        <label>arrow::BaseBinaryType</label>
        <link refid="classarrow_1_1_base_binary_type"/>
        <childnode refid="341" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="346">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="347">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="344">
        <label>arrow::BinaryType</label>
        <link refid="classarrow_1_1_binary_type"/>
        <childnode refid="345" relation="public-inheritance">
        </childnode>
      </node>
      <node id="345">
        <label>arrow::BaseBinaryType</label>
        <link refid="classarrow_1_1_base_binary_type"/>
        <childnode refid="346" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/type.h" line="791" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="791" bodyend="815"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_binary_type_1a38d8b09303796253fe22a85a50d03224" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>BinaryType</name></member>
      <member refid="classarrow_1_1_binary_type_1a678c380577aca8bd39edbcf02842a61c" prot="protected" virt="non-virtual"><scope>arrow::BinaryType</scope><name>BinaryType</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::BinaryType</scope><name>children_</name></member>
      <member refid="classarrow_1_1_binary_type_1a179f0f2a206a6930e3874cc04bfac696" prot="protected" virt="non-virtual"><scope>arrow::BinaryType</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::BinaryType</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>DataType</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::BinaryType</scope><name>id_</name></member>
      <member refid="classarrow_1_1_binary_type_1adf5b60299c46ffad9e2ab2e076ea9470" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>is_utf8</name></member>
      <member refid="classarrow_1_1_binary_type_1a0db59e35b5b3afa44fc15f53ff86235f" prot="public" virt="virtual"><scope>arrow::BinaryType</scope><name>layout</name></member>
      <member refid="classarrow_1_1_binary_type_1a4c345ca9ef34a6099b29c3e694bedae3" prot="public" virt="virtual"><scope>arrow::BinaryType</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_binary_type_1a9622766aa289f240f21d4508efe6996d" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>offset_type</name></member>
      <member refid="classarrow_1_1_binary_type_1af5d9c85c40f4c48adce11196aaa4c0c8" prot="public" virt="virtual"><scope>arrow::BinaryType</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_binary_type_1ad80bf06cffec1a067ded02d208985e19" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>type_id</name></member>
      <member refid="classarrow_1_1_binary_type_1aebac098da73098598de3cee705f0d79b" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::BinaryType</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
