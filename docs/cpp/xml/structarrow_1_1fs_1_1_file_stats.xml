<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1fs_1_1_file_stats" kind="struct" language="C++" prot="public">
    <compoundname>arrow::fs::FileStats</compoundname>
    <basecompoundref refid="classarrow_1_1util_1_1_equality_comparable" prot="public" virt="non-virtual">arrow::util::EqualityComparable&lt; FileStats &gt;</basecompoundref>
    <includes refid="filesystem_8h" local="no">arrow/filesystem/filesystem.h</includes>
    <innerclass refid="structarrow_1_1fs_1_1_file_stats_1_1_by_path" prot="public">arrow::fs::FileStats::ByPath</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_stats_1a84f429c158de7795bbdbc847129ba3ae" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacearrow_1_1fs_1ae7f70d357901a07a605fcdd5e2bfc98b" kindref="member">FileType</ref></type>
        <definition>FileType arrow::fs::FileStats::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <initializer>= <ref refid="namespacearrow_1_1fs_1ae7f70d357901a07a605fcdd5e2bfc98ba88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">FileType::Unknown</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="143" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_stats_1a70b11477e912a94e893de8edfb637f92" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileStats::path_</definition>
        <argsstring></argsstring>
        <name>path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="144" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_stats_1a70b3aa22a08b79ab18765a27348b1874" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::fs::FileStats::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>= kNoSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="145" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_stats_1a1fae6f2fb907a09d0ebb95695514e91d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacearrow_1_1fs_1ae5daf21ab2c817a43e3f937b7fc9d3b8" kindref="member">TimePoint</ref></type>
        <definition>TimePoint arrow::fs::FileStats::mtime_</definition>
        <argsstring></argsstring>
        <name>mtime_</name>
        <initializer>= kNoTime</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="146" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a1ee0a81ff95bf9951ff9a971b1caa4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::fs::FileStats::FileStats</definition>
        <argsstring>()=default</argsstring>
        <name>FileStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1aab6e646e17353558827d6bce2be8236c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::fs::FileStats::FileStats</definition>
        <argsstring>(FileStats &amp;&amp;)=default</argsstring>
        <name>FileStats</name>
        <param>
          <type><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a390629dd2ff18f4403f960bfc17c13ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;</type>
        <definition>FileStats&amp; arrow::fs::FileStats::operator=</definition>
        <argsstring>(FileStats &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1adfc981f2bf8e298e054893bc50b85e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::fs::FileStats::FileStats</definition>
        <argsstring>(const FileStats &amp;)=default</argsstring>
        <name>FileStats</name>
        <param>
          <type>const <ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a5b36ccaa97cd961bdbce943ecba15b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;</type>
        <definition>FileStats&amp; arrow::fs::FileStats::operator=</definition>
        <argsstring>(const FileStats &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1ad2a2aa3f268dc1a14b3449562b1acb71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacearrow_1_1fs_1ae7f70d357901a07a605fcdd5e2bfc98b" kindref="member">FileType</ref></type>
        <definition>FileType arrow::fs::FileStats::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>The file type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="93" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a75814d11599c6af9ba97ad300113589c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::fs::FileStats::set_type</definition>
        <argsstring>(FileType type)</argsstring>
        <name>set_type</name>
        <param>
          <type><ref refid="namespacearrow_1_1fs_1ae7f70d357901a07a605fcdd5e2bfc98b" kindref="member">FileType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="94" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a7c386333e372890c39972214425e1ba6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; arrow::fs::FileStats::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
<para>The full file path in the filesystem. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="97" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1afa7f3e0fc78cf81ef86ef51a1009649b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::fs::FileStats::set_path</definition>
        <argsstring>(std::string path)</argsstring>
        <name>set_path</name>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="98" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a78f36b2302dec3d003ee66afdf215133" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileStats::base_name</definition>
        <argsstring>() const</argsstring>
        <name>base_name</name>
        <briefdescription>
<para>The file base name (component after the last directory separator) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1ac88e3678486b63746f7bfd4bc436ab1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileStats::dir_name</definition>
        <argsstring>() const</argsstring>
        <name>dir_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1ad3589cce6ea9b5b240465c9afb99e83f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::fs::FileStats::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>The size in bytes, if available. </para>        </briefdescription>
        <detaileddescription>
<para>Only regular files are guaranteed to have a size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="109" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a0437124fe18b0d3169db250d3f43119e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::fs::FileStats::set_size</definition>
        <argsstring>(int64_t size)</argsstring>
        <name>set_size</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="110" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a506e3aaf9400e45d7a72e2690ed74310" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileStats::extension</definition>
        <argsstring>() const</argsstring>
        <name>extension</name>
        <briefdescription>
<para>The file extension (excluding the dot) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1afd73825761ba1e4f4aa62376800b66a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacearrow_1_1fs_1ae5daf21ab2c817a43e3f937b7fc9d3b8" kindref="member">TimePoint</ref></type>
        <definition>TimePoint arrow::fs::FileStats::mtime</definition>
        <argsstring>() const</argsstring>
        <name>mtime</name>
        <briefdescription>
<para>The time of last modification, if available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="116" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a112207ee3b250fa29d0df6cca083cade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::fs::FileStats::set_mtime</definition>
        <argsstring>(TimePoint mtime)</argsstring>
        <name>set_mtime</name>
        <param>
          <type><ref refid="namespacearrow_1_1fs_1ae5daf21ab2c817a43e3f937b7fc9d3b8" kindref="member">TimePoint</ref></type>
          <declname>mtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="117" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1aa19b7cd8b14e1540367ffb31822716e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::fs::FileStats::IsFile</definition>
        <argsstring>() const</argsstring>
        <name>IsFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="119" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a5c4d5142fd1d11426f42c574deef5f91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::fs::FileStats::IsDirectory</definition>
        <argsstring>() const</argsstring>
        <name>IsDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="120" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a334c5da9ec4060cb60a2c8cf39a06b74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::fs::FileStats::Equals</definition>
        <argsstring>(const FileStats &amp;other) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="122" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_stats_1a34eba094e15eaea71afa1fb4ee3507ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileStats::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">FileSystem</ref> entry stats. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1651">
        <label>arrow::fs::FileStats</label>
        <link refid="structarrow_1_1fs_1_1_file_stats"/>
        <childnode refid="1652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1652">
        <label>arrow::util::EqualityComparable&lt; FileStats &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1653">
        <label>arrow::fs::FileStats</label>
        <link refid="structarrow_1_1fs_1_1_file_stats"/>
        <childnode refid="1654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1654">
        <label>arrow::util::EqualityComparable&lt; FileStats &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="85" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="85" bodyend="147"/>
    <listofallmembers>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a78f36b2302dec3d003ee66afdf215133" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>base_name</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1ac88e3678486b63746f7bfd4bc436ab1f" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>dir_name</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a334c5da9ec4060cb60a2c8cf39a06b74" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>Equals</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a140cfdea92ae17331d8db8f69aad082f" prot="public" virt="non-virtual" ambiguityscope="EqualityComparable&lt; FileStats &gt;::"><scope>arrow::fs::FileStats</scope><name>Equals</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a506e3aaf9400e45d7a72e2690ed74310" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>extension</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a1ee0a81ff95bf9951ff9a971b1caa4ff" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>FileStats</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1aab6e646e17353558827d6bce2be8236c" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>FileStats</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1adfc981f2bf8e298e054893bc50b85e41" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>FileStats</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a5c4d5142fd1d11426f42c574deef5f91" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>IsDirectory</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1aa19b7cd8b14e1540367ffb31822716e2" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>IsFile</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1afd73825761ba1e4f4aa62376800b66a0" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>mtime</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a1fae6f2fb907a09d0ebb95695514e91d" prot="protected" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>mtime_</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a1a7ff2c6f720209bc960524c47ad0535" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>operator!=</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a390629dd2ff18f4403f960bfc17c13ab" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>operator=</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a5b36ccaa97cd961bdbce943ecba15b11" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>operator=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1ac0e8ec25e77ece923689ee31c389200e" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>operator==</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a7c386333e372890c39972214425e1ba6" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>path</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a70b11477e912a94e893de8edfb637f92" prot="protected" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>path_</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a112207ee3b250fa29d0df6cca083cade" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>set_mtime</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1afa7f3e0fc78cf81ef86ef51a1009649b" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>set_path</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a0437124fe18b0d3169db250d3f43119e" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>set_size</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a75814d11599c6af9ba97ad300113589c" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>set_type</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1ad3589cce6ea9b5b240465c9afb99e83f" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>size</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a70b3aa22a08b79ab18765a27348b1874" prot="protected" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>size_</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a34eba094e15eaea71afa1fb4ee3507ce" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>ToString</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1ad2a2aa3f268dc1a14b3449562b1acb71" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>type</name></member>
      <member refid="structarrow_1_1fs_1_1_file_stats_1a84f429c158de7795bbdbc847129ba3ae" prot="protected" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>type_</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a14c5ed61e030855eef29edebc6355806" prot="public" virt="non-virtual"><scope>arrow::fs::FileStats</scope><name>~EqualityComparable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
