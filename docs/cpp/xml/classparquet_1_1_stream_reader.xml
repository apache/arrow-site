<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_stream_reader" kind="class" language="C++" prot="public">
    <compoundname>parquet::StreamReader</compoundname>
    <includes refid="stream__reader_8h" local="no">parquet/stream_reader.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" prot="public" static="no">
        <type><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">arrow::util::optional</ref>&lt; T &gt;</type>
        <definition>using parquet::StreamReader::optional =  arrow::util::optional&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="61" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a56a99bea5611000cddc284336ad459de" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ParquetFileReader&gt; parquet::StreamReader::file_reader_</definition>
        <argsstring></argsstring>
        <name>file_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="281" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a9876d02f406b41033277b0baf68df2d3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileMetaData&gt; parquet::StreamReader::file_metadata_</definition>
        <argsstring></argsstring>
        <name>file_metadata_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="282" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a2fbbd321cb6be7514af5dc4e0f5318e5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_row_group_reader" kindref="compound">RowGroupReader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RowGroupReader&gt; parquet::StreamReader::row_group_reader_</definition>
        <argsstring></argsstring>
        <name>row_group_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="283" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a5a9696f09344fa1370147444162ff47d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ColumnReader&gt; &gt; parquet::StreamReader::column_readers_</definition>
        <argsstring></argsstring>
        <name>column_readers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="284" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a58d2e82f56c93cab9f2160936934760e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_primitive_node" kindref="compound">schema::PrimitiveNode</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;schema::PrimitiveNode&gt; &gt; parquet::StreamReader::nodes_</definition>
        <argsstring></argsstring>
        <name>nodes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="285" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1aec49cf7dadf0158439022771a37e5566" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::StreamReader::eof_</definition>
        <argsstring></argsstring>
        <name>eof_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="287" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a8925e7465af959fed04e976c43c96f1c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::StreamReader::row_group_index_</definition>
        <argsstring></argsstring>
        <name>row_group_index_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="288" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1abfacea8a2598a9820c109a7527f19b8c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::StreamReader::column_index_</definition>
        <argsstring></argsstring>
        <name>column_index_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="289" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a7a81ca15e5a8878b0a1075d2878503e7" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::current_row_</definition>
        <argsstring></argsstring>
        <name>current_row_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="290" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a3e02e535fa7e56b41fe49c586a24158b" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::row_group_row_offset_</definition>
        <argsstring></argsstring>
        <name>row_group_row_offset_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="291" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classparquet_1_1_stream_reader_1a11995d3fa0b9f3c0e949ab486161fc7d" prot="private" static="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t parquet::StreamReader::kBatchSizeOne</definition>
        <argsstring></argsstring>
        <name>kBatchSizeOne</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="293" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a409fc42f93f40d1c3dbb9eb223f1a390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::StreamReader::StreamReader</definition>
        <argsstring>()=default</argsstring>
        <name>StreamReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ab1b90ca8336822ab143262fc150a3546" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::StreamReader::StreamReader</definition>
        <argsstring>(std::unique_ptr&lt; ParquetFileReader &gt; reader)</argsstring>
        <name>StreamReader</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ada8b15bb724f22c8d3afbec824ae138a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::StreamReader::~StreamReader</definition>
        <argsstring>()=default</argsstring>
        <name>~StreamReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1af39978d26621d7c48fc134c6cf12c901" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::StreamReader::eof</definition>
        <argsstring>() const</argsstring>
        <name>eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="72" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a0316750e6a359502ecdd96268035e2d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::StreamReader::current_column</definition>
        <argsstring>() const</argsstring>
        <name>current_column</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="74" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a0663d501407629372cf11bfe83978324" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::current_row</definition>
        <argsstring>() const</argsstring>
        <name>current_row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="76" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a123420b2a7ad5cd971feea8032eb29d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::StreamReader::num_columns</definition>
        <argsstring>() const</argsstring>
        <name>num_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a8e37fc356d0d95f2d135a05cbe9a6de1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::num_rows</definition>
        <argsstring>() const</argsstring>
        <name>num_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a7cfb1f5d74ca05d34151c6b508240a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::StreamReader::StreamReader</definition>
        <argsstring>(StreamReader &amp;&amp;)=default</argsstring>
        <name>StreamReader</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a282c15dfd080c25281eb653580704e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator=</definition>
        <argsstring>(StreamReader &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a64ff8aa8803ac35395d7d4505cdad813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::StreamReader::StreamReader</definition>
        <argsstring>(const StreamReader &amp;)=delete</argsstring>
        <name>StreamReader</name>
        <param>
          <type>const <ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a3c763e5d7c8560ec2268bbf6aca54c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator=</definition>
        <argsstring>(const StreamReader &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a5ff2d4fe70498e2f94d408aac980737f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(bool &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a0a1f76c3571e4bdcaec73d8a3849117f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(int8_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a96ccb4649336d006c40baceb8d26b8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(uint8_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a303f5e5b8579a18166ef8b1d63dc1433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(int16_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1acd851eb352d0879b89c0fedfad3bdd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(uint16_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a2e21bad2bd7cdd43d36d247426887895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(int32_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a85b0d66b944c71d519a2c4fe86d3ce45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(uint32_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ad5de2e0df98a19cea0a48e10c1eb985e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(int64_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a8adc374f6a10fa953ad873fe4a23d7a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(uint64_t &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a894a8c030798cde8004e0b3f1ae8a31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(std::chrono::milliseconds &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::chrono::milliseconds &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a74ff3df0d61ea113216d321666c9a14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(std::chrono::microseconds &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::chrono::microseconds &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ac7232c6dc631fc50432a77b2b6b3682a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(float &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aeab2596ba42ecc7587724402ecab6842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(double &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>double &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a5284c97d4b8ba30860620aa17af66d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(char &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>char &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a9afb3b4ff8f12512765acd2d178f5cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(char(&amp;v)[N])</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>char(&amp;)</type>
          <declname>v</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="119" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1afa4f8af423ddfd12b65062ae5ae84f00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(std::array&lt; char, N &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::array&lt; char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="125" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a6d808703af317654ddd9895e801f2221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(std::string &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a7aaf2b66d05a9d70adaf3239045b2ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; bool &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; bool &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a82b8ea9ba3942a7e53ad880bbb78c684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; int8_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; int8_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a245f26bfca74bc1cfac0e1c8da8affcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; uint8_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1abba52ddebad9f1c1299eca08b3a4e08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; int16_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; int16_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1af04037f9e38ad40017eef4fd77975646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; uint16_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; uint16_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a7495f2878cee3e12e45ca86c4145c47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; int32_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; int32_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1abf4d30810f903212f2c18493d46b1afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; uint32_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; uint32_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aba24a6d5861a6b23b031c41d78e97234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; int64_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; int64_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a7c28323f3948cada99c0f9357610b7e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; uint64_t &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; uint64_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a233c551bcd67fb0288395a9328279b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; float &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; float &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ab4ca2f45526270448e405cd80ab03b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; double &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; double &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1af3c49cf7516c16832d6e930836a21ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; std::chrono::milliseconds &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; std::chrono::milliseconds &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aa14b457b0e94d3331d825200a88bee3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; std::chrono::microseconds &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; std::chrono::microseconds &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a5658774c1b1a48d8430030cfa1a0ef55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; char &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; char &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1afeb60346b32b40fd81548c5a23b8ad0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; std::string &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; std::string &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a3fb41caf862d0026b9ac815a187769f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classparquet_1_1_stream_reader" kindref="compound">StreamReader</ref> &amp;</type>
        <definition>StreamReader&amp; parquet::StreamReader::operator&gt;&gt;</definition>
        <argsstring>(optional&lt; std::array&lt; char, N &gt;&gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; std::array&lt; char, N &gt;&gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="170" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="170" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aa4738d9bea084f18eb1bc4683acb9a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::EndRow</definition>
        <argsstring>()</argsstring>
        <name>EndRow</name>
        <briefdescription>
<para>Terminate current row and advance to next one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if all columns in the row were not read or skipped. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a70743b91e16ef34018a173e0a1b01ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::SkipColumns</definition>
        <argsstring>(int64_t num_columns_to_skip)</argsstring>
        <name>SkipColumns</name>
        <param>
          <type>int64_t</type>
          <declname>num_columns_to_skip</declname>
        </param>
        <briefdescription>
<para>Skip the data in the next columns. </para>        </briefdescription>
        <detaileddescription>
<para>If the number of columns exceeds the columns remaining on the current row then skipping is terminated - it does <emphasis>not</emphasis> continue skipping columns on the next row. Skipping of columns still requires the use &apos;EndRow&apos; even if all remaining columns were skipped. <simplesect kind="return"><para>Number of columns actually skipped. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a832ce21cc798eb6d2a50fc36ce59f1c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::StreamReader::SkipRows</definition>
        <argsstring>(int64_t num_rows_to_skip)</argsstring>
        <name>SkipRows</name>
        <param>
          <type>int64_t</type>
          <declname>num_rows_to_skip</declname>
        </param>
        <briefdescription>
<para>Skip the data in the next rows. </para>        </briefdescription>
        <detaileddescription>
<para>Skipping of rows is not allowed if reading of data for the current row is not finished. Skipping of rows will be terminated if the end of file is reached. <simplesect kind="return"><para>Number of rows actually skipped. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="202" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a3a1031f3abf292a403578f3019d7125d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::ThrowReadFailedException</definition>
        <argsstring>(const std::shared_ptr&lt; schema::PrimitiveNode &gt; &amp;node)</argsstring>
        <name>ThrowReadFailedException</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_primitive_node" kindref="compound">schema::PrimitiveNode</ref> &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ac6220dbff2fabf32b79db435635fd53f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReaderType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::StreamReader::Read</definition>
        <argsstring>(T *v)</argsstring>
        <name>Read</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="209" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="209" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a03039605d33f312ec316e1269796de92" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReaderType</type>
          </param>
          <param>
            <type>typename ReadType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::StreamReader::Read</definition>
        <argsstring>(T *v)</argsstring>
        <name>Read</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="224" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="224" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ad92893476bd01c6e5f8bd6b16768b51a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReaderType</type>
          </param>
          <param>
            <type>typename ReadType</type>
            <defval>typename ReaderType::T</defval>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::StreamReader::ReadOptional</definition>
        <argsstring>(optional&lt; T &gt; *v)</argsstring>
        <name>ReadOptional</name>
        <param>
          <type><ref refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" kindref="member">optional</ref>&lt; T &gt; *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="242" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="242" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ab7f87926374b7c7497ebf632c879670e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::ReadFixedLength</definition>
        <argsstring>(char *ptr, int len)</argsstring>
        <name>ReadFixedLength</name>
        <param>
          <type>char *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a1c1e397f366115f6703a46cd151515c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::Read</definition>
        <argsstring>(ByteArray *v)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a714860f62db69ddd33b96a6fc9ca25f9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::Read</definition>
        <argsstring>(FixedLenByteArray *v)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aebedf4a5b57dea432b23d5c86d97e678" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::StreamReader::ReadOptional</definition>
        <argsstring>(ByteArray *v)</argsstring>
        <name>ReadOptional</name>
        <param>
          <type><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1ab351643a280953b3c4cd40e3f4e1f417" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::StreamReader::ReadOptional</definition>
        <argsstring>(FixedLenByteArray *v)</argsstring>
        <name>ReadOptional</name>
        <param>
          <type><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aae5f9a77fb6c2a4b9abcdfbb604e3a93" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::NextRowGroup</definition>
        <argsstring>()</argsstring>
        <name>NextRowGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1af8e3eb9e331d4c040965fd308c26bfba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::CheckColumn</definition>
        <argsstring>(Type::type physical_type, ConvertedType::type converted_type, int length=0)</argsstring>
        <name>CheckColumn</name>
        <param>
          <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
          <declname>physical_type</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref></type>
          <declname>converted_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1aa9215d70a41bfa0c80f2ad067950ae1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::SkipRowsInColumn</definition>
        <argsstring>(ColumnReader *reader, int64_t num_rows_to_skip)</argsstring>
        <name>SkipRowsInColumn</name>
        <param>
          <type><ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_rows_to_skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_stream_reader_1a70d5438ea98b2604d60e21f5e84c241f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::StreamReader::SetEof</definition>
        <argsstring>()</argsstring>
        <name>SetEof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/stream_reader.h" line="278" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class for reading Parquet files using an output stream type API. </para>    </briefdescription>
    <detaileddescription>
<para>The values given must be of the correct type i.e. the type must match the file schema exactly otherwise a <ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref> will be thrown.</para><para>The user must explicitly advance to the next row using the <ref refid="classparquet_1_1_stream_reader_1aa4738d9bea084f18eb1bc4683acb9a01" kindref="member">EndRow()</ref> function or EndRow input manipulator.</para><para>Required and optional fields are supported:<itemizedlist>
<listitem><para>Required fields are read using operator&gt;&gt;(T)</para></listitem><listitem><para>Optional fields are read with operator&gt;&gt;(arrow::util::optional&lt;T&gt;)</para></listitem></itemizedlist>
</para><para>Note that operator&gt;&gt;(arrow::util::optional&lt;T&gt;) can be used to read required fields.</para><para>Similarly operator&gt;&gt;(T) can be used to read optional fields. However, if the value is not present then a <ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref> will be raised.</para><para>Currently there is no support for repeated fields. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/stream_reader.h" line="58" column="1" bodyfile="/arrow/cpp/src/parquet/stream_reader.h" bodystart="58" bodyend="294"/>
    <listofallmembers>
      <member refid="classparquet_1_1_stream_reader_1af8e3eb9e331d4c040965fd308c26bfba" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>CheckColumn</name></member>
      <member refid="classparquet_1_1_stream_reader_1abfacea8a2598a9820c109a7527f19b8c" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>column_index_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a5a9696f09344fa1370147444162ff47d" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>column_readers_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a0316750e6a359502ecdd96268035e2d0" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>current_column</name></member>
      <member refid="classparquet_1_1_stream_reader_1a0663d501407629372cf11bfe83978324" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>current_row</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7a81ca15e5a8878b0a1075d2878503e7" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>current_row_</name></member>
      <member refid="classparquet_1_1_stream_reader_1aa4738d9bea084f18eb1bc4683acb9a01" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>EndRow</name></member>
      <member refid="classparquet_1_1_stream_reader_1af39978d26621d7c48fc134c6cf12c901" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>eof</name></member>
      <member refid="classparquet_1_1_stream_reader_1aec49cf7dadf0158439022771a37e5566" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>eof_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a9876d02f406b41033277b0baf68df2d3" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>file_metadata_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a56a99bea5611000cddc284336ad459de" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>file_reader_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a11995d3fa0b9f3c0e949ab486161fc7d" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>kBatchSizeOne</name></member>
      <member refid="classparquet_1_1_stream_reader_1aae5f9a77fb6c2a4b9abcdfbb604e3a93" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>NextRowGroup</name></member>
      <member refid="classparquet_1_1_stream_reader_1a58d2e82f56c93cab9f2160936934760e" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>nodes_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a123420b2a7ad5cd971feea8032eb29d1" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>num_columns</name></member>
      <member refid="classparquet_1_1_stream_reader_1a8e37fc356d0d95f2d135a05cbe9a6de1" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>num_rows</name></member>
      <member refid="classparquet_1_1_stream_reader_1a282c15dfd080c25281eb653580704e93" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator=</name></member>
      <member refid="classparquet_1_1_stream_reader_1a3c763e5d7c8560ec2268bbf6aca54c02" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator=</name></member>
      <member refid="classparquet_1_1_stream_reader_1a5ff2d4fe70498e2f94d408aac980737f" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a0a1f76c3571e4bdcaec73d8a3849117f" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a96ccb4649336d006c40baceb8d26b8bb" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a303f5e5b8579a18166ef8b1d63dc1433" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1acd851eb352d0879b89c0fedfad3bdd17" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a2e21bad2bd7cdd43d36d247426887895" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a85b0d66b944c71d519a2c4fe86d3ce45" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1ad5de2e0df98a19cea0a48e10c1eb985e" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a8adc374f6a10fa953ad873fe4a23d7a4" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a894a8c030798cde8004e0b3f1ae8a31e" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a74ff3df0d61ea113216d321666c9a14a" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1ac7232c6dc631fc50432a77b2b6b3682a" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1aeab2596ba42ecc7587724402ecab6842" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a5284c97d4b8ba30860620aa17af66d4f" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a9afb3b4ff8f12512765acd2d178f5cc9" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1afa4f8af423ddfd12b65062ae5ae84f00" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a6d808703af317654ddd9895e801f2221" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7aaf2b66d05a9d70adaf3239045b2ec1" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a82b8ea9ba3942a7e53ad880bbb78c684" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a245f26bfca74bc1cfac0e1c8da8affcc" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1abba52ddebad9f1c1299eca08b3a4e08e" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1af04037f9e38ad40017eef4fd77975646" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7495f2878cee3e12e45ca86c4145c47c" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1abf4d30810f903212f2c18493d46b1afd" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1aba24a6d5861a6b23b031c41d78e97234" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7c28323f3948cada99c0f9357610b7e9" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a233c551bcd67fb0288395a9328279b63" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1ab4ca2f45526270448e405cd80ab03b6e" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1af3c49cf7516c16832d6e930836a21ec7" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1aa14b457b0e94d3331d825200a88bee3b" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a5658774c1b1a48d8430030cfa1a0ef55" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1afeb60346b32b40fd81548c5a23b8ad0c" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a3fb41caf862d0026b9ac815a187769f6" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>operator&gt;&gt;</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7cd9f86e11f0b6077c98ca2bad893ec9" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>optional</name></member>
      <member refid="classparquet_1_1_stream_reader_1ac6220dbff2fabf32b79db435635fd53f" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>Read</name></member>
      <member refid="classparquet_1_1_stream_reader_1a03039605d33f312ec316e1269796de92" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>Read</name></member>
      <member refid="classparquet_1_1_stream_reader_1a1c1e397f366115f6703a46cd151515c3" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>Read</name></member>
      <member refid="classparquet_1_1_stream_reader_1a714860f62db69ddd33b96a6fc9ca25f9" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>Read</name></member>
      <member refid="classparquet_1_1_stream_reader_1ab7f87926374b7c7497ebf632c879670e" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>ReadFixedLength</name></member>
      <member refid="classparquet_1_1_stream_reader_1ad92893476bd01c6e5f8bd6b16768b51a" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>ReadOptional</name></member>
      <member refid="classparquet_1_1_stream_reader_1aebedf4a5b57dea432b23d5c86d97e678" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>ReadOptional</name></member>
      <member refid="classparquet_1_1_stream_reader_1ab351643a280953b3c4cd40e3f4e1f417" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>ReadOptional</name></member>
      <member refid="classparquet_1_1_stream_reader_1a8925e7465af959fed04e976c43c96f1c" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>row_group_index_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a2fbbd321cb6be7514af5dc4e0f5318e5" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>row_group_reader_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a3e02e535fa7e56b41fe49c586a24158b" prot="private" virt="non-virtual"><scope>parquet::StreamReader</scope><name>row_group_row_offset_</name></member>
      <member refid="classparquet_1_1_stream_reader_1a70d5438ea98b2604d60e21f5e84c241f" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>SetEof</name></member>
      <member refid="classparquet_1_1_stream_reader_1a70743b91e16ef34018a173e0a1b01ac3" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>SkipColumns</name></member>
      <member refid="classparquet_1_1_stream_reader_1a832ce21cc798eb6d2a50fc36ce59f1c1" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>SkipRows</name></member>
      <member refid="classparquet_1_1_stream_reader_1aa9215d70a41bfa0c80f2ad067950ae1d" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>SkipRowsInColumn</name></member>
      <member refid="classparquet_1_1_stream_reader_1a409fc42f93f40d1c3dbb9eb223f1a390" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>StreamReader</name></member>
      <member refid="classparquet_1_1_stream_reader_1ab1b90ca8336822ab143262fc150a3546" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>StreamReader</name></member>
      <member refid="classparquet_1_1_stream_reader_1a7cfb1f5d74ca05d34151c6b508240a33" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>StreamReader</name></member>
      <member refid="classparquet_1_1_stream_reader_1a64ff8aa8803ac35395d7d4505cdad813" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>StreamReader</name></member>
      <member refid="classparquet_1_1_stream_reader_1a3a1031f3abf292a403578f3019d7125d" prot="protected" virt="non-virtual"><scope>parquet::StreamReader</scope><name>ThrowReadFailedException</name></member>
      <member refid="classparquet_1_1_stream_reader_1ada8b15bb724f22c8d3afbec824ae138a" prot="public" virt="non-virtual"><scope>parquet::StreamReader</scope><name>~StreamReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
