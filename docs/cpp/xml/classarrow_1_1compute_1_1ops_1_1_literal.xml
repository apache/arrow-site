<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1ops_1_1_literal" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::ops::Literal</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_operation" prot="public" virt="non-virtual">arrow::compute::Operation</basecompoundref>
    <includes refid="literal_8h" local="no">arrow/compute/operations/literal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1ops_1_1_literal_1ab6758af18f4a40da6ebbc37518e2b644" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Scalar&gt; arrow::compute::ops::Literal::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/operations/literal.h" line="40" column="1" bodyfile="/arrow/cpp/src/arrow/compute/operations/literal.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1ops_1_1_literal_1a37239216da06e7a0ce84ac16c32821f5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::ops::Literal::Literal</definition>
        <argsstring>(const std::shared_ptr&lt; Scalar &gt; &amp;value)</argsstring>
        <name>Literal</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/operations/literal.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1ops_1_1_literal_1a60e8228635a435daecbe0781f677e8e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::ops::Literal::ToExpr</definition>
        <argsstring>(std::shared_ptr&lt; Expr &gt; *out) const override</argsstring>
        <name>ToExpr</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1compute_1_1_expr" kindref="compound">Expr</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/operations/literal.h" line="37" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A literal operation creates an expression from a known constant scalar value. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2880">
        <label>arrow::compute::Operation</label>
        <link refid="classarrow_1_1compute_1_1_operation"/>
        <childnode refid="2881" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2881">
        <label>std::enable_shared_from_this&lt; Operation &gt;</label>
      </node>
      <node id="2879">
        <label>arrow::compute::ops::Literal</label>
        <link refid="classarrow_1_1compute_1_1ops_1_1_literal"/>
        <childnode refid="2880" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2883">
        <label>arrow::compute::Operation</label>
        <link refid="classarrow_1_1compute_1_1_operation"/>
        <childnode refid="2884" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2884">
        <label>std::enable_shared_from_this&lt; Operation &gt;</label>
      </node>
      <node id="2882">
        <label>arrow::compute::ops::Literal</label>
        <link refid="classarrow_1_1compute_1_1ops_1_1_literal"/>
        <childnode refid="2883" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/operations/literal.h" line="34" column="1" bodyfile="/arrow/cpp/src/arrow/compute/operations/literal.h" bodystart="34" bodyend="41"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_operation_1a68d0d77acd1c7226d19acbfcfb7ba02a" prot="public" virt="virtual"><scope>arrow::compute::ops::Literal</scope><name>input_args</name></member>
      <member refid="classarrow_1_1compute_1_1ops_1_1_literal_1a37239216da06e7a0ce84ac16c32821f5" prot="public" virt="non-virtual"><scope>arrow::compute::ops::Literal</scope><name>Literal</name></member>
      <member refid="classarrow_1_1compute_1_1ops_1_1_literal_1a60e8228635a435daecbe0781f677e8e4" prot="public" virt="non-virtual"><scope>arrow::compute::ops::Literal</scope><name>ToExpr</name></member>
      <member refid="classarrow_1_1compute_1_1_operation_1afa937f89ad090d439dddec9be8c7dc19" prot="public" virt="pure-virtual" ambiguityscope="arrow::compute::Operation::"><scope>arrow::compute::ops::Literal</scope><name>ToExpr</name></member>
      <member refid="classarrow_1_1compute_1_1ops_1_1_literal_1ab6758af18f4a40da6ebbc37518e2b644" prot="private" virt="non-virtual"><scope>arrow::compute::ops::Literal</scope><name>value_</name></member>
      <member refid="classarrow_1_1compute_1_1_operation_1a1c849a65df60b098ad6ae7082d5805a7" prot="public" virt="virtual"><scope>arrow::compute::ops::Literal</scope><name>~Operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
