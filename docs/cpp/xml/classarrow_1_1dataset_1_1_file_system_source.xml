<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_file_system_source" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::FileSystemSource</compoundname>
    <basecompoundref refid="classarrow_1_1dataset_1_1_source" prot="public" virt="non-virtual">arrow::dataset::Source</basecompoundref>
    <includes refid="file__base_8h" local="no">arrow/dataset/file_base.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_source_1ab2de8de2f25b250ef5ee3cb95378acce" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileFormat&gt; arrow::dataset::FileSystemSource::format_</definition>
        <argsstring></argsstring>
        <name>format_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="228" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_source_1ab0c63c68b9cdf44b6dce3395f87e8375" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;fs::FileSystem&gt; arrow::dataset::FileSystemSource::filesystem_</definition>
        <argsstring></argsstring>
        <name>filesystem_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="229" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_source_1a5a5577eee351759bf18a1e5cfcf7e0e3" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
        <definition>fs::PathForest arrow::dataset::FileSystemSource::forest_</definition>
        <argsstring></argsstring>
        <name>forest_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="230" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_source_1aca0af272c7fb3cf628bdaf0eaf2e2e8b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
        <definition>ExpressionVector arrow::dataset::FileSystemSource::partitions_</definition>
        <argsstring></argsstring>
        <name>partitions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="231" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a45b44229a8c4753f565079ea368437a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_source" kindref="compound">Source</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Source&gt; &gt; arrow::dataset::FileSystemSource::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::FileStatsVector stats)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1fs_1a1be280fb73b9d216fd0caea1d917cc99" kindref="member">fs::FileStatsVector</ref></type>
          <declname>stats</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_source" kindref="compound">FileSystemSource</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stats</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of files/directories to consume. attach additional partition expressions to FileStats found in <computeroutput>stats</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1afb6711249a43078324b6e43daee18d7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_source" kindref="compound">Source</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Source&gt; &gt; arrow::dataset::FileSystemSource::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::FileStatsVector stats, ExpressionVector partitions)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1fs_1a1be280fb73b9d216fd0caea1d917cc99" kindref="member">fs::FileStatsVector</ref></type>
          <declname>stats</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>partitions</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_source" kindref="compound">FileSystemSource</ref> with file-level partitions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stats</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of files/directories to consume. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>partition information associated with <computeroutput>stats</computeroutput>. attach additional partition expressions to FileStats found in <computeroutput>stats</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1ae90c1e9311a7a4c1f28d26e2ed8e2643" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_source" kindref="compound">Source</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Source&gt; &gt; arrow::dataset::FileSystemSource::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::PathForest forest, ExpressionVector partitions)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
          <declname>forest</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>partitions</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_source" kindref="compound">FileSystemSource</ref> with file-level partitions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataSource </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forest</parametername>
</parameternamelist>
<parameterdescription>
<para>a PathForest of files/directories to consume. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>partition information associated with <computeroutput>forest</computeroutput>. attach additional partition expressions to FileStats found in <computeroutput>forest</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="206" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a1d1a88478d55469d13c47a11f595ba4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FileSystemSource::type_name</definition>
        <argsstring>() const override</argsstring>
        <name>type_name</name>
        <reimplements refid="classarrow_1_1dataset_1_1_source_1a5596ca6f72d9886ab20ff4dd09ecee22">type_name</reimplements>
        <briefdescription>
<para>The name identifying the kind of source. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="213" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a8de5ceea37b211e061ed6844565dfb44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FileSystemSource::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a52ef8e6f2546df1265fae1aa6697f2d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;FileFormat&gt;&amp; arrow::dataset::FileSystemSource::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="217" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="217" bodyend="217"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a9c54b9d9e3eb5bd6f4c0136dd6a75a4b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacearrow_1_1dataset_1a6270dc3eca80575744d55456da9447c2" kindref="member">FragmentIterator</ref></type>
        <definition>FragmentIterator arrow::dataset::FileSystemSource::GetFragmentsImpl</definition>
        <argsstring>(std::shared_ptr&lt; ScanOptions &gt; options) override</argsstring>
        <name>GetFragmentsImpl</name>
        <reimplements refid="classarrow_1_1dataset_1_1_source_1a3dce80ae0f87e3f7e216be61223056dd">GetFragmentsImpl</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_source_1a9921f76898e6554cdd31859715c9cbf9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::FileSystemSource::FileSystemSource</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::PathForest forest, ExpressionVector file_partitions)</argsstring>
        <name>FileSystemSource</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
          <declname>forest</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>file_partitions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="222" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classarrow_1_1dataset_1_1_source" kindref="compound">Source</ref> of FileFragments. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1670">
        <label>arrow::dataset::Source</label>
        <link refid="classarrow_1_1dataset_1_1_source"/>
      </node>
      <node id="1669">
        <label>arrow::dataset::FileSystemSource</label>
        <link refid="classarrow_1_1dataset_1_1_file_system_source"/>
        <childnode refid="1670" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1673">
        <label>arrow::fs::PathForest</label>
        <link refid="classarrow_1_1fs_1_1_path_forest"/>
        <childnode refid="1674" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1674">
        <label>arrow::util::EqualityComparable&lt; PathForest &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
      <node id="1672">
        <label>arrow::dataset::Source</label>
        <link refid="classarrow_1_1dataset_1_1_source"/>
      </node>
      <node id="1671">
        <label>arrow::dataset::FileSystemSource</label>
        <link refid="classarrow_1_1dataset_1_1_file_system_source"/>
        <childnode refid="1672" relation="public-inheritance">
        </childnode>
        <childnode refid="1673" relation="usage">
          <edgelabel>forest_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="156" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="156" bodyend="232"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_source_1ae3e233b606459909faef991c338a0b77" prot="protected" virt="virtual"><scope>arrow::dataset::FileSystemSource</scope><name>AssumePartitionExpression</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1ab0c63c68b9cdf44b6dce3395f87e8375" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>filesystem_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a9921f76898e6554cdd31859715c9cbf9" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>FileSystemSource</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a5a5577eee351759bf18a1e5cfcf7e0e3" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>forest_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a52ef8e6f2546df1265fae1aa6697f2d2" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>format</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1ab2de8de2f25b250ef5ee3cb95378acce" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>format_</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a55eeffff8a704bcf52dfb3c4ab45bbf7" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>GetFragments</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a9c54b9d9e3eb5bd6f4c0136dd6a75a4b" prot="protected" virt="virtual"><scope>arrow::dataset::FileSystemSource</scope><name>GetFragmentsImpl</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a45b44229a8c4753f565079ea368437a5" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1afb6711249a43078324b6e43daee18d7b" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1ae90c1e9311a7a4c1f28d26e2ed8e2643" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a9397ee2a13cb4223a381993018393a7a" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>partition_expression</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a28560aab228ba5e4e0b87d82d32afa5d" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>partition_expression_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1aca0af272c7fb3cf628bdaf0eaf2e2e8b" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>partitions_</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1ab3c9e6e32727ac9f192fa59584525a6d" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a813cdc0aeea9065beff5eb6a958697c8" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>schema_</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a582f5bc5b49937c4e211152e98b8ad1c" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Source</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1a67513eec7b376fa1b42ad46d1ae844a9" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Source</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1ad167aaacd053e2ac8c8139e4efd8b823" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>Source</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a8de5ceea37b211e061ed6844565dfb44" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemSource</scope><name>ToString</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_source_1a1d1a88478d55469d13c47a11f595ba4c" prot="public" virt="virtual"><scope>arrow::dataset::FileSystemSource</scope><name>type_name</name></member>
      <member refid="classarrow_1_1dataset_1_1_source_1ad67f22ee858aeea68254c055e091dc72" prot="public" virt="virtual"><scope>arrow::dataset::FileSystemSource</scope><name>~Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
