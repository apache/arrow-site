<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="io_2hdfs_8h" kind="file" language="C++">
    <compoundname>hdfs.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes refid="interfaces_8h" local="yes">arrow/io/interfaces.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="filesystem_2hdfs_8h" local="yes">/arrow/cpp/src/arrow/filesystem/hdfs.h</includedby>
    <includedby refid="io_2api_8h" local="yes">/arrow/cpp/src/arrow/io/api.h</includedby>
    <includedby refid="hdfs__internal_8h" local="no">/arrow/cpp/src/arrow/io/hdfs_internal.h</includedby>
    <incdepgraph>
      <node id="7234">
        <label>/arrow/cpp/src/arrow/io/hdfs.h</label>
        <link refid="io_2hdfs_8h"/>
        <childnode refid="7235" relation="include">
        </childnode>
        <childnode refid="7236" relation="include">
        </childnode>
        <childnode refid="7237" relation="include">
        </childnode>
        <childnode refid="7238" relation="include">
        </childnode>
        <childnode refid="7239" relation="include">
        </childnode>
        <childnode refid="7240" relation="include">
        </childnode>
        <childnode refid="7243" relation="include">
        </childnode>
        <childnode refid="7244" relation="include">
        </childnode>
      </node>
      <node id="7235">
        <label>cstdint</label>
      </node>
      <node id="7242">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="7236" relation="include">
        </childnode>
        <childnode refid="7237" relation="include">
        </childnode>
        <childnode refid="7239" relation="include">
        </childnode>
        <childnode refid="7243" relation="include">
        </childnode>
        <childnode refid="7244" relation="include">
        </childnode>
      </node>
      <node id="7240">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="7235" relation="include">
        </childnode>
        <childnode refid="7236" relation="include">
        </childnode>
        <childnode refid="7237" relation="include">
        </childnode>
        <childnode refid="7239" relation="include">
        </childnode>
        <childnode refid="7241" relation="include">
        </childnode>
        <childnode refid="7242" relation="include">
        </childnode>
        <childnode refid="7243" relation="include">
        </childnode>
        <childnode refid="7245" relation="include">
        </childnode>
        <childnode refid="7244" relation="include">
        </childnode>
      </node>
      <node id="7237">
        <label>string</label>
      </node>
      <node id="7246">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="7244">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="7239">
        <label>vector</label>
      </node>
      <node id="7245">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="7235" relation="include">
        </childnode>
        <childnode refid="7237" relation="include">
        </childnode>
        <childnode refid="7246" relation="include">
        </childnode>
      </node>
      <node id="7241">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="7238">
        <label>unordered_map</label>
      </node>
      <node id="7236">
        <label>memory</label>
      </node>
      <node id="7243">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="7235" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7250">
        <label>/arrow/cpp/src/arrow/io/api.h</label>
        <link refid="io_2api_8h"/>
      </node>
      <node id="7247">
        <label>/arrow/cpp/src/arrow/io/hdfs.h</label>
        <link refid="io_2hdfs_8h"/>
        <childnode refid="7248" relation="include">
        </childnode>
        <childnode refid="7250" relation="include">
        </childnode>
        <childnode refid="7251" relation="include">
        </childnode>
      </node>
      <node id="7248">
        <label>/arrow/cpp/src/arrow/filesystem/hdfs.h</label>
        <link refid="filesystem_2hdfs_8h"/>
        <childnode refid="7249" relation="include">
        </childnode>
      </node>
      <node id="7249">
        <label>/arrow/cpp/src/arrow/filesystem/api.h</label>
        <link refid="filesystem_2api_8h"/>
      </node>
      <node id="7251">
        <label>/arrow/cpp/src/arrow/io/hdfs_internal.h</label>
        <link refid="hdfs__internal_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structarrow_1_1io_1_1_object_type" prot="public">arrow::io::ObjectType</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_file_statistics" prot="public">arrow::io::FileStatistics</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_file_system" prot="public">arrow::io::FileSystem</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_hdfs_path_info" prot="public">arrow::io::HdfsPathInfo</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_hdfs_connection_config" prot="public">arrow::io::HdfsConnectionConfig</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hadoop_file_system" prot="public">arrow::io::HadoopFileSystem</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hdfs_readable_file" prot="public">arrow::io::HdfsReadableFile</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hdfs_output_stream" prot="public">arrow::io::HdfsOutputStream</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interfaces_8h" kindref="compound">arrow/io/interfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HdfsReadableFile;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HdfsOutputStream;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structarrow_1_1io_1_1_object_type" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1io_1_1_object_type" kindref="compound">ObjectType</ref><sp/>{</highlight></codeline>
<codeline lineno="43" refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7a" kindref="member">type</ref><sp/>{<sp/><ref refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7aa81af1cfcfc5aa3722be154e02b6193a7" kindref="member">FILE</ref>,<sp/><ref refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7aa1841df215389fc125570866414499793" kindref="member">DIRECTORY</ref><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structarrow_1_1io_1_1_file_statistics" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="structarrow_1_1io_1_1_file_statistics" kindref="compound">FileStatistics</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structarrow_1_1io_1_1_file_statistics_1a97bf450abd7b721e3e95030a44eeb99e" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structarrow_1_1io_1_1_file_statistics_1a97bf450abd7b721e3e95030a44eeb99e" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="50" refid="structarrow_1_1io_1_1_file_statistics_1ac4fbf56a8096ef2961f3e668fc22033e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7a" kindref="member">ObjectType::type</ref><sp/><ref refid="structarrow_1_1io_1_1_file_statistics_1ac4fbf56a8096ef2961f3e668fc22033e" kindref="member">kind</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classarrow_1_1io_1_1_file_system" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_file_system" kindref="compound">FileSystem</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1io_1_1_file_system" kindref="compound">FileSystem</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>MakeDirectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DeleteDirectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetChildren(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>listing)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Rename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dst)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/><ref refid="structarrow_1_1io_1_1_file_statistics" kindref="compound">FileStatistics</ref>*<sp/>stat)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structarrow_1_1io_1_1_hdfs_path_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1io_1_1_hdfs_path_info" kindref="compound">HdfsPathInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="structarrow_1_1io_1_1_hdfs_path_info_1a67b9d0b55631b6bd151776af3c65bcdd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1io_1_1_object_type_1a1058f546342de12b2b2ade7410f4de7a" kindref="member">ObjectType::type</ref><sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a67b9d0b55631b6bd151776af3c65bcdd" kindref="member">kind</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structarrow_1_1io_1_1_hdfs_path_info_1a07eb11cbce0126aa2d4f754bae91c8b3" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a07eb11cbce0126aa2d4f754bae91c8b3" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="73" refid="structarrow_1_1io_1_1_hdfs_path_info_1a4d1e5aa6d3c36115c3d22dc6169c1a15" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a4d1e5aa6d3c36115c3d22dc6169c1a15" kindref="member">owner</ref>;</highlight></codeline>
<codeline lineno="74" refid="structarrow_1_1io_1_1_hdfs_path_info_1a514410f3fe5cc683e33b5dd0d6c837dc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a514410f3fe5cc683e33b5dd0d6c837dc" kindref="member">group</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>times<sp/>in<sp/>UNIX<sp/>timestamps<sp/>(seconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structarrow_1_1io_1_1_hdfs_path_info_1ace8b31928fa6af87401eabf072380af7" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1ace8b31928fa6af87401eabf072380af7" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="78" refid="structarrow_1_1io_1_1_hdfs_path_info_1ad9d5d9dd17992865ba646a3c2d2064e0" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1ad9d5d9dd17992865ba646a3c2d2064e0" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structarrow_1_1io_1_1_hdfs_path_info_1a209165368b934ff9775dc40a96319152" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a209165368b934ff9775dc40a96319152" kindref="member">last_modified_time</ref>;</highlight></codeline>
<codeline lineno="81" refid="structarrow_1_1io_1_1_hdfs_path_info_1a614821e49ed4cfb27669cbbdf19219ab" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a614821e49ed4cfb27669cbbdf19219ab" kindref="member">last_access_time</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structarrow_1_1io_1_1_hdfs_path_info_1a3b2fcdb2a344f54080c9b67de4bda71c" refkind="member"><highlight class="normal"><sp/><sp/>int16_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1a3b2fcdb2a344f54080c9b67de4bda71c" kindref="member">replication</ref>;</highlight></codeline>
<codeline lineno="84" refid="structarrow_1_1io_1_1_hdfs_path_info_1af52863d30be7e7fbf0f3e419853d78ac" refkind="member"><highlight class="normal"><sp/><sp/>int16_t<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info_1af52863d30be7e7fbf0f3e419853d78ac" kindref="member">permissions</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structarrow_1_1io_1_1_hdfs_connection_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1io_1_1_hdfs_connection_config" kindref="compound">HdfsConnectionConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="88" refid="structarrow_1_1io_1_1_hdfs_connection_config_1a9385f8c5533c7bc031a002ff4a1f1b12" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config_1a9385f8c5533c7bc031a002ff4a1f1b12" kindref="member">host</ref>;</highlight></codeline>
<codeline lineno="89" refid="structarrow_1_1io_1_1_hdfs_connection_config_1ade93c1d9226f3725e225db43d7f24f14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config_1ade93c1d9226f3725e225db43d7f24f14" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="90" refid="structarrow_1_1io_1_1_hdfs_connection_config_1a14e2d5125e7f6a279f9dd3d860606601" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config_1a14e2d5125e7f6a279f9dd3d860606601" kindref="member">user</ref>;</highlight></codeline>
<codeline lineno="91" refid="structarrow_1_1io_1_1_hdfs_connection_config_1afff850aed45fa5726af4f9af3db9f427" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config_1afff850aed45fa5726af4f9af3db9f427" kindref="member">kerb_ticket</ref>;</highlight></codeline>
<codeline lineno="92" refid="structarrow_1_1io_1_1_hdfs_connection_config_1a80309f39df9ab74cfee3c3dc4cb5ebab" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config_1a80309f39df9ab74cfee3c3dc4cb5ebab" kindref="member">extra_conf</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classarrow_1_1io_1_1_hadoop_file_system" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_hadoop_file_system" kindref="compound">HadoopFileSystem</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_file_system" kindref="compound">FileSystem</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_hadoop_file_system" kindref="compound">HadoopFileSystem</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>to<sp/>an<sp/>HDFS<sp/>cluster<sp/>given<sp/>a<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>config<sp/>(in):<sp/>configuration<sp/>for<sp/>connecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>fs<sp/>(out):<sp/>the<sp/>created<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Connect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1io_1_1_hdfs_connection_config" kindref="compound">HdfsConnectionConfig</ref>*<sp/>config,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;HadoopFileSystem&gt;*<sp/>fs);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>directory<sp/>and<sp/>all<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path<sp/>(in):<sp/>absolute<sp/>HDFS<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>MakeDirectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>file<sp/>or<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path:<sp/>absolute<sp/>path<sp/>to<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>recursive:<sp/>if<sp/>path<sp/>is<sp/>a<sp/>directory,<sp/>delete<sp/>contents<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>error<sp/>status<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Delete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DeleteDirectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>from<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Disconnect();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path<sp/>(in):<sp/>absolute<sp/>HDFS<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>bool,<sp/>true<sp/>if<sp/>the<sp/>path<sp/>exists,<sp/>false<sp/>if<sp/>not<sp/>(or<sp/>on<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Exists(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path<sp/>(in):<sp/>absolute<sp/>HDFS<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>info<sp/>(out)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetPathInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/><ref refid="structarrow_1_1io_1_1_hdfs_path_info" kindref="compound">HdfsPathInfo</ref>*<sp/>info);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>nbytes<sp/>(out):<sp/>total<sp/>capacity<sp/>of<sp/>the<sp/>filesystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetCapacity(int64_t*<sp/>nbytes);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>nbytes<sp/>(out):<sp/>total<sp/>bytes<sp/>used<sp/>of<sp/>the<sp/>filesystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>Status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetUsed(int64_t*<sp/>nbytes);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetChildren(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/>std::vector&lt;std::string&gt;*<sp/>listing)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ListDirectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/>std::vector&lt;HdfsPathInfo&gt;*<sp/>listing);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetWorkingDirectory(std::string*<sp/>out);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Chown(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>group);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Chmod(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>file<sp/>or<sp/>directory<sp/>from<sp/>source<sp/>path<sp/>to<sp/>destination<sp/>path<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>filesystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Rename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dst)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/><ref refid="structarrow_1_1io_1_1_file_statistics" kindref="compound">FileStatistics</ref>*<sp/>stat)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(wesm):<sp/>GetWorkingDirectory,<sp/>SetWorkingDirectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>an<sp/>HDFS<sp/>file<sp/>in<sp/>READ<sp/>mode.<sp/>Returns<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>if<sp/>the<sp/>file<sp/>is<sp/>not<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path<sp/>complete<sp/>file<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OpenReadable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/>int32_t<sp/>buffer_size,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;HdfsReadableFile&gt;*<sp/>file);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OpenReadable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/>std::shared_ptr&lt;HdfsReadableFile&gt;*<sp/>file);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FileMode::WRITE<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>path<sp/>complete<sp/>file<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>buffer_size,<sp/>0<sp/>for<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>replication,<sp/>0<sp/>for<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>default_block_size,<sp/>0<sp/>for<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OpenWritable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append,<sp/>int32_t<sp/>buffer_size,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>replication,<sp/>int64_t<sp/>default_block_size,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;HdfsOutputStream&gt;*<sp/>file);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OpenWritable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;HdfsOutputStream&gt;*<sp/>file);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202" refid="classarrow_1_1io_1_1_hadoop_file_system_1abc3f23e36cc88efe1f401afcc40e7d7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1io_1_1_hdfs_readable_file" kindref="compound">HdfsReadableFile</ref>;</highlight></codeline>
<codeline lineno="203" refid="classarrow_1_1io_1_1_hadoop_file_system_1aef44a7003c7ed4574da8ada762c967aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1io_1_1_hdfs_output_stream" kindref="compound">HdfsOutputStream</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>HadoopFileSystemImpl;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;HadoopFileSystemImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_hadoop_file_system" kindref="compound">HadoopFileSystem</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1io_1_1_hadoop_file_system" kindref="compound">HadoopFileSystem</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classarrow_1_1io_1_1_hdfs_readable_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_hdfs_readable_file" kindref="compound">HdfsReadableFile</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">RandomAccessFile</ref><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_hdfs_readable_file" kindref="compound">HdfsReadableFile</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>If<sp/>you<sp/>wish<sp/>to<sp/>read<sp/>a<sp/>particular<sp/>range<sp/>of<sp/>a<sp/>file<sp/>in<sp/>a<sp/>multithreaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>context,<sp/>you<sp/>may<sp/>prefer<sp/>to<sp/>use<sp/>ReadAt<sp/>to<sp/>avoid<sp/>locking<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Read(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>Read(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Seek(int64_t<sp/>position)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>GetSize()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_memory_pool(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_hdfs_readable_file" kindref="compound">HdfsReadableFile</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>HdfsReadableFileImpl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;HdfsReadableFileImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classarrow_1_1io_1_1_hdfs_readable_file_1a2c0e64271cef9799af36654b4b0e4604" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HadoopFileSystem::HadoopFileSystemImpl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1io_1_1_hdfs_readable_file" kindref="compound">HdfsReadableFile</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Naming<sp/>this<sp/>file<sp/>OutputStream<sp/>because<sp/>it<sp/>does<sp/>not<sp/>support<sp/>seeking<sp/>(like<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WritableFile<sp/>interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classarrow_1_1io_1_1_hdfs_output_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_hdfs_output_stream" kindref="compound">HdfsOutputStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_hdfs_output_stream" kindref="compound">HdfsOutputStream</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">OutputStream::Write</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/>int64_t<sp/>nbytes,<sp/>int64_t*<sp/>bytes_written);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Flush()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>HdfsOutputStreamImpl;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;HdfsOutputStreamImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classarrow_1_1io_1_1_hdfs_output_stream_1a2c0e64271cef9799af36654b4b0e4604" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HadoopFileSystem::HadoopFileSystemImpl;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_hdfs_output_stream" kindref="compound">HdfsOutputStream</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1io_1_1_hdfs_output_stream" kindref="compound">HdfsOutputStream</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ARROW_EXPORT<sp/><ref refid="namespacearrow_1_1io_1a559bc6c902e7879baa1713f4de2b4639" kindref="member">HaveLibHdfs</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/io/hdfs.h"/>
  </compounddef>
</doxygen>
