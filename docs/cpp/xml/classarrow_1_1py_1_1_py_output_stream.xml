<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1py_1_1_py_output_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::py::PyOutputStream</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_output_stream" prot="public" virt="non-virtual">arrow::io::OutputStream</basecompoundref>
    <includes refid="arrow_2python_2io_8h" local="no">arrow/python/io.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_output_stream_1ac6db12af6a75f65d6113e57e6e217f40" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespacearrow_1_1py_1ae397fd327253f5ed91ba845863abb948" kindref="member">PythonFile</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PythonFile&gt; arrow::py::PyOutputStream::file_</definition>
        <argsstring></argsstring>
        <name>file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="75" column="1" bodyfile="/arrow/cpp/src/arrow/python/io.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_output_stream_1aaa118271f0fe25fa7b665d8fb0e1f1a0" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::py::PyOutputStream::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="76" column="1" bodyfile="/arrow/cpp/src/arrow/python/io.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1ae0470dd349fd770f342192ac42f25769" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::py::PyOutputStream::PyOutputStream</definition>
        <argsstring>(PyObject *file)</argsstring>
        <name>PyOutputStream</name>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1a696d409609da91bd1398a2a3fda7262f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::py::PyOutputStream::~PyOutputStream</definition>
        <argsstring>() override</argsstring>
        <name>~PyOutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1a1e4de0c67f40ca3442953e307cc44681" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::PyOutputStream::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream cleanly. </para>        </briefdescription>
        <detaileddescription>
<para>For writable streams, this will attempt to flush any pending data before releasing the underlying resource.</para><para>After <ref refid="classarrow_1_1py_1_1_py_output_stream_1a1e4de0c67f40ca3442953e307cc44681" kindref="member">Close()</ref> is called, <ref refid="classarrow_1_1py_1_1_py_output_stream_1a7e6e88022e68192de12f318773b9744f" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1a74355d212c2b617c4adfaf7de60513bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::PyOutputStream::Abort</definition>
        <argsstring>() override</argsstring>
        <name>Abort</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60">Abort</reimplements>
        <briefdescription>
<para>Close the stream abruptly. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not guarantee that any pending data is flushed. It merely releases any underlying resource used by the stream for its operation.</para><para>After <ref refid="classarrow_1_1py_1_1_py_output_stream_1a74355d212c2b617c4adfaf7de60513bc" kindref="member">Abort()</ref> is called, <ref refid="classarrow_1_1py_1_1_py_output_stream_1a7e6e88022e68192de12f318773b9744f" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1a7e6e88022e68192de12f318773b9744f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::py::PyOutputStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1a4d0a111f918ae9b33341d86aeeef575e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::py::PyOutputStream::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1acf6e5f8750ce5c38879dea976abef386" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::PyOutputStream::Write</definition>
        <argsstring>(const void *data, int64_t nbytes) override</argsstring>
        <name>Write</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d">Write</reimplements>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This method always processes the bytes in full. Depending on the semantics of the stream, the data may be written out immediately, held in a buffer, or written asynchronously. In the case where the stream buffers the data, it will be copied. To avoid potentially large copies, use the Write variant that takes an owned <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_output_stream_1aa55c82246902c9ba5dd66b5438f47f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::PyOutputStream::Write</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;buffer) override</argsstring>
        <name>Write</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069">Write</reimplements>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Since the <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> owns its memory, this method can avoid a copy if buffering is required. See <ref refid="classarrow_1_1py_1_1_py_output_stream_1acf6e5f8750ce5c38879dea976abef386" kindref="member">Write(const void*, int64_t)</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/io.h" line="72" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3692">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="3693" relation="public-inheritance">
        </childnode>
        <childnode refid="3694" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3694">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="3693">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3691">
        <label>arrow::py::PyOutputStream</label>
        <link refid="classarrow_1_1py_1_1_py_output_stream"/>
        <childnode refid="3692" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3696">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="3697" relation="public-inheritance">
        </childnode>
        <childnode refid="3698" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3698">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="3697">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3695">
        <label>arrow::py::PyOutputStream</label>
        <link refid="classarrow_1_1py_1_1_py_output_stream"/>
        <childnode refid="3696" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/python/io.h" line="62" column="1" bodyfile="/arrow/cpp/src/arrow/python/io.h" bodystart="62" bodyend="77"/>
    <listofallmembers>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1a74355d212c2b617c4adfaf7de60513bc" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1a1e4de0c67f40ca3442953e307cc44681" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1a7e6e88022e68192de12f318773b9744f" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1ac6db12af6a75f65d6113e57e6e217f40" prot="private" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>file_</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Flush</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_output_stream_1a5b1e0adea7ef92368ddc07027995aca1" prot="protected" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>OutputStream</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1aaa118271f0fe25fa7b665d8fb0e1f1a0" prot="private" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>position_</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1ae0470dd349fd770f342192ac42f25769" prot="public" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>PyOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1a4d0a111f918ae9b33341d86aeeef575e" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1acf6e5f8750ce5c38879dea976abef386" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1aa55c82246902c9ba5dd66b5438f47f33" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" virt="non-virtual" ambiguityscope="arrow::io::OutputStream::"><scope>arrow::py::PyOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::py::PyOutputStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1py_1_1_py_output_stream_1a696d409609da91bd1398a2a3fda7262f" prot="public" virt="non-virtual"><scope>arrow::py::PyOutputStream</scope><name>~PyOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" virt="virtual"><scope>arrow::py::PyOutputStream</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
