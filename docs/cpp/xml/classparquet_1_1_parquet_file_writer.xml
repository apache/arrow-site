<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_file_writer" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetFileWriter</compoundname>
    <includes refid="file__writer_8h" local="no">parquet/file_writer.h</includes>
    <innerclass refid="structparquet_1_1_parquet_file_writer_1_1_contents" prot="public">parquet::ParquetFileWriter::Contents</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_file_writer_1acbf07854bc8cf74f007ff89f947966b5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_parquet_file_writer_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Contents&gt; parquet::ParquetFileWriter::contents_</definition>
        <argsstring></argsstring>
        <name>contents_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="243" column="1" bodyfile="/arrow/cpp/src/parquet/file_writer.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_file_writer_1a5849694f44edb413e450fbb3ffb11d42" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileMetaData&gt; parquet::ParquetFileWriter::file_metadata_</definition>
        <argsstring></argsstring>
        <name>file_metadata_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="244" column="1" bodyfile="/arrow/cpp/src/parquet/file_writer.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1aa6e05250afc1a6adb63ab53a33f58d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetFileWriter::ParquetFileWriter</definition>
        <argsstring>()</argsstring>
        <name>ParquetFileWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1aceedb90c63f130c72f943b3dd04a1c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetFileWriter::~ParquetFileWriter</definition>
        <argsstring>()</argsstring>
        <name>~ParquetFileWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1ae95e44473fff74e9da1c11d20bafd1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ParquetFileWriter::Open</definition>
        <argsstring>(std::unique_ptr&lt; Contents &gt; contents)</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_parquet_file_writer_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a352bbb52694762f385307dbbc741ea40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ParquetFileWriter::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a55539be44178e48f19270ca769f53253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> *</type>
        <definition>RowGroupWriter* parquet::ParquetFileWriter::AppendRowGroup</definition>
        <argsstring>(int64_t num_rows)</argsstring>
        <name>AppendRowGroup</name>
        <param>
          <type>int64_t</type>
          <declname>num_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a601225782f480497ffd6c02936cf838e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> *</type>
        <definition>RowGroupWriter* parquet::ParquetFileWriter::AppendRowGroup</definition>
        <argsstring>()</argsstring>
        <name>AppendRowGroup</name>
        <briefdescription>
<para>Construct a <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> with an arbitrary number of rows. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is solely within the <ref refid="classparquet_1_1_parquet_file_writer" kindref="compound">ParquetFileWriter</ref>. The <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> is only valid until the next call to AppendRowGroup or AppendBufferedRowGroup or Close. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a723fcf108d2f53fa2e592a6c256bbf5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> *</type>
        <definition>RowGroupWriter* parquet::ParquetFileWriter::AppendBufferedRowGroup</definition>
        <argsstring>()</argsstring>
        <name>AppendBufferedRowGroup</name>
        <briefdescription>
<para>Construct a <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> that buffers all the values until the RowGroup is ready. </para>        </briefdescription>
        <detaileddescription>
<para>Use this if you want to write a RowGroup based on a certain size</para><para>Ownership is solely within the <ref refid="classparquet_1_1_parquet_file_writer" kindref="compound">ParquetFileWriter</ref>. The <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref> is only valid until the next call to AppendRowGroup or AppendBufferedRowGroup or Close. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a1a6b5ae5cadc99f1ac093df678bbfb35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::ParquetFileWriter::num_columns</definition>
        <argsstring>() const</argsstring>
        <name>num_columns</name>
        <briefdescription>
<para>Number of columns. </para>        </briefdescription>
        <detaileddescription>
<para>This number is fixed during the lifetime of the writer as it is determined via the schema. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1ab271b0fad335634daa6274e933908772" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ParquetFileWriter::num_rows</definition>
        <argsstring>() const</argsstring>
        <name>num_rows</name>
        <briefdescription>
<para>Number of rows in the yet started RowGroups. </para>        </briefdescription>
        <detaileddescription>
<para>Changes on the addition of a new RowGroup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a6fdb0c2d3f7cfab903620222fa5058db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::ParquetFileWriter::num_row_groups</definition>
        <argsstring>() const</argsstring>
        <name>num_row_groups</name>
        <briefdescription>
<para>Number of started RowGroups. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1ac3b0af3ecc7d2d47aa4280ff577da41f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;WriterProperties&gt;&amp; parquet::ParquetFileWriter::properties</definition>
        <argsstring>() const</argsstring>
        <name>properties</name>
        <briefdescription>
<para>Configuration passed to the writer, e.g. the used Parquet format version. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a6a9fb0253092c63cfa427b77b8c8541b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref> *</type>
        <definition>const SchemaDescriptor* parquet::ParquetFileWriter::schema</definition>
        <argsstring>() const</argsstring>
        <name>schema</name>
        <briefdescription>
<para>Returns the file schema descriptor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a64cb25e0fc4c08a164a6a45f73e764bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
        <definition>const ColumnDescriptor* parquet::ParquetFileWriter::descr</definition>
        <argsstring>(int i) const</argsstring>
        <name>descr</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a column descriptor in schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a70e3b0b022378c3eccca72fff735d011" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; const <ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;const KeyValueMetadata&gt;&amp; parquet::ParquetFileWriter::key_value_metadata</definition>
        <argsstring>() const</argsstring>
        <name>key_value_metadata</name>
        <briefdescription>
<para>Returns the file custom metadata. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a2f98860267e02a32ee7f5e8b44bba299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;FileMetaData&gt; parquet::ParquetFileWriter::metadata</definition>
        <argsstring>() const</argsstring>
        <name>metadata</name>
        <briefdescription>
<para>Returns the file metadata, only available after calling <ref refid="classparquet_1_1_parquet_file_writer_1a352bbb52694762f385307dbbc741ea40" kindref="member">Close()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="239" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1a4e8a2d56f4d8d8d8fca65b6ea8369793" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_writer" kindref="compound">ParquetFileWriter</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ParquetFileWriter&gt; parquet::ParquetFileWriter::Open</definition>
        <argsstring>(std::shared_ptr&lt;::arrow::io::OutputStream &gt; sink, std::shared_ptr&lt; schema::GroupNode &gt; schema, std::shared_ptr&lt; WriterProperties &gt; properties=default_writer_properties(), std::shared_ptr&lt; const KeyValueMetadata &gt; key_value_metadata=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">arrow::io::OutputStream</ref> &gt;</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_group_node" kindref="compound">schema::GroupNode</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>properties</declname>
          <defval><ref refid="namespaceparquet_1af3ef28d276d5193806a95e7da5309e4d" kindref="member">default_writer_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; const <ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref> &gt;</type>
          <declname>key_value_metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_writer_1ae6bc37b20e2c514c1421d4b61c03fd83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_writer" kindref="compound">ParquetFileWriter</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ParquetFileWriter&gt; parquet::ParquetFileWriter::Open</definition>
        <argsstring>(std::shared_ptr&lt; OutputStream &gt; sink, std::shared_ptr&lt; schema::GroupNode &gt; schema, std::shared_ptr&lt; WriterProperties &gt; properties=default_writer_properties(), std::shared_ptr&lt; const KeyValueMetadata &gt; key_value_metadata=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_output_stream" kindref="compound">OutputStream</ref> &gt;</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_group_node" kindref="compound">schema::GroupNode</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>properties</declname>
          <defval><ref refid="namespaceparquet_1af3ef28d276d5193806a95e7da5309e4d" kindref="member">default_writer_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; const <ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref> &gt;</type>
          <declname>key_value_metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="182" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/file_writer.h" line="129" column="1" bodyfile="/arrow/cpp/src/parquet/file_writer.h" bodystart="129" bodyend="245"/>
    <listofallmembers>
      <member refid="classparquet_1_1_parquet_file_writer_1a723fcf108d2f53fa2e592a6c256bbf5e" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>AppendBufferedRowGroup</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a55539be44178e48f19270ca769f53253" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>AppendRowGroup</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a601225782f480497ffd6c02936cf838e" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>AppendRowGroup</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a352bbb52694762f385307dbbc741ea40" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>Close</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1acbf07854bc8cf74f007ff89f947966b5" prot="private" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>contents_</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a64cb25e0fc4c08a164a6a45f73e764bc" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>descr</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a5849694f44edb413e450fbb3ffb11d42" prot="private" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>file_metadata_</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a70e3b0b022378c3eccca72fff735d011" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>key_value_metadata</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a2f98860267e02a32ee7f5e8b44bba299" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>metadata</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a1a6b5ae5cadc99f1ac093df678bbfb35" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>num_columns</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a6fdb0c2d3f7cfab903620222fa5058db" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>num_row_groups</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1ab271b0fad335634daa6274e933908772" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>num_rows</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a4e8a2d56f4d8d8d8fca65b6ea8369793" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1ae6bc37b20e2c514c1421d4b61c03fd83" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1ae95e44473fff74e9da1c11d20bafd1aa" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1aa6e05250afc1a6adb63ab53a33f58d31" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>ParquetFileWriter</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1ac3b0af3ecc7d2d47aa4280ff577da41f" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>properties</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1a6a9fb0253092c63cfa427b77b8c8541b" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>schema</name></member>
      <member refid="classparquet_1_1_parquet_file_writer_1aceedb90c63f130c72f943b3dd04a1c89" prot="public" virt="non-virtual"><scope>parquet::ParquetFileWriter</scope><name>~ParquetFileWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
