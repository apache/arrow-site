<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_record_batch_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::flight::RecordBatchStream</compoundname>
    <basecompoundref refid="classarrow_1_1flight_1_1_flight_data_stream" prot="public" virt="non-virtual">arrow::flight::FlightDataStream</basecompoundref>
    <includes refid="server_8h" local="no">arrow/flight/server.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1flight_1_1_record_batch_stream_1a1ddc377c4a9933c1223dbe6838b59bfb" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; RecordBatchStreamImpl &gt;</type>
        <definition>std::unique_ptr&lt;RecordBatchStreamImpl&gt; arrow::flight::RecordBatchStream::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="79" column="1" bodyfile="/arrow/cpp/src/arrow/flight/server.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_record_batch_stream_1a5269bfef782a5698cfde04ae5b79b1db" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::RecordBatchStream::RecordBatchStream</definition>
        <argsstring>(const std::shared_ptr&lt; RecordBatchReader &gt; &amp;reader, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>RecordBatchStream</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref> &gt; &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reader</parametername>
</parameternamelist>
<parameterdescription>
<para>produces a sequence of record batches </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocations </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_record_batch_stream_1a71ad52a9592a84d125425448bcef083b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::RecordBatchStream::~RecordBatchStream</definition>
        <argsstring>() override</argsstring>
        <name>~RecordBatchStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_record_batch_stream_1aaeec98eb19aee016775b681306292ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::flight::RecordBatchStream::schema</definition>
        <argsstring>() override</argsstring>
        <name>schema</name>
        <reimplements refid="classarrow_1_1flight_1_1_flight_data_stream_1a4f4e89928e508a0405622edbd584a82f">schema</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_record_batch_stream_1aa2f4d76e34bd384d1b8db10a1e0f22df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::RecordBatchStream::GetSchemaPayload</definition>
        <argsstring>(FlightPayload *payload) override</argsstring>
        <name>GetSchemaPayload</name>
        <reimplements refid="classarrow_1_1flight_1_1_flight_data_stream_1ac24218f540e244c11c97449c0bc19978">GetSchemaPayload</reimplements>
        <param>
          <type><ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
<para>Compute <ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> containing serialized <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_record_batch_stream_1a732777ec0e59d82b073b3ade484b892d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::RecordBatchStream::Next</definition>
        <argsstring>(FlightPayload *payload) override</argsstring>
        <name>Next</name>
        <reimplements refid="classarrow_1_1flight_1_1_flight_data_stream_1a445f9c7807ed210a7a1b6f9854763684">Next</reimplements>
        <param>
          <type><ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A basic implementation of <ref refid="classarrow_1_1flight_1_1_flight_data_stream" kindref="compound">FlightDataStream</ref> that will provide a sequence of FlightData messages to be written to a gRPC stream. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3879">
        <label>arrow::flight::RecordBatchStream</label>
        <link refid="classarrow_1_1flight_1_1_record_batch_stream"/>
        <childnode refid="3880" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3880">
        <label>arrow::flight::FlightDataStream</label>
        <link refid="classarrow_1_1flight_1_1_flight_data_stream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3881">
        <label>arrow::flight::RecordBatchStream</label>
        <link refid="classarrow_1_1flight_1_1_record_batch_stream"/>
        <childnode refid="3882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3882">
        <label>arrow::flight::FlightDataStream</label>
        <link refid="classarrow_1_1flight_1_1_flight_data_stream"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/flight/server.h" line="65" column="1" bodyfile="/arrow/cpp/src/arrow/flight/server.h" bodystart="65" bodyend="80"/>
    <listofallmembers>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1aa2f4d76e34bd384d1b8db10a1e0f22df" prot="public" virt="virtual"><scope>arrow::flight::RecordBatchStream</scope><name>GetSchemaPayload</name></member>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1a1ddc377c4a9933c1223dbe6838b59bfb" prot="private" virt="non-virtual"><scope>arrow::flight::RecordBatchStream</scope><name>impl_</name></member>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1a732777ec0e59d82b073b3ade484b892d" prot="public" virt="virtual"><scope>arrow::flight::RecordBatchStream</scope><name>Next</name></member>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1a5269bfef782a5698cfde04ae5b79b1db" prot="public" virt="non-virtual"><scope>arrow::flight::RecordBatchStream</scope><name>RecordBatchStream</name></member>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1aaeec98eb19aee016775b681306292ac8" prot="public" virt="virtual"><scope>arrow::flight::RecordBatchStream</scope><name>schema</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_data_stream_1a6a581529349930f3fac82fa1cff7ee44" prot="public" virt="virtual"><scope>arrow::flight::RecordBatchStream</scope><name>~FlightDataStream</name></member>
      <member refid="classarrow_1_1flight_1_1_record_batch_stream_1a71ad52a9592a84d125425448bcef083b" prot="public" virt="non-virtual"><scope>arrow::flight::RecordBatchStream</scope><name>~RecordBatchStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
