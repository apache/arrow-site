<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1fs_1_1_file_selector" kind="struct" language="C++" prot="public">
    <compoundname>arrow::fs::FileSelector</compoundname>
    <includes refid="filesystem_8h" local="no">arrow/filesystem/filesystem.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_selector_1a5736330a72fa912314aba0ec4f0e4105" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::fs::FileSelector::base_dir</definition>
        <argsstring></argsstring>
        <name>base_dir</name>
        <briefdescription>
<para>The directory in which to select files. </para>        </briefdescription>
        <detaileddescription>
<para>If the path exists but doesn&apos;t point to a directory, this should be an error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="146" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_selector_1aead1e24f5aa8bb7a3e893436cde83ea7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::fs::FileSelector::allow_not_found</definition>
        <argsstring></argsstring>
        <name>allow_not_found</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>The behavior if <computeroutput>base_dir</computeroutput> isn&apos;t found in the filesystem. </para>        </briefdescription>
        <detaileddescription>
<para>If false, an error is returned. If true, an empty selection is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="149" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_selector_1ac5642a0e14beebb274c80b24dda2168a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::fs::FileSelector::recursive</definition>
        <argsstring></argsstring>
        <name>recursive</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether to recurse into subdirectories. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="151" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1fs_1_1_file_selector_1a2b7d0aff4fbc17195aa746c9df425c17" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::fs::FileSelector::max_recursion</definition>
        <argsstring></argsstring>
        <name>max_recursion</name>
        <initializer>= INT32_MAX</initializer>
        <briefdescription>
<para>The maximum number of subdirectories to recurse into. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="153" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1fs_1_1_file_selector_1a84fe98b7e3633d6e0902bc0486c664bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::fs::FileSelector::FileSelector</definition>
        <argsstring>()</argsstring>
        <name>FileSelector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="155" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="155" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File selector for filesystem APIs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/filesystem/filesystem.h" line="143" column="1" bodyfile="/arrow/cpp/src/arrow/filesystem/filesystem.h" bodystart="143" bodyend="156"/>
    <listofallmembers>
      <member refid="structarrow_1_1fs_1_1_file_selector_1aead1e24f5aa8bb7a3e893436cde83ea7" prot="public" virt="non-virtual"><scope>arrow::fs::FileSelector</scope><name>allow_not_found</name></member>
      <member refid="structarrow_1_1fs_1_1_file_selector_1a5736330a72fa912314aba0ec4f0e4105" prot="public" virt="non-virtual"><scope>arrow::fs::FileSelector</scope><name>base_dir</name></member>
      <member refid="structarrow_1_1fs_1_1_file_selector_1a84fe98b7e3633d6e0902bc0486c664bd" prot="public" virt="non-virtual"><scope>arrow::fs::FileSelector</scope><name>FileSelector</name></member>
      <member refid="structarrow_1_1fs_1_1_file_selector_1a2b7d0aff4fbc17195aa746c9df425c17" prot="public" virt="non-virtual"><scope>arrow::fs::FileSelector</scope><name>max_recursion</name></member>
      <member refid="structarrow_1_1fs_1_1_file_selector_1ac5642a0e14beebb274c80b24dda2168a" prot="public" virt="non-virtual"><scope>arrow::fs::FileSelector</scope><name>recursive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
