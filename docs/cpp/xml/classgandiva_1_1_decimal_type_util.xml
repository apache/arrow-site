<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_decimal_type_util" kind="class" language="C++" prot="public">
    <compoundname>gandiva::DecimalTypeUtil</compoundname>
    <includes refid="decimal__type__util_8h" local="no">gandiva/decimal_type_util.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786d" prot="public" static="no">
        <name>Op</name>
        <enumvalue id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786da87399cd01179dedb8b541b6c9a79f666" prot="public">
          <name>kOpAdd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dad8d40d9fb135055c7629074dc1f50774" prot="public">
          <name>kOpSubtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dad7ffe3d675842a22a38dda2951c6ba77" prot="public">
          <name>kOpMultiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dafc0fc4b354a8927c173dac28243db02b" prot="public">
          <name>kOpDivide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786da7d401fbe3e656b9759299d477e019cda" prot="public">
          <name>kOpMod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="34" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="34" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_decimal_type_util_1ae2c57d037338b471b2093710b0ced0df" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t gandiva::DecimalTypeUtil::kMaxDecimal32Precision</definition>
        <argsstring></argsstring>
        <name>kMaxDecimal32Precision</name>
        <initializer>= 9</initializer>
        <briefdescription>
<para>The maximum precision representable by a 4-byte decimal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="43" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_decimal_type_util_1a6688f4ea5f594c9711ce2cd4978d495c" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t gandiva::DecimalTypeUtil::kMaxDecimal64Precision</definition>
        <argsstring></argsstring>
        <name>kMaxDecimal64Precision</name>
        <initializer>= 18</initializer>
        <briefdescription>
<para>The maximum precision representable by a 8-byte decimal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="46" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_decimal_type_util_1a857deac1a0dd560cbe0e1940aef5b141" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t gandiva::DecimalTypeUtil::kMaxPrecision</definition>
        <argsstring></argsstring>
        <name>kMaxPrecision</name>
        <initializer>= 38</initializer>
        <briefdescription>
<para>The maximum precision representable by a 16-byte decimal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="49" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_decimal_type_util_1a50b0e6a2d30043210fa6b4f02d11e4d9" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t gandiva::DecimalTypeUtil::kMaxScale</definition>
        <argsstring></argsstring>
        <name>kMaxScale</name>
        <initializer>= <ref refid="classgandiva_1_1_decimal_type_util_1a857deac1a0dd560cbe0e1940aef5b141" kindref="member">kMaxPrecision</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="52" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_decimal_type_util_1aa9aa2729bfc1cb3bc02595e10ea6e68d" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t gandiva::DecimalTypeUtil::kMinAdjustedScale</definition>
        <argsstring></argsstring>
        <name>kMinAdjustedScale</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="58" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_decimal_type_util_1aa117fcddd64c11e010ed8b878130f506" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>static Status gandiva::DecimalTypeUtil::GetResultType</definition>
        <argsstring>(Op op, const Decimal128TypeVector &amp;in_types, Decimal128TypePtr *out_type)</argsstring>
        <name>GetResultType</name>
        <param>
          <type><ref refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786d" kindref="member">Op</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegandiva_1af1ad03d994941c2653489d46f98c94dc" kindref="member">Decimal128TypeVector</ref> &amp;</type>
          <declname>in_types</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a5822af0f79ea1f5ced727ba8f4d038c7" kindref="member">Decimal128TypePtr</ref> *</type>
          <declname>out_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_decimal_type_util_1a31fe73a452f6982400e22362ac74cd1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5822af0f79ea1f5ced727ba8f4d038c7" kindref="member">Decimal128TypePtr</ref></type>
        <definition>Decimal128TypePtr gandiva::DecimalTypeUtil::MakeType</definition>
        <argsstring>(int32_t precision, int32_t scale)</argsstring>
        <name>MakeType</name>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="65" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classgandiva_1_1_decimal_type_util_1a5300b0bb7133de7b3fbfd48b7c56322b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5822af0f79ea1f5ced727ba8f4d038c7" kindref="member">Decimal128TypePtr</ref></type>
        <definition>static Decimal128TypePtr gandiva::DecimalTypeUtil::MakeAdjustedType</definition>
        <argsstring>(int32_t precision, int32_t scale)</argsstring>
        <name>MakeAdjustedType</name>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="69" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="69" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handles conversion of scale/precision for operations on decimal types. </para>    </briefdescription>
    <detaileddescription>
<para>TODO : do validations for all of these. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/decimal_type_util.h" line="32" column="1" bodyfile="/arrow/cpp/src/gandiva/decimal_type_util.h" bodystart="32" bodyend="78"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_decimal_type_util_1aa117fcddd64c11e010ed8b878130f506" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>GetResultType</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1ae2c57d037338b471b2093710b0ced0df" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kMaxDecimal32Precision</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6688f4ea5f594c9711ce2cd4978d495c" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kMaxDecimal64Precision</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a857deac1a0dd560cbe0e1940aef5b141" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kMaxPrecision</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a50b0e6a2d30043210fa6b4f02d11e4d9" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kMaxScale</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1aa9aa2729bfc1cb3bc02595e10ea6e68d" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kMinAdjustedScale</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786da87399cd01179dedb8b541b6c9a79f666" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kOpAdd</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dafc0fc4b354a8927c173dac28243db02b" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kOpDivide</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786da7d401fbe3e656b9759299d477e019cda" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kOpMod</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dad7ffe3d675842a22a38dda2951c6ba77" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kOpMultiply</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786dad8d40d9fb135055c7629074dc1f50774" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>kOpSubtract</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a5300b0bb7133de7b3fbfd48b7c56322b" prot="private" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>MakeAdjustedType</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a31fe73a452f6982400e22362ac74cd1b" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>MakeType</name></member>
      <member refid="classgandiva_1_1_decimal_type_util_1a6eb11ca5d714564c12c40173ed89786d" prot="public" virt="non-virtual"><scope>gandiva::DecimalTypeUtil</scope><name>Op</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
