<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_scalar" kind="struct" language="C++" prot="public">
    <compoundname>arrow::Scalar</compoundname>
    <basecompoundref refid="classarrow_1_1util_1_1_equality_comparable" prot="public" virt="non-virtual">arrow::util::EqualityComparable&lt; Scalar &gt;</basecompoundref>
    <derivedcompoundref refid="structarrow_1_1_base_binary_scalar" prot="public" virt="non-virtual">arrow::BaseBinaryScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_base_list_scalar" prot="public" virt="non-virtual">arrow::BaseListScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_decimal128_scalar" prot="public" virt="non-virtual">arrow::Decimal128Scalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_dictionary_scalar" prot="public" virt="non-virtual">arrow::DictionaryScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_extension_scalar" prot="public" virt="non-virtual">arrow::ExtensionScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; T, CType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_null_scalar" prot="public" virt="non-virtual">arrow::NullScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_struct_scalar" prot="public" virt="non-virtual">arrow::StructScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_union_scalar" prot="public" virt="non-virtual">arrow::UnionScalar</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; BooleanType, bool &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; DoubleType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; FloatType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; HalfFloatType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; Int16Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; Int32Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; Int64Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; Int8Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; UInt16Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; UInt32Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; UInt64Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1internal_1_1_primitive_scalar" prot="public" virt="non-virtual">arrow::internal::PrimitiveScalar&lt; UInt8Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; Date32Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; Date64Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; DayTimeIntervalType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; DurationType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; MonthIntervalType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; Time32Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; Time64Type &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_temporal_scalar" prot="public" virt="non-virtual">arrow::TemporalScalar&lt; TimestampType &gt;</derivedcompoundref>
    <includes refid="scalar_8h" local="no">arrow/scalar.h</includes>
    <innerclass refid="structarrow_1_1_scalar_1_1_hash" prot="public">arrow::Scalar::Hash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1_scalar_1ae3f8aa29da0a3f3ac9d3de6a97818328" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::Scalar::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>The type of the scalar value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="54" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1_scalar_1a42453c42084d0c9a955c8c398831a57e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::Scalar::is_valid</definition>
        <argsstring></argsstring>
        <name>is_valid</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the value is valid (not null) or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="57" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1_scalar_1a6410100776cd901718531f54738a32c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::Scalar::~Scalar</definition>
        <argsstring>()=default</argsstring>
        <name>~Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_scalar_1ad9fe0e6c79f98c6875a23ed8b27e5175" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Scalar::Scalar</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; type)</argsstring>
        <name>Scalar</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="51" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_scalar_1ae2831b0780d206f113707ae9d162778e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Scalar::Equals</definition>
        <argsstring>(const Scalar &amp;other) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_scalar_1a345c3828551c3614df492397f3b558d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::Scalar::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_scalar_1a3c91f8282f4f480813f2417f1e52366a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Scalar&gt; &gt; arrow::Scalar::CastTo</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; to) const</argsstring>
        <name>CastTo</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1_scalar_1a1e0788ef6c5defa729c8703366adc815" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Scalar&gt; &gt; arrow::Scalar::Parse</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type, util::string_view repr)</argsstring>
        <name>Parse</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>util::string_view</type>
          <declname>repr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structarrow_1_1_scalar_1aff32301b232ace9c6172685d88e68e97" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Scalar::Scalar</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; type, bool is_valid)</argsstring>
        <name>Scalar</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="82" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="82" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for scalar values, representing a single value occupying an array &quot;slot&quot;. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3977">
        <label>arrow::internal::PrimitiveScalar&lt; FloatType &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4000">
        <label>arrow::internal::PrimitiveScalar&lt; UInt32Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3988">
        <label>arrow::Int32Scalar</label>
        <link refid="structarrow_1_1_int32_scalar"/>
        <childnode refid="3987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3959">
        <label>arrow::ListScalar</label>
        <link refid="structarrow_1_1_list_scalar"/>
        <childnode refid="3956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4016">
        <label>arrow::IntervalScalar&lt; DayTimeIntervalType &gt;</label>
        <link refid="structarrow_1_1_interval_scalar"/>
        <childnode refid="4015" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3958">
        <label>arrow::LargeListScalar</label>
        <link refid="structarrow_1_1_large_list_scalar"/>
        <childnode refid="3956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3966">
        <label>arrow::StructScalar</label>
        <link refid="structarrow_1_1_struct_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3964">
        <label>arrow::internal::PrimitiveScalar&lt; T, CType &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3987">
        <label>arrow::NumericScalar&lt; Int32Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3986" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3980">
        <label>arrow::internal::PrimitiveScalar&lt; HalfFloatType &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3998">
        <label>arrow::NumericScalar&lt; UInt16Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3969">
        <label>arrow::IntervalScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_interval_scalar"/>
        <childnode refid="3967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3956">
        <label>arrow::BaseListScalar</label>
        <link refid="structarrow_1_1_base_list_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3983">
        <label>arrow::internal::PrimitiveScalar&lt; Int16Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4004">
        <label>arrow::NumericScalar&lt; UInt64Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="4003" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3951">
        <label>arrow::BinaryScalar</label>
        <link refid="structarrow_1_1_binary_scalar"/>
        <childnode refid="3950" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3968">
        <label>arrow::DateScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_date_scalar"/>
        <childnode refid="3967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3948">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="3949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3965">
        <label>arrow::NullScalar</label>
        <link refid="structarrow_1_1_null_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4011">
        <label>arrow::Date32Scalar</label>
        <link refid="structarrow_1_1_date32_scalar"/>
        <childnode refid="4010" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4017">
        <label>arrow::DayTimeIntervalScalar</label>
        <link refid="structarrow_1_1_day_time_interval_scalar"/>
        <childnode refid="4016" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4023">
        <label>arrow::TemporalScalar&lt; Time32Type &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4014">
        <label>arrow::Date64Scalar</label>
        <link refid="structarrow_1_1_date64_scalar"/>
        <childnode refid="4013" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3985">
        <label>arrow::Int16Scalar</label>
        <link refid="structarrow_1_1_int16_scalar"/>
        <childnode refid="3984" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4015">
        <label>arrow::TemporalScalar&lt; DayTimeIntervalType &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3989">
        <label>arrow::internal::PrimitiveScalar&lt; Int64Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3971">
        <label>arrow::UnionScalar</label>
        <link refid="structarrow_1_1_union_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4009">
        <label>arrow::TemporalScalar&lt; Date32Type &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3967">
        <label>arrow::TemporalScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3962">
        <label>arrow::DictionaryScalar</label>
        <link refid="structarrow_1_1_dictionary_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3993">
        <label>arrow::NumericScalar&lt; Int8Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3992" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3978">
        <label>arrow::NumericScalar&lt; FloatType &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3977" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3976">
        <label>arrow::DoubleScalar</label>
        <link refid="structarrow_1_1_double_scalar"/>
        <childnode refid="3975" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3999">
        <label>arrow::UInt16Scalar</label>
        <link refid="structarrow_1_1_u_int16_scalar"/>
        <childnode refid="3998" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3986">
        <label>arrow::internal::PrimitiveScalar&lt; Int32Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4007">
        <label>arrow::NumericScalar&lt; UInt8Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="4006" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4006">
        <label>arrow::internal::PrimitiveScalar&lt; UInt8Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3970">
        <label>arrow::TimeScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_time_scalar"/>
        <childnode refid="3967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3973">
        <label>arrow::BooleanScalar</label>
        <link refid="structarrow_1_1_boolean_scalar"/>
        <childnode refid="3972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3994">
        <label>arrow::Int8Scalar</label>
        <link refid="structarrow_1_1_int8_scalar"/>
        <childnode refid="3993" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3991">
        <label>arrow::Int64Scalar</label>
        <link refid="structarrow_1_1_int64_scalar"/>
        <childnode refid="3990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4018">
        <label>arrow::TemporalScalar&lt; DurationType &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4008">
        <label>arrow::UInt8Scalar</label>
        <link refid="structarrow_1_1_u_int8_scalar"/>
        <childnode refid="4007" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3960">
        <label>arrow::MapScalar</label>
        <link refid="structarrow_1_1_map_scalar"/>
        <childnode refid="3956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4002">
        <label>arrow::UInt32Scalar</label>
        <link refid="structarrow_1_1_u_int32_scalar"/>
        <childnode refid="4001" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4005">
        <label>arrow::UInt64Scalar</label>
        <link refid="structarrow_1_1_u_int64_scalar"/>
        <childnode refid="4004" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3949">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
      <node id="3981">
        <label>arrow::NumericScalar&lt; HalfFloatType &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3980" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4030">
        <label>arrow::TimestampScalar</label>
        <link refid="structarrow_1_1_timestamp_scalar"/>
        <childnode refid="4029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4024">
        <label>arrow::TimeScalar&lt; Time32Type &gt;</label>
        <link refid="structarrow_1_1_time_scalar"/>
        <childnode refid="4023" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4010">
        <label>arrow::DateScalar&lt; Date32Type &gt;</label>
        <link refid="structarrow_1_1_date_scalar"/>
        <childnode refid="4009" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4029">
        <label>arrow::TemporalScalar&lt; TimestampType &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4026">
        <label>arrow::TemporalScalar&lt; Time64Type &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3996">
        <label>arrow::NumericScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3995" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3975">
        <label>arrow::NumericScalar&lt; DoubleType &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3974" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4022">
        <label>arrow::MonthIntervalScalar</label>
        <link refid="structarrow_1_1_month_interval_scalar"/>
        <childnode refid="4021" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3963">
        <label>arrow::ExtensionScalar</label>
        <link refid="structarrow_1_1_extension_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4021">
        <label>arrow::IntervalScalar&lt; MonthIntervalType &gt;</label>
        <link refid="structarrow_1_1_interval_scalar"/>
        <childnode refid="4020" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3950">
        <label>arrow::BaseBinaryScalar</label>
        <link refid="structarrow_1_1_base_binary_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4012">
        <label>arrow::TemporalScalar&lt; Date64Type &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3953">
        <label>arrow::StringScalar</label>
        <link refid="structarrow_1_1_string_scalar"/>
        <childnode refid="3951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3997">
        <label>arrow::internal::PrimitiveScalar&lt; UInt16Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4003">
        <label>arrow::internal::PrimitiveScalar&lt; UInt64Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3982">
        <label>arrow::HalfFloatScalar</label>
        <link refid="structarrow_1_1_half_float_scalar"/>
        <childnode refid="3981" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4025">
        <label>arrow::Time32Scalar</label>
        <link refid="structarrow_1_1_time32_scalar"/>
        <childnode refid="4024" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4027">
        <label>arrow::TimeScalar&lt; Time64Type &gt;</label>
        <link refid="structarrow_1_1_time_scalar"/>
        <childnode refid="4026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4013">
        <label>arrow::DateScalar&lt; Date64Type &gt;</label>
        <link refid="structarrow_1_1_date_scalar"/>
        <childnode refid="4012" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4028">
        <label>arrow::Time64Scalar</label>
        <link refid="structarrow_1_1_time64_scalar"/>
        <childnode refid="4027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3961">
        <label>arrow::Decimal128Scalar</label>
        <link refid="structarrow_1_1_decimal128_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3954">
        <label>arrow::LargeBinaryScalar</label>
        <link refid="structarrow_1_1_large_binary_scalar"/>
        <childnode refid="3950" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3992">
        <label>arrow::internal::PrimitiveScalar&lt; Int8Type &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3974">
        <label>arrow::internal::PrimitiveScalar&lt; DoubleType &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3979">
        <label>arrow::FloatScalar</label>
        <link refid="structarrow_1_1_float_scalar"/>
        <childnode refid="3978" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4019">
        <label>arrow::DurationScalar</label>
        <link refid="structarrow_1_1_duration_scalar"/>
        <childnode refid="4018" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3990">
        <label>arrow::NumericScalar&lt; Int64Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3989" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3955">
        <label>arrow::LargeStringScalar</label>
        <link refid="structarrow_1_1_large_string_scalar"/>
        <childnode refid="3954" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4001">
        <label>arrow::NumericScalar&lt; UInt32Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="4000" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3972">
        <label>arrow::internal::PrimitiveScalar&lt; BooleanType, bool &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3957">
        <label>arrow::FixedSizeListScalar</label>
        <link refid="structarrow_1_1_fixed_size_list_scalar"/>
        <childnode refid="3956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3984">
        <label>arrow::NumericScalar&lt; Int16Type &gt;</label>
        <link refid="structarrow_1_1_numeric_scalar"/>
        <childnode refid="3983" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3995">
        <label>arrow::internal::PrimitiveScalar&lt; T &gt;</label>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3952">
        <label>arrow::FixedSizeBinaryScalar</label>
        <link refid="structarrow_1_1_fixed_size_binary_scalar"/>
        <childnode refid="3951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4020">
        <label>arrow::TemporalScalar&lt; MonthIntervalType &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4031">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="4032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4032">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/scalar.h" line="48" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="48" bodyend="84"/>
    <listofallmembers>
      <member refid="structarrow_1_1_scalar_1a3c91f8282f4f480813f2417f1e52366a" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>CastTo</name></member>
      <member refid="structarrow_1_1_scalar_1ae2831b0780d206f113707ae9d162778e" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>Equals</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a140cfdea92ae17331d8db8f69aad082f" prot="public" virt="non-virtual" ambiguityscope="EqualityComparable&lt; Scalar &gt;::"><scope>arrow::Scalar</scope><name>Equals</name></member>
      <member refid="structarrow_1_1_scalar_1a42453c42084d0c9a955c8c398831a57e" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>is_valid</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a1a7ff2c6f720209bc960524c47ad0535" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>operator!=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1ac0e8ec25e77ece923689ee31c389200e" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>operator==</name></member>
      <member refid="structarrow_1_1_scalar_1a1e0788ef6c5defa729c8703366adc815" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>Parse</name></member>
      <member refid="structarrow_1_1_scalar_1ad9fe0e6c79f98c6875a23ed8b27e5175" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_scalar_1aff32301b232ace9c6172685d88e68e97" prot="protected" virt="non-virtual"><scope>arrow::Scalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_scalar_1a345c3828551c3614df492397f3b558d4" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>ToString</name></member>
      <member refid="structarrow_1_1_scalar_1ae3f8aa29da0a3f3ac9d3de6a97818328" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>type</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a14c5ed61e030855eef29edebc6355806" prot="public" virt="non-virtual"><scope>arrow::Scalar</scope><name>~EqualityComparable</name></member>
      <member refid="structarrow_1_1_scalar_1a6410100776cd901718531f54738a32c2" prot="public" virt="virtual"><scope>arrow::Scalar</scope><name>~Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
