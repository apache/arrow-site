<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_file_decryption_properties" kind="class" language="C++" prot="public">
    <compoundname>parquet::FileDecryptionProperties</compoundname>
    <includes refid="encryption_8h" local="no">parquet/encryption.h</includes>
    <innerclass refid="classparquet_1_1_file_decryption_properties_1_1_builder" prot="public">parquet::FileDecryptionProperties::Builder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a5221841e0b47bf1bac83fde66114b322" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileDecryptionProperties::footer_key_</definition>
        <argsstring></argsstring>
        <name>footer_key_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="376" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a5ad6b6b4908e89e73f5b2305d9b74e95" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileDecryptionProperties::aad_prefix_</definition>
        <argsstring></argsstring>
        <name>aad_prefix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="377" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1ae57c773cf83ff94abde449042119f0d9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_a_a_d_prefix_verifier" kindref="compound">AADPrefixVerifier</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AADPrefixVerifier&gt; parquet::FileDecryptionProperties::aad_prefix_verifier_</definition>
        <argsstring></argsstring>
        <name>aad_prefix_verifier_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="378" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a14c865f1c8d655f45f9388d3f79f5d08" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string parquet::FileDecryptionProperties::empty_string_</definition>
        <argsstring></argsstring>
        <name>empty_string_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="380" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1ab83cc0093342c2e7a06ca09fb53365f6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref></type>
        <definition>ColumnPathToDecryptionPropertiesMap parquet::FileDecryptionProperties::column_decryption_properties_</definition>
        <argsstring></argsstring>
        <name>column_decryption_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="381" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1aa539a79bf3ff41e72c1daeebbd9615fc" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DecryptionKeyRetriever&gt; parquet::FileDecryptionProperties::key_retriever_</definition>
        <argsstring></argsstring>
        <name>key_retriever_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="383" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a4cf6e0f71ab3591e5d461815892ee259" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::check_plaintext_footer_integrity_</definition>
        <argsstring></argsstring>
        <name>check_plaintext_footer_integrity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="384" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a8dc81d8ecf87832e423daadbfc42b3cd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::plaintext_files_allowed_</definition>
        <argsstring></argsstring>
        <name>plaintext_files_allowed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="385" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_decryption_properties_1a699f5b2a57059a360e50be1eb2ef5033" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::utilized_</definition>
        <argsstring></argsstring>
        <name>utilized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="386" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1af8b14d6170b7fd399b48a793b0ec1720" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileDecryptionProperties::column_key</definition>
        <argsstring>(const std::string &amp;column_path) const</argsstring>
        <name>column_key</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>column_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a868dbaa47a1ade7ce4023d116b8ae9e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileDecryptionProperties::footer_key</definition>
        <argsstring>() const</argsstring>
        <name>footer_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="337" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a09a3964f5f293a8cc3d7e5163828edd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileDecryptionProperties::aad_prefix</definition>
        <argsstring>() const</argsstring>
        <name>aad_prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="339" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="339" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a352c96d069301e68b89d843c319b7773" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;DecryptionKeyRetriever&gt;&amp; parquet::FileDecryptionProperties::key_retriever</definition>
        <argsstring>() const</argsstring>
        <name>key_retriever</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="341" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a7259c31aedfa62a759e139ff5fbf9c62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::check_plaintext_footer_integrity</definition>
        <argsstring>() const</argsstring>
        <name>check_plaintext_footer_integrity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="345" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a5405f38a0a90c91bbd8f6d0bce8876ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::plaintext_files_allowed</definition>
        <argsstring>() const</argsstring>
        <name>plaintext_files_allowed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="349" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="349" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a2f8e91fcdf7292a91538a8f43d1d43b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_a_a_d_prefix_verifier" kindref="compound">AADPrefixVerifier</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;AADPrefixVerifier&gt;&amp; parquet::FileDecryptionProperties::aad_prefix_verifier</definition>
        <argsstring>() const</argsstring>
        <name>aad_prefix_verifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="351" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1aeb6ed58749ed02a1437951bcbd97ff90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::FileDecryptionProperties::WipeOutDecryptionKeys</definition>
        <argsstring>()</argsstring>
        <name>WipeOutDecryptionKeys</name>
        <briefdescription>
<para>Upon completion of file reading, the encryption keys in the properties will be wiped out (array values set to 0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1ac1fb6c141ea506d002787c7926629f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::FileDecryptionProperties::is_utilized</definition>
        <argsstring>()</argsstring>
        <name>is_utilized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1acbb7649c7e760da7a3a6ae01cb0683a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::FileDecryptionProperties::set_utilized</definition>
        <argsstring>()</argsstring>
        <name>set_utilized</name>
        <briefdescription>
<para><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref> object can be used for reading one file only. </para>        </briefdescription>
        <detaileddescription>
<para>Mark <ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref> as utilized once it is used to read a file as the encryption keys will be wiped out upon completion of file reading. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="364" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1aecdc32718a391a04f3a2ebdfbcef115c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileDecryptionProperties&gt; parquet::FileDecryptionProperties::DeepClone</definition>
        <argsstring>(std::string new_aad_prefix=&quot;&quot;)</argsstring>
        <name>DeepClone</name>
        <param>
          <type>std::string</type>
          <declname>new_aad_prefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref> object can be used for reading one file only. </para>        </briefdescription>
        <detaileddescription>
<para>(unless this object keeps the keyRetrieval callback only, and no explicit keys or aadPrefix). At the end, keys are wiped out in the memory. This method allows to clone identical properties for another file, with an option to update the aadPrefix (if newAadPrefix is null, aadPrefix will be cloned too) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="373" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_file_decryption_properties_1a44cf3ce4dae45bc99078a6b12f98f04d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::FileDecryptionProperties::FileDecryptionProperties</definition>
        <argsstring>(const std::string &amp;footer_key, std::shared_ptr&lt; DecryptionKeyRetriever &gt; key_retriever, bool check_plaintext_footer_integrity, const std::string &amp;aad_prefix, std::shared_ptr&lt; AADPrefixVerifier &gt; aad_prefix_verifier, const ColumnPathToDecryptionPropertiesMap &amp;column_decryption_properties, bool plaintext_files_allowed)</argsstring>
        <name>FileDecryptionProperties</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>footer_key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref> &gt;</type>
          <declname>key_retriever</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check_plaintext_footer_integrity</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>aad_prefix</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_a_a_d_prefix_verifier" kindref="compound">AADPrefixVerifier</ref> &gt;</type>
          <declname>aad_prefix_verifier</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref> &amp;</type>
          <declname>column_decryption_properties</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>plaintext_files_allowed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="388" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/encryption.h" line="247" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="247" bodyend="395"/>
    <listofallmembers>
      <member refid="classparquet_1_1_file_decryption_properties_1a09a3964f5f293a8cc3d7e5163828edd8" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>aad_prefix</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a5ad6b6b4908e89e73f5b2305d9b74e95" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>aad_prefix_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a2f8e91fcdf7292a91538a8f43d1d43b3" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>aad_prefix_verifier</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1ae57c773cf83ff94abde449042119f0d9" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>aad_prefix_verifier_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a7259c31aedfa62a759e139ff5fbf9c62" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>check_plaintext_footer_integrity</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a4cf6e0f71ab3591e5d461815892ee259" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>check_plaintext_footer_integrity_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1ab83cc0093342c2e7a06ca09fb53365f6" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>column_decryption_properties_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1af8b14d6170b7fd399b48a793b0ec1720" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>column_key</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1aecdc32718a391a04f3a2ebdfbcef115c" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>DeepClone</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a14c865f1c8d655f45f9388d3f79f5d08" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>empty_string_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a44cf3ce4dae45bc99078a6b12f98f04d" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>FileDecryptionProperties</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a868dbaa47a1ade7ce4023d116b8ae9e0" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>footer_key</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a5221841e0b47bf1bac83fde66114b322" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>footer_key_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1ac1fb6c141ea506d002787c7926629f10" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>is_utilized</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a352c96d069301e68b89d843c319b7773" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>key_retriever</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1aa539a79bf3ff41e72c1daeebbd9615fc" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>key_retriever_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a5405f38a0a90c91bbd8f6d0bce8876ff" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>plaintext_files_allowed</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a8dc81d8ecf87832e423daadbfc42b3cd" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>plaintext_files_allowed_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1acbb7649c7e760da7a3a6ae01cb0683a5" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>set_utilized</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1a699f5b2a57059a360e50be1eb2ef5033" prot="private" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>utilized_</name></member>
      <member refid="classparquet_1_1_file_decryption_properties_1aeb6ed58749ed02a1437951bcbd97ff90" prot="public" virt="non-virtual"><scope>parquet::FileDecryptionProperties</scope><name>WipeOutDecryptionKeys</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
