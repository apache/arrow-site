<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_row_group_writer" kind="class" language="C++" prot="public">
    <compoundname>parquet::RowGroupWriter</compoundname>
    <includes refid="file__writer_8h" local="no">parquet/file_writer.h</includes>
    <innerclass refid="structparquet_1_1_row_group_writer_1_1_contents" prot="public">parquet::RowGroupWriter::Contents</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_row_group_writer_1a4eef5458ca085eeb9ac6273781fdaf33" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_row_group_writer_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Contents&gt; parquet::RowGroupWriter::contents_</definition>
        <argsstring></argsstring>
        <name>contents_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="97" column="1" bodyfile="/arrow/cpp/src/parquet/file_writer.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1a954c50160dbe809f75292ab32b1bc873" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::RowGroupWriter::RowGroupWriter</definition>
        <argsstring>(std::unique_ptr&lt; Contents &gt; contents)</argsstring>
        <name>RowGroupWriter</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_row_group_writer_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1a7b502f64a4a82edbfc2a724a716d1dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> *</type>
        <definition>ColumnWriter* parquet::RowGroupWriter::NextColumn</definition>
        <argsstring>()</argsstring>
        <name>NextColumn</name>
        <briefdescription>
<para>Construct a <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> for the indicated row group-relative column. </para>        </briefdescription>
        <detaileddescription>
<para>To be used only with <ref refid="classparquet_1_1_parquet_file_writer_1a55539be44178e48f19270ca769f53253" kindref="member">ParquetFileWriter::AppendRowGroup</ref> Ownership is solely within the <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref>. The <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> is only valid until the next call to NextColumn or Close. As the contents are directly written to the sink, once a new column is started, the contents of the previous one cannot be modified anymore. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1a7c2dcd5b1afa428dc5483e073f9ccbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::RowGroupWriter::current_column</definition>
        <argsstring>()</argsstring>
        <name>current_column</name>
        <briefdescription>
<para>Index of currently written column. </para>        </briefdescription>
        <detaileddescription>
<para>Equal to -1 if <ref refid="classparquet_1_1_row_group_writer_1a7b502f64a4a82edbfc2a724a716d1dc8" kindref="member">NextColumn()</ref> has not been called yet. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1afad33a34f7dfe6e55d6e9be317693831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::RowGroupWriter::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1ad0aa38eed42364171d09f35e9c88949b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::RowGroupWriter::num_columns</definition>
        <argsstring>() const</argsstring>
        <name>num_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1ac1839fe63871924046d7f640e4ccc475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> *</type>
        <definition>ColumnWriter* parquet::RowGroupWriter::column</definition>
        <argsstring>(int i)</argsstring>
        <name>column</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> for the indicated row group column. </para>        </briefdescription>
        <detaileddescription>
<para>To be used only with <ref refid="classparquet_1_1_parquet_file_writer_1a723fcf108d2f53fa2e592a6c256bbf5e" kindref="member">ParquetFileWriter::AppendBufferedRowGroup</ref> Ownership is solely within the <ref refid="classparquet_1_1_row_group_writer" kindref="compound">RowGroupWriter</ref>. The <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> is valid until Close. The contents are buffered in memory and written to sink on Close </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1a9eb2cf08912ec606e1298f3cfcfe9195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::RowGroupWriter::num_rows</definition>
        <argsstring>() const</argsstring>
        <name>num_rows</name>
        <briefdescription>
<para>Number of rows that shall be written as part of this RowGroup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1a5398ac18f9b86ce110b72a55f1ec24df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::RowGroupWriter::total_bytes_written</definition>
        <argsstring>() const</argsstring>
        <name>total_bytes_written</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_row_group_writer_1add93a5ea75f1a77396908931e0417660" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::RowGroupWriter::total_compressed_bytes</definition>
        <argsstring>() const</argsstring>
        <name>total_compressed_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_writer.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/file_writer.h" line="38" column="1" bodyfile="/arrow/cpp/src/parquet/file_writer.h" bodystart="38" bodyend="98"/>
    <listofallmembers>
      <member refid="classparquet_1_1_row_group_writer_1afad33a34f7dfe6e55d6e9be317693831" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>Close</name></member>
      <member refid="classparquet_1_1_row_group_writer_1ac1839fe63871924046d7f640e4ccc475" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>column</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a4eef5458ca085eeb9ac6273781fdaf33" prot="private" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>contents_</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a7c2dcd5b1afa428dc5483e073f9ccbed" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>current_column</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a7b502f64a4a82edbfc2a724a716d1dc8" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>NextColumn</name></member>
      <member refid="classparquet_1_1_row_group_writer_1ad0aa38eed42364171d09f35e9c88949b" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>num_columns</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a9eb2cf08912ec606e1298f3cfcfe9195" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>num_rows</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a954c50160dbe809f75292ab32b1bc873" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>RowGroupWriter</name></member>
      <member refid="classparquet_1_1_row_group_writer_1a5398ac18f9b86ce110b72a55f1ec24df" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>total_bytes_written</name></member>
      <member refid="classparquet_1_1_row_group_writer_1add93a5ea75f1a77396908931e0417660" prot="public" virt="non-virtual"><scope>parquet::RowGroupWriter</scope><name>total_compressed_bytes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
