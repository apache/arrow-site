<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1io_1_1_read_range" kind="struct" language="C++" prot="public">
    <compoundname>arrow::io::ReadRange</compoundname>
    <includes refid="interfaces_8h" local="no">arrow/io/interfaces.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1io_1_1_read_range_1a1dbf7ce9075e675c9bfa7f4e5fd4a283" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::io::ReadRange::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="39" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1io_1_1_read_range_1a5a02ec10911811d788a55f7289fa99fe" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::io::ReadRange::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="40" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structarrow_1_1io_1_1_read_range_1ac59a7c2a9ee8f4295ced88e80ace6ab8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ReadRange &amp;left, const ReadRange &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structarrow_1_1io_1_1_read_range" kindref="compound">ReadRange</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1io_1_1_read_range" kindref="compound">ReadRange</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="42" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="friend" id="structarrow_1_1io_1_1_read_range_1a82c9aea44664001b6537a547f1098f1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const ReadRange &amp;left, const ReadRange &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structarrow_1_1io_1_1_read_range" kindref="compound">ReadRange</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1io_1_1_read_range" kindref="compound">ReadRange</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="45" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="45" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1io_1_1_read_range_1a54458de0344c3627a6959be9f18f4b82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::io::ReadRange::Contains</definition>
        <argsstring>(const ReadRange &amp;other) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="structarrow_1_1io_1_1_read_range" kindref="compound">ReadRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="49" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="38" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="38" bodyend="52"/>
    <listofallmembers>
      <member refid="structarrow_1_1io_1_1_read_range_1a54458de0344c3627a6959be9f18f4b82" prot="public" virt="non-virtual"><scope>arrow::io::ReadRange</scope><name>Contains</name></member>
      <member refid="structarrow_1_1io_1_1_read_range_1a5a02ec10911811d788a55f7289fa99fe" prot="public" virt="non-virtual"><scope>arrow::io::ReadRange</scope><name>length</name></member>
      <member refid="structarrow_1_1io_1_1_read_range_1a1dbf7ce9075e675c9bfa7f4e5fd4a283" prot="public" virt="non-virtual"><scope>arrow::io::ReadRange</scope><name>offset</name></member>
      <member refid="structarrow_1_1io_1_1_read_range_1a82c9aea44664001b6537a547f1098f1e" prot="public" virt="non-virtual"><scope>arrow::io::ReadRange</scope><name>operator!=</name></member>
      <member refid="structarrow_1_1io_1_1_read_range_1ac59a7c2a9ee8f4295ced88e80ace6ab8" prot="public" virt="non-virtual"><scope>arrow::io::ReadRange</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
