<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="statistics_8h" kind="file" language="C++">
    <compoundname>statistics.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includedby refid="parquet_2api_2reader_8h" local="yes">/arrow/cpp/src/parquet/api/reader.h</includedby>
    <includedby refid="parquet_2api_2writer_8h" local="yes">/arrow/cpp/src/parquet/api/writer.h</includedby>
    <includedby refid="column__page_8h" local="yes">/arrow/cpp/src/parquet/column_page.h</includedby>
    <includedby refid="parquet_2thrift__internal_8h" local="yes">/arrow/cpp/src/parquet/thrift_internal.h</includedby>
    <incdepgraph>
      <node id="19874">
        <label>atomic</label>
      </node>
      <node id="19860">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
      </node>
      <node id="19881">
        <label>limits</label>
      </node>
      <node id="19846">
        <label>cstdint</label>
      </node>
      <node id="19851">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19852" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19854" relation="include">
        </childnode>
        <childnode refid="19855" relation="include">
        </childnode>
        <childnode refid="19856" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19857" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19876">
        <label>endian.h</label>
      </node>
      <node id="19861">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="19852" relation="include">
        </childnode>
        <childnode refid="19862" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19860" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19863" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19882">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19883" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
      </node>
      <node id="19857">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19854" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19850">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19851" relation="include">
        </childnode>
        <childnode refid="19867" relation="include">
        </childnode>
        <childnode refid="19868" relation="include">
        </childnode>
        <childnode refid="19873" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19875" relation="include">
        </childnode>
        <childnode refid="19885" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
      </node>
      <node id="19867">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19854" relation="include">
        </childnode>
        <childnode refid="19856" relation="include">
        </childnode>
        <childnode refid="19857" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19880">
        <label>cmath</label>
      </node>
      <node id="19879">
        <label>cassert</label>
      </node>
      <node id="19872">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
      </node>
      <node id="19848">
        <label>string</label>
      </node>
      <node id="19866">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19864">
        <label>ostream</label>
      </node>
      <node id="19859">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19855">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19856" relation="include">
        </childnode>
        <childnode refid="19857" relation="include">
        </childnode>
        <childnode refid="19860" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19873">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19874" relation="include">
        </childnode>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19857" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19875">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19876" relation="include">
        </childnode>
        <childnode refid="19844" relation="include">
        </childnode>
        <childnode refid="19877" relation="include">
        </childnode>
        <childnode refid="19878" relation="include">
        </childnode>
        <childnode refid="19879" relation="include">
        </childnode>
        <childnode refid="19880" relation="include">
        </childnode>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19852" relation="include">
        </childnode>
        <childnode refid="19881" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19854" relation="include">
        </childnode>
        <childnode refid="19851" relation="include">
        </childnode>
        <childnode refid="19870" relation="include">
        </childnode>
        <childnode refid="19860" relation="include">
        </childnode>
        <childnode refid="19882" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19863" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
        <childnode refid="19884" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19878">
        <label>bitset</label>
      </node>
      <node id="19883">
        <label>tuple</label>
      </node>
      <node id="19854">
        <label>vector</label>
      </node>
      <node id="19871">
        <label>new</label>
      </node>
      <node id="19849">
        <label>utility</label>
      </node>
      <node id="19865">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19866" relation="include">
        </childnode>
      </node>
      <node id="19877">
        <label>array</label>
      </node>
      <node id="19887">
        <label>sstream</label>
      </node>
      <node id="19868">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19869" relation="include">
        </childnode>
        <childnode refid="19867" relation="include">
        </childnode>
        <childnode refid="19857" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19856">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19862">
        <label>iosfwd</label>
      </node>
      <node id="19845">
        <label>cstddef</label>
      </node>
      <node id="19869">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19867" relation="include">
        </childnode>
        <childnode refid="19870" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19872" relation="include">
        </childnode>
        <childnode refid="19858" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19870">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19871" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19860" relation="include">
        </childnode>
      </node>
      <node id="19843">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="19844" relation="include">
        </childnode>
        <childnode refid="19845" relation="include">
        </childnode>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19850" relation="include">
        </childnode>
        <childnode refid="19886" relation="include">
        </childnode>
      </node>
      <node id="19853">
        <label>type_traits</label>
      </node>
      <node id="19885">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19881" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19870" relation="include">
        </childnode>
        <childnode refid="19861" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19844">
        <label>algorithm</label>
      </node>
      <node id="19888">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19881" relation="include">
        </childnode>
        <childnode refid="19853" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19852">
        <label>cstring</label>
      </node>
      <node id="19886">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="19844" relation="include">
        </childnode>
        <childnode refid="19846" relation="include">
        </childnode>
        <childnode refid="19852" relation="include">
        </childnode>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19887" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19888" relation="include">
        </childnode>
        <childnode refid="19865" relation="include">
        </childnode>
        <childnode refid="19850" relation="include">
        </childnode>
      </node>
      <node id="19863">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="19847" relation="include">
        </childnode>
        <childnode refid="19864" relation="include">
        </childnode>
        <childnode refid="19848" relation="include">
        </childnode>
        <childnode refid="19849" relation="include">
        </childnode>
        <childnode refid="19859" relation="include">
        </childnode>
      </node>
      <node id="19847">
        <label>memory</label>
      </node>
      <node id="19858">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="19846" relation="include">
        </childnode>
      </node>
      <node id="19884">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19853" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19891">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="19892">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="19890">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="19893">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="19889">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="19890" relation="include">
        </childnode>
        <childnode refid="19891" relation="include">
        </childnode>
        <childnode refid="19892" relation="include">
        </childnode>
        <childnode refid="19893" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_comparator" prot="public">parquet::Comparator</innerclass>
    <innerclass refid="classparquet_1_1_typed_comparator" prot="public">parquet::TypedComparator</innerclass>
    <innerclass refid="classparquet_1_1_encoded_statistics" prot="public">parquet::EncodedStatistics</innerclass>
    <innerclass refid="classparquet_1_1_statistics" prot="public">parquet::Statistics</innerclass>
    <innerclass refid="classparquet_1_1_typed_statistics" prot="public">parquet::TypedStatistics</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Array;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BinaryArray;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnDescriptor;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Value<sp/>comparator<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classparquet_1_1_comparator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_comparator" kindref="compound">Comparator</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classparquet_1_1_comparator_1a984631b98387a2de7b16b19d11b514c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_comparator_1a984631b98387a2de7b16b19d11b514c3" kindref="member">~Comparator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Comparator&gt;<sp/>Make(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>physical_type,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/>sort_order,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_length<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Comparator&gt;<sp/>Make(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="70" refid="classparquet_1_1_typed_comparator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_comparator" kindref="compound">TypedComparator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_comparator" kindref="compound">Comparator</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" kindref="member">T</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1aaa7e88adfcea48dd0aaec2d14a9d85ab" kindref="member">Compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" kindref="member">T</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" kindref="member">T</ref>&amp;<sp/>b)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>T&gt;<sp/>GetMinMax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" kindref="member">T</ref>*<sp/>values,<sp/>int64_t<sp/>length)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>T&gt;<sp/>GetMinMax(const<sp/>::arrow::Array&amp;<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>T&gt;<sp/>GetMinMaxSpaced(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_comparator_1ad9fc7c6aa20d9d4337388dbe1cea1999" kindref="member">T</ref>*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="104" refid="namespaceparquet_1a4b4e2b66d9ed578b23bb20ce06590dec" refkind="member"><highlight class="normal">std::shared_ptr&lt;TypedComparator&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1a71174bde214cb76ce72f12ff8937196e" kindref="member">MakeComparator</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>physical_type,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/>sort_order,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_length<sp/>=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;<ref refid="classparquet_1_1_typed_comparator" kindref="compound">TypedComparator&lt;DType&gt;</ref>&gt;(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Comparator::Make(physical_type,<sp/>sort_order,<sp/>type_length));</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="113" refid="namespaceparquet_1a71174bde214cb76ce72f12ff8937196e" refkind="member"><highlight class="normal">std::shared_ptr&lt;TypedComparator&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1a71174bde214cb76ce72f12ff8937196e" kindref="member">MakeComparator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;<ref refid="classparquet_1_1_typed_comparator" kindref="compound">TypedComparator&lt;DType&gt;</ref>&gt;(Comparator::Make(descr));</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classparquet_1_1_encoded_statistics" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;std::string&gt;<sp/>max_,<sp/>min_;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126" refid="classparquet_1_1_encoded_statistics_1a6687df39436274de6e7cb98a6ea5b7f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_encoded_statistics_1a6687df39436274de6e7cb98a6ea5b7f8" kindref="member">EncodedStatistics</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>max_(<ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;<ref refid="namespacestd" kindref="compound">std</ref>::string&gt;()),<sp/>min_(<ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;<ref refid="namespacestd" kindref="compound">std</ref>::string&gt;())<sp/>{}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classparquet_1_1_encoded_statistics_1a0d63a17b8f7f76e59558fabb056f7f73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1a0d63a17b8f7f76e59558fabb056f7f73" kindref="member">max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*max_;<sp/>}</highlight></codeline>
<codeline lineno="130" refid="classparquet_1_1_encoded_statistics_1a6b5931f37b9f6a11faf1cd5bae22243e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1a6b5931f37b9f6a11faf1cd5bae22243e" kindref="member">min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*min_;<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classparquet_1_1_encoded_statistics_1a6e860a15a029dae4fab98ce179d76065" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/>null_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133" refid="classparquet_1_1_encoded_statistics_1a937fa9d6f1d637294e19fb104b5b4ef0" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/>distinct_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classparquet_1_1_encoded_statistics_1a29d6a0e732ddb046d3bfd5b30f731d63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_min<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136" refid="classparquet_1_1_encoded_statistics_1ace5a172b4de4c0f1b1c44033360d7374" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_max<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137" refid="classparquet_1_1_encoded_statistics_1a994aeade67ecc20e111afc01016e1f7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_null_count<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138" refid="classparquet_1_1_encoded_statistics_1a839f81fbcfeb833fc7f48d0a61e0790a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_distinct_count<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>parquet-mr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>write<sp/>stats<sp/>larger<sp/>than<sp/>the<sp/>max<sp/>size<sp/>rather<sp/>than<sp/>truncating.<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rationale<sp/>is<sp/>that<sp/>some<sp/>engines<sp/>may<sp/>use<sp/>the<sp/>minimum<sp/>value<sp/>in<sp/>the<sp/>page<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>true<sp/>minimum<sp/>for<sp/>aggregations<sp/>and<sp/>there<sp/>is<sp/>no<sp/>way<sp/>to<sp/>mark<sp/>that<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>has<sp/>been<sp/>truncated<sp/>and<sp/>is<sp/>a<sp/>lower<sp/>bound<sp/>and<sp/>not<sp/>in<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classparquet_1_1_encoded_statistics_1a3350739aa84ef2b50ec4e8dd70532c1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics_1a3350739aa84ef2b50ec4e8dd70532c1a" kindref="member">ApplyStatSizeLimits</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_-&gt;length()<sp/>&gt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_max<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_-&gt;length()<sp/>&gt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_min<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classparquet_1_1_encoded_statistics_1a60f0b26b9231f70772d6aa0dd13b8470" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics_1a60f0b26b9231f70772d6aa0dd13b8470" kindref="member">is_set</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_min<sp/>||<sp/>has_max<sp/>||<sp/>has_null_count<sp/>||<sp/>has_distinct_count;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classparquet_1_1_encoded_statistics_1a9f48efaf66a47e05e941acbe709f5059" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics_1a9f48efaf66a47e05e941acbe709f5059" kindref="member">is_signed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_signed_;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classparquet_1_1_encoded_statistics_1a685ad4097649fe07f52d05cbc70973c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics_1a685ad4097649fe07f52d05cbc70973c2" kindref="member">set_is_signed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed)<sp/>{<sp/>is_signed_<sp/>=<sp/>is_signed;<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classparquet_1_1_encoded_statistics_1a2238a504860e4ea40738ee1d6f14cbaf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1a2238a504860e4ea40738ee1d6f14cbaf" kindref="member">set_max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>has_max<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classparquet_1_1_encoded_statistics_1a328baf868e93b05bfdc7cd953f9bb778" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1a328baf868e93b05bfdc7cd953f9bb778" kindref="member">set_min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>has_min<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classparquet_1_1_encoded_statistics_1a0cc5424ba5ad020cbf19515a5b2dd328" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1a0cc5424ba5ad020cbf19515a5b2dd328" kindref="member">set_null_count</ref>(int64_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>has_null_count<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classparquet_1_1_encoded_statistics_1ad2909bfe4d46967c578fef74f4e70125" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/><ref refid="classparquet_1_1_encoded_statistics_1ad2909bfe4d46967c578fef74f4e70125" kindref="member">set_distinct_count</ref>(int64_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>distinct_count<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>has_distinct_count<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classparquet_1_1_statistics" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190" refid="classparquet_1_1_statistics_1aa735e26ab79c5230e7a17ab802b238cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_statistics_1aa735e26ab79c5230e7a17ab802b238cb" kindref="member">~Statistics</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Statistics&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Statistics&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>encoded_min,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>encoded_max,<sp/>int64_t<sp/>num_values,<sp/>int64_t<sp/>null_count,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>distinct_count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_min_max,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>null_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>distinct_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>num_values()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMinMax()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>EncodeMin()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>EncodeMax()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref><sp/>Encode()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>physical_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Statistics&gt;<sp/>Make(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>physical_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>min,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>max,<sp/>int64_t<sp/>num_values,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>null_count,<sp/>int64_t<sp/>distinct_count);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="255" refid="classparquet_1_1_typed_statistics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257" refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>&amp;<sp/>min()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>&amp;<sp/>max()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Merge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;DType&gt;</ref>&amp;<sp/>other)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>*<sp/>values,<sp/>int64_t<sp/>num_not_null,<sp/>int64_t<sp/>num_null)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateSpaced(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>*<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset,<sp/>int64_t<sp/>num_not_null,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>num_null)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update(const<sp/>::arrow::Array&amp;<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMinMax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>&amp;<sp/>min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics_1a1868b5f867eaec2c90962055474efdbd" kindref="member">T</ref>&amp;<sp/>max)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="namespaceparquet_1aa23357ecc438f090bf82390669b94c5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">BoolStatistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;BooleanType&gt;</ref>;</highlight></codeline>
<codeline lineno="287" refid="namespaceparquet_1af1f4f67109349df380d7b7a32edb8aa4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">Int32Statistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="288" refid="namespaceparquet_1ae643686a28f16b126068f8836d3e35a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">Int64Statistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="289" refid="namespaceparquet_1a17387ca1f476433e6d268dee8df77505" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">FloatStatistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="290" refid="namespaceparquet_1a385997f7bd1d8a7d1e2bc5f1a9e506ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">DoubleStatistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="291" refid="namespaceparquet_1ac84036366e153fb83f9ce644b541c10f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">ByteArrayStatistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;ByteArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="292" refid="namespaceparquet_1a3a0b9aae383550a86bf46ede443e5f5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">FLBAStatistics</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;FLBAType&gt;</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="296" refid="namespaceparquet_1aa135643271599fe9c2a6a68f96ed1954" refkind="member"><highlight class="normal">std::shared_ptr&lt;TypedStatistics&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1abfb0d2426e75aa28f58f5f15271e295c" kindref="member">MakeStatistics</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>())<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;<ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;DType&gt;</ref>&gt;(Statistics::Make(descr,<sp/>pool));</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="309" refid="namespaceparquet_1a8278df1a34a2ead948aa8624d956b699" refkind="member"><highlight class="normal">std::shared_ptr&lt;TypedStatistics&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1abfb0d2426e75aa28f58f5f15271e295c" kindref="member">MakeStatistics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type&amp;<sp/>min,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type&amp;<sp/>max,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>num_values,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>null_count,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>distinct_count)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;<ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;DType&gt;</ref>&gt;(Statistics::Make(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DType::type_num,<sp/>&amp;min,<sp/>&amp;max,<sp/>num_values,<sp/>null_count,<sp/>distinct_count));</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="320" refid="namespaceparquet_1abfb0d2426e75aa28f58f5f15271e295c" refkind="member"><highlight class="normal">std::shared_ptr&lt;TypedStatistics&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1abfb0d2426e75aa28f58f5f15271e295c" kindref="member">MakeStatistics</ref>(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>encoded_min,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>encoded_max,<sp/>int64_t<sp/>num_values,<sp/>int64_t<sp/>null_count,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>distinct_count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_min_max,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;<ref refid="classparquet_1_1_typed_statistics" kindref="compound">TypedStatistics&lt;DType&gt;</ref>&gt;(</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Statistics::Make(descr,<sp/>encoded_min,<sp/>encoded_max,<sp/>num_values,<sp/>null_count,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distinct_count,<sp/>has_min_max,<sp/>pool));</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/statistics.h"/>
  </compounddef>
</doxygen>
