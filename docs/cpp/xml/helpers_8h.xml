<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="helpers_8h" kind="file" language="C++">
    <compoundname>helpers.h</compoundname>
    <includes refid="arrow_2python_2platform_8h" local="yes">arrow/python/platform.h</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">numpy/halffloat.h</includes>
    <includes refid="arrow_2python_2visibility_8h" local="yes">arrow/python/visibility.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includedby refid="python_2api_8h" local="yes">/arrow/cpp/src/arrow/python/api.h</includedby>
    <incdepgraph>
      <node id="8057">
        <label>atomic</label>
      </node>
      <node id="8049">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8050" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
      </node>
      <node id="8064">
        <label>limits</label>
      </node>
      <node id="8052">
        <label>cstdint</label>
      </node>
      <node id="8043">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8044" relation="include">
        </childnode>
        <childnode refid="8045" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8049" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
        <childnode refid="8053" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
      </node>
      <node id="8060">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
      </node>
      <node id="8061">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8050" relation="include">
        </childnode>
      </node>
      <node id="8047">
        <label>string</label>
      </node>
      <node id="8062">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="8043" relation="include">
        </childnode>
        <childnode refid="8060" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
      </node>
      <node id="8054">
        <label>ostream</label>
      </node>
      <node id="8055">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8063">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8054" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
      </node>
      <node id="8036">
        <label>/arrow/cpp/src/arrow/python/helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="8037" relation="include">
        </childnode>
        <childnode refid="8064" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
        <childnode refid="8042" relation="include">
        </childnode>
        <childnode refid="8056" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
      </node>
      <node id="8038">
        <label>Python.h</label>
      </node>
      <node id="8042">
        <label>arrow/python/visibility.h</label>
        <link refid="arrow_2python_2visibility_8h"/>
      </node>
      <node id="8059">
        <label>vector</label>
      </node>
      <node id="8048">
        <label>utility</label>
      </node>
      <node id="8045">
        <label>iosfwd</label>
      </node>
      <node id="8039">
        <label>datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="8040" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
        <childnode refid="8037" relation="include">
        </childnode>
        <childnode refid="8042" relation="include">
        </childnode>
        <childnode refid="8043" relation="include">
        </childnode>
        <childnode refid="8056" relation="include">
        </childnode>
        <childnode refid="8063" relation="include">
        </childnode>
      </node>
      <node id="8058">
        <label>climits</label>
      </node>
      <node id="8037">
        <label>arrow/python/platform.h</label>
        <link refid="arrow_2python_2platform_8h"/>
        <childnode refid="8038" relation="include">
        </childnode>
        <childnode refid="8039" relation="include">
        </childnode>
      </node>
      <node id="8041">
        <label>chrono</label>
      </node>
      <node id="8065">
        <label>numpy/halffloat.h</label>
      </node>
      <node id="8056">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="8057" relation="include">
        </childnode>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8052" relation="include">
        </childnode>
        <childnode refid="8045" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8059" relation="include">
        </childnode>
        <childnode refid="8060" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
        <childnode refid="8062" relation="include">
        </childnode>
      </node>
      <node id="8050">
        <label>type_traits</label>
      </node>
      <node id="8040">
        <label>algorithm</label>
      </node>
      <node id="8044">
        <label>cstring</label>
      </node>
      <node id="8053">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8054" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8055" relation="include">
        </childnode>
      </node>
      <node id="8046">
        <label>memory</label>
      </node>
      <node id="8051">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8052" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8067">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="8066">
        <label>/arrow/cpp/src/arrow/python/helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="8067" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1py">arrow::py</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARROW_PYTHON_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_PYTHON_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2python_2platform_8h" kindref="compound">arrow/python/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numpy/halffloat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2python_2visibility_8h" kindref="compound">arrow/python/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OwnedRef;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Get<sp/>an<sp/>arrow<sp/>DataType<sp/>instance<sp/>from<sp/>Arrow&apos;s<sp/>Type::type<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>type<sp/>One<sp/>of<sp/>the<sp/>values<sp/>of<sp/>Arrow&apos;s<sp/>Type::type<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\return<sp/>A<sp/>shared<sp/>pointer<sp/>to<sp/>DataType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="namespacearrow_1_1py_1a98461ef66269f30df32aa4603a73ea2e" kindref="member">GetPrimitiveType</ref>(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Construct<sp/>a<sp/>np.float16<sp/>object<sp/>from<sp/>a<sp/>npy_half<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/><ref refid="namespacearrow_1_1py_1a1fdd55363c5ee47f547f19ad14256e1a" kindref="member">PyHalf_FromHalf</ref>(npy_half<sp/>value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Convert<sp/>a<sp/>Python<sp/>object<sp/>to<sp/>a<sp/>npy_half<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/><ref refid="namespacearrow_1_1py_1af73ce2e544accf27cae3d37d682e1408" kindref="member">PyFloat_AsHalf</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>npy_half*<sp/>out);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Import<sp/>a<sp/>Python<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>module_name<sp/>The<sp/>name<sp/>of<sp/>the<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[out]<sp/>ref<sp/>The<sp/>OwnedRef<sp/>containing<sp/>the<sp/>module<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ImportModule(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>module_name,<sp/>OwnedRef*<sp/>ref);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Import<sp/>an<sp/>object<sp/>from<sp/>a<sp/>Python<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>module<sp/>A<sp/>Python<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>name<sp/>The<sp/>name<sp/>of<sp/>the<sp/>object<sp/>to<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[out]<sp/>ref<sp/>The<sp/>OwnedRef<sp/>containing<sp/>the<sp/>\c<sp/>name<sp/>attribute<sp/>of<sp/>the<sp/>Python<sp/>module<sp/>\c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ImportFromModule(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>module,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>OwnedRef*<sp/>ref);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Check<sp/>whether<sp/>obj<sp/>is<sp/>an<sp/>integer,<sp/>independent<sp/>of<sp/>Python<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPyInteger(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PYARROW_IS_PY2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_Check(obj)<sp/>||<sp/>PyInt_Check(obj);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_Check(obj);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Use<sp/>pandas<sp/>missing<sp/>value<sp/>semantics<sp/>to<sp/>check<sp/>if<sp/>a<sp/>value<sp/>is<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PandasObjectIsNull(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Check<sp/>whether<sp/>obj<sp/>is<sp/>a<sp/>floating-point<sp/>NaN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PyFloat_IsNaN(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPyBinary(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyBytes_Check(obj)<sp/>||<sp/>PyByteArray_Check(obj);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Convert<sp/>a<sp/>Python<sp/>integer<sp/>into<sp/>a<sp/>C<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>obj<sp/>A<sp/>Python<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[out]<sp/>out<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>C<sp/>integer<sp/>to<sp/>hold<sp/>the<sp/>result<sp/>of<sp/>the<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Int&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>CIntFromPython(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>Int*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>overflow_message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Convert<sp/>a<sp/>Python<sp/>unicode<sp/>string<sp/>to<sp/>a<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>PyUnicode_AsStdString(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>std::string*<sp/>out);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Convert<sp/>a<sp/>Python<sp/>bytes<sp/>object<sp/>to<sp/>a<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">std::string<sp/>PyBytes_AsStdString(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Call<sp/>str()<sp/>on<sp/>the<sp/>given<sp/>object<sp/>and<sp/>return<sp/>the<sp/>result<sp/>as<sp/>a<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>PyObject_StdStringStr(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>std::string*<sp/>out);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Return<sp/>the<sp/>repr()<sp/>of<sp/>the<sp/>given<sp/>object<sp/>(always<sp/>succeeds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal">std::string<sp/>PyObject_StdStringRepr(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Cast<sp/>the<sp/>given<sp/>size<sp/>to<sp/>int32_t,<sp/>with<sp/>error<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>CastSize(Py_ssize_t<sp/>size,<sp/>int32_t*<sp/>out,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>error_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>size<sp/>exceeded<sp/>(2GB)&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>std::numeric_limits&lt;int32_t&gt;::max())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(error_msg);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>*out<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>CastSize(Py_ssize_t<sp/>size,<sp/>int64_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>error_msg<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>*out<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Print<sp/>the<sp/>Python<sp/>object&apos;s<sp/>__str__<sp/>form<sp/>along<sp/>with<sp/>the<sp/>passed<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>InvalidValue(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>why);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>InvalidType(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>why);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>IntegerScalarToDoubleSafe(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>result);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>IntegerScalarToFloat32Safe(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>result);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Print<sp/>Python<sp/>object<sp/>__repr__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acc529837f8c4825ef5ae3ecee7e614d5" kindref="member">DebugPrint</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>ARROW_PYTHON_HELPERS_H</highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/python/helpers.h"/>
  </compounddef>
</doxygen>
