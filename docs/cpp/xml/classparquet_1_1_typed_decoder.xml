<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_typed_decoder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::TypedDecoder</compoundname>
    <basecompoundref refid="classparquet_1_1_decoder" prot="public" virt="virtual">parquet::Decoder</basecompoundref>
    <derivedcompoundref refid="classparquet_1_1_dict_decoder" prot="public" virt="virtual">parquet::DictDecoder&lt; DType &gt;</derivedcompoundref>
    <includes refid="encoding_8h" local="no">parquet/encoding.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>DType</declname>
        <defname>DType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" prot="public" static="no">
        <type>typename DType::c_type</type>
        <definition>using parquet::TypedDecoder&lt; DType &gt;::T =  typename DType::c_type</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="268" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1a393930d598874ad7615aa39a08b7237e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::TypedDecoder&lt; DType &gt;::Decode</definition>
        <argsstring>(T *buffer, int max_values)=0</argsstring>
        <name>Decode</name>
        <param>
          <type><ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_values</declname>
        </param>
        <briefdescription>
<para>Decode values into a buffer. </para>        </briefdescription>
        <detaileddescription>
<para>Subclasses may override the more specialized Decode methods below.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for decoded values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_values</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of values to decode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of values decoded. Should be identical to max_values except at the end of the current data page. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1a00334818db6f9e469ad5e2c981061a50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int parquet::TypedDecoder&lt; DType &gt;::DecodeSpaced</definition>
        <argsstring>(T *buffer, int num_values, int null_count, const uint8_t *valid_bits, int64_t valid_bits_offset)</argsstring>
        <name>DecodeSpaced</name>
        <param>
          <type><ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>null_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bits</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>valid_bits_offset</declname>
        </param>
        <briefdescription>
<para>Decode the values in this data page but leave spaces for null entries. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for decoded values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_values</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the def_levels and buffer arrays including the number of null slots </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">null_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of null slots </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">valid_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>bitmap data indicating position of valid slots </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">valid_bits_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset into valid_bits </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of values decoded, including nulls. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="289" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="289" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1a2ffdfa0cf7c41c3da33edd3413bca6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::TypedDecoder&lt; DType &gt;::DecodeArrow</definition>
        <argsstring>(int num_values, int null_count, const uint8_t *valid_bits, int64_t valid_bits_offset, typename EncodingTraits&lt; DType &gt;::Accumulator *out)=0</argsstring>
        <name>DecodeArrow</name>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>null_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bits</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>valid_bits_offset</declname>
        </param>
        <param>
          <type>typename <ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt; DType &gt;::Accumulator *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Decode into an ArrayBuilder or other accumulator. </para>        </briefdescription>
        <detaileddescription>
<para>This function assumes the definition levels were already decoded as a validity bitmap in the given <computeroutput>valid_bits</computeroutput>. <computeroutput>null_count</computeroutput> is the number of 0s in <computeroutput>valid_bits</computeroutput>. As a space optimization, it is allowed for <computeroutput>valid_bits</computeroutput> to be null if <computeroutput>null_count</computeroutput> is zero.</para><para><simplesect kind="return"><para>number of values decoded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1abc930b21f0dd3a2ac0dec7aeedef8331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::TypedDecoder&lt; DType &gt;::DecodeArrowNonNull</definition>
        <argsstring>(int num_values, typename EncodingTraits&lt; DType &gt;::Accumulator *out)</argsstring>
        <name>DecodeArrowNonNull</name>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>typename <ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt; DType &gt;::Accumulator *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Decode into an ArrayBuilder or other accumulator ignoring nulls. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of values decoded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="336" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1abbd5f2017964c07b217b422f8e48d6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::TypedDecoder&lt; DType &gt;::DecodeArrow</definition>
        <argsstring>(int num_values, int null_count, const uint8_t *valid_bits, int64_t valid_bits_offset, typename EncodingTraits&lt; DType &gt;::DictAccumulator *builder)=0</argsstring>
        <name>DecodeArrow</name>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>null_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bits</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>valid_bits_offset</declname>
        </param>
        <param>
          <type>typename <ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt; DType &gt;::DictAccumulator *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Decode into a DictionaryBuilder. </para>        </briefdescription>
        <detaileddescription>
<para>This function assumes the definition levels were already decoded as a validity bitmap in the given <computeroutput>valid_bits</computeroutput>. <computeroutput>null_count</computeroutput> is the number of 0s in <computeroutput>valid_bits</computeroutput>. As a space optimization, it is allowed for <computeroutput>valid_bits</computeroutput> to be null if <computeroutput>null_count</computeroutput> is zero.</para><para><simplesect kind="return"><para>number of values decoded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_decoder_1ae8a084565688d79fa86e177a558c16bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::TypedDecoder&lt; DType &gt;::DecodeArrowNonNull</definition>
        <argsstring>(int num_values, typename EncodingTraits&lt; DType &gt;::DictAccumulator *builder)</argsstring>
        <name>DecodeArrowNonNull</name>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>typename <ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt; DType &gt;::DictAccumulator *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Decode into a DictionaryBuilder ignoring nulls. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of values decoded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="357" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="357" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4760">
        <label>parquet::Decoder</label>
        <link refid="classparquet_1_1_decoder"/>
      </node>
      <node id="4759">
        <label>parquet::TypedDecoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_decoder"/>
        <childnode refid="4760" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4761">
        <label>parquet::DictDecoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_dict_decoder"/>
        <childnode refid="4759" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4763">
        <label>parquet::Decoder</label>
        <link refid="classparquet_1_1_decoder"/>
      </node>
      <node id="4762">
        <label>parquet::TypedDecoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_decoder"/>
        <childnode refid="4763" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/encoding.h" line="64" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="64" bodyend="-1"/>
    <listofallmembers>
      <member refid="classparquet_1_1_typed_decoder_1a393930d598874ad7615aa39a08b7237e" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>Decode</name></member>
      <member refid="classparquet_1_1_typed_decoder_1a2ffdfa0cf7c41c3da33edd3413bca6fc" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>DecodeArrow</name></member>
      <member refid="classparquet_1_1_typed_decoder_1abbd5f2017964c07b217b422f8e48d6e2" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>DecodeArrow</name></member>
      <member refid="classparquet_1_1_typed_decoder_1abc930b21f0dd3a2ac0dec7aeedef8331" prot="public" virt="non-virtual"><scope>parquet::TypedDecoder</scope><name>DecodeArrowNonNull</name></member>
      <member refid="classparquet_1_1_typed_decoder_1ae8a084565688d79fa86e177a558c16bc" prot="public" virt="non-virtual"><scope>parquet::TypedDecoder</scope><name>DecodeArrowNonNull</name></member>
      <member refid="classparquet_1_1_typed_decoder_1a00334818db6f9e469ad5e2c981061a50" prot="public" virt="virtual"><scope>parquet::TypedDecoder</scope><name>DecodeSpaced</name></member>
      <member refid="classparquet_1_1_decoder_1acbe62277733309af9dc829f5f3b880f7" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_decoder_1a569f45e0e608bf94cfae5fe6c7edfeff" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>SetData</name></member>
      <member refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" prot="public" virt="non-virtual"><scope>parquet::TypedDecoder</scope><name>T</name></member>
      <member refid="classparquet_1_1_decoder_1afb807d800b693ecb9c3eac64cb98f1b1" prot="public" virt="pure-virtual"><scope>parquet::TypedDecoder</scope><name>values_left</name></member>
      <member refid="classparquet_1_1_decoder_1a2734ca61027a0e09f52cb5c9d4e7cc04" prot="public" virt="virtual"><scope>parquet::TypedDecoder</scope><name>~Decoder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
