<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classplasma_1_1_l_r_u_cache" kind="class" language="C++" prot="public">
    <compoundname>plasma::LRUCache</compoundname>
    <includes refid="eviction__policy_8h" local="no">plasma/eviction_policy.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classplasma_1_1_l_r_u_cache_1a915891573251d2ad0138e111af5e2376" prot="private" static="no">
        <type>std::list&lt; std::pair&lt; <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref>, int64_t &gt; &gt;</type>
        <definition>typedef std::list&lt;std::pair&lt;ObjectID, int64_t&gt; &gt; plasma::LRUCache::ItemList</definition>
        <argsstring></argsstring>
        <name>ItemList</name>
        <briefdescription>
<para>A doubly-linked list containing the items in the cache and their sizes in LRU order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="72" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1aba62aecb903a51dddbbaa717ac175946" prot="private" static="no" mutable="no">
        <type>ItemList</type>
        <definition>ItemList plasma::LRUCache::item_list_</definition>
        <argsstring></argsstring>
        <name>item_list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="73" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1a1174b97a0d6907db12fded9819a58989" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref>, ItemList::iterator &gt;</type>
        <definition>std::unordered_map&lt;ObjectID, ItemList::iterator&gt; plasma::LRUCache::item_map_</definition>
        <argsstring></argsstring>
        <name>item_map_</name>
        <briefdescription>
<para>A hash table mapping the object ID of an object in the cache to its location in the doubly linked list item_list_. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="76" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1aedf57c3f7a50fe5c841aedcd98ea7f16" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string plasma::LRUCache::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
<para>The name of this cache, used for debugging purposes only. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="79" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1a4b4356b3cc14645b87f427acd1a72c5c" prot="private" static="no" mutable="no">
        <type>const int64_t</type>
        <definition>const int64_t plasma::LRUCache::original_capacity_</definition>
        <argsstring></argsstring>
        <name>original_capacity_</name>
        <briefdescription>
<para>The original (max) capacity of this cache in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="81" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1a90888c8a76496b7653ba27368ef9877d" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::capacity_</definition>
        <argsstring></argsstring>
        <name>capacity_</name>
        <briefdescription>
<para>The current capacity, which must be &lt;= the original capacity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="83" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1a5bebb4337e20d9c8176ab973e6f17dec" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::used_capacity_</definition>
        <argsstring></argsstring>
        <name>used_capacity_</name>
        <briefdescription>
<para>The number of bytes used of the available capacity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="85" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1a8168221aae6419c4595f822293eb3618" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::num_evictions_total_</definition>
        <argsstring></argsstring>
        <name>num_evictions_total_</name>
        <briefdescription>
<para>The number of objects evicted from this cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="87" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_l_r_u_cache_1aa15eb7a61a90b99c8b82b9c280178c3d" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::bytes_evicted_total_</definition>
        <argsstring></argsstring>
        <name>bytes_evicted_total_</name>
        <briefdescription>
<para>The number of bytes evicted from this cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="89" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1ae9d118bb32bd6224509b2f4366533e84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>plasma::LRUCache::LRUCache</definition>
        <argsstring>(const std::string &amp;name, int64_t size)</argsstring>
        <name>LRUCache</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="42" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1ace32160bb3082e8c8675f5271fe4ad9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::LRUCache::Add</definition>
        <argsstring>(const ObjectID &amp;key, int64_t size)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1af5ed0ac2399d4642d67e9ad103fbdc3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::Remove</definition>
        <argsstring>(const ObjectID &amp;key)</argsstring>
        <name>Remove</name>
        <param>
          <type>const <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1a8fb0a8babb6bfe3abe27956888161538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::ChooseObjectsToEvict</definition>
        <argsstring>(int64_t num_bytes_required, std::vector&lt; ObjectID &gt; *objects_to_evict)</argsstring>
        <name>ChooseObjectsToEvict</name>
        <param>
          <type>int64_t</type>
          <declname>num_bytes_required</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref> &gt; *</type>
          <declname>objects_to_evict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1afb4618c64bbc7511c3a751307ae1e696" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::OriginalCapacity</definition>
        <argsstring>() const</argsstring>
        <name>OriginalCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1ad93609a2741776eb62ffbf9a51436afb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::Capacity</definition>
        <argsstring>() const</argsstring>
        <name>Capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1aa365d4236e3a698fed6514d5b52aeffd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::LRUCache::RemainingCapacity</definition>
        <argsstring>() const</argsstring>
        <name>RemainingCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1adb4e334f02d6341ad6286a89f8410761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::LRUCache::AdjustCapacity</definition>
        <argsstring>(int64_t delta)</argsstring>
        <name>AdjustCapacity</name>
        <param>
          <type>int64_t</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1aa3ffe81eee2cbe56bbee927e4a99d775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::LRUCache::Foreach</definition>
        <argsstring>(std::function&lt; void(const ObjectID &amp;)&gt;)</argsstring>
        <name>Foreach</name>
        <param>
          <type>std::function&lt; void(const <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref> &amp;)&gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_l_r_u_cache_1a0d322a9ea65d281f5489c0c993ac6af7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string plasma::LRUCache::DebugString</definition>
        <argsstring>() const</argsstring>
        <name>DebugString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/plasma/eviction_policy.h" line="40" column="1" bodyfile="/arrow/cpp/src/plasma/eviction_policy.h" bodystart="40" bodyend="90"/>
    <listofallmembers>
      <member refid="classplasma_1_1_l_r_u_cache_1ace32160bb3082e8c8675f5271fe4ad9c" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>Add</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1adb4e334f02d6341ad6286a89f8410761" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>AdjustCapacity</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1aa15eb7a61a90b99c8b82b9c280178c3d" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>bytes_evicted_total_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1ad93609a2741776eb62ffbf9a51436afb" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>Capacity</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a90888c8a76496b7653ba27368ef9877d" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>capacity_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a8fb0a8babb6bfe3abe27956888161538" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>ChooseObjectsToEvict</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a0d322a9ea65d281f5489c0c993ac6af7" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>DebugString</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1aa3ffe81eee2cbe56bbee927e4a99d775" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>Foreach</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1aba62aecb903a51dddbbaa717ac175946" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>item_list_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a1174b97a0d6907db12fded9819a58989" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>item_map_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a915891573251d2ad0138e111af5e2376" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>ItemList</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1ae9d118bb32bd6224509b2f4366533e84" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>LRUCache</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1aedf57c3f7a50fe5c841aedcd98ea7f16" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>name_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a8168221aae6419c4595f822293eb3618" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>num_evictions_total_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a4b4356b3cc14645b87f427acd1a72c5c" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>original_capacity_</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1afb4618c64bbc7511c3a751307ae1e696" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>OriginalCapacity</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1aa365d4236e3a698fed6514d5b52aeffd" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>RemainingCapacity</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1af5ed0ac2399d4642d67e9ad103fbdc3c" prot="public" virt="non-virtual"><scope>plasma::LRUCache</scope><name>Remove</name></member>
      <member refid="classplasma_1_1_l_r_u_cache_1a5bebb4337e20d9c8176ab973e6f17dec" prot="private" virt="non-virtual"><scope>plasma::LRUCache</scope><name>used_capacity_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
