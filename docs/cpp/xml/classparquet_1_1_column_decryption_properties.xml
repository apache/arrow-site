<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_decryption_properties" kind="class" language="C++" prot="public">
    <compoundname>parquet::ColumnDecryptionProperties</compoundname>
    <includes refid="encryption_8h" local="no">parquet/encryption.h</includes>
    <innerclass refid="classparquet_1_1_column_decryption_properties_1_1_builder" prot="public">parquet::ColumnDecryptionProperties::Builder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_column_decryption_properties_1a525f2ad0747c5fd89bbcfe6e37770832" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string parquet::ColumnDecryptionProperties::column_path_</definition>
        <argsstring></argsstring>
        <name>column_path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="225" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_decryption_properties_1a190c3473aaddcda6e92343c4c0f6c390" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::ColumnDecryptionProperties::key_</definition>
        <argsstring></argsstring>
        <name>key_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="226" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_decryption_properties_1ab71faa1ed64a91e580596ad2395b73a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::ColumnDecryptionProperties::utilized_</definition>
        <argsstring></argsstring>
        <name>utilized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="227" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a2b3492f176c30f0129c14af8b337e9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnDecryptionProperties::ColumnDecryptionProperties</definition>
        <argsstring>()=default</argsstring>
        <name>ColumnDecryptionProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a4bc8b15da1b416e7e21adb329eb747bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnDecryptionProperties::ColumnDecryptionProperties</definition>
        <argsstring>(const ColumnDecryptionProperties &amp;other)=default</argsstring>
        <name>ColumnDecryptionProperties</name>
        <param>
          <type>const <ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a2900101a501b00dc4f95f4098d787436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnDecryptionProperties::ColumnDecryptionProperties</definition>
        <argsstring>(ColumnDecryptionProperties &amp;&amp;other)=default</argsstring>
        <name>ColumnDecryptionProperties</name>
        <param>
          <type><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a1a481532aa3bfc0208d6c59f56430248" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::ColumnDecryptionProperties::column_path</definition>
        <argsstring>() const</argsstring>
        <name>column_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="208" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1aae06e369747034c8a8d1234061f111bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::ColumnDecryptionProperties::key</definition>
        <argsstring>() const</argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="209" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1aa5f0a2ef9fa702519ec62e041fedf1d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnDecryptionProperties::is_utilized</definition>
        <argsstring>()</argsstring>
        <name>is_utilized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="210" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1ac78ee84bc2b22f7e47e7a112a5360866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnDecryptionProperties::set_utilized</definition>
        <argsstring>()</argsstring>
        <name>set_utilized</name>
        <briefdescription>
<para><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref> object can be used for reading one file only. </para>        </briefdescription>
        <detaileddescription>
<para>Mark <ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref> as utilized once it is used in <ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref> as the encryption key will be wiped out upon completion of file reading. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="216" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a201a30023879d7c52e8ff0477b4e5884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnDecryptionProperties::WipeOutDecryptionKey</definition>
        <argsstring>()</argsstring>
        <name>WipeOutDecryptionKey</name>
        <briefdescription>
<para>Upon completion of file reading, the encryption key will be wiped out. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1af4d0caf21e7a26e6b30218797aa8124a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ColumnDecryptionProperties&gt; parquet::ColumnDecryptionProperties::DeepClone</definition>
        <argsstring>()</argsstring>
        <name>DeepClone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="222" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_column_decryption_properties_1a5e5a62033b4ea65b947a1c533d44d320" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnDecryptionProperties::ColumnDecryptionProperties</definition>
        <argsstring>(const std::string &amp;column_path, const std::string &amp;key)</argsstring>
        <name>ColumnDecryptionProperties</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>column_path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>This class is only required for setting explicit column decryption keys - to override key retriever (or to provide keys when key metadata and/or key retriever are not available) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="232" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/encryption.h" line="182" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="182" bodyend="234"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_decryption_properties_1a1a481532aa3bfc0208d6c59f56430248" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>column_path</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a525f2ad0747c5fd89bbcfe6e37770832" prot="private" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>column_path_</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a2b3492f176c30f0129c14af8b337e9ba" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>ColumnDecryptionProperties</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a4bc8b15da1b416e7e21adb329eb747bd" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>ColumnDecryptionProperties</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a2900101a501b00dc4f95f4098d787436" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>ColumnDecryptionProperties</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a5e5a62033b4ea65b947a1c533d44d320" prot="private" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>ColumnDecryptionProperties</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1af4d0caf21e7a26e6b30218797aa8124a" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>DeepClone</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1aa5f0a2ef9fa702519ec62e041fedf1d9" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>is_utilized</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1aae06e369747034c8a8d1234061f111bd" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>key</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a190c3473aaddcda6e92343c4c0f6c390" prot="private" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>key_</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1ac78ee84bc2b22f7e47e7a112a5360866" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>set_utilized</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1ab71faa1ed64a91e580596ad2395b73a3" prot="private" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>utilized_</name></member>
      <member refid="classparquet_1_1_column_decryption_properties_1a201a30023879d7c52e8ff0477b4e5884" prot="public" virt="non-virtual"><scope>parquet::ColumnDecryptionProperties</scope><name>WipeOutDecryptionKey</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
