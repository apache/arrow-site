<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_dense_union_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::DenseUnionBuilder</compoundname>
    <basecompoundref refid="classarrow_1_1_basic_union_builder" prot="public" virt="non-virtual">arrow::BasicUnionBuilder</basecompoundref>
    <includes refid="builder__union_8h" local="no">arrow/array/builder_union.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_dense_union_builder_1aa4ff19fe1d1c943a3d5240a3fec6e2b3" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; int32_t &gt;</type>
        <definition>TypedBufferBuilder&lt;int32_t&gt; arrow::DenseUnionBuilder::offsets_builder_</definition>
        <argsstring></argsstring>
        <name>offsets_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="134" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1acec73fc78f25805eba1315045ae6b734" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::DenseUnionBuilder::DenseUnionBuilder</definition>
        <argsstring>(MemoryPool *pool)</argsstring>
        <name>DenseUnionBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
<para>Use this constructor to initialize the UnionBuilder with no child builders, allowing type to be inferred. </para>        </briefdescription>
        <detaileddescription>
<para>You will need to call AppendChild for each of the children builders you want to use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="86" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1a10f8777454fbf83c40be1c480502a77b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::DenseUnionBuilder::DenseUnionBuilder</definition>
        <argsstring>(MemoryPool *pool, const std::vector&lt; std::shared_ptr&lt; ArrayBuilder &gt;&gt; &amp;children, const std::shared_ptr&lt; DataType &gt; &amp;type)</argsstring>
        <name>DenseUnionBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> &gt;&gt; &amp;</type>
          <declname>children</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Use this constructor to specify the type explicitly. </para>        </briefdescription>
        <detaileddescription>
<para>You can still add child builders to the union after using this constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="91" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1a478cd1f119d4da61a5bc9103ee10bf34" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::DenseUnionBuilder::AppendNull</definition>
        <argsstring>() final</argsstring>
        <name>AppendNull</name>
        <reimplements refid="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015">AppendNull</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="97" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1ad452ffd9af60da52879566666b0a3fd5" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::DenseUnionBuilder::AppendNulls</definition>
        <argsstring>(int64_t length) final</argsstring>
        <name>AppendNulls</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14">AppendNulls</reimplements>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="103" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1acdc167139945b1c5f143c94602035f17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::DenseUnionBuilder::Append</definition>
        <argsstring>(int8_t next_type)</argsstring>
        <name>Append</name>
        <param>
          <type>int8_t</type>
          <declname>next_type</declname>
        </param>
        <briefdescription>
<para>Append an element to the <ref refid="classarrow_1_1_union_array" kindref="compound">UnionArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This must be followed by an append to the appropriate child builder.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">next_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type_id of the child to which the next value will be appended.</para></parameterdescription>
</parameteritem>
</parameterlist>
The corresponding child builder must be appended to independently after this method is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="116" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_dense_union_builder_1a5d9c77eb75838636f2604bba9674a3e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::DenseUnionBuilder::FinishInternal</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; *out) override</argsstring>
        <name>FinishInternal</name>
        <reimplements refid="classarrow_1_1_basic_union_builder_1a1e76f1afc12889c884e66d87c48d1e9f">FinishInternal</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an internal generic <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Resets builder except for dictionary builder</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="128" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="128" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This API is EXPERIMENTAL. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1190">
        <label>arrow::BasicUnionBuilder</label>
        <link refid="classarrow_1_1_basic_union_builder"/>
        <childnode refid="1191" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1189">
        <label>arrow::DenseUnionBuilder</label>
        <link refid="classarrow_1_1_dense_union_builder"/>
        <childnode refid="1190" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1191">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1195">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="1193">
        <label>arrow::BasicUnionBuilder</label>
        <link refid="classarrow_1_1_basic_union_builder"/>
        <childnode refid="1194" relation="public-inheritance">
        </childnode>
        <childnode refid="1197" relation="usage">
          <edgelabel>types_builder_</edgelabel>
        </childnode>
      </node>
      <node id="1192">
        <label>arrow::DenseUnionBuilder</label>
        <link refid="classarrow_1_1_dense_union_builder"/>
        <childnode refid="1193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1196">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="1194">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="1195" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="1196" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
      <node id="1197">
        <label>arrow::TypedBufferBuilder&lt; int8_t &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_union.h" line="81" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_union.h" bodystart="81" bodyend="135"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1acdc167139945b1c5f143c94602035f17" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a2109b919ac8e8338f5b405e59217e59b" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendChild</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1a478cd1f119d4da61a5bc9103ee10bf34" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1ad452ffd9af60da52879566666b0a3fd5" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a1c995f046849d8055b06224483ffa4c8" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>BasicUnionBuilder</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1ac14ee76ec67cfa9cdf84478c06766659" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>BasicUnionBuilder</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1aa307a3f44cef4df0c01a5555327632f2" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>child_fields_</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a76c28fbb20e5776be68c000c7eff0c8f" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>dense_type_id_</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1acec73fc78f25805eba1315045ae6b734" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>DenseUnionBuilder</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1a10f8777454fbf83c40be1c480502a77b" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>DenseUnionBuilder</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a0a4c7177a2f535c3c53d9fc850ca64a2" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual" ambiguityscope="arrow::ArrayBuilder::"><scope>arrow::DenseUnionBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1a5d9c77eb75838636f2604bba9674a3e5" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a80833f3502fe464d3a11a3ffd798c420" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>mode_</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a3887cc502e1af72dac7900511c55f9f8" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>NextTypeId</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_dense_union_builder_1aa4ff19fe1d1c943a3d5240a3fec6e2b3" prot="private" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>offsets_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1a0eea959637a833f5a859df78fb00f51f" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1aeaff2f8cbc5cbf5bf9a851d9fe62f469" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>type_codes_</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1ab056160c71f487757254bf001da3c2fb" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>type_id_to_children_</name></member>
      <member refid="classarrow_1_1_basic_union_builder_1afaf13586d9da59f2218f1f2488b9f957" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>types_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1a44b3f511e5aefdba55aebfd4afa99c8f" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::DenseUnionBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::DenseUnionBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
