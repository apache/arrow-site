<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2ipc_2reader_8h" kind="file" language="C++">
    <compoundname>reader.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="message_8h" local="yes">arrow/ipc/message.h</includes>
    <includes refid="ipc_2options_8h" local="yes">arrow/ipc/options.h</includes>
    <includes refid="record__batch_8h" local="yes">arrow/record_batch.h</includes>
    <includes refid="result_8h" local="yes">arrow/result.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="arrow_2flight_2client_8h" local="yes">/arrow/cpp/src/arrow/flight/client.h</includedby>
    <includedby refid="ipc_2api_8h" local="yes">/arrow/cpp/src/arrow/ipc/api.h</includedby>
    <incdepgraph>
      <node id="4949">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
      </node>
      <node id="4957">
        <label>limits</label>
      </node>
      <node id="4937">
        <label>cstdint</label>
      </node>
      <node id="4941">
        <label>arrow/ipc/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4946">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4949" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="4951" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4954">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4942">
        <label>string</label>
      </node>
      <node id="4952">
        <label>ostream</label>
      </node>
      <node id="4953">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="4935">
        <label>/arrow/cpp/src/arrow/ipc/reader.h</label>
        <link refid="arrow_2ipc_2reader_8h"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4941" relation="include">
        </childnode>
        <childnode refid="4955" relation="include">
        </childnode>
        <childnode refid="4958" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4940">
        <label>vector</label>
      </node>
      <node id="4944">
        <label>new</label>
      </node>
      <node id="4939">
        <label>utility</label>
      </node>
      <node id="4958">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4948">
        <label>iosfwd</label>
      </node>
      <node id="4936">
        <label>cstddef</label>
      </node>
      <node id="4943">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="4944" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4949" relation="include">
        </childnode>
      </node>
      <node id="4945">
        <label>type_traits</label>
      </node>
      <node id="4956">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4957" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4947">
        <label>cstring</label>
      </node>
      <node id="4951">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4955">
        <label>arrow/ipc/options.h</label>
        <link refid="ipc_2options_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4956" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
      </node>
      <node id="4938">
        <label>memory</label>
      </node>
      <node id="4950">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4962">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="4963">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="4961">
        <label>/arrow/cpp/src/arrow/flight/api.h</label>
        <link refid="flight_2api_8h"/>
        <childnode refid="4962" relation="include">
        </childnode>
      </node>
      <node id="4964">
        <label>/arrow/cpp/src/arrow/ipc/api.h</label>
        <link refid="ipc_2api_8h"/>
      </node>
      <node id="4959">
        <label>/arrow/cpp/src/arrow/ipc/reader.h</label>
        <link refid="arrow_2ipc_2reader_8h"/>
        <childnode refid="4960" relation="include">
        </childnode>
        <childnode refid="4964" relation="include">
        </childnode>
      </node>
      <node id="4960">
        <label>/arrow/cpp/src/arrow/flight/client.h</label>
        <link refid="arrow_2flight_2client_8h"/>
        <childnode refid="4961" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1ipc_1_1_record_batch_stream_reader" prot="public">arrow::ipc::RecordBatchStreamReader</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_record_batch_file_reader" prot="public">arrow::ipc::RecordBatchFileReader</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_listener" prot="public">arrow::ipc::Listener</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_collect_listener" prot="public">arrow::ipc::CollectListener</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_stream_decoder" prot="public">arrow::ipc::StreamDecoder</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <innernamespace refid="namespacearrow_1_1ipc">arrow::ipc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>Arrow<sp/>files<sp/>and<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message_8h" kindref="compound">arrow/ipc/message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ipc_2options_8h" kindref="compound">arrow/ipc/options.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="record__batch_8h" kindref="compound">arrow/record_batch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="result_8h" kindref="compound">arrow/result.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Schema;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tensor;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparseTensor;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputStream;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RandomAccessFile;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryMemo;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IpcPayload;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref><sp/>=<sp/><ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">::arrow::RecordBatchReader</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classarrow_1_1ipc_1_1_record_batch_stream_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_record_batch_stream_reader" kindref="compound">RecordBatchStreamReader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MessageReader&gt;<sp/>message_reader,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::InputStream&gt;&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(std::unique_ptr&lt;MessageReader&gt;<sp/>message_reader,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(std::unique_ptr&lt;MessageReader&gt;<sp/>message_reader,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;RecordBatchReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,<sp/>std::shared_ptr&lt;RecordBatchReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::InputStream&gt;&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classarrow_1_1ipc_1_1_record_batch_file_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_record_batch_file_reader" kindref="compound">RecordBatchFileReader</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_record_batch_file_reader" kindref="compound">RecordBatchFileReader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchFileReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchFileReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,<sp/>int64_t<sp/>footer_offset,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchFileReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::RandomAccessFile&gt;&amp;<sp/>file,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatchFileReader&gt;</ref>&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::RandomAccessFile&gt;&amp;<sp/>file,<sp/>int64_t<sp/>footer_offset,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::RandomAccessFile&gt;&amp;<sp/>file,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>footer_offset,<sp/>std::shared_ptr&lt;RecordBatchFileReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::RandomAccessFile&gt;&amp;<sp/>file,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchFileReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(<ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,<sp/>int64_t<sp/>footer_offset,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchFileReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(<ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatchFileReader&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_record_batches()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">MetadataVersion</ref><sp/>version()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;<sp/>metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatch&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194" refid="classarrow_1_1ipc_1_1_record_batch_file_reader_1a1965dcb875eaded071abe97db20feb4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::shared_ptr&lt;<ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>&gt;*<sp/>batch)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(i).Value(batch);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classarrow_1_1ipc_1_1_listener" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_listener" kindref="compound">Listener</ref><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_listener" kindref="compound">Listener</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnEOS();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnRecordBatchDecoded(std::shared_ptr&lt;RecordBatch&gt;<sp/>record_batch);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnSchemaDecoded(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classarrow_1_1ipc_1_1_collect_listener" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener" kindref="compound">CollectListener</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_listener" kindref="compound">Listener</ref><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250" refid="classarrow_1_1ipc_1_1_collect_listener_1adba4ae9f6bdca6d695e026f78f3d6055" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener_1adba4ae9f6bdca6d695e026f78f3d6055" kindref="member">CollectListener</ref>()<sp/>:<sp/>schema_(),<sp/>record_batches_()<sp/>{}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_collect_listener" kindref="compound">CollectListener</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classarrow_1_1ipc_1_1_collect_listener_1a4d9cc9008100e3a66b20ce46b511e190" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener_1a4d9cc9008100e3a66b20ce46b511e190" kindref="member">OnSchemaDecoded</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>schema_<sp/>=<sp/>std::move(schema);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classarrow_1_1ipc_1_1_collect_listener_1a774e263d2b7e73627b388bc979a7c283" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener_1a774e263d2b7e73627b388bc979a7c283" kindref="member">OnRecordBatchDecoded</ref>(std::shared_ptr&lt;RecordBatch&gt;<sp/>record_batch)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>record_batches_.push_back(std::move(record_batch));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classarrow_1_1ipc_1_1_collect_listener_1ab92bca21d2942e4b2d9cf39747573143" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener_1ab92bca21d2942e4b2d9cf39747573143" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classarrow_1_1ipc_1_1_collect_listener_1a557541cca736ed4d57ee4023aaa87943" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;<sp/><ref refid="classarrow_1_1ipc_1_1_collect_listener_1a557541cca736ed4d57ee4023aaa87943" kindref="member">record_batches</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>record_batches_;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;<sp/>record_batches_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classarrow_1_1ipc_1_1_stream_decoder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_stream_decoder" kindref="compound">StreamDecoder</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_stream_decoder" kindref="compound">StreamDecoder</ref>(std::shared_ptr&lt;Listener&gt;<sp/>listener,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options<sp/>=<sp/>IpcReadOptions::Defaults());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_stream_decoder" kindref="compound">StreamDecoder</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Consume(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Consume(std::shared_ptr&lt;Buffer&gt;<sp/>buffer);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>int64_t<sp/>next_required_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StreamDecoderImpl;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;StreamDecoderImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1ipc_1_1_stream_decoder" kindref="compound">StreamDecoder</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generic<sp/>read<sp/>functions;<sp/>does<sp/>not<sp/>copy<sp/>data<sp/>if<sp/>the<sp/>input<sp/>supports<sp/>zero<sp/>copy<sp/>reads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Schema&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a3b3376dd66dad30bab358cc6cc96be0d" kindref="member">ReadSchema</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Schema&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a3b3376dd66dad30bab358cc6cc96be0d" kindref="member">ReadSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatch&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options,<sp/><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatch&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;RecordBatch&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Tensor&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a0d328ac0e839de876b3b16374d7be886" kindref="member">ReadTensor</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>file);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Tensor&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a0d328ac0e839de876b3b16374d7be886" kindref="member">ReadTensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;SparseTensor&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a8f8ad38095464c24d00b8bedeaf8fdee" kindref="member">ReadSparseTensor</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>file);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;SparseTensor&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a8f8ad38095464c24d00b8bedeaf8fdee" kindref="member">ReadSparseTensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>internal<sp/>APIs<sp/>may<sp/>change<sp/>without<sp/>warning<sp/>or<sp/>deprecation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;size_t&gt;</ref><sp/>ReadSparseTensorBodyBufferCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>metadata);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;SparseTensor&gt;</ref>&gt;<sp/>ReadSparseTensorPayload(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IpcPayload&amp;<sp/>payload);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>fuzzing<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FuzzIpcStream(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FuzzIpcFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a3b3376dd66dad30bab358cc6cc96be0d" kindref="member">ReadSchema</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,<sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a3b3376dd66dad30bab358cc6cc96be0d" kindref="member">ReadSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message,<sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,<sp/><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatch&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,<sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatch&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>version<sp/>with<sp/>Result<sp/>return<sp/>value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a48b3b243bc9ae0b6ed1cb3e43bfd54a3" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatch&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ipc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/ipc/reader.h"/>
  </compounddef>
</doxygen>
