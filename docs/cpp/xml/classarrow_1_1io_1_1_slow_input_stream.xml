<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_slow_input_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::SlowInputStream</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_slow_input_stream_base" prot="public" virt="non-virtual">arrow::io::SlowInputStreamBase&lt; InputStream &gt;</basecompoundref>
    <includes refid="slow_8h" local="no">arrow/io/slow.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1a0634c22732e7dae8453e43944c97f184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::SlowInputStream::~SlowInputStream</definition>
        <argsstring>() override</argsstring>
        <name>~SlowInputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1aeb3ab4d7d0fe2686ffdc526bd0f246d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::SlowInputStream::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream cleanly. </para>        </briefdescription>
        <detaileddescription>
<para>For writable streams, this will attempt to flush any pending data before releasing the underlying resource.</para><para>After <ref refid="classarrow_1_1io_1_1_slow_input_stream_1aeb3ab4d7d0fe2686ffdc526bd0f246d1" kindref="member">Close()</ref> is called, <ref refid="classarrow_1_1io_1_1_slow_input_stream_1aec2fda23c30b89502125212c5f7dc57f" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1ad364dd0a3e656e6245b067cf52eb57aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::SlowInputStream::Abort</definition>
        <argsstring>() override</argsstring>
        <name>Abort</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60">Abort</reimplements>
        <briefdescription>
<para>Close the stream abruptly. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not guarantee that any pending data is flushed. It merely releases any underlying resource used by the stream for its operation.</para><para>After <ref refid="classarrow_1_1io_1_1_slow_input_stream_1ad364dd0a3e656e6245b067cf52eb57aa" kindref="member">Abort()</ref> is called, <ref refid="classarrow_1_1io_1_1_slow_input_stream_1aec2fda23c30b89502125212c5f7dc57f" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1aec2fda23c30b89502125212c5f7dc57f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::SlowInputStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1ab031d0d961d0c14d08ce5246bf956e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::SlowInputStream::Read</definition>
        <argsstring>(int64_t nbytes, void *out) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position into <computeroutput>out</computeroutput>. The number of bytes read is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1a8c8416dfea8895a636ed9a423053ecb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::SlowInputStream::Read</definition>
        <argsstring>(int64_t nbytes) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1aca2d005299c3af1092bedff34b5b015b">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position. Less bytes may be read if EOF is reached. This method updates the current file position.</para><para>In some cases (e.g. a memory-mapped file), this method may avoid a memory copy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1a7e84281bc76c083b0d8f70c8f11954b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; util::string_view &gt;</type>
        <definition>Result&lt;util::string_view&gt; arrow::io::SlowInputStream::Peek</definition>
        <argsstring>(int64_t nbytes) override</argsstring>
        <name>Peek</name>
        <reimplements refid="classarrow_1_1io_1_1_input_stream_1aba80e2518abc166625077bd065ae3721">Peek</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Return zero-copy string_view to upcoming bytes. </para>        </briefdescription>
        <detaileddescription>
<para>Do not modify the stream position. The view becomes invalid after any operation on the stream. May trigger buffering if the requested size is larger than the number of buffered bytes.</para><para>May return NotImplemented on streams that don&apos;t support it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of bytes to see </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_slow_input_stream_1a24a514c308d863906401162d8f65564e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::SlowInputStream::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> wrapper that makes reads slower. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classarrow_1_1io_1_1_slow_input_stream_1ab031d0d961d0c14d08ce5246bf956e79" kindref="member">Read()</ref> calls are made slower by an average latency (in seconds). Actual latencies form a normal distribution closely centered on the average latency. Other calls are forwarded directly. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4190">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="4186">
        <label>arrow::io::SlowInputStream</label>
        <link refid="classarrow_1_1io_1_1_slow_input_stream"/>
        <childnode refid="4187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4189">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="4187">
        <label>arrow::io::SlowInputStreamBase&lt; InputStream &gt;</label>
        <link refid="classarrow_1_1io_1_1_slow_input_stream_base"/>
        <childnode refid="4188" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4188">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="4189" relation="public-inheritance">
        </childnode>
        <childnode refid="4190" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4195">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="4191">
        <label>arrow::io::SlowInputStream</label>
        <link refid="classarrow_1_1io_1_1_slow_input_stream"/>
        <childnode refid="4192" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4194">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="4192">
        <label>arrow::io::SlowInputStreamBase&lt; InputStream &gt;</label>
        <link refid="classarrow_1_1io_1_1_slow_input_stream_base"/>
        <childnode refid="4193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4193">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="4194" relation="public-inheritance">
        </childnode>
        <childnode refid="4195" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/io/slow.h" line="76" column="1" bodyfile="/arrow/cpp/src/arrow/io/slow.h" bodystart="76" bodyend="91"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1ad364dd0a3e656e6245b067cf52eb57aa" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1ab5e2e1bdb05f7847363461bc3b90d386" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>Advance</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1aeb3ab4d7d0fe2686ffdc526bd0f246d1" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1aec2fda23c30b89502125212c5f7dc57f" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aeb778572d0e9bf4902dbfbbc5353d7fd" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>InputStream</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_base_1a14811e4447e25e0ec8a4fc5ecd1e2663" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>latencies_</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1a7e84281bc76c083b0d8f70c8f11954b1" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Peek</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1ab031d0d961d0c14d08ce5246bf956e79" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1a8c8416dfea8895a636ed9a423053ecb4" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_base_1add43b0dde031f2bd85bc9ab12d27db43" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>SlowInputStreamBase</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_base_1abb012c8422693357f9c158ddb0e348f6" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>SlowInputStreamBase</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_base_1ae8aff3850c6d6e5f597be8d4c0ba580b" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>SlowInputStreamBase</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_base_1a371552d18efa9ead7c46c4f602292b08" prot="protected" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>stream_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1a2b9978739db7fa75ba81e794bfba2a64" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>supports_zero_copy</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1a24a514c308d863906401162d8f65564e" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::SlowInputStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1a96a411d4494a9872d7eef4f8bb6396b4" prot="public" virt="virtual"><scope>arrow::io::SlowInputStream</scope><name>~Readable</name></member>
      <member refid="classarrow_1_1io_1_1_slow_input_stream_1a0634c22732e7dae8453e43944c97f184" prot="public" virt="non-virtual"><scope>arrow::io::SlowInputStream</scope><name>~SlowInputStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
