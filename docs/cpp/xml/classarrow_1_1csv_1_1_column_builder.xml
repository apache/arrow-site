<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1csv_1_1_column_builder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::csv::ColumnBuilder</compoundname>
    <includes refid="column__builder_8h" local="no">arrow/csv/column_builder.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1csv_1_1_column_builder_1a54d98399b8a3533a87dab283d9513385" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; internal::TaskGroup &gt;</type>
        <definition>std::shared_ptr&lt;internal::TaskGroup&gt; arrow::csv::ColumnBuilder::task_group_</definition>
        <argsstring></argsstring>
        <name>task_group_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="79" column="1" bodyfile="/arrow/cpp/src/arrow/csv/column_builder.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a2429b281ade00e132e26b13631a5b234" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::csv::ColumnBuilder::~ColumnBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>~ColumnBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a2dffa7bee660531fffd5da415604f460" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void arrow::csv::ColumnBuilder::Append</definition>
        <argsstring>(const std::shared_ptr&lt; BlockParser &gt; &amp;parser)=0</argsstring>
        <name>Append</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1csv_1_1_block_parser" kindref="compound">BlockParser</ref> &gt; &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
<para>Spawn a task that will try to convert and append the given CSV block. </para>        </briefdescription>
        <detaileddescription>
<para>All calls to <ref refid="classarrow_1_1csv_1_1_column_builder_1a2dffa7bee660531fffd5da415604f460" kindref="member">Append()</ref> should happen on the same thread, otherwise call <ref refid="classarrow_1_1csv_1_1_column_builder_1a790dd631f5465dfec55a1e560c31139f" kindref="member">Insert()</ref> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a790dd631f5465dfec55a1e560c31139f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void arrow::csv::ColumnBuilder::Insert</definition>
        <argsstring>(int64_t block_index, const std::shared_ptr&lt; BlockParser &gt; &amp;parser)=0</argsstring>
        <name>Insert</name>
        <param>
          <type>int64_t</type>
          <declname>block_index</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1csv_1_1_block_parser" kindref="compound">BlockParser</ref> &gt; &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
<para>Spawn a task that will try to convert and insert the given CSV block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1ab966272c5045ed42388db1912b683ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref> &gt; &gt;</type>
        <definition>virtual Result&lt;std::shared_ptr&lt;ChunkedArray&gt; &gt; arrow::csv::ColumnBuilder::Finish</definition>
        <argsstring>()=0</argsstring>
        <name>Finish</name>
        <briefdescription>
<para>Return the final chunked array. The TaskGroup <emphasis>must</emphasis> have finished! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a2dc6970de476bcb0bded4f4ee1f36316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; internal::TaskGroup &gt;</type>
        <definition>std::shared_ptr&lt;internal::TaskGroup&gt; arrow::csv::ColumnBuilder::task_group</definition>
        <argsstring>()</argsstring>
        <name>task_group</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/csv/column_builder.h" bodystart="56" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a6753495aff7952ad4a4f0806e9b7926b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;ColumnBuilder&gt; &gt; arrow::csv::ColumnBuilder::Make</definition>
        <argsstring>(MemoryPool *pool, const std::shared_ptr&lt; DataType &gt; &amp;type, int32_t col_index, const ConvertOptions &amp;options, const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;task_group)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>col_index</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1csv_1_1_convert_options" kindref="compound">ConvertOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;</type>
          <declname>task_group</declname>
        </param>
        <briefdescription>
<para>Construct a strictly-typed <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a254247a8fd6c0e07088b953e284d8aaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;ColumnBuilder&gt; &gt; arrow::csv::ColumnBuilder::Make</definition>
        <argsstring>(MemoryPool *pool, int32_t col_index, const ConvertOptions &amp;options, const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;task_group)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>col_index</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1csv_1_1_convert_options" kindref="compound">ConvertOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;</type>
          <declname>task_group</declname>
        </param>
        <briefdescription>
<para>Construct a type-inferring <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1a633c626a58d3dd4cbc381452caddacc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;ColumnBuilder&gt; &gt; arrow::csv::ColumnBuilder::MakeNull</definition>
        <argsstring>(MemoryPool *pool, const std::shared_ptr&lt; DataType &gt; &amp;type, const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;task_group)</argsstring>
        <name>MakeNull</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; internal::TaskGroup &gt; &amp;</type>
          <declname>task_group</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classarrow_1_1csv_1_1_column_builder" kindref="compound">ColumnBuilder</ref> for a column of nulls (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>not present in the CSV file). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="71" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1csv_1_1_column_builder_1ac7f4be96bd49dc893f0433fe5084fdad" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::csv::ColumnBuilder::ColumnBuilder</definition>
        <argsstring>(std::shared_ptr&lt; internal::TaskGroup &gt; task_group)</argsstring>
        <name>ColumnBuilder</name>
        <param>
          <type>std::shared_ptr&lt; internal::TaskGroup &gt;</type>
          <declname>task_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="76" column="1" bodyfile="/arrow/cpp/src/arrow/csv/column_builder.h" bodystart="76" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/csv/column_builder.h" line="40" column="1" bodyfile="/arrow/cpp/src/arrow/csv/column_builder.h" bodystart="40" bodyend="80"/>
    <listofallmembers>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a2dffa7bee660531fffd5da415604f460" prot="public" virt="pure-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1ac7f4be96bd49dc893f0433fe5084fdad" prot="protected" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>ColumnBuilder</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1ab966272c5045ed42388db1912b683ded" prot="public" virt="pure-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a790dd631f5465dfec55a1e560c31139f" prot="public" virt="pure-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>Insert</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a6753495aff7952ad4a4f0806e9b7926b" prot="public" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>Make</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a254247a8fd6c0e07088b953e284d8aaf" prot="public" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>Make</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a633c626a58d3dd4cbc381452caddacc5" prot="public" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>MakeNull</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a2dc6970de476bcb0bded4f4ee1f36316" prot="public" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>task_group</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a54d98399b8a3533a87dab283d9513385" prot="protected" virt="non-virtual"><scope>arrow::csv::ColumnBuilder</scope><name>task_group_</name></member>
      <member refid="classarrow_1_1csv_1_1_column_builder_1a2429b281ade00e132e26b13631a5b234" prot="public" virt="virtual"><scope>arrow::csv::ColumnBuilder</scope><name>~ColumnBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
