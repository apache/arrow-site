<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tensor_8h" kind="file" language="C++">
    <compoundname>tensor.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="compare_8h" local="yes">arrow/compare.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="type__traits_8h" local="yes">arrow/type_traits.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="api_8h" local="yes">/arrow/cpp/src/arrow/api.h</includedby>
    <includedby refid="sparse__tensor_8h" local="yes">/arrow/cpp/src/arrow/sparse_tensor.h</includedby>
    <incdepgraph>
      <node id="11445">
        <label>atomic</label>
      </node>
      <node id="11453">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
      </node>
      <node id="11469">
        <label>limits</label>
      </node>
      <node id="11436">
        <label>cstdint</label>
      </node>
      <node id="11470">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11452" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11471" relation="include">
        </childnode>
        <childnode refid="11472" relation="include">
        </childnode>
        <childnode refid="11451" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11473" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11463">
        <label>endian.h</label>
      </node>
      <node id="11451">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="11452" relation="include">
        </childnode>
        <childnode refid="11441" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11453" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11454" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11475">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="11476" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
      </node>
      <node id="11456">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11468">
        <label>cmath</label>
      </node>
      <node id="11467">
        <label>cassert</label>
      </node>
      <node id="11457">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
      </node>
      <node id="11438">
        <label>string</label>
      </node>
      <node id="11474">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="11440">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11441" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11458">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="11459" relation="include">
        </childnode>
      </node>
      <node id="11460">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="11451" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11455">
        <label>ostream</label>
      </node>
      <node id="11443">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="11471">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11472" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11453" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11462">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="11463" relation="include">
        </childnode>
        <childnode refid="11464" relation="include">
        </childnode>
        <childnode refid="11465" relation="include">
        </childnode>
        <childnode refid="11466" relation="include">
        </childnode>
        <childnode refid="11467" relation="include">
        </childnode>
        <childnode refid="11468" relation="include">
        </childnode>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11452" relation="include">
        </childnode>
        <childnode refid="11469" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11470" relation="include">
        </childnode>
        <childnode refid="11448" relation="include">
        </childnode>
        <childnode refid="11453" relation="include">
        </childnode>
        <childnode refid="11475" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11454" relation="include">
        </childnode>
        <childnode refid="11473" relation="include">
        </childnode>
        <childnode refid="11477" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11466">
        <label>bitset</label>
      </node>
      <node id="11476">
        <label>tuple</label>
      </node>
      <node id="11439">
        <label>vector</label>
      </node>
      <node id="11435">
        <label>/arrow/cpp/src/arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11440" relation="include">
        </childnode>
        <childnode refid="11444" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11461" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11449">
        <label>new</label>
      </node>
      <node id="11447">
        <label>utility</label>
      </node>
      <node id="11473">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11474" relation="include">
        </childnode>
      </node>
      <node id="11465">
        <label>array</label>
      </node>
      <node id="11461">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11462" relation="include">
        </childnode>
      </node>
      <node id="11472">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="11441">
        <label>iosfwd</label>
      </node>
      <node id="11459">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="11448">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="11449" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11451" relation="include">
        </childnode>
        <childnode refid="11453" relation="include">
        </childnode>
      </node>
      <node id="11446">
        <label>climits</label>
      </node>
      <node id="11444">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="11445" relation="include">
        </childnode>
        <childnode refid="11446" relation="include">
        </childnode>
        <childnode refid="11436" relation="include">
        </childnode>
        <childnode refid="11441" relation="include">
        </childnode>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11439" relation="include">
        </childnode>
        <childnode refid="11448" relation="include">
        </childnode>
        <childnode refid="11456" relation="include">
        </childnode>
        <childnode refid="11457" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11458" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
        <childnode refid="11460" relation="include">
        </childnode>
      </node>
      <node id="11450">
        <label>type_traits</label>
      </node>
      <node id="11464">
        <label>algorithm</label>
      </node>
      <node id="11452">
        <label>cstring</label>
      </node>
      <node id="11454">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="11437" relation="include">
        </childnode>
        <childnode refid="11455" relation="include">
        </childnode>
        <childnode refid="11438" relation="include">
        </childnode>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11443" relation="include">
        </childnode>
      </node>
      <node id="11437">
        <label>memory</label>
      </node>
      <node id="11442">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="11436" relation="include">
        </childnode>
      </node>
      <node id="11477">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="11450" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11480">
        <label>/arrow/cpp/src/arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="11481" relation="include">
        </childnode>
        <childnode refid="11482" relation="include">
        </childnode>
        <childnode refid="11484" relation="include">
        </childnode>
        <childnode refid="11492" relation="include">
        </childnode>
        <childnode refid="11494" relation="include">
        </childnode>
      </node>
      <node id="11487">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="11481">
        <label>/arrow/cpp/src/arrow/ipc/metadata_internal.h</label>
        <link refid="metadata__internal_8h"/>
      </node>
      <node id="11490">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
      </node>
      <node id="11479">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="11486">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="11488">
        <label>/arrow/cpp/src/arrow/python/inference.h</label>
        <link refid="inference_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
      </node>
      <node id="11482">
        <label>/arrow/cpp/src/arrow/python/numpy_convert.h</label>
        <link refid="numpy__convert_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
      </node>
      <node id="11492">
        <label>/arrow/cpp/src/arrow/python/serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
        <childnode refid="11493" relation="include">
        </childnode>
      </node>
      <node id="11484">
        <label>/arrow/cpp/src/arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="11485" relation="include">
        </childnode>
      </node>
      <node id="11483">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="11478">
        <label>/arrow/cpp/src/arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="11479" relation="include">
        </childnode>
        <childnode refid="11480" relation="include">
        </childnode>
      </node>
      <node id="11489">
        <label>/arrow/cpp/src/arrow/python/io.h</label>
        <link refid="arrow_2python_2io_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
      </node>
      <node id="11493">
        <label>/arrow/cpp/src/arrow/python/deserialize.h</label>
        <link refid="deserialize_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
      </node>
      <node id="11485">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
        <childnode refid="11486" relation="include">
        </childnode>
        <childnode refid="11487" relation="include">
        </childnode>
        <childnode refid="11488" relation="include">
        </childnode>
        <childnode refid="11489" relation="include">
        </childnode>
        <childnode refid="11490" relation="include">
        </childnode>
        <childnode refid="11491" relation="include">
        </childnode>
      </node>
      <node id="11491">
        <label>/arrow/cpp/src/arrow/python/python_to_arrow.h</label>
        <link refid="python__to__arrow_8h"/>
        <childnode refid="11483" relation="include">
        </childnode>
      </node>
      <node id="11494">
        <label>/arrow/cpp/src/arrow/tensor/converter.h</label>
        <link refid="tensor_2converter_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_sparse_tensor_impl" prot="public">arrow::SparseTensorImpl</innerclass>
    <innerclass refid="classarrow_1_1_tensor" prot="public">arrow::Tensor</innerclass>
    <innerclass refid="classarrow_1_1_numeric_tensor" prot="public">arrow::NumericTensor</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compare_8h" kindref="compound">arrow/compare.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__traits_8h" kindref="compound">arrow/type_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_tensor_supported(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab8f52afb784526f800c91de101673b42" kindref="member">Type::UINT8</ref>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44adf9f694eb598f6f8cac8bed3da547d65" kindref="member">Type::INT8</ref>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a87c4272d67d3a84ed9ce6c6a9a4a6772" kindref="member">Type::UINT16</ref>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a36b3753b92501b60b2740b29d6e17696" kindref="member">Type::INT16</ref>:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a89620afd46abf8f99b057bd3587a78f0" kindref="member">Type::UINT32</ref>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af8005f162bc422abcee7f1197bf04cf8" kindref="member">Type::INT32</ref>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af1096e3ebb2d7a678fc6ddac24bf7639" kindref="member">Type::UINT64</ref>:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af38ec7ec303572a87b11fd48876bc1d0" kindref="member">Type::INT64</ref>:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af6ebd198668f2a6c2d79c549f599e896" kindref="member">Type::HALF_FLOAT</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" kindref="member">Type::FLOAT</ref>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" kindref="member">Type::DOUBLE</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SparseIndexType&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparseTensorImpl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsTensorStridesContiguous(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ValidateTensorParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>dim_names);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classarrow_1_1_tensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86" refid="classarrow_1_1_tensor_1a85ca08ba70b81e474cef7d9eb73c2b34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Tensor&gt;</ref>&gt;<sp/><ref refid="classarrow_1_1_tensor_1a85ca08ba70b81e474cef7d9eb73c2b34" kindref="member">Make</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>dim_names<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ValidateTensorParameters(type,<sp/>data,<sp/>shape,<sp/>strides,<sp/>dim_names));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;Tensor&gt;(type,<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>shape,<sp/>strides,<sp/>dim_names);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>dim_names);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classarrow_1_1_tensor_1a9bcd93151c9086430ebde46c0c3e2370" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_tensor_1a9bcd93151c9086430ebde46c0c3e2370" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;<sp/>}</highlight></codeline>
<codeline lineno="111" refid="classarrow_1_1_tensor_1a27e72ed5e1ad825b0a5813bf6bd04010" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_tensor_1a27e72ed5e1ad825b0a5813bf6bd04010" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classarrow_1_1_tensor_1a5dc0bc200a25fcb6bf313427133d7dce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_tensor_1a5dc0bc200a25fcb6bf313427133d7dce" kindref="member">raw_data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_-&gt;data();<sp/>}</highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1_tensor_1a3badcfee7ddfbceeb3accdf49f9959ac" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_tensor_1a3badcfee7ddfbceeb3accdf49f9959ac" kindref="member">raw_mutable_data</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_-&gt;mutable_data();<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classarrow_1_1_tensor_1ad1135e664dda72de17680475a28fbee5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/><ref refid="classarrow_1_1_tensor_1ad1135e664dda72de17680475a28fbee5" kindref="member">shape</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_;<sp/>}</highlight></codeline>
<codeline lineno="117" refid="classarrow_1_1_tensor_1adecc04e39498baf201453fb5ebddcc85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/><ref refid="classarrow_1_1_tensor_1adecc04e39498baf201453fb5ebddcc85" kindref="member">strides</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strides_;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classarrow_1_1_tensor_1af5cafa13ed1ef13d6a2d68be1dc8820b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_tensor_1af5cafa13ed1ef13d6a2d68be1dc8820b" kindref="member">ndim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(shape_.size());<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classarrow_1_1_tensor_1ad41ab4a1764534d20213970191b4bd0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/><ref refid="classarrow_1_1_tensor_1ad41ab4a1764534d20213970191b4bd0c" kindref="member">dim_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dim_names_;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dim_name(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>int64_t<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classarrow_1_1_tensor_1a8620cbf7de60ce9a2cd8527e30a2e8ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_tensor_1a8620cbf7de60ce9a2cd8527e30a2e8ad" kindref="member">is_mutable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_-&gt;is_mutable();<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_contiguous()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_row_major()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_column_major()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_equal_options" kindref="compound">EqualOptions</ref>&amp;<sp/>=<sp/><ref refid="classarrow_1_1_equal_options_1aceb7c9984ead6d5a79ba4a725193d452" kindref="member">EqualOptions::Defaults</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CountNonZero(int64_t*<sp/>result)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classarrow_1_1_tensor_1a78dae60d7cb7cc5a70b61f0cde2c585d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classarrow_1_1_tensor_1a78dae60d7cb7cc5a70b61f0cde2c585d" kindref="member">CalculateValueOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(index.size());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>index[i]<sp/>*<sp/>strides[i];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="159" refid="classarrow_1_1_tensor_1ac1d387818d9e06c060555b7103120966" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType::c_type&amp;<sp/><ref refid="classarrow_1_1_tensor_1ac1d387818d9e06c060555b7103120966" kindref="member">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>c_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType::c_type;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset<sp/>=<sp/><ref refid="classarrow_1_1_tensor_1a78dae60d7cb7cc5a70b61f0cde2c585d" kindref="member">Tensor::CalculateValueOffset</ref>(strides_,<sp/>index);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>c_type*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">c_type*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(raw_data()<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167" refid="classarrow_1_1_tensor_1a2d08c525c1c829cf81f2f64c96b9e7d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_tensor_1a2d08c525c1c829cf81f2f64c96b9e7d5" kindref="member">Tensor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classarrow_1_1_tensor_1ade1e4a39856e1377baf50c587b11272b" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_tensor_1ade1e4a39856e1377baf50c587b11272b" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="170" refid="classarrow_1_1_tensor_1a00dd73d91a790484b94aabcb4fedcdc7" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_tensor_1a00dd73d91a790484b94aabcb4fedcdc7" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="171" refid="classarrow_1_1_tensor_1adfbc5876ce2f4c71d5503554a1cba2f2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/><ref refid="classarrow_1_1_tensor_1adfbc5876ce2f4c71d5503554a1cba2f2" kindref="member">shape_</ref>;</highlight></codeline>
<codeline lineno="172" refid="classarrow_1_1_tensor_1a5224d67e07ebb71c1c9f83e07bec303f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/><ref refid="classarrow_1_1_tensor_1a5224d67e07ebb71c1c9f83e07bec303f" kindref="member">strides_</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classarrow_1_1_tensor_1a84f88a8835ecb20532f89fb804b8ce2a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classarrow_1_1_tensor_1a84f88a8835ecb20532f89fb804b8ce2a" kindref="member">dim_names_</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SparseIndexType&gt;</highlight></codeline>
<codeline lineno="178" refid="classarrow_1_1_tensor_1a2528b8b7811f0513cfdb3ee8751a010a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_sparse_tensor_impl" kindref="compound">SparseTensorImpl</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="185" refid="classarrow_1_1_numeric_tensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_numeric_tensor" kindref="compound">NumericTensor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187" refid="classarrow_1_1_numeric_tensor_1a45584fca9da9a327b08e0097c432fb3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_tensor_1a45584fca9da9a327b08e0097c432fb3b" kindref="member">TypeClass</ref><sp/>=<sp/>TYPE;</highlight></codeline>
<codeline lineno="188" refid="classarrow_1_1_numeric_tensor_1aab67a970fa1ce3ccb7acc7f4fde52bbf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_tensor_1aab67a970fa1ce3ccb7acc7f4fde52bbf" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeClass::c_type;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classarrow_1_1_numeric_tensor_1ae9a2a18ee78a3b0d025f79608b258321" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;NumericTensor&lt;TYPE&gt;</ref>&gt;&gt;<sp/><ref refid="classarrow_1_1_numeric_tensor_1ae9a2a18ee78a3b0d025f79608b258321" kindref="member">Make</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>dim_names<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(internal::ValidateTensorParameters(</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits&lt;TYPE&gt;::type_singleton</ref>(),<sp/>data,<sp/>shape,<sp/>strides,<sp/>dim_names));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;NumericTensor&lt;TYPE&gt;&gt;(<ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>shape,<sp/>strides,<sp/>dim_names);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classarrow_1_1_numeric_tensor_1a4aeea1af541551baf382eda9497bd8a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_tensor_1a4aeea1af541551baf382eda9497bd8a4" kindref="member">NumericTensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>dim_names)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_tensor" kindref="compound">Tensor</ref>(<ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;TYPE&gt;::type_singleton(),<sp/>data,<sp/>shape,<sp/>strides,<sp/>dim_names)<sp/>{}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classarrow_1_1_numeric_tensor_1afa3c1356beb206dd95464087cf919ef3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_tensor_1afa3c1356beb206dd95464087cf919ef3" kindref="member">NumericTensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_numeric_tensor" kindref="compound">NumericTensor</ref>(data,<sp/>shape,<sp/>{},<sp/>{})<sp/>{}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classarrow_1_1_numeric_tensor_1a47aa4eda9e62bfe1d6a0c0d218a7526d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_tensor_1a47aa4eda9e62bfe1d6a0c0d218a7526d" kindref="member">NumericTensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_numeric_tensor" kindref="compound">NumericTensor</ref>(data,<sp/>shape,<sp/>strides,<sp/>{})<sp/>{}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classarrow_1_1_numeric_tensor_1ab4ac2792df290ffcdc2c45c77d47572a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_tensor_1aab67a970fa1ce3ccb7acc7f4fde52bbf" kindref="member">value_type</ref>&amp;<sp/><ref refid="classarrow_1_1_numeric_tensor_1ab4ac2792df290ffcdc2c45c77d47572a" kindref="member">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tensor::Value&lt;TypeClass&gt;(index);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/tensor.h"/>
  </compounddef>
</doxygen>
