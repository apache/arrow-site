<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1_record_batch_stream_reader" kind="class" language="C++" prot="public">
    <compoundname>arrow::ipc::RecordBatchStreamReader</compoundname>
    <basecompoundref refid="classarrow_1_1_record_batch_reader" prot="public" virt="non-virtual">arrow::RecordBatchReader</basecompoundref>
    <includes refid="arrow_2ipc_2reader_8h" local="no">arrow/ipc/reader.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1abf4fa9befcf2894c5ec533f4bc520ea9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;RecordBatchReader&gt; &gt; arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(std::unique_ptr&lt; MessageReader &gt; message_reader, const IpcReadOptions &amp;options=IpcReadOptions::Defaults())</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref> &gt;</type>
          <declname>message_reader</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structarrow_1_1ipc_1_1_ipc_read_options_1a462535c293a55154c71c6a5666d71e17" kindref="member">IpcReadOptions::Defaults</ref>()</defval>
        </param>
        <briefdescription>
<para>Create batch reader from generic <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This will take ownership of the given <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">message_reader</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref> implementation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>any IPC reading options (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created batch reader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a8433ce3fd5aca03a841c9f57609201a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;RecordBatchReader&gt; &gt; arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(io::InputStream *stream, const IpcReadOptions &amp;options=IpcReadOptions::Defaults())</argsstring>
        <name>Open</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structarrow_1_1ipc_1_1_ipc_read_options_1a462535c293a55154c71c6a5666d71e17" kindref="member">IpcReadOptions::Defaults</ref>()</defval>
        </param>
        <briefdescription>
<para>Record batch stream reader from InputStream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>an input stream instance. Must stay alive throughout lifetime of stream reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>any IPC reading options (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created batch reader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a1acf9d4ed8ff18543e0b156da747866c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;RecordBatchReader&gt; &gt; arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(const std::shared_ptr&lt; io::InputStream &gt; &amp;stream, const IpcReadOptions &amp;options=IpcReadOptions::Defaults())</argsstring>
        <name>Open</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref> &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structarrow_1_1ipc_1_1_ipc_read_options_1a462535c293a55154c71c6a5666d71e17" kindref="member">IpcReadOptions::Defaults</ref>()</defval>
        </param>
        <briefdescription>
<para>Open stream and retain ownership of stream object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>any IPC reading options (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created batch reader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a06160a910260d4590228dcd797fe8031" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(std::unique_ptr&lt; MessageReader &gt; message_reader, std::shared_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref> &gt;</type>
          <declname>message_reader</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a33f126f0c1d70ab6c82562565330f8bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(std::unique_ptr&lt; MessageReader &gt; message_reader, std::unique_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref> &gt;</type>
          <declname>message_reader</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1add9a0fff807a286725be187804e2e0d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(io::InputStream *stream, std::shared_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_record_batch_stream_reader_1ae24d0050f1a9533c8414996e9cf570a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::RecordBatchStreamReader::Open</definition>
        <argsstring>(const std::shared_ptr&lt; io::InputStream &gt; &amp;stream, std::shared_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref> &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="namespacearrow_1_1ipc_1a6eae3918b2e6c0c4e1f56e083187a339" kindref="member">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Synchronous batch stream reader that reads from <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>This class reads the schema (plus any dictionaries) as the first messages in the stream, followed by record batches. For more granular zero-copy reads see the ReadRecordBatch functions </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3884">
        <label>RecordBatchReader</label>
        <link refid="classarrow_1_1_record_batch_reader"/>
      </node>
      <node id="3883">
        <label>arrow::ipc::RecordBatchStreamReader</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_reader"/>
        <childnode refid="3884" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3886">
        <label>RecordBatchReader</label>
        <link refid="classarrow_1_1_record_batch_reader"/>
      </node>
      <node id="3885">
        <label>arrow::ipc::RecordBatchStreamReader</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_reader"/>
        <childnode refid="3886" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/ipc/reader.h" line="68" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/reader.h" bodystart="68" bodyend="109"/>
    <listofallmembers>
      <member refid="classarrow_1_1_record_batch_reader_1a81d4b09c025e8ca6576c339fe91f22b3" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Next</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1abf4fa9befcf2894c5ec533f4bc520ea9" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a8433ce3fd5aca03a841c9f57609201a6" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a1acf9d4ed8ff18543e0b156da747866c" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a06160a910260d4590228dcd797fe8031" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1a33f126f0c1d70ab6c82562565330f8bb" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1add9a0fff807a286725be187804e2e0d7" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_stream_reader_1ae24d0050f1a9533c8414996e9cf570a5" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a8fd184ee67656e5ca4758335fb82737d" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a4c4cedba15636348d36be585b7443d58" prot="public" virt="non-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1aaffe944df9d8a4c3e6592eb2f8f78f9f" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>ReadNext</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1ad2ded865a6720e61e4685cfd34ed377f" prot="public" virt="pure-virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>schema</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a77922fab827a0f039aeb8b8a7c06ae4c" prot="public" virt="virtual"><scope>arrow::ipc::RecordBatchStreamReader</scope><name>~RecordBatchReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
