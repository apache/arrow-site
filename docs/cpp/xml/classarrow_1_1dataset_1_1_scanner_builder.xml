<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_scanner_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::ScannerBuilder</compoundname>
    <includes refid="scanner_8h" local="no">arrow/dataset/scanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_scanner_builder_1a42af86c59bcf3a8170dd3d9ba8faaf57" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Dataset&gt; arrow::dataset::ScannerBuilder::dataset_</definition>
        <argsstring></argsstring>
        <name>dataset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="246" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_scanner_builder_1ada3d540554857c8a33715cd0d373f757" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ScanOptions&gt; arrow::dataset::ScannerBuilder::scan_options_</definition>
        <argsstring></argsstring>
        <name>scan_options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="247" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_scanner_builder_1acf89af2a04531c4126528f9ababc56e5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ScanContext&gt; arrow::dataset::ScannerBuilder::scan_context_</definition>
        <argsstring></argsstring>
        <name>scan_context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="248" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_scanner_builder_1a22121f2843f417eee989051f72af54f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::dataset::ScannerBuilder::has_projection_</definition>
        <argsstring></argsstring>
        <name>has_projection_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="249" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_scanner_builder_1a9d6e32365430ba0d70d767ccf0afa108" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; arrow::dataset::ScannerBuilder::project_columns_</definition>
        <argsstring></argsstring>
        <name>project_columns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="250" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1af71e20fc62d9b48636c0d03d2b0fbd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::ScannerBuilder::ScannerBuilder</definition>
        <argsstring>(std::shared_ptr&lt; Dataset &gt; dataset, std::shared_ptr&lt; ScanContext &gt; scan_context)</argsstring>
        <name>ScannerBuilder</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> &gt;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
          <declname>scan_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1a15da200cbacbf327be99a3f6952ab21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ScannerBuilder::Project</definition>
        <argsstring>(std::vector&lt; std::string &gt; columns)</argsstring>
        <name>Project</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
<para>Set the subset of columns to materialize. </para>        </briefdescription>
        <detaileddescription>
<para>This subset will be passed down to Sources and corresponding Fragments. The goal is to avoid loading/copying/deserializing columns that will not be required further down the compute chain.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">columns</parametername>
</parameternamelist>
<parameterdescription>
<para>list of columns to project. Order and duplicates will be preserved.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Failure if any column name does not exists in the dataset&apos;s <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1a9cf0af65e6702e75a588ae97fa581051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ScannerBuilder::Filter</definition>
        <argsstring>(std::shared_ptr&lt; Expression &gt; filter)</argsstring>
        <name>Filter</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Set the filter expression to return only rows matching the filter. </para>        </briefdescription>
        <detaileddescription>
<para>The predicate will be passed down to Sources and corresponding Fragments to exploit predicate pushdown if possible using partition information or <ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref> internal metadata, e.g. Parquet statistics.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filter</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to filter rows with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Failure if any referenced columns does not exist in the dataset&apos;s <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1a97810781d70973deeb9832ae6128aace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ScannerBuilder::Filter</definition>
        <argsstring>(const Expression &amp;filter)</argsstring>
        <name>Filter</name>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1ab10faa196ec9a3a74d47681f1283097e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ScannerBuilder::UseThreads</definition>
        <argsstring>(bool use_threads=true)</argsstring>
        <name>UseThreads</name>
        <param>
          <type>bool</type>
          <declname>use_threads</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Indicate if the <ref refid="classarrow_1_1dataset_1_1_scanner" kindref="compound">Scanner</ref> should make use of the available ThreadPool found in <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref>;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1adc02c1cc2b9be99cf4d5e2f91cd23458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ScannerBuilder::BatchSize</definition>
        <argsstring>(int64_t batch_size)</argsstring>
        <name>BatchSize</name>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <briefdescription>
<para>Set the maximum number of rows per <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of rows. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An error if the number for batch is not greater than 0.</para></simplesect>
This option provides a control limiting the memory owned by any <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1a82a662e6b920fadf188f0bb55555748f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scanner" kindref="compound">Scanner</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Scanner&gt; &gt; arrow::dataset::ScannerBuilder::Finish</definition>
        <argsstring>() const</argsstring>
        <name>Finish</name>
        <briefdescription>
<para>Return the constructed now-immutable <ref refid="classarrow_1_1dataset_1_1_scanner" kindref="compound">Scanner</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_scanner_builder_1aba4fd10be789d5faa1cbb2a005ad03fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::dataset::ScannerBuilder::schema</definition>
        <argsstring>() const</argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="243" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="243" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1dataset_1_1_scanner_builder" kindref="compound">ScannerBuilder</ref> is a factory class to construct a <ref refid="classarrow_1_1dataset_1_1_scanner" kindref="compound">Scanner</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>It is used to pass information, notably a potential filter expression and a subset of columns to materialize. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/dataset/scanner.h" line="197" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/scanner.h" bodystart="197" bodyend="251"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1adc02c1cc2b9be99cf4d5e2f91cd23458" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>BatchSize</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a42af86c59bcf3a8170dd3d9ba8faaf57" prot="private" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>dataset_</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a9cf0af65e6702e75a588ae97fa581051" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>Filter</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a97810781d70973deeb9832ae6128aace" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>Filter</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a82a662e6b920fadf188f0bb55555748f" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a22121f2843f417eee989051f72af54f3" prot="private" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>has_projection_</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a15da200cbacbf327be99a3f6952ab21a" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>Project</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1a9d6e32365430ba0d70d767ccf0afa108" prot="private" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>project_columns_</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1acf89af2a04531c4126528f9ababc56e5" prot="private" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>scan_context_</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1ada3d540554857c8a33715cd0d373f757" prot="private" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>scan_options_</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1af71e20fc62d9b48636c0d03d2b0fbd6c" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>ScannerBuilder</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1aba4fd10be789d5faa1cbb2a005ad03fa" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_scanner_builder_1ab10faa196ec9a3a74d47681f1283097e" prot="public" virt="non-virtual"><scope>arrow::dataset::ScannerBuilder</scope><name>UseThreads</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
