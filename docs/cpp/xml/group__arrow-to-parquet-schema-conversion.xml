<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__arrow-to-parquet-schema-conversion" kind="group">
    <compoundname>arrow-to-parquet-schema-conversion</compoundname>
    <title>Functions to convert an Arrow</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__arrow-to-parquet-schema-conversion_1ga46ca510e421a89e717f9dc9968ef038c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FieldToNode</definition>
        <argsstring>(const std::shared_ptr&lt;::arrow::Field &gt; &amp;field, const WriterProperties &amp;properties, const ArrowWriterProperties &amp;arrow_properties, schema::NodePtr *out)</argsstring>
        <name>FieldToNode</name>
        <param>
          <type>const std::shared_ptr&lt;::<ref refid="classarrow_1_1_field" kindref="compound">arrow::Field</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const WriterProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const ArrowWriterProperties &amp;</type>
          <declname>arrow_properties</declname>
        </param>
        <param>
          <type>schema::NodePtr *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__arrow-to-parquet-schema-conversion_1ga0b5abbe961761a266490feca3f75e9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::ToParquetSchema</definition>
        <argsstring>(const ::arrow::Schema *arrow_schema, const WriterProperties &amp;properties, const ArrowWriterProperties &amp;arrow_properties, std::shared_ptr&lt; SchemaDescriptor &gt; *out)</argsstring>
        <name>ToParquetSchema</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_schema" kindref="compound">arrow::Schema</ref> *</type>
          <declname>arrow_schema</declname>
        </param>
        <param>
          <type>const WriterProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const ArrowWriterProperties &amp;</type>
          <declname>arrow_properties</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; SchemaDescriptor &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__arrow-to-parquet-schema-conversion_1ga0e5b1ecccddbc651dffc29fdd15b6e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::ToParquetSchema</definition>
        <argsstring>(const ::arrow::Schema *arrow_schema, const WriterProperties &amp;properties, std::shared_ptr&lt; SchemaDescriptor &gt; *out)</argsstring>
        <name>ToParquetSchema</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_schema" kindref="compound">arrow::Schema</ref> *</type>
          <declname>arrow_schema</declname>
        </param>
        <param>
          <type>const WriterProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; SchemaDescriptor &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>schema into a Parquet schema. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
