<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_in_holder" kind="class" language="C++" prot="public">
    <compoundname>gandiva::InHolder</compoundname>
    <includes refid="in__holder_8h" local="no">gandiva/in_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_in_holder_1a637efdf4fbb00d10e1d0ea0655d46ceb" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; Type &gt;</type>
        <definition>std::unordered_set&lt;Type&gt; gandiva::InHolder&lt; Type &gt;::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/in_holder.h" line="42" column="1" bodyfile="/arrow/cpp/src/gandiva/in_holder.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_in_holder_1a89cb04b7f4835e2a6fef47ae913cd817" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::InHolder&lt; Type &gt;::InHolder</definition>
        <argsstring>(const std::unordered_set&lt; Type &gt; &amp;values)</argsstring>
        <name>InHolder</name>
        <param>
          <type>const std::unordered_set&lt; Type &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/in_holder.h" line="32" column="1" bodyfile="/arrow/cpp/src/gandiva/in_holder.h" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_in_holder_1a1b9bf2acf512d78953c6983b1f55884a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gandiva::InHolder&lt; Type &gt;::HasValue</definition>
        <argsstring>(Type value) const</argsstring>
        <name>HasValue</name>
        <param>
          <type>Type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/in_holder.h" line="39" column="1" bodyfile="/arrow/cpp/src/gandiva/in_holder.h" bodystart="39" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function Holder for IN Expressions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/in_holder.h" line="30" column="1" bodyfile="/arrow/cpp/src/gandiva/in_holder.h" bodystart="30" bodyend="43"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_in_holder_1a1b9bf2acf512d78953c6983b1f55884a" prot="public" virt="non-virtual"><scope>gandiva::InHolder</scope><name>HasValue</name></member>
      <member refid="classgandiva_1_1_in_holder_1a89cb04b7f4835e2a6fef47ae913cd817" prot="public" virt="non-virtual"><scope>gandiva::InHolder</scope><name>InHolder</name></member>
      <member refid="classgandiva_1_1_in_holder_1a637efdf4fbb00d10e1d0ea0655d46ceb" prot="private" virt="non-virtual"><scope>gandiva::InHolder</scope><name>values_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
