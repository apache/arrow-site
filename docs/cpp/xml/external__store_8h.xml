<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="external__store_8h" kind="file" language="C++">
    <compoundname>external_store.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes refid="plasma_2client_8h" local="yes">plasma/client.h</includes>
    <includedby refid="hash__table__store_8h" local="yes">/arrow/cpp/src/plasma/hash_table_store.h</includedby>
    <includedby refid="store_8h" local="yes">/arrow/cpp/src/plasma/store.h</includedby>
    <incdepgraph>
      <node id="20104">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20097" relation="include">
        </childnode>
        <childnode refid="20098" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
      </node>
      <node id="20093">
        <label>functional</label>
      </node>
      <node id="20092">
        <label>plasma/client.h</label>
        <link refid="plasma_2client_8h"/>
        <childnode refid="20093" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20091" relation="include">
        </childnode>
        <childnode refid="20094" relation="include">
        </childnode>
        <childnode refid="20105" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
        <childnode refid="20111" relation="include">
        </childnode>
      </node>
      <node id="20095">
        <label>cstdint</label>
      </node>
      <node id="20094">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="20095" relation="include">
        </childnode>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20097" relation="include">
        </childnode>
        <childnode refid="20098" relation="include">
        </childnode>
        <childnode refid="20091" relation="include">
        </childnode>
        <childnode refid="20099" relation="include">
        </childnode>
        <childnode refid="20100" relation="include">
        </childnode>
        <childnode refid="20105" relation="include">
        </childnode>
        <childnode refid="20101" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20109" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20105">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20106" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20098" relation="include">
        </childnode>
        <childnode refid="20104" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20107" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20101">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20091" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20089">
        <label>string</label>
      </node>
      <node id="20110">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="20112">
        <label>stddef.h</label>
      </node>
      <node id="20108">
        <label>ostream</label>
      </node>
      <node id="20103">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="20099">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="20095" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20100" relation="include">
        </childnode>
        <childnode refid="20101" relation="include">
        </childnode>
        <childnode refid="20104" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20091">
        <label>vector</label>
      </node>
      <node id="20098">
        <label>utility</label>
      </node>
      <node id="20109">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="20095" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20110" relation="include">
        </childnode>
      </node>
      <node id="20087">
        <label>/arrow/cpp/src/plasma/external_store.h</label>
        <link refid="external__store_8h"/>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20090" relation="include">
        </childnode>
        <childnode refid="20091" relation="include">
        </childnode>
        <childnode refid="20092" relation="include">
        </childnode>
      </node>
      <node id="20100">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="20106">
        <label>iosfwd</label>
      </node>
      <node id="20113">
        <label>plasma/compat.h</label>
        <link refid="compat_8h"/>
      </node>
      <node id="20090">
        <label>unordered_map</label>
      </node>
      <node id="20097">
        <label>type_traits</label>
      </node>
      <node id="20111">
        <label>plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="20112" relation="include">
        </childnode>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20090" relation="include">
        </childnode>
        <childnode refid="20113" relation="include">
        </childnode>
        <childnode refid="20105" relation="include">
        </childnode>
      </node>
      <node id="20096">
        <label>cstring</label>
      </node>
      <node id="20107">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20108" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20098" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20088">
        <label>memory</label>
      </node>
      <node id="20102">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="20095" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20115">
        <label>/arrow/cpp/src/plasma/hash_table_store.h</label>
        <link refid="hash__table__store_8h"/>
      </node>
      <node id="20116">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="20114">
        <label>/arrow/cpp/src/plasma/external_store.h</label>
        <link refid="external__store_8h"/>
        <childnode refid="20115" relation="include">
        </childnode>
        <childnode refid="20116" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classplasma_1_1_external_store" prot="public">plasma::ExternalStore</innerclass>
    <innerclass refid="classplasma_1_1_external_stores" prot="public">plasma::ExternalStores</innerclass>
    <innernamespace refid="namespaceplasma">plasma</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="external__store_8h_1a53af07ff48c936f4b9a525ccefeaa1a9" prot="public" static="no">
        <name>REGISTER_EXTERNAL_STORE</name>
        <param><defname>name</defname></param>
        <param><defname>store</defname></param>
        <initializer>class store##Class {                                                                 \
   public:                                                                             \
    store##Class() { ExternalStores::RegisterStore(name, std::make_shared&lt;store&gt;()); } \
    ~store##Class() { ExternalStores::DeregisterStore(name); }                         \
  };                                                                                   \
  store##Class singleton_##store = store##Class()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="112" column="9" bodyfile="/arrow/cpp/src/plasma/external_store.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_2client_8h" kindref="compound">plasma/client.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceplasma" kindref="compound">plasma</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====<sp/>The<sp/>external<sp/>store<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>declaration<sp/>for<sp/>all<sp/>functions<sp/>that<sp/>need<sp/>to<sp/>be<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>an<sp/>external<sp/>storage<sp/>service<sp/>so<sp/>that<sp/>objects<sp/>evicted<sp/>from<sp/>Plasma<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>written<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classplasma_1_1_external_store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classplasma_1_1_external_store" kindref="compound">ExternalStore</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classplasma_1_1_external_store_1a468c161889cb19ffd8b5584b7543c7fb" kindref="member">ExternalStore</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_external_store_1acde2a10c16392934b46dd0bca4d8d359" kindref="member">~ExternalStore</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classplasma_1_1_external_store_1a8881cbfcb5764fc4a2c62a49b2ccbcb8" kindref="member">Connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>endpoint)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classplasma_1_1_external_store_1a1f205e124318d74f56e39721beeda24e" kindref="member">Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>ids,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Buffer&gt;&gt;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classplasma_1_1_external_store_1ac634f3ee4c67de31db1b122f50227ac6" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>ids,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>buffers)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classplasma_1_1_external_stores" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classplasma_1_1_external_stores" kindref="compound">ExternalStores</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79" refid="classplasma_1_1_external_stores_1ab0cc5b08fdf419deeff18c4fa4757cf0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;ExternalStore&gt;&gt;<sp/><ref refid="classplasma_1_1_external_stores_1ab0cc5b08fdf419deeff18c4fa4757cf0" kindref="member">StoreMap</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ExtractStoreName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>endpoint,<sp/>std::string*<sp/>store_name);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RegisterStore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>store_name,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ExternalStore&gt;<sp/>store);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeregisterStore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>store_name);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ExternalStore&gt;<sp/>GetStore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>store_name);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>StoreMap&amp;<sp/>Stores();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="external__store_8h_1a53af07ff48c936f4b9a525ccefeaa1a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REGISTER_EXTERNAL_STORE(name,<sp/>store)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/>class<sp/>store##Class<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/>public:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>store##Class()<sp/>{<sp/>ExternalStores::RegisterStore(name,<sp/>std::make_shared&lt;store&gt;());<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>~store##Class()<sp/>{<sp/>ExternalStores::DeregisterStore(name);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>store##Class<sp/>singleton_##store<sp/>=<sp/>store##Class()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>plasma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/plasma/external_store.h"/>
  </compounddef>
</doxygen>
