<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_writer_properties_1_1_builder" kind="class" language="C++" prot="public">
    <compoundname>parquet::WriterProperties::Builder</compoundname>
    <includes refid="properties_8h" local="no">parquet/properties.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1aac53e7b1a12559280ae451eda29b203b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref> *</type>
        <definition>MemoryPool* parquet::WriterProperties::Builder::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="425" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a0bc176adf94582e2cea677a88c6a18cf" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::Builder::dictionary_pagesize_limit_</definition>
        <argsstring></argsstring>
        <name>dictionary_pagesize_limit_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="426" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1ac1125dfe6a447d38a86907ab78914ef5" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::Builder::write_batch_size_</definition>
        <argsstring></argsstring>
        <name>write_batch_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="427" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a5229d711057bfbd15c42acc7f0c13126" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::Builder::max_row_group_length_</definition>
        <argsstring></argsstring>
        <name>max_row_group_length_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="428" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a37775404a03e4d88ebfeb51ed105c80a" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::WriterProperties::Builder::pagesize_</definition>
        <argsstring></argsstring>
        <name>pagesize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="429" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a80ee9794b32957a564ecc7f8ad6b2b20" prot="private" static="no" mutable="no">
        <type><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref></type>
        <definition>ParquetVersion::type parquet::WriterProperties::Builder::version_</definition>
        <argsstring></argsstring>
        <name>version_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="430" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a6b6ee1709c45b1f9dc642b4c187577b7" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1a3b810e9624755684659547697975539a" kindref="member">ParquetDataPageVersion</ref></type>
        <definition>ParquetDataPageVersion parquet::WriterProperties::Builder::data_page_version_</definition>
        <argsstring></argsstring>
        <name>data_page_version_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="431" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1aa1acd1aae75df6927155392670e5ece9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::WriterProperties::Builder::created_by_</definition>
        <argsstring></argsstring>
        <name>created_by_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="432" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1addd36871dfadf3bb919fb96d88a30816" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileEncryptionProperties&gt; parquet::WriterProperties::Builder::file_encryption_properties_</definition>
        <argsstring></argsstring>
        <name>file_encryption_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="434" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a7b036b2d08859a4662a6c85b9a27554e" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_column_properties" kindref="compound">ColumnProperties</ref></type>
        <definition>ColumnProperties parquet::WriterProperties::Builder::default_column_properties_</definition>
        <argsstring></argsstring>
        <name>default_column_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="437" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1adff728bdfab3caa80e099adccd196757" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, Encoding::type&gt; parquet::WriterProperties::Builder::encodings_</definition>
        <argsstring></argsstring>
        <name>encodings_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="438" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a84e5d33d6170ddd6885725f4f97c4bbd" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, Compression::type&gt; parquet::WriterProperties::Builder::codecs_</definition>
        <argsstring></argsstring>
        <name>codecs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="439" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a9ebc00ddf40388caf2cc11ecee3e85f4" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, int32_t &gt;</type>
        <definition>std::unordered_map&lt;std::string, int32_t&gt; parquet::WriterProperties::Builder::codecs_compression_level_</definition>
        <argsstring></argsstring>
        <name>codecs_compression_level_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="440" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1af4f66a6ef07189d27a55a275cd401ea3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, bool &gt;</type>
        <definition>std::unordered_map&lt;std::string, bool&gt; parquet::WriterProperties::Builder::dictionary_enabled_</definition>
        <argsstring></argsstring>
        <name>dictionary_enabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="441" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_writer_properties_1_1_builder_1a7b7ca2afea2b8248cbb2f5f2422b0aa7" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, bool &gt;</type>
        <definition>std::unordered_map&lt;std::string, bool&gt; parquet::WriterProperties::Builder::statistics_enabled_</definition>
        <argsstring></argsstring>
        <name>statistics_enabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="442" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1ae3bf8af7e598c3c7ad4cd4ebce49eed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::WriterProperties::Builder::Builder</definition>
        <argsstring>()</argsstring>
        <name>Builder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="174" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="174" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a3573110e5fbb4f0022910f7cef9388a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::WriterProperties::Builder::~Builder</definition>
        <argsstring>()</argsstring>
        <name>~Builder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="183" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aed16632b4832d873a020f7e879bffe45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::memory_pool</definition>
        <argsstring>(MemoryPool *pool)</argsstring>
        <name>memory_pool</name>
        <param>
          <type><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="185" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a5fd6f5be6d2d8317b7d35e1d2d2521e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_dictionary</definition>
        <argsstring>()</argsstring>
        <name>enable_dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="190" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1ac78babb7bb5893f4e6e19c5055a3d80c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_dictionary</definition>
        <argsstring>()</argsstring>
        <name>disable_dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="195" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1ad1b035ad5935cb19e3c1b2685a19234f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_dictionary</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>enable_dictionary</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="200" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a1db5a12b5366dc1d28e963cfeeda3db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_dictionary</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path)</argsstring>
        <name>enable_dictionary</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="205" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a9a7a5a7cdbe52945925e2aa2e7f82793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_dictionary</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>disable_dictionary</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="209" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a7b07bbe03f6ed2c53b68666fed58ec2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_dictionary</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path)</argsstring>
        <name>disable_dictionary</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="214" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a2f5252582d67c92ecad01542fcbc2280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::dictionary_pagesize_limit</definition>
        <argsstring>(int64_t dictionary_psize_limit)</argsstring>
        <name>dictionary_pagesize_limit</name>
        <param>
          <type>int64_t</type>
          <declname>dictionary_psize_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="218" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aaeec6cfc44a9b59f28c7260e9ef91d00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::write_batch_size</definition>
        <argsstring>(int64_t write_batch_size)</argsstring>
        <name>write_batch_size</name>
        <param>
          <type>int64_t</type>
          <declname>write_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="223" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1ac31710deba40e91febe76d57620836bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::max_row_group_length</definition>
        <argsstring>(int64_t max_row_group_length)</argsstring>
        <name>max_row_group_length</name>
        <param>
          <type>int64_t</type>
          <declname>max_row_group_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="228" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a895603e490a660bfcbd0d745e5e1ddae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::data_pagesize</definition>
        <argsstring>(int64_t pg_size)</argsstring>
        <name>data_pagesize</name>
        <param>
          <type>int64_t</type>
          <declname>pg_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="233" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a546fde4058520f1ba5a1a8d81e29296e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::data_page_version</definition>
        <argsstring>(ParquetDataPageVersion data_page_version)</argsstring>
        <name>data_page_version</name>
        <param>
          <type><ref refid="namespaceparquet_1a3b810e9624755684659547697975539a" kindref="member">ParquetDataPageVersion</ref></type>
          <declname>data_page_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="238" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aeb2820ee1bbf247874a2eea8557768f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::version</definition>
        <argsstring>(ParquetVersion::type version)</argsstring>
        <name>version</name>
        <param>
          <type><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="243" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aa0095f1bd5a28bd2b53449ed6bd9071e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::created_by</definition>
        <argsstring>(const std::string &amp;created_by)</argsstring>
        <name>created_by</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>created_by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="248" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a88427d09dec4ab263d8c35bcee05874e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::encoding</definition>
        <argsstring>(Encoding::type encoding_type)</argsstring>
        <name>encoding</name>
        <param>
          <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
          <declname>encoding_type</declname>
        </param>
        <briefdescription>
<para>Define the encoding that is used when we don&apos;t utilise dictionary encoding. </para>        </briefdescription>
        <detaileddescription>
<para>This either apply if dictionary encoding is disabled or if we fallback as the dictionary grew too large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="259" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="259" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a3028e9dcd4c7a2e1b8bf8ff5de431465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::encoding</definition>
        <argsstring>(const std::string &amp;path, Encoding::type encoding_type)</argsstring>
        <name>encoding</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
          <declname>encoding_type</declname>
        </param>
        <briefdescription>
<para>Define the encoding that is used when we don&apos;t utilise dictionary encoding. </para>        </briefdescription>
        <detaileddescription>
<para>This either apply if dictionary encoding is disabled or if we fallback as the dictionary grew too large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="275" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="275" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1af3f10570c84ad6551c448cb41d7050f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::encoding</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path, Encoding::type encoding_type)</argsstring>
        <name>encoding</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
          <declname>encoding_type</declname>
        </param>
        <briefdescription>
<para>Define the encoding that is used when we don&apos;t utilise dictionary encoding. </para>        </briefdescription>
        <detaileddescription>
<para>This either apply if dictionary encoding is disabled or if we fallback as the dictionary grew too large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="291" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a037443f0a3dc004eb6c70d2067d19512" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression</definition>
        <argsstring>(Compression::type codec)</argsstring>
        <name>compression</name>
        <param>
          <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
          <declname>codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="296" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aee8dd2286d49834f016568b334b44baa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::max_statistics_size</definition>
        <argsstring>(size_t max_stats_sz)</argsstring>
        <name>max_statistics_size</name>
        <param>
          <type>size_t</type>
          <declname>max_stats_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="301" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a8697be12f74950d4d8e2567e24e6dad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression</definition>
        <argsstring>(const std::string &amp;path, Compression::type codec)</argsstring>
        <name>compression</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
          <declname>codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="306" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a96a34a909c712eaa2ac2b0b23f2c14b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path, Compression::type codec)</argsstring>
        <name>compression</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
          <declname>codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="311" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1ab2a518fa37fbb25eb39c5d62fbb669d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression_level</definition>
        <argsstring>(int compression_level)</argsstring>
        <name>compression_level</name>
        <param>
          <type>int</type>
          <declname>compression_level</declname>
        </param>
        <briefdescription>
<para>Specify the default compression level for the compressor in every column. </para>        </briefdescription>
        <detaileddescription>
<para>In case a column does not have an explicitly specified compression level, the default one would be used.</para><para>The provided compression level is compressor specific. The user would have to familiarize oneself with the available levels for the selected compressor. If the compressor does not allow for selecting different compression levels, calling this function would not have any effect. Parquet and Arrow do not validate the passed compression level. If no level is selected by the user or if the special std::numeric_limits&lt;int&gt;::min() value is passed, then Arrow selects the compression level. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="328" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a56c4e7e6292eb3962cc4273b5959a819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression_level</definition>
        <argsstring>(const std::string &amp;path, int compression_level)</argsstring>
        <name>compression_level</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compression_level</declname>
        </param>
        <briefdescription>
<para>Specify a compression level for the compressor for the column described by path. </para>        </briefdescription>
        <detaileddescription>
<para>The provided compression level is compressor specific. The user would have to familiarize oneself with the available levels for the selected compressor. If the compressor does not allow for selecting different compression levels, calling this function would not have any effect. Parquet and Arrow do not validate the passed compression level. If no level is selected by the user or if the special std::numeric_limits&lt;int&gt;::min() value is passed, then Arrow selects the compression level. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="344" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a3ea3a18388f7f4f7d37964ea98777a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::compression_level</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path, int compression_level)</argsstring>
        <name>compression_level</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compression_level</declname>
        </param>
        <briefdescription>
<para>Specify a compression level for the compressor for the column described by path. </para>        </briefdescription>
        <detaileddescription>
<para>The provided compression level is compressor specific. The user would have to familiarize oneself with the available levels for the selected compressor. If the compressor does not allow for selecting different compression levels, calling this function would not have any effect. Parquet and Arrow do not validate the passed compression level. If no level is selected by the user or if the special std::numeric_limits&lt;int&gt;::min() value is passed, then Arrow selects the compression level. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="360" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1adc44f21ecabcf6a3979fc489208750fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::encryption</definition>
        <argsstring>(std::shared_ptr&lt; FileEncryptionProperties &gt; file_encryption_properties)</argsstring>
        <name>encryption</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> &gt;</type>
          <declname>file_encryption_properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="365" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="365" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a9afbd9f76137090ff81789ee74be7fe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_statistics</definition>
        <argsstring>()</argsstring>
        <name>enable_statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="371" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a4c605d044a2d044532995d6c28973e02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_statistics</definition>
        <argsstring>()</argsstring>
        <name>disable_statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="376" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a172f7510abcc677d4cec9fca4fe35299" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_statistics</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>enable_statistics</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="381" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1aee401cee5a00e76d65d5e28fd750e7e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::enable_statistics</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path)</argsstring>
        <name>enable_statistics</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="386" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a314b644bbec20d16d921815b3276deac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_statistics</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>disable_statistics</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="390" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1a04d2e02e4a70a6ca0e75d7eb169771ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_writer_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::WriterProperties::Builder::disable_statistics</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path)</argsstring>
        <name>disable_statistics</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="395" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_writer_properties_1_1_builder_1af074789bd0ce79b429ca6e17c0045be0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;WriterProperties&gt; parquet::WriterProperties::Builder::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/properties.h" line="399" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="399" bodyend="422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/properties.h" line="172" column="1" bodyfile="/arrow/cpp/src/parquet/properties.h" bodystart="172" bodyend="443"/>
    <listofallmembers>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1af074789bd0ce79b429ca6e17c0045be0" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>build</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ae3bf8af7e598c3c7ad4cd4ebce49eed8" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>Builder</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a84e5d33d6170ddd6885725f4f97c4bbd" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>codecs_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a9ebc00ddf40388caf2cc11ecee3e85f4" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>codecs_compression_level_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a037443f0a3dc004eb6c70d2067d19512" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a8697be12f74950d4d8e2567e24e6dad1" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a96a34a909c712eaa2ac2b0b23f2c14b2" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ab2a518fa37fbb25eb39c5d62fbb669d4" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression_level</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a56c4e7e6292eb3962cc4273b5959a819" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression_level</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a3ea3a18388f7f4f7d37964ea98777a86" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>compression_level</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aa0095f1bd5a28bd2b53449ed6bd9071e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>created_by</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aa1acd1aae75df6927155392670e5ece9" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>created_by_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a546fde4058520f1ba5a1a8d81e29296e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>data_page_version</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a6b6ee1709c45b1f9dc642b4c187577b7" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>data_page_version_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a895603e490a660bfcbd0d745e5e1ddae" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>data_pagesize</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a7b036b2d08859a4662a6c85b9a27554e" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>default_column_properties_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1af4f66a6ef07189d27a55a275cd401ea3" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>dictionary_enabled_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a2f5252582d67c92ecad01542fcbc2280" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>dictionary_pagesize_limit</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a0bc176adf94582e2cea677a88c6a18cf" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>dictionary_pagesize_limit_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ac78babb7bb5893f4e6e19c5055a3d80c" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a9a7a5a7cdbe52945925e2aa2e7f82793" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a7b07bbe03f6ed2c53b68666fed58ec2e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a4c605d044a2d044532995d6c28973e02" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a314b644bbec20d16d921815b3276deac" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a04d2e02e4a70a6ca0e75d7eb169771ec" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>disable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a5fd6f5be6d2d8317b7d35e1d2d2521e3" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ad1b035ad5935cb19e3c1b2685a19234f" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a1db5a12b5366dc1d28e963cfeeda3db0" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_dictionary</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a9afbd9f76137090ff81789ee74be7fe6" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a172f7510abcc677d4cec9fca4fe35299" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aee401cee5a00e76d65d5e28fd750e7e7" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>enable_statistics</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a88427d09dec4ab263d8c35bcee05874e" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a3028e9dcd4c7a2e1b8bf8ff5de431465" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1af3f10570c84ad6551c448cb41d7050f8" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1adff728bdfab3caa80e099adccd196757" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>encodings_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1adc44f21ecabcf6a3979fc489208750fe" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>encryption</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1addd36871dfadf3bb919fb96d88a30816" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>file_encryption_properties_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ac31710deba40e91febe76d57620836bf" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>max_row_group_length</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a5229d711057bfbd15c42acc7f0c13126" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>max_row_group_length_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aee8dd2286d49834f016568b334b44baa" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>max_statistics_size</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aed16632b4832d873a020f7e879bffe45" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>memory_pool</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a37775404a03e4d88ebfeb51ed105c80a" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>pagesize_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aac53e7b1a12559280ae451eda29b203b" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>pool_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a7b7ca2afea2b8248cbb2f5f2422b0aa7" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>statistics_enabled_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aeb2820ee1bbf247874a2eea8557768f0" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>version</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a80ee9794b32957a564ecc7f8ad6b2b20" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>version_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1aaeec6cfc44a9b59f28c7260e9ef91d00" prot="public" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>write_batch_size</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1ac1125dfe6a447d38a86907ab78914ef5" prot="private" virt="non-virtual"><scope>parquet::WriterProperties::Builder</scope><name>write_batch_size_</name></member>
      <member refid="classparquet_1_1_writer_properties_1_1_builder_1a3573110e5fbb4f0022910f7cef9388a8" prot="public" virt="virtual"><scope>parquet::WriterProperties::Builder</scope><name>~Builder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
