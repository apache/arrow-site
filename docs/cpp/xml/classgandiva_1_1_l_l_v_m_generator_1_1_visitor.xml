<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor" kind="class" language="C++" prot="private">
    <compoundname>gandiva::LLVMGenerator::Visitor</compoundname>
    <basecompoundref refid="classgandiva_1_1_dex_visitor" prot="public" virt="non-virtual">gandiva::DexVisitor</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80" prot="private" static="no">
        <name>BufferType</name>
        <enumvalue id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a54ebbce6302f5ca15694325165e54d2c" prot="private">
          <name>kBufferTypeValidity</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a7b4506c17c39b01286f5a6abd45e91b7" prot="private">
          <name>kBufferTypeData</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a4dc749aa4a36b09bacddb35af22fcb06" prot="private">
          <name>kBufferTypeOffsets</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="120" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="120" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a84938d70eaa893be908d87b986632e76" prot="private" static="no" mutable="no">
        <type><ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref> *</type>
        <definition>LLVMGenerator* gandiva::LLVMGenerator::Visitor::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="158" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab02a1a6f4edd937e63cf82209f2d7cdf" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref></type>
        <definition>LValuePtr gandiva::LLVMGenerator::Visitor::result_</definition>
        <argsstring></argsstring>
        <name>result_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="159" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ad44dc8609d33365bc9bb2aeee5415110" prot="private" static="no" mutable="no">
        <type>llvm::Function *</type>
        <definition>llvm::Function* gandiva::LLVMGenerator::Visitor::function_</definition>
        <argsstring></argsstring>
        <name>function_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="160" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab6d0fd35106b45b17f68c6bd1c31ab87" prot="private" static="no" mutable="no">
        <type>llvm::BasicBlock *</type>
        <definition>llvm::BasicBlock* gandiva::LLVMGenerator::Visitor::entry_block_</definition>
        <argsstring></argsstring>
        <name>entry_block_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="161" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a0484c943d4c7d0556307b02d7e9fa42b" prot="private" static="no" mutable="no">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::arg_addrs_</definition>
        <argsstring></argsstring>
        <name>arg_addrs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="162" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1adc40fe0811116e3d555a97aad8fdb293" prot="private" static="no" mutable="no">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::arg_local_bitmaps_</definition>
        <argsstring></argsstring>
        <name>arg_local_bitmaps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="163" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aed697c933a990a0350dab20dcc575f00" prot="private" static="no" mutable="no">
        <type>std::vector&lt; llvm::Value * &gt;</type>
        <definition>std::vector&lt;llvm::Value*&gt; gandiva::LLVMGenerator::Visitor::slice_offsets_</definition>
        <argsstring></argsstring>
        <name>slice_offsets_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="164" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a7f8654c3c3671c97fbd7b5e2ada75142" prot="private" static="no" mutable="no">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::arg_context_ptr_</definition>
        <argsstring></argsstring>
        <name>arg_context_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="165" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a4e853cd2a84aea933f0790d3aa1eef11" prot="private" static="no" mutable="no">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::loop_var_</definition>
        <argsstring></argsstring>
        <name>loop_var_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="166" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aabce9580e9769a04d069130a77123747" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gandiva::LLVMGenerator::Visitor::has_arena_allocs_</definition>
        <argsstring></argsstring>
        <name>has_arena_allocs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="167" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a49001b948966084df65da9f58512bffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::LLVMGenerator::Visitor::Visitor</definition>
        <argsstring>(LLVMGenerator *generator, llvm::Function *function, llvm::BasicBlock *entry_block, llvm::Value *arg_addrs, llvm::Value *arg_local_bitmaps, std::vector&lt; llvm::Value *&gt; slice_offsets, llvm::Value *arg_context_ptr, llvm::Value *loop_var)</argsstring>
        <name>Visitor</name>
        <param>
          <type><ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>llvm::Function *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>llvm::BasicBlock *</type>
          <declname>entry_block</declname>
        </param>
        <param>
          <type>llvm::Value *</type>
          <declname>arg_addrs</declname>
        </param>
        <param>
          <type>llvm::Value *</type>
          <declname>arg_local_bitmaps</declname>
        </param>
        <param>
          <type>std::vector&lt; llvm::Value *&gt;</type>
          <declname>slice_offsets</declname>
        </param>
        <param>
          <type>llvm::Value *</type>
          <declname>arg_context_ptr</declname>
        </param>
        <param>
          <type>llvm::Value *</type>
          <declname>loop_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1abef9aaa2e16ca9962d59c1214869a0e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const VectorReadValidityDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_vector_read_validity_dex" kindref="compound">VectorReadValidityDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a75e638218363aaca44f7a22ff2833841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const VectorReadFixedLenValueDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_vector_read_fixed_len_value_dex" kindref="compound">VectorReadFixedLenValueDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a21af79167997ead452c78a948f3b6c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const VectorReadVarLenValueDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_vector_read_var_len_value_dex" kindref="compound">VectorReadVarLenValueDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a16b3845a6b66897737dbc2051ab50380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const LocalBitMapValidityDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_local_bit_map_validity_dex" kindref="compound">LocalBitMapValidityDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a34c9387c6aa35bfdb6436067409c1ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const TrueDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_true_dex" kindref="compound">TrueDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a71ccff6dba2cafe3f53ce127733d5301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const FalseDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_false_dex" kindref="compound">FalseDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1adb298dbf25b17760775d6ee7d8c319b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const LiteralDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_literal_dex" kindref="compound">LiteralDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a83aee78341fd708af4c5fe9c232aa74f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const NonNullableFuncDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_non_nullable_func_dex" kindref="compound">NonNullableFuncDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aebd28a131a68c27dcede000f467d5f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const NullableNeverFuncDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_nullable_never_func_dex" kindref="compound">NullableNeverFuncDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aecade2be599d98762b493fa05a4a74ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const NullableInternalFuncDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_nullable_internal_func_dex" kindref="compound">NullableInternalFuncDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ae5bd2b58803c40e3aa31b56caf4b979c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const IfDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_if_dex" kindref="compound">IfDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a12c73b1576377fe7f0bd393f09ae072b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const BooleanAndDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_boolean_and_dex" kindref="compound">BooleanAndDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a570060f9fe6bc182768eda84dc64dcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const BooleanOrDex &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_boolean_or_dex" kindref="compound">BooleanOrDex</ref> &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aa492499efed658fa64d020991c576797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const InExprDexBase&lt; int32_t &gt; &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase</ref>&lt; int32_t &gt; &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a83c163ea1f7dcd69e2de101cb80ec557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const InExprDexBase&lt; int64_t &gt; &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase</ref>&lt; int64_t &gt; &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a8e0c6641d3ee8e0023d8f81e6994ed87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::Visit</definition>
        <argsstring>(const InExprDexBase&lt; std::string &gt; &amp;dex) override</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase</ref>&lt; std::string &gt; &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ad753ee345eceecf015dc15f4144d5833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::VisitInExpression</definition>
        <argsstring>(const InExprDexBase&lt; Type &gt; &amp;dex)</argsstring>
        <name>VisitInExpression</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase</ref>&lt; Type &gt; &amp;</type>
          <declname>dex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a85e6c571dcd74be1ecf00c738ef3405f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref></type>
        <definition>LValuePtr gandiva::LLVMGenerator::Visitor::result</definition>
        <argsstring>()</argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="115" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a14cf8119069f2454fd40f80365294f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gandiva::LLVMGenerator::Visitor::has_arena_allocs</definition>
        <argsstring>()</argsstring>
        <name>has_arena_allocs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="117" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="117" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a05676c93db29f4dcb51309b0e54976cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::IRBuilder *</type>
        <definition>llvm::IRBuilder* gandiva::LLVMGenerator::Visitor::ir_builder</definition>
        <argsstring>()</argsstring>
        <name>ir_builder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="122" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1af82646fdcc7bd374a0fe8c627328ea12" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Module *</type>
        <definition>llvm::Module* gandiva::LLVMGenerator::Visitor::module</definition>
        <argsstring>()</argsstring>
        <name>module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="123" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a748e31fed5ac9a43c5bc979676ceaae5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::BuildCombinedValidity</definition>
        <argsstring>(const DexVector &amp;validities)</argsstring>
        <name>BuildCombinedValidity</name>
        <param>
          <type>const <ref refid="namespacegandiva_1acd54f0b5f98b8202b0cb8b6658dd368b" kindref="member">DexVector</ref> &amp;</type>
          <declname>validities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aabe72907bf446910a5d201c508cb3aac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref></type>
        <definition>LValuePtr gandiva::LLVMGenerator::Visitor::BuildValueAndValidity</definition>
        <argsstring>(const ValueValidityPair &amp;pair)</argsstring>
        <name>BuildValueAndValidity</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_value_validity_pair" kindref="compound">ValueValidityPair</ref> &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a0bcb3ed1ae0394f100409c8a60da7639" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; llvm::Value * &gt;</type>
        <definition>std::vector&lt;llvm::Value*&gt; gandiva::LLVMGenerator::Visitor::BuildParams</definition>
        <argsstring>(FunctionHolder *holder, const ValueValidityPairVector &amp;args, bool with_validity, bool with_context)</argsstring>
        <name>BuildParams</name>
        <param>
          <type><ref refid="classgandiva_1_1_function_holder" kindref="compound">FunctionHolder</ref> *</type>
          <declname>holder</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegandiva_1ab203e6bb3e1b7be4bcb869e3ff847396" kindref="member">ValueValidityPairVector</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_validity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a529ca6e194d346bbbefeff68a8c77eb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref></type>
        <definition>LValuePtr gandiva::LLVMGenerator::Visitor::BuildFunctionCall</definition>
        <argsstring>(const NativeFunction *func, DataTypePtr arrow_return_type, std::vector&lt; llvm::Value *&gt; *params)</argsstring>
        <name>BuildFunctionCall</name>
        <param>
          <type>const <ref refid="classgandiva_1_1_native_function" kindref="compound">NativeFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref></type>
          <declname>arrow_return_type</declname>
        </param>
        <param>
          <type>std::vector&lt; llvm::Value *&gt; *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a8868225d04d5c63f94b6715c97fd74b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref></type>
        <definition>LValuePtr gandiva::LLVMGenerator::Visitor::BuildIfElse</definition>
        <argsstring>(llvm::Value *condition, std::function&lt; LValuePtr()&gt; then_func, std::function&lt; LValuePtr()&gt; else_func, DataTypePtr arrow_return_type)</argsstring>
        <name>BuildIfElse</name>
        <param>
          <type>llvm::Value *</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>std::function&lt; <ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref>()&gt;</type>
          <declname>then_func</declname>
        </param>
        <param>
          <type>std::function&lt; <ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref>()&gt;</type>
          <declname>else_func</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref></type>
          <declname>arrow_return_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1abe6e59c969e4db0628030e9c043ceca9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::GetBufferReference</definition>
        <argsstring>(int idx, BufferType buffer_type, FieldPtr field)</argsstring>
        <name>GetBufferReference</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>BufferType</type>
          <declname>buffer_type</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a3e38354ab781cc056a496f888a9babfa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::GetSliceOffset</definition>
        <argsstring>(int idx)</argsstring>
        <name>GetSliceOffset</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab2fc26fc806c282bd64707e9abdad697" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::Value *</type>
        <definition>llvm::Value* gandiva::LLVMGenerator::Visitor::GetLocalBitMapReference</definition>
        <argsstring>(int idx)</argsstring>
        <name>GetLocalBitMapReference</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac17d168d6e72d50ec8fbd5768f97260a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::LLVMGenerator::Visitor::ClearLocalBitMapIfNotValid</definition>
        <argsstring>(int local_bitmap_idx, llvm::Value *is_valid)</argsstring>
        <name>ClearLocalBitMapIfNotValid</name>
        <param>
          <type>int</type>
          <declname>local_bitmap_idx</declname>
        </param>
        <param>
          <type>llvm::Value *</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Visitor to generate the code for a decomposed expression. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5211">
        <label>gandiva::DexVisitor</label>
        <link refid="classgandiva_1_1_dex_visitor"/>
      </node>
      <node id="5210">
        <label>gandiva::LLVMGenerator::Visitor</label>
        <childnode refid="5211" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5213">
        <label>gandiva::DexVisitor</label>
        <link refid="classgandiva_1_1_dex_visitor"/>
      </node>
      <node id="5212">
        <label>gandiva::LLVMGenerator::Visitor</label>
        <childnode refid="5213" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/llvm_generator.h" line="89" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_generator.h" bodystart="89" bodyend="168"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a0484c943d4c7d0556307b02d7e9fa42b" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>arg_addrs_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a7f8654c3c3671c97fbd7b5e2ada75142" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>arg_context_ptr_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1adc40fe0811116e3d555a97aad8fdb293" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>arg_local_bitmaps_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BufferType</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a748e31fed5ac9a43c5bc979676ceaae5" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BuildCombinedValidity</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a529ca6e194d346bbbefeff68a8c77eb2" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BuildFunctionCall</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a8868225d04d5c63f94b6715c97fd74b1" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BuildIfElse</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a0bcb3ed1ae0394f100409c8a60da7639" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BuildParams</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aabe72907bf446910a5d201c508cb3aac" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>BuildValueAndValidity</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac17d168d6e72d50ec8fbd5768f97260a" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>ClearLocalBitMapIfNotValid</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab6d0fd35106b45b17f68c6bd1c31ab87" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>entry_block_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ad44dc8609d33365bc9bb2aeee5415110" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>function_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a84938d70eaa893be908d87b986632e76" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>generator_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1abe6e59c969e4db0628030e9c043ceca9" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>GetBufferReference</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab2fc26fc806c282bd64707e9abdad697" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>GetLocalBitMapReference</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a3e38354ab781cc056a496f888a9babfa" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>GetSliceOffset</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a14cf8119069f2454fd40f80365294f86" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>has_arena_allocs</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aabce9580e9769a04d069130a77123747" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>has_arena_allocs_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a05676c93db29f4dcb51309b0e54976cd" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>ir_builder</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a7b4506c17c39b01286f5a6abd45e91b7" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>kBufferTypeData</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a4dc749aa4a36b09bacddb35af22fcb06" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>kBufferTypeOffsets</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ac3c4bf772dca7c09cc8c2b4aaa136f80a54ebbce6302f5ca15694325165e54d2c" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>kBufferTypeValidity</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a4e853cd2a84aea933f0790d3aa1eef11" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>loop_var_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1af82646fdcc7bd374a0fe8c627328ea12" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>module</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a85e6c571dcd74be1ecf00c738ef3405f" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>result</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ab02a1a6f4edd937e63cf82209f2d7cdf" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>result_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aed697c933a990a0350dab20dcc575f00" prot="private" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>slice_offsets_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1abef9aaa2e16ca9962d59c1214869a0e0" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a75e638218363aaca44f7a22ff2833841" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a21af79167997ead452c78a948f3b6c21" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a16b3845a6b66897737dbc2051ab50380" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a34c9387c6aa35bfdb6436067409c1ec8" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a71ccff6dba2cafe3f53ce127733d5301" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1adb298dbf25b17760775d6ee7d8c319b0" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a83aee78341fd708af4c5fe9c232aa74f" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aebd28a131a68c27dcede000f467d5f5e" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aecade2be599d98762b493fa05a4a74ed" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ae5bd2b58803c40e3aa31b56caf4b979c" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a12c73b1576377fe7f0bd393f09ae072b" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a570060f9fe6bc182768eda84dc64dcef" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1aa492499efed658fa64d020991c576797" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a83c163ea1f7dcd69e2de101cb80ec557" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a8e0c6641d3ee8e0023d8f81e6994ed87" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visit</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1ad753ee345eceecf015dc15f4144d5833" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>VisitInExpression</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor_1a49001b948966084df65da9f58512bffc" prot="public" virt="non-virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>Visitor</name></member>
      <member refid="classgandiva_1_1_dex_visitor_1a1bbf80df7f4d8ee75e81b3d4494be18e" prot="public" virt="virtual"><scope>gandiva::LLVMGenerator::Visitor</scope><name>~DexVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
