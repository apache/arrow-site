<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_compressed_output_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::CompressedOutputStream</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_output_stream" prot="public" virt="non-virtual">arrow::io::OutputStream</basecompoundref>
    <includes refid="compressed_8h" local="no">arrow/io/compressed.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1io_1_1_compressed_output_stream_1aa7c192929f12015a91481ad27e24bfcb" prot="private" static="no" mutable="no">
        <type>class <ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref></type>
        <definition>class ARROW_NO_EXPORT arrow::io::CompressedOutputStream::Impl</definition>
        <argsstring></argsstring>
        <name>Impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="73" column="1" bodyfile="/arrow/cpp/src/arrow/io/compressed.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_compressed_output_stream_1a6f32babd9480a8016c1acf11d1d98839" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; arrow::io::CompressedOutputStream::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="76" column="1" bodyfile="/arrow/cpp/src/arrow/io/compressed.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1a7b9f688d5d2039fef994dd6bc478d468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::CompressedOutputStream::~CompressedOutputStream</definition>
        <argsstring>() override</argsstring>
        <name>~CompressedOutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1afeec751d63627cc8dab11638fa0e1284" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::CompressedOutputStream::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the compressed output stream. </para>        </briefdescription>
        <detaileddescription>
<para>This implicitly closes the underlying raw output stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1a83e7dab2af799ca87073d0e969d8a3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::CompressedOutputStream::Abort</definition>
        <argsstring>() override</argsstring>
        <name>Abort</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60">Abort</reimplements>
        <briefdescription>
<para>Close the stream abruptly. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not guarantee that any pending data is flushed. It merely releases any underlying resource used by the stream for its operation.</para><para>After <ref refid="classarrow_1_1io_1_1_compressed_output_stream_1a83e7dab2af799ca87073d0e969d8a3f7" kindref="member">Abort()</ref> is called, <ref refid="classarrow_1_1io_1_1_compressed_output_stream_1a691a34b9aae15a7b62bf1ca502b53a7b" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1a691a34b9aae15a7b62bf1ca502b53a7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::CompressedOutputStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1ad762275940ca3386af13d9f966141851" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::CompressedOutputStream::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1a48b8e0daaf2ea4280238675e023350ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::CompressedOutputStream::Write</definition>
        <argsstring>(const void *data, int64_t nbytes) override</argsstring>
        <name>Write</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d">Write</reimplements>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This method always processes the bytes in full. Depending on the semantics of the stream, the data may be written out immediately, held in a buffer, or written asynchronously. In the case where the stream buffers the data, it will be copied. To avoid potentially large copies, use the Write variant that takes an owned <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1af80e3bf7dc0b484060b9d0831d7a53c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::CompressedOutputStream::Flush</definition>
        <argsstring>() override</argsstring>
        <name>Flush</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f">Flush</reimplements>
        <briefdescription>
<para>Flush buffered bytes, if any. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1ad20c12765373498eff8c7723e6ae278f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref> &gt;</type>
        <definition>std::shared_ptr&lt;OutputStream&gt; arrow::io::CompressedOutputStream::raw</definition>
        <argsstring>() const</argsstring>
        <name>raw</name>
        <briefdescription>
<para>Return the underlying raw output stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1adc0dd58be8cb0311219b4878a1ee0875" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;CompressedOutputStream&gt; &gt; arrow::io::CompressedOutputStream::Make</definition>
        <argsstring>(util::Codec *codec, const std::shared_ptr&lt; OutputStream &gt; &amp;raw, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1util_1_1_codec" kindref="compound">util::Codec</ref> *</type>
          <declname>codec</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref> &gt; &amp;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a compressed output stream wrapping the given output stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1aa43df67818ed8db2003f01d896775f7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::CompressedOutputStream::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(CompressedOutputStream)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_compressed_output_stream_1a5289c82184e559cc23225b36a542e858" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::CompressedOutputStream::CompressedOutputStream</definition>
        <argsstring>()=default</argsstring>
        <name>CompressedOutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/compressed.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="650">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="651" relation="public-inheritance">
        </childnode>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="649">
        <label>arrow::io::CompressedOutputStream</label>
        <link refid="classarrow_1_1io_1_1_compressed_output_stream"/>
        <childnode refid="650" relation="public-inheritance">
        </childnode>
      </node>
      <node id="652">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="651">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="654">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="655" relation="public-inheritance">
        </childnode>
        <childnode refid="656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="653">
        <label>arrow::io::CompressedOutputStream</label>
        <link refid="classarrow_1_1io_1_1_compressed_output_stream"/>
        <childnode refid="654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="656">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="655">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/io/compressed.h" line="42" column="1" bodyfile="/arrow/cpp/src/arrow/io/compressed.h" bodystart="42" bodyend="77"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a83e7dab2af799ca87073d0e969d8a3f7" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1aa43df67818ed8db2003f01d896775f7c" prot="private" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1afeec751d63627cc8dab11638fa0e1284" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a691a34b9aae15a7b62bf1ca502b53a7b" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a5289c82184e559cc23225b36a542e858" prot="private" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>CompressedOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1af80e3bf7dc0b484060b9d0831d7a53c8" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Flush</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1aa7c192929f12015a91481ad27e24bfcb" prot="private" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Impl</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a6f32babd9480a8016c1acf11d1d98839" prot="private" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>impl_</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1adc0dd58be8cb0311219b4878a1ee0875" prot="public" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Make</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_output_stream_1a5b1e0adea7ef92368ddc07027995aca1" prot="protected" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>OutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1ad20c12765373498eff8c7723e6ae278f" prot="public" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>raw</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1ad762275940ca3386af13d9f966141851" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a48b8e0daaf2ea4280238675e023350ef" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069" prot="public" virt="virtual" ambiguityscope="arrow::io::OutputStream::"><scope>arrow::io::CompressedOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" virt="non-virtual" ambiguityscope="arrow::io::OutputStream::"><scope>arrow::io::CompressedOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_compressed_output_stream_1a7b9f688d5d2039fef994dd6bc478d468" prot="public" virt="non-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>~CompressedOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::CompressedOutputStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" virt="virtual"><scope>arrow::io::CompressedOutputStream</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
