<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_record_batch_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::RecordBatchBuilder</compoundname>
    <includes refid="table__builder_8h" local="no">arrow/table_builder.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_record_batch_builder_1a67aeae994f11415645a4b9fe2a248898" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::RecordBatchBuilder::schema_</definition>
        <argsstring></argsstring>
        <name>schema_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="102" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_record_batch_builder_1aafdc64e895c6f34381be34290fce2118" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::RecordBatchBuilder::initial_capacity_</definition>
        <argsstring></argsstring>
        <name>initial_capacity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="103" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_record_batch_builder_1a520fe14860af27417f629294ea6c0495" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::RecordBatchBuilder::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="104" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_record_batch_builder_1a74ef0914d176d5ab22a558193c145e63" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;ArrayBuilder&gt; &gt; arrow::RecordBatchBuilder::field_builders_</definition>
        <argsstring></argsstring>
        <name>field_builders_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="106" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_record_batch_builder_1a3d3e4e807e41213929b515a6ec99e233" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> * &gt;</type>
        <definition>std::vector&lt;ArrayBuilder*&gt; arrow::RecordBatchBuilder::raw_field_builders_</definition>
        <argsstring></argsstring>
        <name>raw_field_builders_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="107" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a6fa0306ecd2f285e9c513bf2c458b16c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::RecordBatchBuilder::Make</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, MemoryPool *pool, std::unique_ptr&lt; RecordBatchBuilder &gt; *builder)</argsstring>
        <name>Make</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_record_batch_builder" kindref="compound">RecordBatchBuilder</ref> &gt; *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Create an initialize a <ref refid="classarrow_1_1_record_batch_builder" kindref="compound">RecordBatchBuilder</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema for the record batch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>the created builder instance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a4f762bafcec97e5ff97d759dd31d2ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::RecordBatchBuilder::Make</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, MemoryPool *pool, int64_t initial_capacity, std::unique_ptr&lt; RecordBatchBuilder &gt; *builder)</argsstring>
        <name>Make</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>initial_capacity</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_record_batch_builder" kindref="compound">RecordBatchBuilder</ref> &gt; *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Create an initialize a <ref refid="classarrow_1_1_record_batch_builder" kindref="compound">RecordBatchBuilder</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema for the record batch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initial_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial capacity for the builders </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>the created builder instance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a5b4aa2b43436cfad70d2ed94e1e4f369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> *</type>
        <definition>ArrayBuilder* arrow::RecordBatchBuilder::GetField</definition>
        <argsstring>(int i)</argsstring>
        <name>GetField</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get base pointer to field builder. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the field index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to <ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="60" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1ac92bd46c4751373c3f07b3d2460c45cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* arrow::RecordBatchBuilder::GetFieldAs</definition>
        <argsstring>(int i)</argsstring>
        <name>GetFieldAs</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return field builder casted to indicated specific builder type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the field index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to template type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="66" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a6e856fcd712b5014e4f33c865d6bb40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchBuilder::Flush</definition>
        <argsstring>(bool reset_builders, std::shared_ptr&lt; RecordBatch &gt; *batch)</argsstring>
        <name>Flush</name>
        <param>
          <type>bool</type>
          <declname>reset_builders</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
<para>Finish current batch and optionally reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reset_builders</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a0d424a54f31bc14f95b659b42bd634c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchBuilder::Flush</definition>
        <argsstring>(std::shared_ptr&lt; RecordBatch &gt; *batch)</argsstring>
        <name>Flush</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
<para>Finish current batch and reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1abf86e2fb93b8926ac7977f870b586b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::RecordBatchBuilder::SetInitialCapacity</definition>
        <argsstring>(int64_t capacity)</argsstring>
        <name>SetInitialCapacity</name>
        <param>
          <type>int64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Set the initial capacity for new builders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1aa2a83f82fe958b9046c0cac0bd95ff79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::RecordBatchBuilder::initial_capacity</definition>
        <argsstring>() const</argsstring>
        <name>initial_capacity</name>
        <briefdescription>
<para>The initial capacity for builders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="85" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a4f8fc3fbd339ba31ba9daf9968f0cbe1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::RecordBatchBuilder::num_fields</definition>
        <argsstring>() const</argsstring>
        <name>num_fields</name>
        <briefdescription>
<para>The number of fields in the schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="88" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a341f635ea52b00f2d49953f3c9534275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::RecordBatchBuilder::schema</definition>
        <argsstring>() const</argsstring>
        <name>schema</name>
        <briefdescription>
<para>The number of fields in the schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="91" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="91" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1aab1af3989bf07d0dde205bed0982998f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::RecordBatchBuilder::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(RecordBatchBuilder)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1_record_batch_builder" kindref="compound">RecordBatchBuilder</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a5f133f44430f6dbefb10995d2e85c847" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::RecordBatchBuilder::RecordBatchBuilder</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, MemoryPool *pool, int64_t initial_capacity)</argsstring>
        <name>RecordBatchBuilder</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>initial_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1aaaeec521d536cb1b930bd8c2bd3d526e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchBuilder::CreateBuilders</definition>
        <argsstring>()</argsstring>
        <name>CreateBuilders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_builder_1a70f82249310ac96c1c7a98024c1c7dc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchBuilder::InitBuilders</definition>
        <argsstring>()</argsstring>
        <name>InitBuilders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/table_builder.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class for creating record batches iteratively given a known schema. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/table_builder.h" line="39" column="1" bodyfile="/arrow/cpp/src/arrow/table_builder.h" bodystart="39" bodyend="108"/>
    <listofallmembers>
      <member refid="classarrow_1_1_record_batch_builder_1aab1af3989bf07d0dde205bed0982998f" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1aaaeec521d536cb1b930bd8c2bd3d526e" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>CreateBuilders</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a74ef0914d176d5ab22a558193c145e63" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>field_builders_</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a6e856fcd712b5014e4f33c865d6bb40b" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>Flush</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a0d424a54f31bc14f95b659b42bd634c2" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>Flush</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a5b4aa2b43436cfad70d2ed94e1e4f369" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>GetField</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1ac92bd46c4751373c3f07b3d2460c45cb" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>GetFieldAs</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a70f82249310ac96c1c7a98024c1c7dc7" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>InitBuilders</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1aa2a83f82fe958b9046c0cac0bd95ff79" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>initial_capacity</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1aafdc64e895c6f34381be34290fce2118" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>initial_capacity_</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a6fa0306ecd2f285e9c513bf2c458b16c" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>Make</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a4f762bafcec97e5ff97d759dd31d2ea2" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>Make</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a4f8fc3fbd339ba31ba9daf9968f0cbe1" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>num_fields</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a520fe14860af27417f629294ea6c0495" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a3d3e4e807e41213929b515a6ec99e233" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>raw_field_builders_</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a5f133f44430f6dbefb10995d2e85c847" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>RecordBatchBuilder</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a341f635ea52b00f2d49953f3c9534275" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>schema</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1a67aeae994f11415645a4b9fe2a248898" prot="private" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>schema_</name></member>
      <member refid="classarrow_1_1_record_batch_builder_1abf86e2fb93b8926ac7977f870b586b4c" prot="public" virt="non-virtual"><scope>arrow::RecordBatchBuilder</scope><name>SetInitialCapacity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
