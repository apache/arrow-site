<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1encryption_1_1_aes_encryptor" kind="class" language="C++" prot="public">
    <compoundname>parquet::encryption::AesEncryptor</compoundname>
    <includes refid="encryption__internal_8h" local="no">parquet/encryption_internal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1encryption_1_1_aes_encryptor_1a9eae1e2c29aec34d4eeb5aabefc5c2e3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; AesEncryptorImpl &gt;</type>
        <definition>std::unique_ptr&lt;AesEncryptorImpl&gt; parquet::encryption::AesEncryptor::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="73" column="1" bodyfile="/arrow/cpp/src/parquet/encryption_internal.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1a46cd114a6e99ebb5802f1462457f592f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1encryption_1_1_aes_encryptor" kindref="compound">AesEncryptor</ref> *</type>
        <definition>static AesEncryptor* parquet::encryption::AesEncryptor::Make</definition>
        <argsstring>(ParquetCipher::type alg_id, int key_len, bool metadata, std::vector&lt; AesEncryptor *&gt; *all_encryptors)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref></type>
          <declname>alg_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classparquet_1_1encryption_1_1_aes_encryptor" kindref="compound">AesEncryptor</ref> *&gt; *</type>
          <declname>all_encryptors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1a38fb0cc55d630b3fffb2019424abacb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::encryption::AesEncryptor::~AesEncryptor</definition>
        <argsstring>()</argsstring>
        <name>~AesEncryptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1a3bc2d6a61feb870885080d74eb4f01f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::encryption::AesEncryptor::CiphertextSizeDelta</definition>
        <argsstring>()</argsstring>
        <name>CiphertextSizeDelta</name>
        <briefdescription>
<para>Size difference between plaintext and ciphertext, for this cipher. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1ae314924b893040e7c0abbcaf6bad4b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::encryption::AesEncryptor::Encrypt</definition>
        <argsstring>(const uint8_t *plaintext, int plaintext_len, const uint8_t *key, int key_len, const uint8_t *aad, int aad_len, uint8_t *ciphertext)</argsstring>
        <name>Encrypt</name>
        <param>
          <type>const uint8_t *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plaintext_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>ciphertext</declname>
        </param>
        <briefdescription>
<para>Encrypts plaintext with the key and aad. </para>        </briefdescription>
        <detaileddescription>
<para>Key length is passed only for validation. If different from value in constructor, exception will be thrown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1ab31543b27625086950f8c3a78c27f0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::encryption::AesEncryptor::SignedFooterEncrypt</definition>
        <argsstring>(const uint8_t *footer, int footer_len, const uint8_t *key, int key_len, const uint8_t *aad, int aad_len, const uint8_t *nonce, uint8_t *encrypted_footer)</argsstring>
        <name>SignedFooterEncrypt</name>
        <param>
          <type>const uint8_t *</type>
          <declname>footer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>footer_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>nonce</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>encrypted_footer</declname>
        </param>
        <briefdescription>
<para>Encrypts plaintext footer, in order to compute footer signature (tag). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1afc0ba0fb7ffa839a34c9eb7b9d5a7968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::encryption::AesEncryptor::WipeOut</definition>
        <argsstring>()</argsstring>
        <name>WipeOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1encryption_1_1_aes_encryptor_1af728c227e70b79ce91ea57b93a16b5ef" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::encryption::AesEncryptor::AesEncryptor</definition>
        <argsstring>(ParquetCipher::type alg_id, int key_len, bool metadata)</argsstring>
        <name>AesEncryptor</name>
        <param>
          <type><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref></type>
          <declname>alg_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
<para>Can serve one key length only. Possible values: 16, 24, 32 bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Performs AES encryption operations with GCM or CTR ciphers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/encryption_internal.h" line="46" column="1" bodyfile="/arrow/cpp/src/parquet/encryption_internal.h" bodystart="46" bodyend="74"/>
    <listofallmembers>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1af728c227e70b79ce91ea57b93a16b5ef" prot="private" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>AesEncryptor</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1a3bc2d6a61feb870885080d74eb4f01f4" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>CiphertextSizeDelta</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1ae314924b893040e7c0abbcaf6bad4b8e" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>Encrypt</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1a9eae1e2c29aec34d4eeb5aabefc5c2e3" prot="private" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>impl_</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1a46cd114a6e99ebb5802f1462457f592f" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>Make</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1ab31543b27625086950f8c3a78c27f0ca" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>SignedFooterEncrypt</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1afc0ba0fb7ffa839a34c9eb7b9d5a7968" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>WipeOut</name></member>
      <member refid="classparquet_1_1encryption_1_1_aes_encryptor_1a38fb0cc55d630b3fffb2019424abacb9" prot="public" virt="non-virtual"><scope>parquet::encryption::AesEncryptor</scope><name>~AesEncryptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
