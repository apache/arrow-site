<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="internal__file__decryptor_8h" kind="file" language="C++">
    <compoundname>internal_file_decryptor.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="schema_8h" local="yes">parquet/schema.h</includes>
    <includedby refid="parquet_2thrift__internal_8h" local="yes">/arrow/cpp/src/parquet/thrift_internal.h</includedby>
    <incdepgraph>
      <node id="19491">
        <label>atomic</label>
      </node>
      <node id="19478">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
      </node>
      <node id="19499">
        <label>limits</label>
      </node>
      <node id="19459">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="19460" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19464" relation="include">
        </childnode>
      </node>
      <node id="19465">
        <label>cstdint</label>
      </node>
      <node id="19470">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19473" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19493">
        <label>endian.h</label>
      </node>
      <node id="19479">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19480" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19478" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19500">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19501" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
      </node>
      <node id="19475">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19469">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
        <childnode refid="19484" relation="include">
        </childnode>
        <childnode refid="19485" relation="include">
        </childnode>
        <childnode refid="19490" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19492" relation="include">
        </childnode>
        <childnode refid="19503" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
      </node>
      <node id="19484">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19498">
        <label>cmath</label>
      </node>
      <node id="19497">
        <label>cassert</label>
      </node>
      <node id="19489">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
      </node>
      <node id="19462">
        <label>string</label>
      </node>
      <node id="19483">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19460">
        <label>map</label>
      </node>
      <node id="19466">
        <label>ostream</label>
      </node>
      <node id="19477">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19473">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19478" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19490">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19491" relation="include">
        </childnode>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19492">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19493" relation="include">
        </childnode>
        <childnode refid="19494" relation="include">
        </childnode>
        <childnode refid="19495" relation="include">
        </childnode>
        <childnode refid="19496" relation="include">
        </childnode>
        <childnode refid="19497" relation="include">
        </childnode>
        <childnode refid="19498" relation="include">
        </childnode>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19499" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
        <childnode refid="19487" relation="include">
        </childnode>
        <childnode refid="19478" relation="include">
        </childnode>
        <childnode refid="19500" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19502" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19496">
        <label>bitset</label>
      </node>
      <node id="19501">
        <label>tuple</label>
      </node>
      <node id="19463">
        <label>vector</label>
      </node>
      <node id="19488">
        <label>new</label>
      </node>
      <node id="19468">
        <label>utility</label>
      </node>
      <node id="19482">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19483" relation="include">
        </childnode>
      </node>
      <node id="19495">
        <label>array</label>
      </node>
      <node id="19505">
        <label>sstream</label>
      </node>
      <node id="19485">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19486" relation="include">
        </childnode>
        <childnode refid="19484" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19464">
        <label>parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19467" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19469" relation="include">
        </childnode>
        <childnode refid="19504" relation="include">
        </childnode>
      </node>
      <node id="19474">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19480">
        <label>iosfwd</label>
      </node>
      <node id="19486">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19484" relation="include">
        </childnode>
        <childnode refid="19487" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19489" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19467">
        <label>unordered_map</label>
      </node>
      <node id="19487">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19488" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19478" relation="include">
        </childnode>
      </node>
      <node id="19472">
        <label>type_traits</label>
      </node>
      <node id="19503">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19499" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19487" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19494">
        <label>algorithm</label>
      </node>
      <node id="19506">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19499" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19471">
        <label>cstring</label>
      </node>
      <node id="19504">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="19494" relation="include">
        </childnode>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19505" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19506" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19469" relation="include">
        </childnode>
      </node>
      <node id="19481">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19461">
        <label>memory</label>
      </node>
      <node id="19476">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
      </node>
      <node id="19502">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19472" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19507">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="19508" relation="include">
        </childnode>
      </node>
      <node id="19508">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_decryptor" prot="public">parquet::Decryptor</innerclass>
    <innerclass refid="classparquet_1_1_internal_file_decryptor" prot="public">parquet::InternalFileDecryptor</innerclass>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <innernamespace refid="namespaceparquet_1_1encryption">parquet::encryption</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">parquet/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">encryption<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AesDecryptor;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AesEncryptor;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>encryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileDecryptionProperties;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classparquet_1_1_decryptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_decryptor" kindref="compound">Decryptor</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_decryptor" kindref="compound">Decryptor</ref>(<ref refid="classparquet_1_1encryption_1_1_aes_decryptor" kindref="compound">encryption::AesDecryptor</ref>*<sp/>decryptor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_aad,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classparquet_1_1_decryptor_1a7c5d01885ed38a35d1d368c63952cdc0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classparquet_1_1_decryptor_1a7c5d01885ed38a35d1d368c63952cdc0" kindref="member">file_aad</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_aad_;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="classparquet_1_1_decryptor_1af6add98e04e0b159ba4b08ab425980f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_decryptor_1af6add98e04e0b159ba4b08ab425980f9" kindref="member">UpdateAad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad)<sp/>{<sp/>aad_<sp/>=<sp/>aad;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="classparquet_1_1_decryptor_1a37e7a0399ceb24cbed43e82be11d82f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">::arrow::MemoryPool</ref>*<sp/><ref refid="classparquet_1_1_decryptor_1a37e7a0399ceb24cbed43e82be11d82f0" kindref="member">pool</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pool_;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CiphertextSizeDelta();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Decrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>ciphertext,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ciphertext_len,<sp/>uint8_t*<sp/>plaintext);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1encryption_1_1_aes_decryptor" kindref="compound">encryption::AesDecryptor</ref>*<sp/>aes_decryptor_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::string<sp/>key_;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::string<sp/>file_aad_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::string<sp/>aad_;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">::arrow::MemoryPool</ref>*<sp/>pool_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classparquet_1_1_internal_file_decryptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_internal_file_decryptor" kindref="compound">InternalFileDecryptor</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_internal_file_decryptor" kindref="compound">InternalFileDecryptor</ref>(<ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref>*<sp/>properties,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_aad,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>algorithm,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key_metadata,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classparquet_1_1_internal_file_decryptor_1aeeb6cfe961fe8da462f4e011c0e5958e" refkind="member"><highlight class="normal"><sp/><sp/>std::string&amp;<sp/><ref refid="classparquet_1_1_internal_file_decryptor_1aeeb6cfe961fe8da462f4e011c0e5958e" kindref="member">file_aad</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_aad_;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::string<sp/>GetFooterKey();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classparquet_1_1_internal_file_decryptor_1a0cff39a064d5b146d5acd3e5d7061f7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/><ref refid="classparquet_1_1_internal_file_decryptor_1a0cff39a064d5b146d5acd3e5d7061f7e" kindref="member">algorithm</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>algorithm_;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classparquet_1_1_internal_file_decryptor_1a8af2a282ddc4096e171f718d9a8c1c0a" refkind="member"><highlight class="normal"><sp/><sp/>std::string&amp;<sp/><ref refid="classparquet_1_1_internal_file_decryptor_1a8af2a282ddc4096e171f718d9a8c1c0a" kindref="member">footer_key_metadata</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>footer_key_metadata_;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classparquet_1_1_internal_file_decryptor_1a5c6430e97acc0d6e286ef5752dcbc5e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref>*<sp/><ref refid="classparquet_1_1_internal_file_decryptor_1a5c6430e97acc0d6e286ef5752dcbc5e4" kindref="member">properties</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties_;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WipeOutDecryptionKeys();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classparquet_1_1_internal_file_decryptor_1a5425dd9b135fe642253e4289db9505bb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">::arrow::MemoryPool</ref>*<sp/><ref refid="classparquet_1_1_internal_file_decryptor_1a5425dd9b135fe642253e4289db9505bb" kindref="member">pool</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pool_;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetFooterDecryptor();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetFooterDecryptorForColumnMeta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetFooterDecryptorForColumnData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetColumnMetaDecryptor(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_key_metadata,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetColumnDataDecryptor(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_key_metadata,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref>*<sp/>properties_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Concatenation<sp/>of<sp/>aad_prefix<sp/>(if<sp/>exists)<sp/>and<sp/>aad_file_unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::string<sp/>file_aad_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;Decryptor&gt;&gt;<sp/>column_data_map_;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;Decryptor&gt;&gt;<sp/>column_metadata_map_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>footer_metadata_decryptor_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>footer_data_decryptor_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>algorithm_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>std::string<sp/>footer_key_metadata_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::vector&lt;encryption::AesDecryptor*&gt;<sp/>all_decryptors_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>types<sp/>of<sp/>meta_decryptors<sp/>and<sp/>data_decryptors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;encryption::AesDecryptor&gt;<sp/>meta_decryptor_[3];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;encryption::AesDecryptor&gt;<sp/>data_decryptor_[3];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">::arrow::MemoryPool</ref>*<sp/>pool_;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetFooterDecryptor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadata);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Decryptor&gt;<sp/>GetColumnDecryptor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_key_metadata,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadata<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1encryption_1_1_aes_decryptor" kindref="compound">encryption::AesDecryptor</ref>*<sp/>GetMetaAesDecryptor(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1encryption_1_1_aes_decryptor" kindref="compound">encryption::AesDecryptor</ref>*<sp/>GetDataAesDecryptor(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MapKeyLenToDecryptorArrayIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_len);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/internal_file_decryptor.h"/>
  </compounddef>
</doxygen>
