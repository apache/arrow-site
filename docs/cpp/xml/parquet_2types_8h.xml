<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parquet_2types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes refid="int__util_8h" local="yes">arrow/util/int_util.h</includes>
    <includes refid="string__view_8h" local="yes">arrow/util/string_view.h</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includedby refid="bloom__filter_8h" local="yes">/arrow/cpp/src/parquet/bloom_filter.h</includedby>
    <includedby refid="column__page_8h" local="yes">/arrow/cpp/src/parquet/column_page.h</includedby>
    <includedby refid="column__reader_8h" local="yes">/arrow/cpp/src/parquet/column_reader.h</includedby>
    <includedby refid="column__scanner_8h" local="yes">/arrow/cpp/src/parquet/column_scanner.h</includedby>
    <includedby refid="column__writer_8h" local="yes">/arrow/cpp/src/parquet/column_writer.h</includedby>
    <includedby refid="encoding_8h" local="yes">/arrow/cpp/src/parquet/encoding.h</includedby>
    <includedby refid="encryption_8h" local="yes">/arrow/cpp/src/parquet/encryption.h</includedby>
    <includedby refid="encryption__internal_8h" local="yes">/arrow/cpp/src/parquet/encryption_internal.h</includedby>
    <includedby refid="hasher_8h" local="yes">/arrow/cpp/src/parquet/hasher.h</includedby>
    <includedby refid="metadata_8h" local="yes">/arrow/cpp/src/parquet/metadata.h</includedby>
    <includedby refid="murmur3_8h" local="yes">/arrow/cpp/src/parquet/murmur3.h</includedby>
    <includedby refid="parquet_2pch_8h" local="yes">/arrow/cpp/src/parquet/pch.h</includedby>
    <includedby refid="properties_8h" local="yes">/arrow/cpp/src/parquet/properties.h</includedby>
    <includedby refid="schema_8h" local="yes">/arrow/cpp/src/parquet/schema.h</includedby>
    <includedby refid="schema__internal_8h" local="yes">/arrow/cpp/src/parquet/schema_internal.h</includedby>
    <includedby refid="statistics_8h" local="yes">/arrow/cpp/src/parquet/statistics.h</includedby>
    <includedby refid="parquet_2thrift__internal_8h" local="yes">/arrow/cpp/src/parquet/thrift_internal.h</includedby>
    <incdepgraph>
      <node id="6779">
        <label>atomic</label>
      </node>
      <node id="6767">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
      </node>
      <node id="6754">
        <label>limits</label>
      </node>
      <node id="6748">
        <label>cstdint</label>
      </node>
      <node id="6760">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6749" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6762" relation="include">
        </childnode>
        <childnode refid="6763" relation="include">
        </childnode>
        <childnode refid="6764" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6781">
        <label>endian.h</label>
      </node>
      <node id="6768">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="6749" relation="include">
        </childnode>
        <childnode refid="6769" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6767" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6770" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6786">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="6787" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
      </node>
      <node id="6765">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6762" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6759">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6760" relation="include">
        </childnode>
        <childnode refid="6772" relation="include">
        </childnode>
        <childnode refid="6773" relation="include">
        </childnode>
        <childnode refid="6778" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6780" relation="include">
        </childnode>
        <childnode refid="6789" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
      </node>
      <node id="6772">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6762" relation="include">
        </childnode>
        <childnode refid="6764" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6785">
        <label>cmath</label>
      </node>
      <node id="6784">
        <label>cassert</label>
      </node>
      <node id="6777">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
      </node>
      <node id="6752">
        <label>string</label>
      </node>
      <node id="6758">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="6771">
        <label>ostream</label>
      </node>
      <node id="6756">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="6763">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6764" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6767" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6778">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="6779" relation="include">
        </childnode>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6780">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="6781" relation="include">
        </childnode>
        <childnode refid="6747" relation="include">
        </childnode>
        <childnode refid="6782" relation="include">
        </childnode>
        <childnode refid="6783" relation="include">
        </childnode>
        <childnode refid="6784" relation="include">
        </childnode>
        <childnode refid="6785" relation="include">
        </childnode>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6749" relation="include">
        </childnode>
        <childnode refid="6754" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6762" relation="include">
        </childnode>
        <childnode refid="6760" relation="include">
        </childnode>
        <childnode refid="6775" relation="include">
        </childnode>
        <childnode refid="6767" relation="include">
        </childnode>
        <childnode refid="6786" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6770" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6788" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6783">
        <label>bitset</label>
      </node>
      <node id="6787">
        <label>tuple</label>
      </node>
      <node id="6762">
        <label>vector</label>
      </node>
      <node id="6776">
        <label>new</label>
      </node>
      <node id="6761">
        <label>utility</label>
      </node>
      <node id="6757">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6758" relation="include">
        </childnode>
      </node>
      <node id="6782">
        <label>array</label>
      </node>
      <node id="6751">
        <label>sstream</label>
      </node>
      <node id="6773">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6774" relation="include">
        </childnode>
        <childnode refid="6772" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6764">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="6769">
        <label>iosfwd</label>
      </node>
      <node id="6774">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6772" relation="include">
        </childnode>
        <childnode refid="6775" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6777" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6775">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="6776" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6767" relation="include">
        </childnode>
      </node>
      <node id="6755">
        <label>type_traits</label>
      </node>
      <node id="6789">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6754" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6775" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6747">
        <label>algorithm</label>
      </node>
      <node id="6753">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6754" relation="include">
        </childnode>
        <childnode refid="6755" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6749">
        <label>cstring</label>
      </node>
      <node id="6746">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="6747" relation="include">
        </childnode>
        <childnode refid="6748" relation="include">
        </childnode>
        <childnode refid="6749" relation="include">
        </childnode>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6751" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6753" relation="include">
        </childnode>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6759" relation="include">
        </childnode>
      </node>
      <node id="6770">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="6750" relation="include">
        </childnode>
        <childnode refid="6771" relation="include">
        </childnode>
        <childnode refid="6752" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6756" relation="include">
        </childnode>
      </node>
      <node id="6750">
        <label>memory</label>
      </node>
      <node id="6766">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="6748" relation="include">
        </childnode>
      </node>
      <node id="6788">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="6755" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6791">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="6799">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="6798">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="6799" relation="include">
        </childnode>
        <childnode refid="6800" relation="include">
        </childnode>
      </node>
      <node id="6818">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="6805" relation="include">
        </childnode>
      </node>
      <node id="6814">
        <label>/arrow/cpp/src/parquet/murmur3.h</label>
        <link refid="murmur3_8h"/>
      </node>
      <node id="6809">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="6797">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="6808">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="6792">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="6810">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6807" relation="include">
        </childnode>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6797" relation="include">
        </childnode>
      </node>
      <node id="6812">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6810" relation="include">
        </childnode>
        <childnode refid="6811" relation="include">
        </childnode>
        <childnode refid="6802" relation="include">
        </childnode>
      </node>
      <node id="6819">
        <label>/arrow/cpp/src/parquet/schema_internal.h</label>
        <link refid="schema__internal_8h"/>
      </node>
      <node id="6804">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="6805" relation="include">
        </childnode>
      </node>
      <node id="6796">
        <label>/arrow/cpp/src/parquet/column_scanner.h</label>
        <link refid="column__scanner_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
      </node>
      <node id="6806">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6807" relation="include">
        </childnode>
        <childnode refid="6808" relation="include">
        </childnode>
        <childnode refid="6809" relation="include">
        </childnode>
        <childnode refid="6810" relation="include">
        </childnode>
        <childnode refid="6811" relation="include">
        </childnode>
        <childnode refid="6812" relation="include">
        </childnode>
        <childnode refid="6802" relation="include">
        </childnode>
      </node>
      <node id="6794">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="6805">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="6793">
        <label>/arrow/cpp/src/parquet/column_reader.h</label>
        <link refid="column__reader_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6796" relation="include">
        </childnode>
        <childnode refid="6797" relation="include">
        </childnode>
      </node>
      <node id="6795">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="6815">
        <label>/arrow/cpp/src/parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="6816" relation="include">
        </childnode>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6817" relation="include">
        </childnode>
        <childnode refid="6793" relation="include">
        </childnode>
        <childnode refid="6796" relation="include">
        </childnode>
        <childnode refid="6803" relation="include">
        </childnode>
        <childnode refid="6811" relation="include">
        </childnode>
        <childnode refid="6818" relation="include">
        </childnode>
        <childnode refid="6804" relation="include">
        </childnode>
        <childnode refid="6812" relation="include">
        </childnode>
        <childnode refid="6802" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
        <childnode refid="6819" relation="include">
        </childnode>
      </node>
      <node id="6811">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="6799" relation="include">
        </childnode>
        <childnode refid="6800" relation="include">
        </childnode>
      </node>
      <node id="6801">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="6802" relation="include">
        </childnode>
      </node>
      <node id="6820">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6799" relation="include">
        </childnode>
        <childnode refid="6792" relation="include">
        </childnode>
        <childnode refid="6805" relation="include">
        </childnode>
      </node>
      <node id="6817">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
      </node>
      <node id="6816">
        <label>/arrow/cpp/src/parquet/api/schema.h</label>
        <link refid="api_2schema_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6799" relation="include">
        </childnode>
      </node>
      <node id="6802">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="6800">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="6797" relation="include">
        </childnode>
      </node>
      <node id="6813">
        <label>/arrow/cpp/src/parquet/hasher.h</label>
        <link refid="hasher_8h"/>
        <childnode refid="6791" relation="include">
        </childnode>
        <childnode refid="6814" relation="include">
        </childnode>
      </node>
      <node id="6803">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="6804" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
      </node>
      <node id="6790">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="6791" relation="include">
        </childnode>
        <childnode refid="6792" relation="include">
        </childnode>
        <childnode refid="6793" relation="include">
        </childnode>
        <childnode refid="6796" relation="include">
        </childnode>
        <childnode refid="6798" relation="include">
        </childnode>
        <childnode refid="6801" relation="include">
        </childnode>
        <childnode refid="6803" relation="include">
        </childnode>
        <childnode refid="6809" relation="include">
        </childnode>
        <childnode refid="6813" relation="include">
        </childnode>
        <childnode refid="6812" relation="include">
        </childnode>
        <childnode refid="6814" relation="include">
        </childnode>
        <childnode refid="6802" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
        <childnode refid="6815" relation="include">
        </childnode>
        <childnode refid="6819" relation="include">
        </childnode>
        <childnode refid="6820" relation="include">
        </childnode>
        <childnode refid="6805" relation="include">
        </childnode>
      </node>
      <node id="6807">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structparquet_1_1_type" prot="public">parquet::Type</innerclass>
    <innerclass refid="structparquet_1_1_converted_type" prot="public">parquet::ConvertedType</innerclass>
    <innerclass refid="structparquet_1_1_repetition" prot="public">parquet::Repetition</innerclass>
    <innerclass refid="structparquet_1_1_sort_order" prot="public">parquet::SortOrder</innerclass>
    <innerclass refid="structparquet_1_1schema_1_1_decimal_metadata" prot="public">parquet::schema::DecimalMetadata</innerclass>
    <innerclass refid="classparquet_1_1_logical_type" prot="public">parquet::LogicalType</innerclass>
    <innerclass refid="structparquet_1_1_logical_type_1_1_type" prot="public">parquet::LogicalType::Type</innerclass>
    <innerclass refid="structparquet_1_1_logical_type_1_1_time_unit" prot="public">parquet::LogicalType::TimeUnit</innerclass>
    <innerclass refid="classparquet_1_1_string_logical_type" prot="public">parquet::StringLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_map_logical_type" prot="public">parquet::MapLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_list_logical_type" prot="public">parquet::ListLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_enum_logical_type" prot="public">parquet::EnumLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_decimal_logical_type" prot="public">parquet::DecimalLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_date_logical_type" prot="public">parquet::DateLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_time_logical_type" prot="public">parquet::TimeLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_timestamp_logical_type" prot="public">parquet::TimestampLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_interval_logical_type" prot="public">parquet::IntervalLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_int_logical_type" prot="public">parquet::IntLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_null_logical_type" prot="public">parquet::NullLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_j_s_o_n_logical_type" prot="public">parquet::JSONLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_b_s_o_n_logical_type" prot="public">parquet::BSONLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_u_u_i_d_logical_type" prot="public">parquet::UUIDLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_no_logical_type" prot="public">parquet::NoLogicalType</innerclass>
    <innerclass refid="classparquet_1_1_unknown_logical_type" prot="public">parquet::UnknownLogicalType</innerclass>
    <innerclass refid="structparquet_1_1_encoding" prot="public">parquet::Encoding</innerclass>
    <innerclass refid="structparquet_1_1_parquet_cipher" prot="public">parquet::ParquetCipher</innerclass>
    <innerclass refid="structparquet_1_1_aad_metadata" prot="public">parquet::AadMetadata</innerclass>
    <innerclass refid="structparquet_1_1_encryption_algorithm" prot="public">parquet::EncryptionAlgorithm</innerclass>
    <innerclass refid="structparquet_1_1_page_type" prot="public">parquet::PageType</innerclass>
    <innerclass refid="classparquet_1_1_column_order" prot="public">parquet::ColumnOrder</innerclass>
    <innerclass refid="structparquet_1_1_byte_array" prot="public">parquet::ByteArray</innerclass>
    <innerclass refid="structparquet_1_1_fixed_len_byte_array" prot="public">parquet::FixedLenByteArray</innerclass>
    <innerclass refid="structparquet_1_1type__traits" prot="public">parquet::type_traits</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4" prot="public">parquet::type_traits&lt; Type::BOOLEAN &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4" prot="public">parquet::type_traits&lt; Type::INT32 &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4" prot="public">parquet::type_traits&lt; Type::INT64 &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4" prot="public">parquet::type_traits&lt; Type::INT96 &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4" prot="public">parquet::type_traits&lt; Type::FLOAT &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4" prot="public">parquet::type_traits&lt; Type::DOUBLE &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_b_y_t_e___a_r_r_a_y_01_4" prot="public">parquet::type_traits&lt; Type::BYTE_ARRAY &gt;</innerclass>
    <innerclass refid="structparquet_1_1type__traits_3_01_type_1_1_f_i_x_e_d___l_e_n___b_y_t_e___a_r_r_a_y_01_4" prot="public">parquet::type_traits&lt; Type::FIXED_LEN_BYTE_ARRAY &gt;</innerclass>
    <innerclass refid="structparquet_1_1_physical_type" prot="public">parquet::PhysicalType</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1util">arrow::util</innernamespace>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <innernamespace refid="namespaceparquet_1_1format">parquet::format</innernamespace>
    <innernamespace refid="namespaceparquet_1_1schema">parquet::schema</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="int__util_8h" kindref="compound">arrow/util/int_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__view_8h" kindref="compound">arrow/util/string_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a8a586e8fadc0656a031810b95028f652" kindref="member">Codec</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Metadata<sp/>enums<sp/>to<sp/>match<sp/>Thrift<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>reason<sp/>we<sp/>maintain<sp/>our<sp/>own<sp/>enums<sp/>is<sp/>to<sp/>avoid<sp/>transitive<sp/>dependency<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>compiled<sp/>Thrift<sp/>headers<sp/>(and<sp/>thus<sp/>thrift/Thrift.h)<sp/>for<sp/>users<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>public<sp/>API.<sp/>After<sp/>building<sp/>parquet-cpp,<sp/>you<sp/>should<sp/>not<sp/>need<sp/>to<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thrift<sp/>headers<sp/>in<sp/>your<sp/>application.<sp/>This<sp/>means<sp/>some<sp/>boilerplate<sp/>to<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>our<sp/>types<sp/>and<sp/>Parquet&apos;s<sp/>Thrift<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>add<sp/>special<sp/>values<sp/>like<sp/>NONE<sp/>to<sp/>distinguish<sp/>between<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>being<sp/>set<sp/>and<sp/>not<sp/>set.<sp/>As<sp/>an<sp/>example<sp/>consider<sp/>ConvertedType<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CompressionCodec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mirrors<sp/>parquet::Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structparquet_1_1_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_type" kindref="compound">Type</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caaf10bdd7a3befa2de2cbe27f412db38a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOLEAN<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="59" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caad2453f2429b067fd1a780db705c54c32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>INT32<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="60" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caa6624fc10f52222e9c3313bc2c80419ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="61" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caaf03b1d3e53cf8f0c13d3488ed2231a38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>INT96<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="62" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caaff7e2e6530a5789ad552dd9c9a05d612" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FLOAT<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="63" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caa8962d0622821a3d39559583f5903caa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DOUBLE<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="64" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caa2cf4d5ec16f3a1807713b881582b2bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE_ARRAY<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="65" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caa1f6918fb61821465548fe8604d59e73a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FIXED_LEN_BYTE_ARRAY<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>always<sp/>be<sp/>last<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737caaef2343f357fcaa94ac022d7bb05821f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDEFINED<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mirrors<sp/>parquet::ConvertedType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structparquet_1_1_converted_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_converted_type" kindref="compound">ConvertedType</ref><sp/>{</highlight></codeline>
<codeline lineno="73" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="74" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198adeb8756102a33f6619ada0dafcdf4167" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198adeb8756102a33f6619ada0dafcdf4167" kindref="member">NONE</ref>,</highlight></codeline>
<codeline lineno="75" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198adbf70e8e389abaeef8f58b1787fc76ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198adbf70e8e389abaeef8f58b1787fc76ae" kindref="member">UTF8</ref>,</highlight></codeline>
<codeline lineno="76" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a262062a5e2be17f585719ed16ed5ea69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a262062a5e2be17f585719ed16ed5ea69" kindref="member">MAP</ref>,</highlight></codeline>
<codeline lineno="77" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198acc0dd8274dd24a643739423d2c502509" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198acc0dd8274dd24a643739423d2c502509" kindref="member">MAP_KEY_VALUE</ref>,</highlight></codeline>
<codeline lineno="78" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a9828078fce22fc1a41b6db306eeab661" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a9828078fce22fc1a41b6db306eeab661" kindref="member">LIST</ref>,</highlight></codeline>
<codeline lineno="79" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198afb080e60b9b2ca7f3429a63138228fc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198afb080e60b9b2ca7f3429a63138228fc7" kindref="member">ENUM</ref>,</highlight></codeline>
<codeline lineno="80" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a93a027c26b08fbca36e95251bf30a3da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a93a027c26b08fbca36e95251bf30a3da" kindref="member">DECIMAL</ref>,</highlight></codeline>
<codeline lineno="81" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a11d555869259111c0a4efb25299211c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a11d555869259111c0a4efb25299211c4" kindref="member">DATE</ref>,</highlight></codeline>
<codeline lineno="82" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ac68af55e43d34f59d10d4563f4f5b73c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ac68af55e43d34f59d10d4563f4f5b73c" kindref="member">TIME_MILLIS</ref>,</highlight></codeline>
<codeline lineno="83" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198aade6e027cafff1cbc9c770807f607c9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198aade6e027cafff1cbc9c770807f607c9c" kindref="member">TIME_MICROS</ref>,</highlight></codeline>
<codeline lineno="84" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a4d5ea1fbe93f8803dafc812b6a588ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a4d5ea1fbe93f8803dafc812b6a588ba6" kindref="member">TIMESTAMP_MILLIS</ref>,</highlight></codeline>
<codeline lineno="85" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a770e8476456a75f133f08672dfaf3c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a770e8476456a75f133f08672dfaf3c4a" kindref="member">TIMESTAMP_MICROS</ref>,</highlight></codeline>
<codeline lineno="86" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a3bce6f64d42f879028f4aecf1a78d4da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a3bce6f64d42f879028f4aecf1a78d4da" kindref="member">UINT_8</ref>,</highlight></codeline>
<codeline lineno="87" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a4f851df289b4dc73248ed6b03527d65d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a4f851df289b4dc73248ed6b03527d65d" kindref="member">UINT_16</ref>,</highlight></codeline>
<codeline lineno="88" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a03eb445a443797517766d8a04d194e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a03eb445a443797517766d8a04d194e27" kindref="member">UINT_32</ref>,</highlight></codeline>
<codeline lineno="89" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a2aacbf13e0bdbd1186fa39b598313228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a2aacbf13e0bdbd1186fa39b598313228" kindref="member">UINT_64</ref>,</highlight></codeline>
<codeline lineno="90" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ab5aa65da798f29b934a1323614ac2c90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ab5aa65da798f29b934a1323614ac2c90" kindref="member">INT_8</ref>,</highlight></codeline>
<codeline lineno="91" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198aa5f6288ff97922da8fcee4661387d9d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198aa5f6288ff97922da8fcee4661387d9d1" kindref="member">INT_16</ref>,</highlight></codeline>
<codeline lineno="92" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ab5676276bdf7ebc42836373145576939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198ab5676276bdf7ebc42836373145576939" kindref="member">INT_32</ref>,</highlight></codeline>
<codeline lineno="93" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a76cc3cf7d28693a3f868e6eaa4592c0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a76cc3cf7d28693a3f868e6eaa4592c0c" kindref="member">INT_64</ref>,</highlight></codeline>
<codeline lineno="94" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a2a6f70b90f27a8b057c973d69c008e46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a2a6f70b90f27a8b057c973d69c008e46" kindref="member">JSON</ref>,</highlight></codeline>
<codeline lineno="95" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a5509fff5236588fa8d8302c39680e527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a5509fff5236588fa8d8302c39680e527" kindref="member">BSON</ref>,</highlight></codeline>
<codeline lineno="96" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a81bf1574cbeb83635fe19e6d81567ee3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a81bf1574cbeb83635fe19e6d81567ee3" kindref="member">INTERVAL</ref>,</highlight></codeline>
<codeline lineno="97" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a198e1a5746891f142f8975a65131068b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NA<sp/>=<sp/>25,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>always<sp/>be<sp/>last<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198a68707961ff749e3c68320e234bb4c280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDEFINED<sp/>=<sp/>26</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">format<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mirrors<sp/>parquet::FieldRepetitionType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structparquet_1_1_repetition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_repetition" kindref="compound">Repetition</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="structparquet_1_1_repetition_1a7e942dfcd49240c465cdf3e1dc011af4a05b3c6d0c73dae7012f675903a45d513" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_repetition_1a7e942dfcd49240c465cdf3e1dc011af4" kindref="member">type</ref><sp/>{<sp/>REQUIRED<sp/>=<sp/>0,<sp/>OPTIONAL<sp/>=<sp/>1,<sp/>REPEATED<sp/>=<sp/>2,<sp/></highlight><highlight class="comment">/*Always<sp/>last*/</highlight><highlight class="normal"><sp/>UNDEFINED<sp/>=<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reference:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format/converter/ParquetMetadataConverter.java</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sort<sp/>order<sp/>for<sp/>page<sp/>and<sp/>column<sp/>statistics.<sp/>Types<sp/>are<sp/>associated<sp/>with<sp/>sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>orders<sp/>(e.g.,<sp/>UTF8<sp/>columns<sp/>should<sp/>use<sp/>UNSIGNED)<sp/>and<sp/>column<sp/>stats<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aggregated<sp/>using<sp/>a<sp/>sort<sp/>order.<sp/>As<sp/>of<sp/>parquet-format<sp/>version<sp/>2.3.1,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>order<sp/>used<sp/>to<sp/>aggregate<sp/>stats<sp/>is<sp/>always<sp/>SIGNED<sp/>and<sp/>is<sp/>not<sp/>stored<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parquet<sp/>file.<sp/>These<sp/>stats<sp/>are<sp/>discarded<sp/>for<sp/>types<sp/>that<sp/>need<sp/>unsigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>PARQUET-686.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structparquet_1_1_sort_order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_sort_order" kindref="compound">SortOrder</ref><sp/>{</highlight></codeline>
<codeline lineno="125" refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8a16d9bdb4b5603c940d221c6c227e3573" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">type</ref><sp/>{<sp/>SIGNED,<sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8a16d9bdb4b5603c940d221c6c227e3573" kindref="member">UNSIGNED</ref>,<sp/>UNKNOWN<sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structparquet_1_1schema_1_1_decimal_metadata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1schema_1_1_decimal_metadata" kindref="compound">DecimalMetadata</ref><sp/>{</highlight></codeline>
<codeline lineno="131" refid="structparquet_1_1schema_1_1_decimal_metadata_1adb62ee10bed165b3c6504f265b903008" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata_1adb62ee10bed165b3c6504f265b903008" kindref="member">isset</ref>;</highlight></codeline>
<codeline lineno="132" refid="structparquet_1_1schema_1_1_decimal_metadata_1a1c5e9857ddcc89401da18ca5bce0671c" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata_1a1c5e9857ddcc89401da18ca5bce0671c" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="133" refid="structparquet_1_1schema_1_1_decimal_metadata_1ae6a13fb9e8dd463204f0ac495d23ba42" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata_1ae6a13fb9e8dd463204f0ac495d23ba42" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classparquet_1_1_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="structparquet_1_1_logical_type_1_1_type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_logical_type_1_1_type" kindref="compound">Type</ref><sp/>{</highlight></codeline>
<codeline lineno="142" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053f" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="143" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053faca4e78fd63dbf984f5ceb25411f70184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNKNOWN<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="144" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053faf0e4bdf1007ed47b1f8cb6ccb79dc128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STRING<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="145" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fae71331aff271b0db9e557564cd81b727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fae71331aff271b0db9e557564cd81b727" kindref="member">MAP</ref>,</highlight></codeline>
<codeline lineno="146" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa1fb497ba2014234ed606b9613c652afe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa1fb497ba2014234ed606b9613c652afe" kindref="member">LIST</ref>,</highlight></codeline>
<codeline lineno="147" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa72493c73c0a44e8bfc5c19f0df59dae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa72493c73c0a44e8bfc5c19f0df59dae2" kindref="member">ENUM</ref>,</highlight></codeline>
<codeline lineno="148" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa4d5d58a467c2e89d2d8c72dd5abcb6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa4d5d58a467c2e89d2d8c72dd5abcb6f6" kindref="member">DECIMAL</ref>,</highlight></codeline>
<codeline lineno="149" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa9ea6368b9a9ab7556c055e2dd88c2c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa9ea6368b9a9ab7556c055e2dd88c2c27" kindref="member">DATE</ref>,</highlight></codeline>
<codeline lineno="150" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa110ef3809cf5533200902b49d133d0ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa110ef3809cf5533200902b49d133d0ee" kindref="member">TIME</ref>,</highlight></codeline>
<codeline lineno="151" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa796913cd4e4d4542db5ca9f07aa2043f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa796913cd4e4d4542db5ca9f07aa2043f" kindref="member">TIMESTAMP</ref>,</highlight></codeline>
<codeline lineno="152" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa80a3ccc04f04c8dda4bd697071727b10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa80a3ccc04f04c8dda4bd697071727b10" kindref="member">INTERVAL</ref>,</highlight></codeline>
<codeline lineno="153" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa6c0bd6fda8c66a05d4e81e6faf438f76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa6c0bd6fda8c66a05d4e81e6faf438f76" kindref="member">INT</ref>,</highlight></codeline>
<codeline lineno="154" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa7cea8d9b902627ab840f6ff4450b4058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa7cea8d9b902627ab840f6ff4450b4058" kindref="member">NIL</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>Thrift<sp/>NullType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa635ee08d23d36c5a3fb3577c3335b96f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa635ee08d23d36c5a3fb3577c3335b96f" kindref="member">JSON</ref>,</highlight></codeline>
<codeline lineno="156" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa919d61fad4b10bf6b4336c7f85262aa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fa919d61fad4b10bf6b4336c7f85262aa9" kindref="member">BSON</ref>,</highlight></codeline>
<codeline lineno="157" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fab7eb22ed4e6443b1a299a636b0b21821" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fab7eb22ed4e6443b1a299a636b0b21821" kindref="member">UUID</ref>,</highlight></codeline>
<codeline lineno="158" refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053fade6918d1754ef69630d1600af4d2cc41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NONE</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structparquet_1_1_logical_type_1_1_time_unit" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_logical_type_1_1_time_unit" kindref="compound">TimeUnit</ref><sp/>{</highlight></codeline>
<codeline lineno="163" refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cba23292d6a8a4ae2c9a0bb79e97edea8ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">unit</ref><sp/>{<sp/>UNKNOWN<sp/>=<sp/>0,<sp/>MILLIS<sp/>=<sp/>1,<sp/>MICROS,<sp/>NANOS<sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>FromConvertedType(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">parquet::ConvertedType::type</ref><sp/>converted_type,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata" kindref="compound">parquet::schema::DecimalMetadata</ref><sp/>converted_decimal_metadata<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1});</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>FromThrift(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parquet::format::LogicalType&amp;<sp/>thrift_logical_type);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>String();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Map();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>List();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Enum();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Decimal(int32_t<sp/>precision,<sp/>int32_t<sp/>scale<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Date();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Time(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Timestamp(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc,<sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_from_converted_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_set_converted_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Interval();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Int(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_width,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Null();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>JSON();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>BSON();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>UUID();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>None();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Unknown();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_applicable(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">parquet::Type::type</ref><sp/>primitive_type,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>primitive_length<sp/>=<sp/>-1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_compatible(<ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">parquet::ConvertedType::type</ref><sp/>converted_type,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata" kindref="compound">parquet::schema::DecimalMetadata</ref><sp/>converted_decimal_metadata<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1,<sp/>-1})<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">parquet::ConvertedType::type</ref><sp/>ToConvertedType(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1schema_1_1_decimal_metadata" kindref="compound">parquet::schema::DecimalMetadata</ref>*<sp/>out_decimal_metadata)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>std::string<sp/>ToJSON()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>parquet::format::LogicalType<sp/>ToThrift()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_type_1a417e83a60f7d477e6d39173d1f67053f" kindref="member">LogicalType::Type::type</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/>sort_order()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>checks<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_string()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_map()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_list()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_enum()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_decimal()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_date()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_time()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_timestamp()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_interval()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_int()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_null()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_JSON()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_BSON()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_UUID()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_none()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_invalid()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_nested()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_nonnested()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_serialized()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classparquet_1_1_logical_type_1acbbf4fd554337b1d390fbbc2e8d1b512" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;const<sp/>Impl&gt;<sp/><ref refid="classparquet_1_1_logical_type_1acbbf4fd554337b1d390fbbc2e8d1b512" kindref="member">impl_</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classparquet_1_1_string_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_string_logical_type" kindref="compound">StringLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_string_logical_type" kindref="compound">StringLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classparquet_1_1_map_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_map_logical_type" kindref="compound">MapLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_map_logical_type" kindref="compound">MapLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classparquet_1_1_list_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_list_logical_type" kindref="compound">ListLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_list_logical_type" kindref="compound">ListLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classparquet_1_1_enum_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_enum_logical_type" kindref="compound">EnumLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_enum_logical_type" kindref="compound">EnumLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classparquet_1_1_decimal_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_decimal_logical_type" kindref="compound">DecimalLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make(int32_t<sp/>precision,<sp/>int32_t<sp/>scale<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>int32_t<sp/>precision()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>int32_t<sp/>scale()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_decimal_logical_type" kindref="compound">DecimalLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classparquet_1_1_date_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_date_logical_type" kindref="compound">DateLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_date_logical_type" kindref="compound">DateLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classparquet_1_1_time_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_time_logical_type" kindref="compound">TimeLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_time_logical_type" kindref="compound">TimeLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classparquet_1_1_timestamp_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_timestamp_logical_type" kindref="compound">TimestampLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_from_converted_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_set_converted_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_adjusted_to_utc()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_logical_type_1_1_time_unit_1aff12474371123955037b45f28867d3cb" kindref="member">LogicalType::TimeUnit::unit</ref><sp/>time_unit()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_from_converted_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_set_converted_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_timestamp_logical_type" kindref="compound">TimestampLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classparquet_1_1_interval_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_interval_logical_type" kindref="compound">IntervalLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_interval_logical_type" kindref="compound">IntervalLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classparquet_1_1_int_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_int_logical_type" kindref="compound">IntLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_width,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_width()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_int_logical_type" kindref="compound">IntLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="classparquet_1_1_null_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_null_logical_type" kindref="compound">NullLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_null_logical_type" kindref="compound">NullLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classparquet_1_1_j_s_o_n_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_j_s_o_n_logical_type" kindref="compound">JSONLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_j_s_o_n_logical_type" kindref="compound">JSONLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classparquet_1_1_b_s_o_n_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_b_s_o_n_logical_type" kindref="compound">BSONLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_b_s_o_n_logical_type" kindref="compound">BSONLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">};</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classparquet_1_1_u_u_i_d_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_u_u_i_d_logical_type" kindref="compound">UUIDLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_u_u_i_d_logical_type" kindref="compound">UUIDLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classparquet_1_1_no_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_no_logical_type" kindref="compound">NoLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_no_logical_type" kindref="compound">NoLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">};</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classparquet_1_1_unknown_logical_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_unknown_logical_type" kindref="compound">UnknownLogicalType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;<sp/>Make();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_unknown_logical_type" kindref="compound">UnknownLogicalType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data<sp/>encodings.<sp/>Mirrors<sp/>parquet::Encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="structparquet_1_1_encoding" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding" kindref="compound">Encoding</ref><sp/>{</highlight></codeline>
<codeline lineno="448" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="449" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea2cb5b7729ec2667147b4e1c9175b008b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PLAIN<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="450" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea1ff08baa520dff10f53748806e0393dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PLAIN_DICTIONARY<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="451" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27eaa699b33df9838a0cbc587d427ad8cfaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RLE<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="452" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea2b30401dbed91c9965571bba5c6cba5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BIT_PACKED<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="453" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27eae4e3e233d79d1ca997605a43e0bbcad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DELTA_BINARY_PACKED<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="454" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27eaa26339f3829385c5fa85b73914da2adc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DELTA_LENGTH_BYTE_ARRAY<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="455" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea89c5413f7cedd73ab928f7d99ef5265c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DELTA_BYTE_ARRAY<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="456" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea67dccffdc0b24163f24bca6d0a936aa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RLE_DICTIONARY<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="457" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea113b7e22686edf5fbcce7e050b7b22b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE_STREAM_SPLIT<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>always<sp/>be<sp/>last<sp/>element<sp/>(except<sp/>UNKNOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea325bfd80838654689543ec549657b3bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDEFINED<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="460" refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27ea37eb2223d490f896eec08ab040d53442" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNKNOWN<sp/>=<sp/>999</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="462"><highlight class="normal">};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a5d4db31b5a5cc63e34eabb85f4884d34" kindref="member">IsCodecSupported</ref>(<ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>codec);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="469"><highlight class="normal">std::unique_ptr&lt;Codec&gt;<sp/><ref refid="namespaceparquet_1a833b6358ed5c7c36005d4e33a170a8d7" kindref="member">GetCodec</ref>(<ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>codec);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="472"><highlight class="normal">std::unique_ptr&lt;Codec&gt;<sp/><ref refid="namespaceparquet_1a833b6358ed5c7c36005d4e33a170a8d7" kindref="member">GetCodec</ref>(<ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>codec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compression_level);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="structparquet_1_1_parquet_cipher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_parquet_cipher" kindref="compound">ParquetCipher</ref><sp/>{</highlight></codeline>
<codeline lineno="475" refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">type</ref><sp/>{<sp/>AES_GCM_V1<sp/>=<sp/>0,<sp/>AES_GCM_CTR_V1<sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="476"><highlight class="normal">};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="structparquet_1_1_aad_metadata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/>{</highlight></codeline>
<codeline lineno="479" refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>;</highlight></codeline>
<codeline lineno="480" refid="structparquet_1_1_aad_metadata_1aafc5ab8e77a0523e578463f5051e874c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structparquet_1_1_aad_metadata_1aafc5ab8e77a0523e578463f5051e874c" kindref="member">aad_file_unique</ref>;</highlight></codeline>
<codeline lineno="481" refid="structparquet_1_1_aad_metadata_1ae1e115fbd92bb86cf6508187f02c69c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_aad_metadata_1ae1e115fbd92bb86cf6508187f02c69c4" kindref="member">supply_aad_prefix</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="structparquet_1_1_encryption_algorithm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>{</highlight></codeline>
<codeline lineno="485" refid="structparquet_1_1_encryption_algorithm_1a7b916a7ee5974900b82dd90f7d929996" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/><ref refid="structparquet_1_1_encryption_algorithm_1a7b916a7ee5974900b82dd90f7d929996" kindref="member">algorithm</ref>;</highlight></codeline>
<codeline lineno="486" refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/><ref refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" kindref="member">aad</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parquet::PageType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="structparquet_1_1_page_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_page_type" kindref="compound">PageType</ref><sp/>{</highlight></codeline>
<codeline lineno="491" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316d" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="492" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dababd5e0ee7e459298015c79787447806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dababd5e0ee7e459298015c79787447806" kindref="member">DATA_PAGE</ref>,</highlight></codeline>
<codeline lineno="493" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dab7d2d72f2b36293e3d030d51f02cb3ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dab7d2d72f2b36293e3d030d51f02cb3ee" kindref="member">INDEX_PAGE</ref>,</highlight></codeline>
<codeline lineno="494" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316da77582058ee996cc04b1bc549e2e36786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316da77582058ee996cc04b1bc549e2e36786" kindref="member">DICTIONARY_PAGE</ref>,</highlight></codeline>
<codeline lineno="495" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dab3abd311eb9c938821737dcce69b9cdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dab3abd311eb9c938821737dcce69b9cdf" kindref="member">DATA_PAGE_V2</ref>,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>always<sp/>be<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316dac49885fd9a41c944e54d1d94ad8bf627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDEFINED</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="499"><highlight class="normal">};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="classparquet_1_1_column_order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_column_order" kindref="compound">ColumnOrder</ref><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="503" refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70fae3e028ae8a7ba29990c26b1bbd7e3265" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70f" kindref="member">type</ref><sp/>{<sp/><ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70fae3e028ae8a7ba29990c26b1bbd7e3265" kindref="member">UNDEFINED</ref>,<sp/>TYPE_DEFINED_ORDER<sp/>};</highlight></codeline>
<codeline lineno="504" refid="classparquet_1_1_column_order_1a452e51307ac3e9c9b6708262598b1bef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_order_1a452e51307ac3e9c9b6708262598b1bef" kindref="member">ColumnOrder</ref>(<ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70f" kindref="member">ColumnOrder::type</ref><sp/>column_order)<sp/>:<sp/>column_order_(column_order)<sp/>{}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>Type<sp/>Defined<sp/>Order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classparquet_1_1_column_order_1ab0ece2e04232269b4df333aae81d8b26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_order_1ab0ece2e04232269b4df333aae81d8b26" kindref="member">ColumnOrder</ref>()<sp/>:<sp/>column_order_(<ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70f" kindref="member">type</ref>::TYPE_DEFINED_ORDER)<sp/>{}</highlight></codeline>
<codeline lineno="507" refid="classparquet_1_1_column_order_1af3eeac356fca1ff954141494392d4ce1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70f" kindref="member">ColumnOrder::type</ref><sp/><ref refid="classparquet_1_1_column_order_1af3eeac356fca1ff954141494392d4ce1" kindref="member">get_order</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_order_;<sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="classparquet_1_1_column_order_1ae284504d564a7fa65df2182f6fd7482c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_order" kindref="compound">ColumnOrder</ref><sp/><ref refid="classparquet_1_1_column_order_1ae284504d564a7fa65df2182f6fd7482c" kindref="member">undefined_</ref>;</highlight></codeline>
<codeline lineno="510" refid="classparquet_1_1_column_order_1aa8e2968f967263e62e9300a936856403" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_order" kindref="compound">ColumnOrder</ref><sp/><ref refid="classparquet_1_1_column_order_1aa8e2968f967263e62e9300a936856403" kindref="member">type_defined_</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_order_1ad074805f32ef2fcfbe87f20c6f6ca70f" kindref="member">ColumnOrder::type</ref><sp/>column_order_;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="structparquet_1_1_byte_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref><sp/>{</highlight></codeline>
<codeline lineno="519" refid="structparquet_1_1_byte_array_1a86f5b2d1be5d415568b1518bcfc9c853" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_byte_array_1a86f5b2d1be5d415568b1518bcfc9c853" kindref="member">ByteArray</ref>()<sp/>:<sp/>len(0),<sp/>ptr(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="520" refid="structparquet_1_1_byte_array_1ad500b46b149e95f94e80deca3efd8430" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_byte_array_1ad500b46b149e95f94e80deca3efd8430" kindref="member">ByteArray</ref>(uint32_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>ptr)<sp/>:<sp/>len(len),<sp/>ptr(ptr)<sp/>{}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="structparquet_1_1_byte_array_1a19815df2a23369defe355eb035e8f043" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_byte_array_1a19815df2a23369defe355eb035e8f043" kindref="member">ByteArray</ref>(::<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">arrow::util::string_view</ref><sp/>view)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT<sp/>implicit<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>(static_cast&lt;uint32_t&gt;(view.size()),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;const<sp/>uint8_t*&gt;(view.<ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>()))<sp/>{}</highlight></codeline>
<codeline lineno="525" refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="526" refid="structparquet_1_1_byte_array_1af042e3b05255611778877b2be51cdec5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="structparquet_1_1_byte_array_1af042e3b05255611778877b2be51cdec5" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">};</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="namespaceparquet_1a659eec7804dfaa63497e873669f29094" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acbf9e156c4a8a01745d20c33a22f1f28" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.<ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref><sp/>==<sp/>right.<ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(left.<ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref><sp/>==<sp/>0<sp/>||<sp/>std::memcmp(left.<ref refid="structparquet_1_1_byte_array_1af042e3b05255611778877b2be51cdec5" kindref="member">ptr</ref>,<sp/>right.<ref refid="structparquet_1_1_byte_array_1af042e3b05255611778877b2be51cdec5" kindref="member">ptr</ref>,<sp/>left.<ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="namespaceparquet_1abdb3a03c245a7b25edf1f8a6959d56d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ae7e5d5239907d98d4d80c80616f8bee7" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="structparquet_1_1_fixed_len_byte_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref><sp/>{</highlight></codeline>
<codeline lineno="539" refid="structparquet_1_1_fixed_len_byte_array_1ae7874e1d32eb6aeb82e0552c302bdae0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_fixed_len_byte_array_1ae7874e1d32eb6aeb82e0552c302bdae0" kindref="member">FixedLenByteArray</ref>()<sp/>:<sp/>ptr(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="540" refid="structparquet_1_1_fixed_len_byte_array_1a8a14647b6f7f26931bcec9f54fb41fbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_fixed_len_byte_array_1a8a14647b6f7f26931bcec9f54fb41fbb" kindref="member">FixedLenByteArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>ptr)<sp/>:<sp/>ptr(ptr)<sp/>{}</highlight></codeline>
<codeline lineno="541" refid="structparquet_1_1_fixed_len_byte_array_1ae564cbafaaa7ba91a9cd6ba95d211807" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="structparquet_1_1_fixed_len_byte_array_1ae564cbafaaa7ba91a9cd6ba95d211807" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">};</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="namespaceparquet_1a2d74e36d45a524fd793d9d9244024098" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FLBA</ref><sp/>=<sp/><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Julian<sp/>day<sp/>at<sp/>unix<sp/>epoch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Julian<sp/>Day<sp/>Number<sp/>(JDN)<sp/>is<sp/>the<sp/>integer<sp/>assigned<sp/>to<sp/>a<sp/>whole<sp/>solar<sp/>day<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Julian<sp/>day<sp/>count<sp/>starting<sp/>from<sp/>noon<sp/>Universal<sp/>time,<sp/>with<sp/>Julian<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>0<sp/>assigned<sp/>to<sp/>the<sp/>day<sp/>starting<sp/>at<sp/>noon<sp/>on<sp/>Monday,<sp/>January<sp/>1,<sp/>4713<sp/>BC,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>proleptic<sp/>Julian<sp/>calendar<sp/>(November<sp/>24,<sp/>4714<sp/>BC,<sp/>in<sp/>the<sp/>proleptic<sp/>Gregorian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calendar),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="namespaceparquet_1a75b25f2cf338e7b5a8a2d6b9df392d34" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceparquet_1a75b25f2cf338e7b5a8a2d6b9df392d34" kindref="member">kJulianToUnixEpochDays</ref><sp/>=<sp/>INT64_C(2440588);</highlight></codeline>
<codeline lineno="554" refid="namespaceparquet_1a9b5411ef81bd088778846224b68d5ca5" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceparquet_1a9b5411ef81bd088778846224b68d5ca5" kindref="member">kSecondsPerDay</ref><sp/>=<sp/>INT64_C(60<sp/>*<sp/>60<sp/>*<sp/>24);</highlight></codeline>
<codeline lineno="555" refid="namespaceparquet_1a29ecfcfdbaabf31e4a9e5cfbd0be6da8" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceparquet_1a29ecfcfdbaabf31e4a9e5cfbd0be6da8" kindref="member">kMillisecondsPerDay</ref><sp/>=<sp/>kSecondsPerDay<sp/>*<sp/>INT64_C(1000);</highlight></codeline>
<codeline lineno="556" refid="namespaceparquet_1af94ee44678fbba3d02ed26713a5e6a95" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceparquet_1af94ee44678fbba3d02ed26713a5e6a95" kindref="member">kMicrosecondsPerDay</ref><sp/>=<sp/>kMillisecondsPerDay<sp/>*<sp/>INT64_C(1000);</highlight></codeline>
<codeline lineno="557" refid="namespaceparquet_1a622b12209f62b8e06ed2e17f1e51730e" refkind="member"><highlight class="normal">constexpr<sp/>int64_t<sp/><ref refid="namespaceparquet_1a622b12209f62b8e06ed2e17f1e51730e" kindref="member">kNanosecondsPerDay</ref><sp/>=<sp/>kMicrosecondsPerDay<sp/>*<sp/>INT64_C(1000);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="namespaceparquet_1a5c4c7a94a482c46a4b706c424b15f29d" refkind="member"><highlight class="normal"><ref refid="namespaceparquet_1a5c4c7a94a482c46a4b706c424b15f29d" kindref="member">MANUALLY_ALIGNED_STRUCT</ref>(1)<sp/>Int96<sp/>{<sp/>uint32_t<sp/>value[3];<sp/>};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><ref refid="namespaceparquet_1ab17edc5728cfc0ebb7ee3e8765bee031" kindref="member">STRUCT_END</ref>(Int96,<sp/>12);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="namespaceparquet_1a048f2b425d31db4e15f3d1473e6c8ed9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acbf9e156c4a8a01745d20c33a22f1f28" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int96&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int96&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::equal(left.value,<sp/>left.value<sp/>+<sp/>3,<sp/>right.value);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="namespaceparquet_1a97799a631730609251b155b087addb74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ae7e5d5239907d98d4d80c80616f8bee7" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int96&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int96&amp;<sp/>right)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);<sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ByteArrayToString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(a.<ref refid="structparquet_1_1_byte_array_1af042e3b05255611778877b2be51cdec5" kindref="member">ptr</ref>),<sp/>a.<ref refid="structparquet_1_1_byte_array_1a8803a2c7b42273ecb9050a6c3e4e67fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Int96SetNanoSeconds(parquet::Int96&amp;<sp/>i96,<sp/>int64_t<sp/>nanoseconds)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>std::memcpy(&amp;i96.value,<sp/>&amp;nanoseconds,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nanoseconds));</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t<sp/>Int96GetNanoSeconds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parquet::Int96&amp;<sp/>i96)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>the<sp/>computations<sp/>in<sp/>the<sp/>unsigned<sp/>domain<sp/>to<sp/>avoid<sp/>unsigned<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>uint64_t<sp/>days_since_epoch<sp/>=</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i96.value[2]<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceparquet_1a75b25f2cf338e7b5a8a2d6b9df392d34" kindref="member">kJulianToUnixEpochDays</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>uint64_t<sp/>nanoseconds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>memcpy(&amp;nanoseconds,<sp/>&amp;i96.value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(days_since_epoch<sp/>*<sp/>kNanosecondsPerDay<sp/>+<sp/>nanoseconds);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>Int96ToString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int96&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>result;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>std::copy(a.value,<sp/>a.value<sp/>+<sp/>3,<sp/>std::ostream_iterator&lt;uint32_t&gt;(result,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.str();</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>FixedLenByteArrayToString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>result;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>std::copy(a.<ref refid="structparquet_1_1_fixed_len_byte_array_1ae564cbafaaa7ba91a9cd6ba95d211807" kindref="member">ptr</ref>,<sp/>a.<ref refid="structparquet_1_1_fixed_len_byte_array_1ae564cbafaaa7ba91a9cd6ba95d211807" kindref="member">ptr</ref><sp/>+<sp/>len,<sp/>std::ostream_iterator&lt;uint32_t&gt;(result,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.str();</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Type::type<sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="600" refid="structparquet_1_1type__traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref><sp/>{};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="603" refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::BOOLEAN&gt;<sp/>{</highlight></codeline>
<codeline lineno="604" refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4_1a2da7e9aaa34fcd39586590e5f853fcdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4_1a2da7e9aaa34fcd39586590e5f853fcdf" kindref="member">value_type</ref><sp/>=<sp/>bool;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4_1a7b33c2bdf9852aa69c3a599b9f497f74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="607" refid="structparquet_1_1type__traits_3_01_type_1_1_b_o_o_l_e_a_n_01_4_1a30b77761fbfeb9658a8650dacdcc2b2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">};</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="611" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::INT32&gt;<sp/>{</highlight></codeline>
<codeline lineno="612" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4_1a6e5c9ae58106879db652507c93b3c713" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4_1a6e5c9ae58106879db652507c93b3c713" kindref="member">value_type</ref><sp/>=<sp/>int32_t;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4_1aa3c6af31c269a37eeb9e189af00a92c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="615" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t32_01_4_1ac2afdb20fe1757718682cef6714e1669" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="619" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::INT64&gt;<sp/>{</highlight></codeline>
<codeline lineno="620" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4_1a9b98f735b6342f62f29f7a160170b540" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4_1a9b98f735b6342f62f29f7a160170b540" kindref="member">value_type</ref><sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4_1a0438670ed6e644a4deb15a6170b4d513" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="623" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t64_01_4_1aa769f8aa2bf3c13373c084fbd25a83b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ld&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">};</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="627" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::INT96&gt;<sp/>{</highlight></codeline>
<codeline lineno="628" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4_1af9a13ec1efe9cabb421db237337c726f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4_1af9a13ec1efe9cabb421db237337c726f" kindref="member">value_type</ref><sp/>=<sp/>Int96;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4_1accdd42d3096b50e7aa88c7da6c86003a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="631" refid="structparquet_1_1type__traits_3_01_type_1_1_i_n_t96_01_4_1a69dec56b8bf758a3d61683f8311c5d54" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="635" refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::FLOAT&gt;<sp/>{</highlight></codeline>
<codeline lineno="636" refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4_1ac746954fe7aafd2759b34394eb67337b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4_1ac746954fe7aafd2759b34394eb67337b" kindref="member">value_type</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4_1a9f6465e85e88648429ef6184ba43d50d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="639" refid="structparquet_1_1type__traits_3_01_type_1_1_f_l_o_a_t_01_4_1a6d6464973303aa2634f375a0f89011f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="643" refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::DOUBLE&gt;<sp/>{</highlight></codeline>
<codeline lineno="644" refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4_1a129dcb04be9b5ed68b3476c49a529398" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4_1a129dcb04be9b5ed68b3476c49a529398" kindref="member">value_type</ref><sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4_1a754a0b66853aeb0c5576416b91a1ab48" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="647" refid="structparquet_1_1type__traits_3_01_type_1_1_d_o_u_b_l_e_01_4_1a0d65099c7cd6a76ede9f6f8af8b65e37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="651" refid="structparquet_1_1type__traits_3_01_type_1_1_b_y_t_e___a_r_r_a_y_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::BYTE_ARRAY&gt;<sp/>{</highlight></codeline>
<codeline lineno="652" refid="structparquet_1_1type__traits_3_01_type_1_1_b_y_t_e___a_r_r_a_y_01_4_1a160706888cd84c3652fcba7c54ff2d19" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">value_type</ref><sp/>=<sp/><ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="structparquet_1_1type__traits_3_01_type_1_1_b_y_t_e___a_r_r_a_y_01_4_1ac4450d215b1c668f2ef76599207efc31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structparquet_1_1_byte_array" kindref="compound">ByteArray</ref>);</highlight></codeline>
<codeline lineno="655" refid="structparquet_1_1type__traits_3_01_type_1_1_b_y_t_e___a_r_r_a_y_01_4_1a2ff7d375a37a4daa424fb2501b3d944b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">};</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="659" refid="structparquet_1_1type__traits_3_01_type_1_1_f_i_x_e_d___l_e_n___b_y_t_e___a_r_r_a_y_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits</ref>&lt;<ref refid="structparquet_1_1_type" kindref="compound">Type</ref>::FIXED_LEN_BYTE_ARRAY&gt;<sp/>{</highlight></codeline>
<codeline lineno="660" refid="structparquet_1_1type__traits_3_01_type_1_1_f_i_x_e_d___l_e_n___b_y_t_e___a_r_r_a_y_01_4_1ab66a622623228264dd7619c219d61fe9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">value_type</ref><sp/>=<sp/><ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="structparquet_1_1type__traits_3_01_type_1_1_f_i_x_e_d___l_e_n___b_y_t_e___a_r_r_a_y_01_4_1a035b1492f93ac58d73ac4a97690532de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_byte_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structparquet_1_1_fixed_len_byte_array" kindref="compound">FixedLenByteArray</ref>);</highlight></codeline>
<codeline lineno="663" refid="structparquet_1_1type__traits_3_01_type_1_1_f_i_x_e_d___l_e_n___b_y_t_e___a_r_r_a_y_01_4_1ad39982d4b7687b144ff7618e1b90f4a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printf_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">};</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Type::type<sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="667" refid="structparquet_1_1_physical_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType</ref><sp/>{</highlight></codeline>
<codeline lineno="668" refid="structparquet_1_1_physical_type_1a924800498d2c2c82937ae25f9b8345d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type_1a924800498d2c2c82937ae25f9b8345d5" kindref="member">c_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1type__traits" kindref="compound">type_traits&lt;TYPE&gt;::value_type</ref>;</highlight></codeline>
<codeline lineno="669" refid="structparquet_1_1_physical_type_1a4a58886d32b2b2d3c5b02d9b6170a6b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type_num<sp/>=<sp/>TYPE;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="namespaceparquet_1a60f6c016c8d8b612f78974bc516006b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">BooleanType</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::BOOLEAN&gt;</ref>;</highlight></codeline>
<codeline lineno="673" refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">Int32Type</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::INT32&gt;</ref>;</highlight></codeline>
<codeline lineno="674" refid="namespaceparquet_1aebf28a7ea170ee7e771b13b12d06f3cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">Int64Type</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::INT64&gt;</ref>;</highlight></codeline>
<codeline lineno="675" refid="namespaceparquet_1ac52f5e8342ad62c5a982888bb08cecc4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">Int96Type</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::INT96&gt;</ref>;</highlight></codeline>
<codeline lineno="676" refid="namespaceparquet_1a0ed420ee4d70b4f7e8c71a3b53beefe5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">FloatType</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::FLOAT&gt;</ref>;</highlight></codeline>
<codeline lineno="677" refid="namespaceparquet_1ab8b1ae52fb8af689994a86814212a9cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">DoubleType</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::DOUBLE&gt;</ref>;</highlight></codeline>
<codeline lineno="678" refid="namespaceparquet_1a1bb1f1bd7489144e704dd149df95ce83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">ByteArrayType</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::BYTE_ARRAY&gt;</ref>;</highlight></codeline>
<codeline lineno="679" refid="namespaceparquet_1a55abc780912f7bcf901d329dcad1093a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">FLBAType</ref><sp/>=<sp/><ref refid="structparquet_1_1_physical_type" kindref="compound">PhysicalType&lt;Type::FIXED_LEN_BYTE_ARRAY&gt;</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="682" refid="namespaceparquet_1a0fa5082525293e05aa2f678f725a3277" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceparquet_1a0fa5082525293e05aa2f678f725a3277" kindref="member">format_fwf</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>width<sp/>&lt;&lt;<sp/>type_traits&lt;Type::type_num&gt;::printf_code;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">PARQUET_EXPORT<sp/>std::string<sp/><ref refid="namespaceparquet_1a7a6273c54ab0717c49ef105f4ad0b2cb" kindref="member">EncodingToString</ref>(<ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>t);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">PARQUET_EXPORT<sp/>std::string<sp/><ref refid="namespaceparquet_1af45d96322321fde4d747a24074cc92c6" kindref="member">ConvertedTypeToString</ref>(<ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref><sp/>t);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">PARQUET_EXPORT<sp/>std::string<sp/><ref refid="namespaceparquet_1aae274fa6fbf66cdf8630740d9461d675" kindref="member">TypeToString</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>t);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">PARQUET_EXPORT<sp/>std::string<sp/><ref refid="namespaceparquet_1a01a136f35bc65fcba82a12fd04db3ab3" kindref="member">FormatStatValue</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>parquet_type,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">arrow::util::string_view</ref><sp/>val);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">PARQUET_EXPORT<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1afc3b898010b160805758ae529c776bcc" kindref="member">GetTypeByteSize</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>t);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/><ref refid="namespaceparquet_1a676ed8018ede8a2eff1697515d9c14e8" kindref="member">DefaultSortOrder</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>primitive);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/><ref refid="namespaceparquet_1ac2b5c680575a7b07669793cb52e0f978" kindref="member">GetSortOrder</ref>(<ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref><sp/>converted,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>primitive);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/><ref refid="namespaceparquet_1ac2b5c680575a7b07669793cb52e0f978" kindref="member">GetSortOrder</ref>(</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>LogicalType&gt;&amp;<sp/>logical_type,<sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>primitive);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="710"><highlight class="normal">int32_t<sp/>DecimalSize(int32_t<sp/>precision);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/types.h"/>
  </compounddef>
</doxygen>
