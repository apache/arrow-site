<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_dict_encoder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::DictEncoder</compoundname>
    <basecompoundref refid="classparquet_1_1_typed_encoder" prot="public" virt="virtual">parquet::TypedEncoder&lt; DType &gt;</basecompoundref>
    <includes refid="encoding_8h" local="no">parquet/encoding.h</includes>
    <templateparamlist>
      <param>
        <type>typename DType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1a930bab6e8992c2d41f23eaba0c0b03dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::DictEncoder&lt; DType &gt;::WriteIndices</definition>
        <argsstring>(uint8_t *buffer, int buffer_len)=0</argsstring>
        <name>WriteIndices</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buffer_len</declname>
        </param>
        <briefdescription>
<para>Writes out any buffered indices to buffer preceded by the bit width of this data. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the number of bytes written. If the supplied buffer is not big enough, returns -1. buffer must be preallocated with buffer_len bytes. Use <ref refid="classparquet_1_1_encoder_1ac74a0fb2f671de58fac89784015eeaf0" kindref="member">EstimatedDataEncodedSize()</ref> to size buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1adb8d4ed64c5e8a3481a95d611200f271" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::DictEncoder&lt; DType &gt;::dict_encoded_size</definition>
        <argsstring>()=0</argsstring>
        <name>dict_encoded_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1a2c20897cdfc79c9a25c7fe0ba1f6f680" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::DictEncoder&lt; DType &gt;::bit_width</definition>
        <argsstring>() const =0</argsstring>
        <name>bit_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1aaed45d7a65e5d9f2f5c829703eb7e664" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::DictEncoder&lt; DType &gt;::WriteDict</definition>
        <argsstring>(uint8_t *buffer)=0</argsstring>
        <name>WriteDict</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes out the encoded dictionary to buffer. </para>        </briefdescription>
        <detaileddescription>
<para>buffer must be preallocated to <ref refid="classparquet_1_1_dict_encoder_1adb8d4ed64c5e8a3481a95d611200f271" kindref="member">dict_encoded_size()</ref> bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1abb18965c67378df9369f7052948babf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int parquet::DictEncoder&lt; DType &gt;::num_entries</definition>
        <argsstring>() const =0</argsstring>
        <name>num_entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1aec783d1d194cc9bee8459c6751853cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::DictEncoder&lt; DType &gt;::PutIndices</definition>
        <argsstring>(const ::arrow::Array &amp;indices)=0</argsstring>
        <name>PutIndices</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Append dictionary indices into the encoder. </para>        </briefdescription>
        <detaileddescription>
<para>It is assumed (without any boundschecking) that the indices reference pre-existing dictionary values <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the dictionary index values. Only Int32Array currently supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_dict_encoder_1aa6f8728801cc611687d2a06cde403dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::DictEncoder&lt; DType &gt;::PutDictionary</definition>
        <argsstring>(const ::arrow::Array &amp;values)=0</argsstring>
        <name>PutDictionary</name>
        <param>
          <type>const ::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Append dictionary into encoder, inserting indices separately. </para>        </briefdescription>
        <detaileddescription>
<para>Currently throws exception if the current dictionary memo is non-empty <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>the dictionary values. Only valid for certain Parquet/Arrow type combinations, like BYTE_ARRAY/BinaryArray </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encoding.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1251">
        <label>parquet::TypedEncoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_encoder"/>
        <childnode refid="1252" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1252">
        <label>parquet::Encoder</label>
        <link refid="classparquet_1_1_encoder"/>
      </node>
      <node id="1250">
        <label>parquet::DictEncoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_dict_encoder"/>
        <childnode refid="1251" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1254">
        <label>parquet::TypedEncoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_encoder"/>
        <childnode refid="1255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1255">
        <label>parquet::Encoder</label>
        <link refid="classparquet_1_1_encoder"/>
      </node>
      <node id="1253">
        <label>parquet::DictEncoder&lt; DType &gt;</label>
        <link refid="classparquet_1_1_dict_encoder"/>
        <childnode refid="1254" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/encoding.h" line="213" column="1" bodyfile="/arrow/cpp/src/parquet/encoding.h" bodystart="213" bodyend="246"/>
    <listofallmembers>
      <member refid="classparquet_1_1_dict_encoder_1a2c20897cdfc79c9a25c7fe0ba1f6f680" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>bit_width</name></member>
      <member refid="classparquet_1_1_dict_encoder_1adb8d4ed64c5e8a3481a95d611200f271" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>dict_encoded_size</name></member>
      <member refid="classparquet_1_1_encoder_1a3c79d7f36e263d4a8bb92270da23205b" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>encoding</name></member>
      <member refid="classparquet_1_1_encoder_1ac74a0fb2f671de58fac89784015eeaf0" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>EstimatedDataEncodedSize</name></member>
      <member refid="classparquet_1_1_encoder_1a573b09498e458bbcd1106923806417dd" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>FlushValues</name></member>
      <member refid="classparquet_1_1_encoder_1a5340e82fef7c30d860e677f61204355a" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>memory_pool</name></member>
      <member refid="classparquet_1_1_dict_encoder_1abb18965c67378df9369f7052948babf9" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>num_entries</name></member>
      <member refid="classparquet_1_1_typed_encoder_1a8d5ae1591e406cd6150563e5bc214a76" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>Put</name></member>
      <member refid="classparquet_1_1_typed_encoder_1abe09ce308aeb879ac32b2ade2d1fbae0" prot="public" virt="virtual"><scope>parquet::DictEncoder</scope><name>Put</name></member>
      <member refid="classparquet_1_1_typed_encoder_1a363e67032f00e157fb67d57139c637a2" prot="public" virt="non-virtual"><scope>parquet::DictEncoder</scope><name>Put</name></member>
      <member refid="classparquet_1_1_encoder_1a87c0a5e7b68990d55d14ba1dbe4bfbc4" prot="public" virt="pure-virtual" ambiguityscope="parquet::Encoder::"><scope>parquet::DictEncoder</scope><name>Put</name></member>
      <member refid="classparquet_1_1_dict_encoder_1aa6f8728801cc611687d2a06cde403dbf" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>PutDictionary</name></member>
      <member refid="classparquet_1_1_dict_encoder_1aec783d1d194cc9bee8459c6751853cf4" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>PutIndices</name></member>
      <member refid="classparquet_1_1_typed_encoder_1a2a5b41b1076b58fdb793f512af20d4f0" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>PutSpaced</name></member>
      <member refid="classparquet_1_1_typed_encoder_1a2ce5ac25cb3826647eb6c07151bae03a" prot="public" virt="non-virtual"><scope>parquet::DictEncoder</scope><name>T</name></member>
      <member refid="classparquet_1_1_dict_encoder_1aaed45d7a65e5d9f2f5c829703eb7e664" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>WriteDict</name></member>
      <member refid="classparquet_1_1_dict_encoder_1a930bab6e8992c2d41f23eaba0c0b03dd" prot="public" virt="pure-virtual"><scope>parquet::DictEncoder</scope><name>WriteIndices</name></member>
      <member refid="classparquet_1_1_encoder_1a5eb2a9b56a292d9dd0a3ca2e6f93579b" prot="public" virt="virtual"><scope>parquet::DictEncoder</scope><name>~Encoder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
