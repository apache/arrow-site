<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_scalar_expr" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::ScalarExpr</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_value_expr" prot="public" virt="non-virtual">arrow::compute::ValueExpr</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1scalar_1_1_list" prot="public" virt="non-virtual">arrow::compute::scalar::List</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1scalar_1_1_struct" prot="public" virt="non-virtual">arrow::compute::scalar::Struct</derivedcompoundref>
    <includes refid="arrow_2compute_2expression_8h" local="no">arrow/compute/expression.h</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_scalar_expr_1a7d43014d45e3d1948531e9460ee1b563" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::compute::ScalarExpr::kind</definition>
        <argsstring>() const override</argsstring>
        <name>kind</name>
        <reimplements refid="classarrow_1_1compute_1_1_expr_1a0301b0ad0be91b9755d3daf706c83dcc">kind</reimplements>
        <briefdescription>
<para>A unique string identifier for the kind of expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_scalar_expr_1ae415f5e85b217ced68620e6e100de0c8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" kindref="member">ValueRank</ref></type>
        <definition>ValueRank arrow::compute::ScalarExpr::rank</definition>
        <argsstring>() const override</argsstring>
        <name>rank</name>
        <reimplements refid="classarrow_1_1compute_1_1_value_expr_1a55ff82c9a33ca2be50fa873b504d1c6a">rank</reimplements>
        <briefdescription>
<para>The value cardinality (scalar or array) of the expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4036">
        <label>arrow::compute::scalar::List</label>
        <link refid="classarrow_1_1compute_1_1scalar_1_1_list"/>
        <childnode refid="4033" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4034">
        <label>arrow::compute::ValueExpr</label>
        <link refid="classarrow_1_1compute_1_1_value_expr"/>
        <childnode refid="4035" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4037">
        <label>arrow::compute::scalar::Struct</label>
        <link refid="classarrow_1_1compute_1_1scalar_1_1_struct"/>
        <childnode refid="4033" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4035">
        <label>arrow::compute::Expr</label>
        <link refid="classarrow_1_1compute_1_1_expr"/>
      </node>
      <node id="4033">
        <label>arrow::compute::ScalarExpr</label>
        <link refid="classarrow_1_1compute_1_1_scalar_expr"/>
        <childnode refid="4034" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4039">
        <label>arrow::compute::ValueExpr</label>
        <link refid="classarrow_1_1compute_1_1_value_expr"/>
        <childnode refid="4040" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4040">
        <label>arrow::compute::Expr</label>
        <link refid="classarrow_1_1compute_1_1_expr"/>
      </node>
      <node id="4038">
        <label>arrow::compute::ScalarExpr</label>
        <link refid="classarrow_1_1compute_1_1_scalar_expr"/>
        <childnode refid="4039" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/expression.h" line="88" column="1" bodyfile="/arrow/cpp/src/arrow/compute/expression.h" bodystart="88" bodyend="93"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_expr_1a1a94de9d06d6e03df6e7fc942edcf6aa" prot="public" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>Expr</name></member>
      <member refid="classarrow_1_1compute_1_1_scalar_expr_1a7d43014d45e3d1948531e9460ee1b563" prot="protected" virt="virtual"><scope>arrow::compute::ScalarExpr</scope><name>kind</name></member>
      <member refid="classarrow_1_1compute_1_1_expr_1a89480eaf6debbc12675ddec6bcfb0782" prot="public" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>op</name></member>
      <member refid="classarrow_1_1compute_1_1_expr_1a80d5e33eda9eef25716e721dfbabbefa" prot="protected" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>op_</name></member>
      <member refid="classarrow_1_1compute_1_1_scalar_expr_1ae415f5e85b217ced68620e6e100de0c8" prot="protected" virt="virtual"><scope>arrow::compute::ScalarExpr</scope><name>rank</name></member>
      <member refid="classarrow_1_1compute_1_1_value_expr_1a8882a76179941095c4871af1d13735e4" prot="public" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>type</name></member>
      <member refid="classarrow_1_1compute_1_1_value_expr_1aa717699b5de8bba46c38e269156e5924" prot="protected" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>type_</name></member>
      <member refid="classarrow_1_1compute_1_1_value_expr_1a36df92e3eeed446472d4a9a9a88d738f" prot="protected" virt="non-virtual"><scope>arrow::compute::ScalarExpr</scope><name>ValueExpr</name></member>
      <member refid="classarrow_1_1compute_1_1_expr_1aa7d4c0bd44a0a8b6e85ce807dac4368a" prot="public" virt="virtual"><scope>arrow::compute::ScalarExpr</scope><name>~Expr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
