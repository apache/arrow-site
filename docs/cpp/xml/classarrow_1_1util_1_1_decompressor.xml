<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1util_1_1_decompressor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::util::Decompressor</compoundname>
    <includes refid="compression_8h" local="no">arrow/util/compression.h</includes>
    <innerclass refid="structarrow_1_1util_1_1_decompressor_1_1_decompress_result" prot="public">arrow::util::Decompressor::DecompressResult</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1util_1_1_decompressor_1a93632020efcc01a5acbe4f3b91f36b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::util::Decompressor::~Decompressor</definition>
        <argsstring>()</argsstring>
        <name>~Decompressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/compression.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_decompressor_1ae4cd7f2634190422ce0b878638dcc483" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="structarrow_1_1util_1_1_decompressor_1_1_decompress_result" kindref="compound">DecompressResult</ref> &gt;</type>
        <definition>virtual Result&lt;DecompressResult&gt; arrow::util::Decompressor::Decompress</definition>
        <argsstring>(int64_t input_len, const uint8_t *input, int64_t output_len, uint8_t *output)=0</argsstring>
        <name>Decompress</name>
        <param>
          <type>int64_t</type>
          <declname>input_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>output_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Decompress some input. </para>        </briefdescription>
        <detaileddescription>
<para>If need_more_output is true on return, a larger output buffer needs to be supplied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/compression.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_decompressor_1a7f93814cd214bb11b6a5156d850e9e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool arrow::util::Decompressor::IsFinished</definition>
        <argsstring>()=0</argsstring>
        <name>IsFinished</name>
        <briefdescription>
<para>Return whether the compressed stream is finished. </para>        </briefdescription>
        <detaileddescription>
<para>This is a heuristic. If true is returned, then it is guaranteed that the stream is finished. If false is returned, however, it may simply be that the underlying library isn&apos;t able to provide the information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/compression.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_decompressor_1a1a69d72dd9f187c60bd199712d88980f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::util::Decompressor::Reset</definition>
        <argsstring>()=0</argsstring>
        <name>Reset</name>
        <briefdescription>
<para>Reinitialize decompressor, making it ready for a new compressed stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/compression.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Streaming decompressor interface. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/compression.h" line="86" column="1" bodyfile="/arrow/cpp/src/arrow/util/compression.h" bodystart="86" bodyend="115"/>
    <listofallmembers>
      <member refid="classarrow_1_1util_1_1_decompressor_1ae4cd7f2634190422ce0b878638dcc483" prot="public" virt="pure-virtual"><scope>arrow::util::Decompressor</scope><name>Decompress</name></member>
      <member refid="classarrow_1_1util_1_1_decompressor_1a7f93814cd214bb11b6a5156d850e9e47" prot="public" virt="pure-virtual"><scope>arrow::util::Decompressor</scope><name>IsFinished</name></member>
      <member refid="classarrow_1_1util_1_1_decompressor_1a1a69d72dd9f187c60bd199712d88980f" prot="public" virt="pure-virtual"><scope>arrow::util::Decompressor</scope><name>Reset</name></member>
      <member refid="classarrow_1_1util_1_1_decompressor_1a93632020efcc01a5acbe4f3b91f36b80" prot="public" virt="virtual"><scope>arrow::util::Decompressor</scope><name>~Decompressor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
