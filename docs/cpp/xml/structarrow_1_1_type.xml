<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_type" kind="struct" language="C++" prot="public">
    <compoundname>arrow::Type</compoundname>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" prot="public" static="no">
        <name>type</name>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af46d8600b17dd993097e0875a46e0b15" prot="public">
          <name>NA</name>
          <briefdescription>
<para>A NULL type having no physical storage. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ae4bb4146eedf3fb5a517780000001b30" prot="public">
          <name>BOOL</name>
          <briefdescription>
<para>Boolean as 1 bit, LSB bit-packed ordering. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab8f52afb784526f800c91de101673b42" prot="public">
          <name>UINT8</name>
          <briefdescription>
<para>Unsigned 8-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44adf9f694eb598f6f8cac8bed3da547d65" prot="public">
          <name>INT8</name>
          <briefdescription>
<para>Signed 8-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a87c4272d67d3a84ed9ce6c6a9a4a6772" prot="public">
          <name>UINT16</name>
          <briefdescription>
<para>Unsigned 16-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a36b3753b92501b60b2740b29d6e17696" prot="public">
          <name>INT16</name>
          <briefdescription>
<para>Signed 16-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a89620afd46abf8f99b057bd3587a78f0" prot="public">
          <name>UINT32</name>
          <briefdescription>
<para>Unsigned 32-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af8005f162bc422abcee7f1197bf04cf8" prot="public">
          <name>INT32</name>
          <briefdescription>
<para>Signed 32-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af1096e3ebb2d7a678fc6ddac24bf7639" prot="public">
          <name>UINT64</name>
          <briefdescription>
<para>Unsigned 64-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af38ec7ec303572a87b11fd48876bc1d0" prot="public">
          <name>INT64</name>
          <briefdescription>
<para>Signed 64-bit little-endian integer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af6ebd198668f2a6c2d79c549f599e896" prot="public">
          <name>HALF_FLOAT</name>
          <briefdescription>
<para>2-byte floating point value </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" prot="public">
          <name>FLOAT</name>
          <briefdescription>
<para>4-byte floating point value </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" prot="public">
          <name>DOUBLE</name>
          <briefdescription>
<para>8-byte floating point value </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a864933bd7cdfa63ea75498c34db6545f" prot="public">
          <name>STRING</name>
          <briefdescription>
<para>UTF8 variable-length string as List&lt;Char&gt; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a442cc62761c7e5a83d26da4d3ed2fe01" prot="public">
          <name>BINARY</name>
          <briefdescription>
<para>Variable-length bytes (no guarantee of UTF8-ness) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1b3f48148c5ff94c039d09ff689da179" prot="public">
          <name>FIXED_SIZE_BINARY</name>
          <briefdescription>
<para>Fixed-size binary. Each value occupies the same number of bytes. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a4351aedceb3d92f82cf7ae504476ef30" prot="public">
          <name>DATE32</name>
          <briefdescription>
<para>int32_t days since the UNIX epoch </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a17325202e90c23cd194b1698eea87a38" prot="public">
          <name>DATE64</name>
          <briefdescription>
<para>int64_t milliseconds since the UNIX epoch </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1e41dddee4a6410c4d6fe164b36a230e" prot="public">
          <name>TIMESTAMP</name>
          <briefdescription>
<para>Exact timestamp encoded with int64 since UNIX epoch Default unit millisecond. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a73fb0fcd2b5d9a4c6071574c73cdf3c5" prot="public">
          <name>TIME32</name>
          <briefdescription>
<para>Time as signed 32-bit integer, representing either seconds or milliseconds since midnight. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab960cffd22f54b634d9f055f7568d321" prot="public">
          <name>TIME64</name>
          <briefdescription>
<para>Time as signed 64-bit integer, representing either microseconds or nanoseconds since midnight. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa546143f5b445f6478b7e157546ec3f" prot="public">
          <name>INTERVAL</name>
          <briefdescription>
<para>YEAR_MONTH or DAY_TIME interval in SQL style. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a014fe7104b592dbd7c70e4e861774a63" prot="public">
          <name>DECIMAL</name>
          <briefdescription>
<para>Precision- and scale-based decimal type. </para>          </briefdescription>
          <detaileddescription>
<para>Storage type depends on the parameters. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ad074f9c02567b5945293b9114f84f210" prot="public">
          <name>LIST</name>
          <briefdescription>
<para>A list of some logical data type. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa028b35c4e6a047c0e510ef1b0389ef" prot="public">
          <name>STRUCT</name>
          <briefdescription>
<para>Struct of logical types. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a2fa6d3a8e3947b7d0024304bfb8b5fad" prot="public">
          <name>UNION</name>
          <briefdescription>
<para>Unions of logical types. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a3c38b5820a3de12d71713473550c6280" prot="public">
          <name>DICTIONARY</name>
          <briefdescription>
<para>Dictionary-encoded type, also called &quot;categorical&quot; or &quot;factor&quot; in other programming languages. </para>          </briefdescription>
          <detaileddescription>
<para>Holds the dictionary value type but not the dictionary itself, which is part of the <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> struct </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a51838b04a2cdc2db91890e4c70f45e61" prot="public">
          <name>MAP</name>
          <briefdescription>
<para>Map, a repeated struct logical type. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af62348e1483c0b1a1536853e35588dad" prot="public">
          <name>EXTENSION</name>
          <briefdescription>
<para>Custom data type, implemented by user. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a870656978bd9028566f88fe1c0afb127" prot="public">
          <name>FIXED_SIZE_LIST</name>
          <briefdescription>
<para>Fixed size list of some logical type. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a5322b7f2fd54030f65ac36e9637ff45b" prot="public">
          <name>DURATION</name>
          <briefdescription>
<para>Measure of elapsed time in either seconds, milliseconds, microseconds or nanoseconds. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a97279348163fabb0441e9ae939dc7ef5" prot="public">
          <name>LARGE_STRING</name>
          <briefdescription>
<para>Like STRING, but with 64-bit offsets. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ac15fc368bd8a9390a69d4e174635781d" prot="public">
          <name>LARGE_BINARY</name>
          <briefdescription>
<para>Like BINARY, but with 64-bit offsets. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a573d9118191906864e808bf3d5c75049" prot="public">
          <name>LARGE_LIST</name>
          <briefdescription>
<para>Like LIST, but with 64-bit offsets. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Main data type enumeration. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration provides a quick way to interrogate the category of a <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="48" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="48" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/type.h" line="43" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="43" bodyend="159"/>
    <listofallmembers>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a442cc62761c7e5a83d26da4d3ed2fe01" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>BINARY</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ae4bb4146eedf3fb5a517780000001b30" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>BOOL</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a4351aedceb3d92f82cf7ae504476ef30" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DATE32</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a17325202e90c23cd194b1698eea87a38" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DATE64</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a014fe7104b592dbd7c70e4e861774a63" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DECIMAL</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a3c38b5820a3de12d71713473550c6280" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DICTIONARY</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DOUBLE</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a5322b7f2fd54030f65ac36e9637ff45b" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>DURATION</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af62348e1483c0b1a1536853e35588dad" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>EXTENSION</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1b3f48148c5ff94c039d09ff689da179" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>FIXED_SIZE_BINARY</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a870656978bd9028566f88fe1c0afb127" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>FIXED_SIZE_LIST</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>FLOAT</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af6ebd198668f2a6c2d79c549f599e896" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>HALF_FLOAT</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a36b3753b92501b60b2740b29d6e17696" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>INT16</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af8005f162bc422abcee7f1197bf04cf8" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>INT32</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af38ec7ec303572a87b11fd48876bc1d0" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>INT64</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44adf9f694eb598f6f8cac8bed3da547d65" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>INT8</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa546143f5b445f6478b7e157546ec3f" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>INTERVAL</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ac15fc368bd8a9390a69d4e174635781d" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>LARGE_BINARY</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a573d9118191906864e808bf3d5c75049" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>LARGE_LIST</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a97279348163fabb0441e9ae939dc7ef5" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>LARGE_STRING</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ad074f9c02567b5945293b9114f84f210" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>LIST</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a51838b04a2cdc2db91890e4c70f45e61" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>MAP</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af46d8600b17dd993097e0875a46e0b15" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>NA</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a864933bd7cdfa63ea75498c34db6545f" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>STRING</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa028b35c4e6a047c0e510ef1b0389ef" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>STRUCT</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a73fb0fcd2b5d9a4c6071574c73cdf3c5" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>TIME32</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab960cffd22f54b634d9f055f7568d321" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>TIME64</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1e41dddee4a6410c4d6fe164b36a230e" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>TIMESTAMP</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>type</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a87c4272d67d3a84ed9ce6c6a9a4a6772" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>UINT16</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a89620afd46abf8f99b057bd3587a78f0" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>UINT32</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af1096e3ebb2d7a678fc6ddac24bf7639" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>UINT64</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab8f52afb784526f800c91de101673b42" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>UINT8</name></member>
      <member refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a2fa6d3a8e3947b7d0024304bfb8b5fad" prot="public" virt="non-virtual"><scope>arrow::Type</scope><name>UNION</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
