<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1flight_1_1_schema_result" kind="struct" language="C++" prot="public">
    <compoundname>arrow::flight::SchemaResult</compoundname>
    <includes refid="arrow_2flight_2types_8h" local="no">arrow/flight/types.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structarrow_1_1flight_1_1_schema_result_1a086573e1d71a1d9ec2ae05b16aa93e71" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::flight::SchemaResult::raw_schema_</definition>
        <argsstring></argsstring>
        <name>raw_schema_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="367" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1flight_1_1_schema_result_1a8b348062d5e283a0b704394d07498df5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::SchemaResult::SchemaResult</definition>
        <argsstring>(std::string schema)</argsstring>
        <name>SchemaResult</name>
        <param>
          <type>std::string</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="355" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1flight_1_1_schema_result_1a5c713f2e5830de64541fa8bac21be299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::SchemaResult::GetSchema</definition>
        <argsstring>(ipc::DictionaryMemo *dictionary_memo, std::shared_ptr&lt; Schema &gt; *out) const</argsstring>
        <name>GetSchema</name>
        <param>
          <type><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">ipc::DictionaryMemo</ref> *</type>
          <declname>dictionary_memo</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>return schema </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dictionary_memo</parametername>
</parameternamelist>
<parameterdescription>
<para>for dictionary bookkeeping, will be modified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the reconstructed <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1flight_1_1_schema_result_1a8e419bf9e2890895b288d989ddbb6b84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; arrow::flight::SchemaResult::serialized_schema</definition>
        <argsstring>() const</argsstring>
        <name>serialized_schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="364" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="364" bodyend="364"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> result returned after a schema request RPC. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/flight/types.h" line="353" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="353" bodyend="368"/>
    <listofallmembers>
      <member refid="structarrow_1_1flight_1_1_schema_result_1a5c713f2e5830de64541fa8bac21be299" prot="public" virt="non-virtual"><scope>arrow::flight::SchemaResult</scope><name>GetSchema</name></member>
      <member refid="structarrow_1_1flight_1_1_schema_result_1a086573e1d71a1d9ec2ae05b16aa93e71" prot="private" virt="non-virtual"><scope>arrow::flight::SchemaResult</scope><name>raw_schema_</name></member>
      <member refid="structarrow_1_1flight_1_1_schema_result_1a8b348062d5e283a0b704394d07498df5" prot="public" virt="non-virtual"><scope>arrow::flight::SchemaResult</scope><name>SchemaResult</name></member>
      <member refid="structarrow_1_1flight_1_1_schema_result_1a8e419bf9e2890895b288d989ddbb6b84" prot="public" virt="non-virtual"><scope>arrow::flight::SchemaResult</scope><name>serialized_schema</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
