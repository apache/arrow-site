<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_taker" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::compute::Taker</compoundname>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_list_taker_impl" prot="public" virt="non-virtual">arrow::compute::ListTakerImpl&lt; IndexSequence, TypeClass &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, DictionaryType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, ExtensionType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, FixedSizeListType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, NullType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, StructType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4" prot="public" virt="non-virtual">arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_list_taker_impl" prot="public" virt="non-virtual">arrow::compute::ListTakerImpl&lt; IndexSequence, LargeListType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_list_taker_impl" prot="public" virt="non-virtual">arrow::compute::ListTakerImpl&lt; IndexSequence, ListType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_list_taker_impl" prot="public" virt="non-virtual">arrow::compute::ListTakerImpl&lt; IndexSequence, MapType &gt;</derivedcompoundref>
    <includes refid="take__internal_8h" local="no">arrow/compute/kernels/take_internal.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndexSequence</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::Taker&lt; IndexSequence &gt;::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="183" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1a65a0c52cbd68141029bf12610d4c95c4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::Taker&lt; IndexSequence &gt;::Taker</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type)</argsstring>
        <name>Taker</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="125" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1ad5830b3d718a2ffe42515cfd2731b7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::compute::Taker&lt; IndexSequence &gt;::~Taker</definition>
        <argsstring>()=default</argsstring>
        <name>~Taker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1aac186bd69dfcb58f439f95e85c7d6594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::Taker&lt; IndexSequence &gt;::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a8181c133e5956be4de19b5ad0f4148ad">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a5e24d23c0bca30dc774274e7e1c7769e">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a1430b03d5dda7042e2cc07b721edf56a">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a1bd9cc1c45a890802ad3cf5428948f42">Init</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a81dbefe26681c67f700f4c5e300d4eee">Init</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="131" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::Taker&lt; IndexSequence &gt;::SetContext</definition>
        <argsstring>(FunctionContext *ctx)=0</argsstring>
        <name>SetContext</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_1acd85b6e45fd6b01fac25d14cc99af29c">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1aff85c25c7c02239228d4a00ab4d501fe">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a239e3ee6dff94390ff424685f0136717">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a9c1726b02f7e0ee53ead4c575c6bbace">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a6c01c87731dc2a6e649a5dae3b8230bb">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4a56234abcb638c37e7613e00bf0679c">SetContext</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a0a35f895d21badb59f207cdce46474cc">SetContext</reimplementedby>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::Taker&lt; IndexSequence &gt;::Take</definition>
        <argsstring>(const Array &amp;values, IndexSequence indices)=0</argsstring>
        <name>Take</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_1ae8d9ff2f8ec36dce99e61572a076f8a8">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1afca7d8e946e4555f81fc1154f02d8797">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a7dc9d799cf3fe131c3f1bddb5cc216ad">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a310f7b446d0a2669353a3586af43e9f1">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1aa12ea96bd3d7ea1ec6415917f6bb5a7a">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1ab7037ca71014d5d828cabc3e40a483df">Take</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a98302863bfc45d86a38dfe932deb7fd5">Take</reimplementedby>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>IndexSequence</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::Taker&lt; IndexSequence &gt;::Finish</definition>
        <argsstring>(std::shared_ptr&lt; Array &gt; *)=0</argsstring>
        <name>Finish</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_1a72eb485e0aaff0518266d802b6b2b5d2">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1ae0562a611b57a3b8f8eb1fd94e794a91">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1ad82e52c36064599d6ecde5a7fe9098f9">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a14f0176d9c931f8f2fcf54124d82af00">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a790da9ca608d2402f7dae233c0e4e020">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4ad9ab4f13000caefffd225fbd3e964d">Finish</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1abf627286207bd1a477a52a1e0840da70">Finish</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::Taker&lt; IndexSequence &gt;::Make</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type, std::unique_ptr&lt; Taker &gt; *out)</argsstring>
        <name>Make</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="144" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="762" bodyend="766"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Builder</type>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::Taker&lt; IndexSequence &gt;::MakeBuilder</definition>
        <argsstring>(MemoryPool *pool, std::unique_ptr&lt; Builder &gt; *out)</argsstring>
        <name>MakeBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; Builder &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="176" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="176" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4474">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, NullType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4481">
        <label>ListTakerImpl&lt; IndexSequence, MapType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_list_taker_impl"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4471">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, DictionaryType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4478">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, LargeListType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_large_list_type_01_4"/>
        <childnode refid="4477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4480">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, ListType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_list_type_01_4"/>
        <childnode refid="4479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4473">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, FixedSizeListType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4468">
        <label>arrow::compute::Taker&lt; IndexSequence &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker"/>
      </node>
      <node id="4476">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4469">
        <label>arrow::compute::ListTakerImpl&lt; IndexSequence &gt;</label>
        <link refid="classarrow_1_1compute_1_1_list_taker_impl"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4472">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, ExtensionType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4479">
        <label>ListTakerImpl&lt; IndexSequence, ListType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_list_taker_impl"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4477">
        <label>ListTakerImpl&lt; IndexSequence, LargeListType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_list_taker_impl"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4482">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, MapType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_map_type_01_4"/>
        <childnode refid="4481" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4475">
        <label>arrow::compute::TakerImpl&lt; IndexSequence, StructType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4470">
        <label>arrow::compute::TakerImpl&lt; IndexSequence &gt;</label>
        <link refid="classarrow_1_1compute_1_1_taker_impl"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="123" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="123" bodyend="184"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" prot="public" virt="pure-virtual"><scope>arrow::compute::Taker</scope><name>Finish</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1aac186bd69dfcb58f439f95e85c7d6594" prot="public" virt="virtual"><scope>arrow::compute::Taker</scope><name>Init</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" prot="public" virt="non-virtual"><scope>arrow::compute::Taker</scope><name>Make</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" prot="protected" virt="non-virtual"><scope>arrow::compute::Taker</scope><name>MakeBuilder</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" prot="public" virt="pure-virtual"><scope>arrow::compute::Taker</scope><name>SetContext</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" prot="public" virt="pure-virtual"><scope>arrow::compute::Taker</scope><name>Take</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1a65a0c52cbd68141029bf12610d4c95c4" prot="public" virt="non-virtual"><scope>arrow::compute::Taker</scope><name>Taker</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" prot="protected" virt="non-virtual"><scope>arrow::compute::Taker</scope><name>type_</name></member>
      <member refid="classarrow_1_1compute_1_1_taker_1ad5830b3d718a2ffe42515cfd2731b7a8" prot="public" virt="virtual"><scope>arrow::compute::Taker</scope><name>~Taker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
