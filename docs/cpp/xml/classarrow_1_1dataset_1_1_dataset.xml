<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_dataset" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::dataset::Dataset</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; Dataset &gt;</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_file_system_dataset" prot="public" virt="non-virtual">arrow::dataset::FileSystemDataset</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_in_memory_dataset" prot="public" virt="non-virtual">arrow::dataset::InMemoryDataset</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_union_dataset" prot="public" virt="non-virtual">arrow::dataset::UnionDataset</derivedcompoundref>
    <includes refid="dataset_8h" local="no">arrow/dataset/dataset.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_dataset_1a4c4752474ddf539f5d841b38f773c763" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::dataset::Dataset::schema_</definition>
        <argsstring></argsstring>
        <name>schema_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="149" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_dataset_1ad1698721117105739a03725129c32a55" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Expression&gt; arrow::dataset::Dataset::partition_expression_</definition>
        <argsstring></argsstring>
        <name>partition_expression_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="150" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a98691e35d913df562e0e34cb60e736bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scanner_builder" kindref="compound">ScannerBuilder</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;ScannerBuilder&gt; &gt; arrow::dataset::Dataset::NewScan</definition>
        <argsstring>(std::shared_ptr&lt; ScanContext &gt; context)</argsstring>
        <name>NewScan</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Begin to build a new Scan operation against this <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a1a7cbac64269923faa404d9f50885b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scanner_builder" kindref="compound">ScannerBuilder</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;ScannerBuilder&gt; &gt; arrow::dataset::Dataset::NewScan</definition>
        <argsstring>()</argsstring>
        <name>NewScan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a783f0d7ccb031e52adb3f67da8b50c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacearrow_1_1dataset_1a6270dc3eca80575744d55456da9447c2" kindref="member">FragmentIterator</ref></type>
        <definition>FragmentIterator arrow::dataset::Dataset::GetFragments</definition>
        <argsstring>(std::shared_ptr&lt; ScanOptions &gt; options)</argsstring>
        <name>GetFragments</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>GetFragments returns an iterator of Fragments given <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1ad2edfced53a0e56cf89389ee8c754702" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;Schema&gt;&amp; arrow::dataset::Dataset::schema</definition>
        <argsstring>() const</argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="114" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1aa7449d6622e0098c916528be75506236" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;Expression&gt;&amp; arrow::dataset::Dataset::partition_expression</definition>
        <argsstring>() const</argsstring>
        <name>partition_expression</name>
        <briefdescription>
<para>An expression which evaluates to true for all data viewed by this <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>May be null, which indicates no information is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="118" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1ac7611e16eb019f295612a9ef428fdfd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string arrow::dataset::Dataset::type_name</definition>
        <argsstring>() const =0</argsstring>
        <name>type_name</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_in_memory_dataset_1ae39b5d039ae08ed1c6e17bfe1641f380">type_name</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_union_dataset_1a87c9d5cb26b147127ce28259298ce52a">type_name</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_file_system_dataset_1a9efe37fcf02fce6fe246c9a4a8163190">type_name</reimplementedby>
        <briefdescription>
<para>The name identifying the kind of <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1aa615b8333c7ac0e5553adbc9877cb44a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> &gt; &gt;</type>
        <definition>virtual Result&lt;std::shared_ptr&lt;Dataset&gt; &gt; arrow::dataset::Dataset::ReplaceSchema</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema) const =0</argsstring>
        <name>ReplaceSchema</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_in_memory_dataset_1a28d46d3d11d41e4d12f7157a57b6eca4">ReplaceSchema</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_union_dataset_1a12415d746f8c71d5af09e53818779aae">ReplaceSchema</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_file_system_dataset_1a652887883af7444deee7c87f8e4b59a2">ReplaceSchema</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Return a copy of this <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> with a different schema. </para>        </briefdescription>
        <detaileddescription>
<para>The copy will view the same Fragments. If the new schema is not compatible with the original dataset&apos;s schema then an error will be raised. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a5a618381ecdfa4761d6fb3182e094c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::dataset::Dataset::~Dataset</definition>
        <argsstring>()=default</argsstring>
        <name>~Dataset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1acd88a02acb6fafb3f934a1117e9c41f8" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::Dataset::Dataset</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema)</argsstring>
        <name>Dataset</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="135" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a32363cc3b882a036397978326b60935c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::Dataset::Dataset</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; e)</argsstring>
        <name>Dataset</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="137" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a2f143543604cca7dde7c20a530fbb837" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::Dataset::Dataset</definition>
        <argsstring>()=default</argsstring>
        <name>Dataset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1ade66d78b1ee802143d6951b99783aab5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacearrow_1_1dataset_1a6270dc3eca80575744d55456da9447c2" kindref="member">FragmentIterator</ref></type>
        <definition>virtual FragmentIterator arrow::dataset::Dataset::GetFragmentsImpl</definition>
        <argsstring>(std::shared_ptr&lt; ScanOptions &gt; options)=0</argsstring>
        <name>GetFragmentsImpl</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_in_memory_dataset_1a46f4650a52117f8b8fa759c3c665dbaa">GetFragmentsImpl</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_union_dataset_1ab18d680375cd2c5d70b048a558dc9f6e">GetFragmentsImpl</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_file_system_dataset_1a1d0b7ec431d2d0d94455fdba6d9e324c">GetFragmentsImpl</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_dataset_1a74a03971d4c9307eaec662912257b9cc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool arrow::dataset::Dataset::AssumePartitionExpression</definition>
        <argsstring>(const std::shared_ptr&lt; ScanOptions &gt; &amp;scan_options, std::shared_ptr&lt; ScanOptions &gt; *simplified_scan_options) const</argsstring>
        <name>AssumePartitionExpression</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt; &amp;</type>
          <declname>scan_options</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt; *</type>
          <declname>simplified_scan_options</declname>
        </param>
        <briefdescription>
<para>Mutates a <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> by assuming partition_expression_ holds for all yielded fragments. </para>        </briefdescription>
        <detaileddescription>
<para>Returns false if the selector is not satisfiable in this <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container of zero or more Fragments. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> acts as a discovery mechanism of Fragments and partitions, e.g. files deeply nested in a directory. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="864">
        <label>arrow::dataset::InMemoryDataset</label>
        <link refid="classarrow_1_1dataset_1_1_in_memory_dataset"/>
        <childnode refid="861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="865">
        <label>arrow::dataset::UnionDataset</label>
        <link refid="classarrow_1_1dataset_1_1_union_dataset"/>
        <childnode refid="861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="863">
        <label>arrow::dataset::FileSystemDataset</label>
        <link refid="classarrow_1_1dataset_1_1_file_system_dataset"/>
        <childnode refid="861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="862">
        <label>std::enable_shared_from_this&lt; Dataset &gt;</label>
      </node>
      <node id="861">
        <label>arrow::dataset::Dataset</label>
        <link refid="classarrow_1_1dataset_1_1_dataset"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="867">
        <label>std::enable_shared_from_this&lt; Dataset &gt;</label>
      </node>
      <node id="866">
        <label>arrow::dataset::Dataset</label>
        <link refid="classarrow_1_1dataset_1_1_dataset"/>
        <childnode refid="867" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/dataset.h" line="105" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset.h" bodystart="105" bodyend="151"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a74a03971d4c9307eaec662912257b9cc" prot="protected" virt="virtual"><scope>arrow::dataset::Dataset</scope><name>AssumePartitionExpression</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1acd88a02acb6fafb3f934a1117e9c41f8" prot="protected" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a32363cc3b882a036397978326b60935c" prot="protected" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a2f143543604cca7dde7c20a530fbb837" prot="protected" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a783f0d7ccb031e52adb3f67da8b50c15" prot="public" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>GetFragments</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ade66d78b1ee802143d6951b99783aab5" prot="protected" virt="pure-virtual"><scope>arrow::dataset::Dataset</scope><name>GetFragmentsImpl</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a98691e35d913df562e0e34cb60e736bc" prot="public" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>NewScan</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a1a7cbac64269923faa404d9f50885b61" prot="public" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>NewScan</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1aa7449d6622e0098c916528be75506236" prot="public" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>partition_expression</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ad1698721117105739a03725129c32a55" prot="protected" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>partition_expression_</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1aa615b8333c7ac0e5553adbc9877cb44a" prot="public" virt="pure-virtual"><scope>arrow::dataset::Dataset</scope><name>ReplaceSchema</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ad2edfced53a0e56cf89389ee8c754702" prot="public" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a4c4752474ddf539f5d841b38f773c763" prot="protected" virt="non-virtual"><scope>arrow::dataset::Dataset</scope><name>schema_</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ac7611e16eb019f295612a9ef428fdfd2" prot="public" virt="pure-virtual"><scope>arrow::dataset::Dataset</scope><name>type_name</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a5a618381ecdfa4761d6fb3182e094c4f" prot="public" virt="virtual"><scope>arrow::dataset::Dataset</scope><name>~Dataset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
