<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="type__traits_8h" kind="file" language="C++">
    <compoundname>type_traits.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">vector</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="bit__util_8h" local="yes">arrow/util/bit_util.h</includes>
    <includedby refid="builder__base_8h" local="yes">/arrow/cpp/src/arrow/array/builder_base.h</includedby>
    <includedby refid="builder__binary_8h" local="yes">/arrow/cpp/src/arrow/array/builder_binary.h</includedby>
    <includedby refid="dict__internal_8h" local="yes">/arrow/cpp/src/arrow/array/dict_internal.h</includedby>
    <includedby refid="array_8h" local="yes">/arrow/cpp/src/arrow/array.h</includedby>
    <includedby refid="count_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/count.h</includedby>
    <includedby refid="mean_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/mean.h</includedby>
    <includedby refid="sum__internal_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</includedby>
    <includedby refid="take__internal_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/take_internal.h</includedby>
    <includedby refid="arrow_2pch_8h" local="yes">/arrow/cpp/src/arrow/pch.h</includedby>
    <includedby refid="scalar_8h" local="yes">/arrow/cpp/src/arrow/scalar.h</includedby>
    <includedby refid="stl_8h" local="yes">/arrow/cpp/src/arrow/stl.h</includedby>
    <includedby refid="tensor_8h" local="yes">/arrow/cpp/src/arrow/tensor.h</includedby>
    <includedby refid="formatting_8h" local="yes">/arrow/cpp/src/arrow/util/formatting.h</includedby>
    <includedby refid="hashing_8h" local="yes">/arrow/cpp/src/arrow/util/hashing.h</includedby>
    <includedby refid="parsing_8h" local="yes">/arrow/cpp/src/arrow/util/parsing.h</includedby>
    <incdepgraph>
      <node id="10116">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
      </node>
      <node id="10111">
        <label>limits</label>
      </node>
      <node id="10101">
        <label>cstdint</label>
      </node>
      <node id="10113">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10110" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10114" relation="include">
        </childnode>
        <childnode refid="10115" relation="include">
        </childnode>
        <childnode refid="10117" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10121" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10104">
        <label>endian.h</label>
      </node>
      <node id="10117">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="10110" relation="include">
        </childnode>
        <childnode refid="10118" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10116" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10119" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10125">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="10126" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
      </node>
      <node id="10099">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10109">
        <label>cmath</label>
      </node>
      <node id="10108">
        <label>cassert</label>
      </node>
      <node id="10096">
        <label>string</label>
      </node>
      <node id="10122">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="10120">
        <label>ostream</label>
      </node>
      <node id="10102">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="10114">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10115" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10116" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10103">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="10104" relation="include">
        </childnode>
        <childnode refid="10105" relation="include">
        </childnode>
        <childnode refid="10106" relation="include">
        </childnode>
        <childnode refid="10107" relation="include">
        </childnode>
        <childnode refid="10108" relation="include">
        </childnode>
        <childnode refid="10109" relation="include">
        </childnode>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10110" relation="include">
        </childnode>
        <childnode refid="10111" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10113" relation="include">
        </childnode>
        <childnode refid="10123" relation="include">
        </childnode>
        <childnode refid="10116" relation="include">
        </childnode>
        <childnode refid="10125" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10119" relation="include">
        </childnode>
        <childnode refid="10121" relation="include">
        </childnode>
        <childnode refid="10127" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10107">
        <label>bitset</label>
      </node>
      <node id="10126">
        <label>tuple</label>
      </node>
      <node id="10098">
        <label>vector</label>
      </node>
      <node id="10124">
        <label>new</label>
      </node>
      <node id="10112">
        <label>utility</label>
      </node>
      <node id="10121">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10122" relation="include">
        </childnode>
      </node>
      <node id="10106">
        <label>array</label>
      </node>
      <node id="10094">
        <label>/arrow/cpp/src/arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10103" relation="include">
        </childnode>
      </node>
      <node id="10115">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="10118">
        <label>iosfwd</label>
      </node>
      <node id="10123">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="10124" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10117" relation="include">
        </childnode>
        <childnode refid="10116" relation="include">
        </childnode>
      </node>
      <node id="10097">
        <label>type_traits</label>
      </node>
      <node id="10105">
        <label>algorithm</label>
      </node>
      <node id="10110">
        <label>cstring</label>
      </node>
      <node id="10119">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10120" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
      </node>
      <node id="10095">
        <label>memory</label>
      </node>
      <node id="10100">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="10101" relation="include">
        </childnode>
      </node>
      <node id="10127">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="10097" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10133">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="10180">
        <label>/arrow/cpp/src/gandiva/exported_funcs_registry.h</label>
        <link refid="exported__funcs__registry_8h"/>
        <childnode refid="10181" relation="include">
        </childnode>
      </node>
      <node id="10214">
        <label>/arrow/cpp/src/arrow/compute/kernels/filter.h</label>
        <link refid="arrow_2compute_2kernels_2filter_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10179">
        <label>/arrow/cpp/src/gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="10180" relation="include">
        </childnode>
        <childnode refid="10182" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
      </node>
      <node id="10219">
        <label>/arrow/cpp/src/arrow/compute/kernels/sort_to_indices.h</label>
        <link refid="sort__to__indices_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10203">
        <label>/arrow/cpp/src/arrow/compute/kernels/aggregate.h</label>
        <link refid="aggregate_8h"/>
        <childnode refid="10204" relation="include">
        </childnode>
      </node>
      <node id="10184">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="10162">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="10235">
        <label>/arrow/cpp/src/arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="10236" relation="include">
        </childnode>
        <childnode refid="10237" relation="include">
        </childnode>
        <childnode refid="10239" relation="include">
        </childnode>
        <childnode refid="10246" relation="include">
        </childnode>
        <childnode refid="10248" relation="include">
        </childnode>
      </node>
      <node id="10192">
        <label>/arrow/cpp/src/arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10241">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="10236">
        <label>/arrow/cpp/src/arrow/ipc/metadata_internal.h</label>
        <link refid="metadata__internal_8h"/>
      </node>
      <node id="10204">
        <label>/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</label>
        <link refid="sum__internal_8h"/>
      </node>
      <node id="10195">
        <label>/arrow/cpp/src/arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="10132" relation="include">
        </childnode>
        <childnode refid="10196" relation="include">
        </childnode>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10143">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="10220">
        <label>/arrow/cpp/src/arrow/compute/kernels/take.h</label>
        <link refid="take_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10182">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="10183" relation="include">
        </childnode>
      </node>
      <node id="10170">
        <label>/arrow/cpp/src/gandiva/function_registry_arithmetic.h</label>
        <link refid="function__registry__arithmetic_8h"/>
      </node>
      <node id="10142">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="10143" relation="include">
        </childnode>
      </node>
      <node id="10208">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="10209" relation="include">
        </childnode>
        <childnode refid="10210" relation="include">
        </childnode>
      </node>
      <node id="10191">
        <label>/arrow/cpp/src/gandiva/execution_context.h</label>
        <link refid="execution__context_8h"/>
        <childnode refid="10150" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
      </node>
      <node id="10244">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
      </node>
      <node id="10228">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="10135">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="10196">
        <label>/arrow/cpp/src/arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10249">
        <label>/arrow/cpp/src/arrow/util/formatting.h</label>
        <link refid="formatting_8h"/>
      </node>
      <node id="10149">
        <label>/arrow/cpp/src/gandiva/decimal_type_util.h</label>
        <link refid="decimal__type__util_8h"/>
      </node>
      <node id="10223">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="10166">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="10167" relation="include">
        </childnode>
      </node>
      <node id="10160">
        <label>/arrow/cpp/src/gandiva/func_descriptor.h</label>
        <link refid="func__descriptor_8h"/>
        <childnode refid="10159" relation="include">
        </childnode>
        <childnode refid="10161" relation="include">
        </childnode>
      </node>
      <node id="10146">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="10212">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="10207" relation="include">
        </childnode>
      </node>
      <node id="10242">
        <label>/arrow/cpp/src/arrow/python/inference.h</label>
        <link refid="inference_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
      </node>
      <node id="10174">
        <label>/arrow/cpp/src/gandiva/function_registry_string.h</label>
        <link refid="function__registry__string_8h"/>
      </node>
      <node id="10224">
        <label>/arrow/cpp/src/arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="10133" relation="include">
        </childnode>
        <childnode refid="10136" relation="include">
        </childnode>
      </node>
      <node id="10156">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="10231">
        <label>/arrow/cpp/src/arrow/compute/kernels/mean.h</label>
        <link refid="mean_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10188">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="10143" relation="include">
        </childnode>
      </node>
      <node id="10202">
        <label>/arrow/cpp/src/arrow/compute/kernels/add.h</label>
        <link refid="add_8h"/>
      </node>
      <node id="10165">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="10162" relation="include">
        </childnode>
      </node>
      <node id="10237">
        <label>/arrow/cpp/src/arrow/python/numpy_convert.h</label>
        <link refid="numpy__convert_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
      </node>
      <node id="10226">
        <label>/arrow/cpp/src/arrow/pch.h</label>
        <link refid="arrow_2pch_8h"/>
        <childnode refid="10227" relation="include">
        </childnode>
        <childnode refid="10228" relation="include">
        </childnode>
        <childnode refid="10229" relation="include">
        </childnode>
        <childnode refid="10184" relation="include">
        </childnode>
      </node>
      <node id="10194">
        <label>/arrow/cpp/src/arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10222">
        <label>/arrow/cpp/src/arrow/extension_type.h</label>
        <link refid="extension__type_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
        <childnode refid="10223" relation="include">
        </childnode>
        <childnode refid="10224" relation="include">
        </childnode>
      </node>
      <node id="10246">
        <label>/arrow/cpp/src/arrow/python/serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
        <childnode refid="10247" relation="include">
        </childnode>
      </node>
      <node id="10155">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="10156" relation="include">
        </childnode>
      </node>
      <node id="10217">
        <label>/arrow/cpp/src/arrow/compute/kernels/match.h</label>
        <link refid="match_8h"/>
      </node>
      <node id="10239">
        <label>/arrow/cpp/src/arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="10240" relation="include">
        </childnode>
      </node>
      <node id="10140">
        <label>/arrow/cpp/src/arrow/util/hashing.h</label>
        <link refid="hashing_8h"/>
        <childnode refid="10133" relation="include">
        </childnode>
      </node>
      <node id="10229">
        <label>/arrow/cpp/src/arrow/python/pch.h</label>
        <link refid="arrow_2python_2pch_8h"/>
      </node>
      <node id="10134">
        <label>/arrow/cpp/src/arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
        <childnode refid="10136" relation="include">
        </childnode>
        <childnode refid="10137" relation="include">
        </childnode>
        <childnode refid="10138" relation="include">
        </childnode>
        <childnode refid="10139" relation="include">
        </childnode>
        <childnode refid="10140" relation="include">
        </childnode>
        <childnode refid="10141" relation="include">
        </childnode>
      </node>
      <node id="10250">
        <label>/arrow/cpp/src/arrow/util/parsing.h</label>
        <link refid="parsing_8h"/>
      </node>
      <node id="10238">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="10178">
        <label>/arrow/cpp/src/gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="10179" relation="include">
        </childnode>
        <childnode refid="10153" relation="include">
        </childnode>
        <childnode refid="10182" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10184" relation="include">
        </childnode>
      </node>
      <node id="10164">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="10162" relation="include">
        </childnode>
      </node>
      <node id="10218">
        <label>/arrow/cpp/src/arrow/compute/kernels/nth_to_indices.h</label>
        <link refid="nth__to__indices_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10210">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="10207" relation="include">
        </childnode>
        <childnode refid="10211" relation="include">
        </childnode>
        <childnode refid="10212" relation="include">
        </childnode>
      </node>
      <node id="10169">
        <label>/arrow/cpp/src/gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="10159" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
        <childnode refid="10170" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10171" relation="include">
        </childnode>
        <childnode refid="10172" relation="include">
        </childnode>
        <childnode refid="10173" relation="include">
        </childnode>
        <childnode refid="10174" relation="include">
        </childnode>
        <childnode refid="10175" relation="include">
        </childnode>
      </node>
      <node id="10189">
        <label>/arrow/cpp/src/gandiva/selection_vector_impl.h</label>
        <link refid="selection__vector__impl_8h"/>
      </node>
      <node id="10177">
        <label>/arrow/cpp/src/gandiva/jni/module_holder.h</label>
        <link refid="module__holder_8h"/>
      </node>
      <node id="10209">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="10207" relation="include">
        </childnode>
      </node>
      <node id="10132">
        <label>/arrow/cpp/src/arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="10133" relation="include">
        </childnode>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10190">
        <label>/arrow/cpp/src/gandiva/simple_arena.h</label>
        <link refid="simple__arena_8h"/>
        <childnode refid="10191" relation="include">
        </childnode>
      </node>
      <node id="10157">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="10167">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="10153" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
      </node>
      <node id="10216">
        <label>/arrow/cpp/src/arrow/compute/kernels/isin.h</label>
        <link refid="isin_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10141">
        <label>/arrow/cpp/src/gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="10142" relation="include">
        </childnode>
        <childnode refid="10144" relation="include">
        </childnode>
        <childnode refid="10148" relation="include">
        </childnode>
        <childnode refid="10149" relation="include">
        </childnode>
        <childnode refid="10150" relation="include">
        </childnode>
        <childnode refid="10152" relation="include">
        </childnode>
        <childnode refid="10153" relation="include">
        </childnode>
        <childnode refid="10154" relation="include">
        </childnode>
        <childnode refid="10157" relation="include">
        </childnode>
        <childnode refid="10158" relation="include">
        </childnode>
        <childnode refid="10145" relation="include">
        </childnode>
        <childnode refid="10146" relation="include">
        </childnode>
        <childnode refid="10160" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10176" relation="include">
        </childnode>
        <childnode refid="10177" relation="include">
        </childnode>
        <childnode refid="10178" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10161" relation="include">
        </childnode>
        <childnode refid="10155" relation="include">
        </childnode>
        <childnode refid="10156" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10187" relation="include">
        </childnode>
        <childnode refid="10189" relation="include">
        </childnode>
        <childnode refid="10190" relation="include">
        </childnode>
      </node>
      <node id="10148">
        <label>/arrow/cpp/src/gandiva/date_utils.h</label>
        <link refid="date__utils_8h"/>
      </node>
      <node id="10159">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="10151" relation="include">
        </childnode>
      </node>
      <node id="10131">
        <label>/arrow/cpp/src/arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="10132" relation="include">
        </childnode>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10147">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="10201">
        <label>/arrow/cpp/src/arrow/compute/api.h</label>
        <link refid="compute_2api_8h"/>
        <childnode refid="10138" relation="include">
        </childnode>
      </node>
      <node id="10183">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="10161">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="10152" relation="include">
        </childnode>
        <childnode refid="10153" relation="include">
        </childnode>
        <childnode refid="10162" relation="include">
        </childnode>
        <childnode refid="10163" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
      </node>
      <node id="10234">
        <label>/arrow/cpp/src/arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
        <childnode refid="10235" relation="include">
        </childnode>
      </node>
      <node id="10158">
        <label>/arrow/cpp/src/gandiva/field_descriptor.h</label>
        <link refid="field__descriptor_8h"/>
        <childnode refid="10159" relation="include">
        </childnode>
      </node>
      <node id="10129">
        <label>/arrow/cpp/src/arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="10130" relation="include">
        </childnode>
        <childnode refid="10131" relation="include">
        </childnode>
        <childnode refid="10192" relation="include">
        </childnode>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10132" relation="include">
        </childnode>
        <childnode refid="10194" relation="include">
        </childnode>
        <childnode refid="10195" relation="include">
        </childnode>
        <childnode refid="10196" relation="include">
        </childnode>
        <childnode refid="10197" relation="include">
        </childnode>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10130">
        <label>/arrow/cpp/src/arrow/adapters/orc/adapter_util.h</label>
        <link refid="adapter__util_8h"/>
      </node>
      <node id="10199">
        <label>/arrow/cpp/src/arrow/array/concatenate.h</label>
        <link refid="concatenate_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
      </node>
      <node id="10193">
        <label>/arrow/cpp/src/arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
      <node id="10243">
        <label>/arrow/cpp/src/arrow/python/io.h</label>
        <link refid="arrow_2python_2io_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
      </node>
      <node id="10139">
        <label>/arrow/cpp/src/arrow/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
      </node>
      <node id="10172">
        <label>/arrow/cpp/src/gandiva/function_registry_hash.h</label>
        <link refid="function__registry__hash_8h"/>
      </node>
      <node id="10173">
        <label>/arrow/cpp/src/gandiva/function_registry_math_ops.h</label>
        <link refid="function__registry__math__ops_8h"/>
      </node>
      <node id="10151">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="10233">
        <label>/arrow/cpp/src/arrow/dataset/dataset_internal.h</label>
        <link refid="dataset__internal_8h"/>
        <childnode refid="10213" relation="include">
        </childnode>
      </node>
      <node id="10247">
        <label>/arrow/cpp/src/arrow/python/deserialize.h</label>
        <link refid="deserialize_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
      </node>
      <node id="10128">
        <label>/arrow/cpp/src/arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="10129" relation="include">
        </childnode>
        <childnode refid="10192" relation="include">
        </childnode>
        <childnode refid="10133" relation="include">
        </childnode>
        <childnode refid="10198" relation="include">
        </childnode>
        <childnode refid="10230" relation="include">
        </childnode>
        <childnode refid="10231" relation="include">
        </childnode>
        <childnode refid="10204" relation="include">
        </childnode>
        <childnode refid="10136" relation="include">
        </childnode>
        <childnode refid="10226" relation="include">
        </childnode>
        <childnode refid="10232" relation="include">
        </childnode>
        <childnode refid="10138" relation="include">
        </childnode>
        <childnode refid="10234" relation="include">
        </childnode>
        <childnode refid="10249" relation="include">
        </childnode>
        <childnode refid="10140" relation="include">
        </childnode>
        <childnode refid="10250" relation="include">
        </childnode>
      </node>
      <node id="10213">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="10200">
        <label>/arrow/cpp/src/arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
        <childnode refid="10202" relation="include">
        </childnode>
        <childnode refid="10203" relation="include">
        </childnode>
        <childnode refid="10205" relation="include">
        </childnode>
        <childnode refid="10214" relation="include">
        </childnode>
        <childnode refid="10215" relation="include">
        </childnode>
        <childnode refid="10216" relation="include">
        </childnode>
        <childnode refid="10217" relation="include">
        </childnode>
        <childnode refid="10218" relation="include">
        </childnode>
        <childnode refid="10219" relation="include">
        </childnode>
        <childnode refid="10204" relation="include">
        </childnode>
        <childnode refid="10220" relation="include">
        </childnode>
        <childnode refid="10221" relation="include">
        </childnode>
        <childnode refid="10206" relation="include">
        </childnode>
      </node>
      <node id="10154">
        <label>/arrow/cpp/src/gandiva/expression.h</label>
        <link refid="gandiva_2expression_8h"/>
        <childnode refid="10144" relation="include">
        </childnode>
        <childnode refid="10152" relation="include">
        </childnode>
        <childnode refid="10153" relation="include">
        </childnode>
        <childnode refid="10155" relation="include">
        </childnode>
        <childnode refid="10147" relation="include">
        </childnode>
      </node>
      <node id="10211">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="10207" relation="include">
        </childnode>
      </node>
      <node id="10221">
        <label>/arrow/cpp/src/arrow/compute/kernels/util_internal.h</label>
        <link refid="compute_2kernels_2util__internal_8h"/>
      </node>
      <node id="10205">
        <label>/arrow/cpp/src/arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
        <childnode refid="10206" relation="include">
        </childnode>
      </node>
      <node id="10136">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="10171">
        <label>/arrow/cpp/src/gandiva/function_registry_datetime.h</label>
        <link refid="function__registry__datetime_8h"/>
      </node>
      <node id="10206">
        <label>/arrow/cpp/src/arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="10207" relation="include">
        </childnode>
        <childnode refid="10208" relation="include">
        </childnode>
        <childnode refid="10213" relation="include">
        </childnode>
      </node>
      <node id="10144">
        <label>/arrow/cpp/src/gandiva/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="10145" relation="include">
        </childnode>
        <childnode refid="10147" relation="include">
        </childnode>
      </node>
      <node id="10175">
        <label>/arrow/cpp/src/gandiva/function_registry_timestamp_arithmetic.h</label>
        <link refid="function__registry__timestamp__arithmetic_8h"/>
      </node>
      <node id="10185">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="10150" relation="include">
        </childnode>
      </node>
      <node id="10215">
        <label>/arrow/cpp/src/arrow/compute/kernels/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10198">
        <label>/arrow/cpp/src/arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="10135" relation="include">
        </childnode>
        <childnode refid="10192" relation="include">
        </childnode>
        <childnode refid="10132" relation="include">
        </childnode>
        <childnode refid="10194" relation="include">
        </childnode>
        <childnode refid="10195" relation="include">
        </childnode>
        <childnode refid="10197" relation="include">
        </childnode>
        <childnode refid="10199" relation="include">
        </childnode>
        <childnode refid="10133" relation="include">
        </childnode>
        <childnode refid="10200" relation="include">
        </childnode>
        <childnode refid="10216" relation="include">
        </childnode>
        <childnode refid="10217" relation="include">
        </childnode>
        <childnode refid="10221" relation="include">
        </childnode>
        <childnode refid="10222" relation="include">
        </childnode>
        <childnode refid="10225" relation="include">
        </childnode>
        <childnode refid="10226" relation="include">
        </childnode>
        <childnode refid="10140" relation="include">
        </childnode>
        <childnode refid="10224" relation="include">
        </childnode>
        <childnode refid="10141" relation="include">
        </childnode>
      </node>
      <node id="10187">
        <label>/arrow/cpp/src/gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="10188" relation="include">
        </childnode>
        <childnode refid="10145" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10155" relation="include">
        </childnode>
        <childnode refid="10189" relation="include">
        </childnode>
      </node>
      <node id="10240">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
        <childnode refid="10223" relation="include">
        </childnode>
        <childnode refid="10241" relation="include">
        </childnode>
        <childnode refid="10242" relation="include">
        </childnode>
        <childnode refid="10243" relation="include">
        </childnode>
        <childnode refid="10244" relation="include">
        </childnode>
        <childnode refid="10245" relation="include">
        </childnode>
      </node>
      <node id="10176">
        <label>/arrow/cpp/src/gandiva/in_holder.h</label>
        <link refid="in__holder_8h"/>
        <childnode refid="10159" relation="include">
        </childnode>
      </node>
      <node id="10232">
        <label>/arrow/cpp/src/arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="10200" relation="include">
        </childnode>
        <childnode refid="10233" relation="include">
        </childnode>
        <childnode refid="10206" relation="include">
        </childnode>
        <childnode refid="10224" relation="include">
        </childnode>
      </node>
      <node id="10181">
        <label>/arrow/cpp/src/gandiva/exported_funcs.h</label>
        <link refid="exported__funcs_8h"/>
      </node>
      <node id="10145">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="10146" relation="include">
        </childnode>
      </node>
      <node id="10245">
        <label>/arrow/cpp/src/arrow/python/python_to_arrow.h</label>
        <link refid="python__to__arrow_8h"/>
        <childnode refid="10238" relation="include">
        </childnode>
      </node>
      <node id="10163">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="10162" relation="include">
        </childnode>
      </node>
      <node id="10227">
        <label>/arrow/cpp/src/arrow/dataset/pch.h</label>
        <link refid="arrow_2dataset_2pch_8h"/>
      </node>
      <node id="10168">
        <label>/arrow/cpp/src/gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="10157" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10169" relation="include">
        </childnode>
      </node>
      <node id="10230">
        <label>/arrow/cpp/src/arrow/compute/kernels/count.h</label>
        <link refid="count_8h"/>
        <childnode refid="10201" relation="include">
        </childnode>
      </node>
      <node id="10225">
        <label>/arrow/cpp/src/arrow/ipc/util.h</label>
        <link refid="ipc_2util_8h"/>
      </node>
      <node id="10150">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="10142" relation="include">
        </childnode>
        <childnode refid="10151" relation="include">
        </childnode>
      </node>
      <node id="10137">
        <label>/arrow/cpp/src/arrow/python/type_traits.h</label>
        <link refid="python_2type__traits_8h"/>
      </node>
      <node id="10152">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="10248">
        <label>/arrow/cpp/src/arrow/tensor/converter.h</label>
        <link refid="tensor_2converter_8h"/>
      </node>
      <node id="10153">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="10186">
        <label>/arrow/cpp/src/gandiva/regex_util.h</label>
        <link refid="regex__util_8h"/>
      </node>
      <node id="10138">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
      <node id="10207">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
      <node id="10197">
        <label>/arrow/cpp/src/arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="10134" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structarrow_1_1_type_traits" prot="public">arrow::TypeTraits</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits" prot="public">arrow::CTypeTraits</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_null_type_01_4" prot="public">arrow::TypeTraits&lt; NullType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4" prot="public">arrow::TypeTraits&lt; BooleanType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01bool_01_4" prot="public">arrow::CTypeTraits&lt; bool &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_date64_type_01_4" prot="public">arrow::TypeTraits&lt; Date64Type &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_date32_type_01_4" prot="public">arrow::TypeTraits&lt; Date32Type &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4" prot="public">arrow::TypeTraits&lt; TimestampType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_duration_type_01_4" prot="public">arrow::TypeTraits&lt; DurationType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4" prot="public">arrow::TypeTraits&lt; DayTimeIntervalType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4" prot="public">arrow::TypeTraits&lt; MonthIntervalType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_time32_type_01_4" prot="public">arrow::TypeTraits&lt; Time32Type &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_time64_type_01_4" prot="public">arrow::TypeTraits&lt; Time64Type &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4" prot="public">arrow::TypeTraits&lt; HalfFloatType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4" prot="public">arrow::TypeTraits&lt; Decimal128Type &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_binary_type_01_4" prot="public">arrow::TypeTraits&lt; BinaryType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4" prot="public">arrow::TypeTraits&lt; LargeBinaryType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4" prot="public">arrow::TypeTraits&lt; FixedSizeBinaryType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_string_type_01_4" prot="public">arrow::TypeTraits&lt; StringType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4" prot="public">arrow::TypeTraits&lt; LargeStringType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4" prot="public">arrow::CTypeTraits&lt; std::string &gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01const_01char_01_5_01_4" prot="public">arrow::CTypeTraits&lt; const char * &gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01const_01char_07_6_08[_n]_4" prot="public">arrow::CTypeTraits&lt; const char(&amp;)[N]&gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01_day_time_interval_type_1_1_day_milliseconds_01_4" prot="public">arrow::CTypeTraits&lt; DayTimeIntervalType::DayMilliseconds &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_list_type_01_4" prot="public">arrow::TypeTraits&lt; ListType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4" prot="public">arrow::TypeTraits&lt; LargeListType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_map_type_01_4" prot="public">arrow::TypeTraits&lt; MapType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4" prot="public">arrow::TypeTraits&lt; FixedSizeListType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4" prot="public">arrow::CTypeTraits&lt; std::vector&lt; CType &gt; &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_struct_type_01_4" prot="public">arrow::TypeTraits&lt; StructType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_union_type_01_4" prot="public">arrow::TypeTraits&lt; UnionType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_dictionary_type_01_4" prot="public">arrow::TypeTraits&lt; DictionaryType &gt;</innerclass>
    <innerclass refid="structarrow_1_1_type_traits_3_01_extension_type_01_4" prot="public">arrow::TypeTraits&lt; ExtensionType &gt;</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="type__traits_8h_1a9f82fb6df6a92ea17529b85e8c8c3de8" prot="public" static="no">
        <name>PRIMITIVE_TYPE_TRAITS_DEF_</name>
        <param><defname>CType_</defname></param>
        <param><defname>ArrowType_</defname></param>
        <param><defname>ArrowArrayType</defname></param>
        <param><defname>ArrowBuilderType</defname></param>
        <param><defname>ArrowScalarType</defname></param>
        <param><defname>ArrowTensorType</defname></param>
        <param><defname>SingletonFn</defname></param>
        <initializer>template &lt;&gt;                                                                            \
  struct TypeTraits&lt;ArrowType_&gt; {                                                        \
    using ArrayType = ArrowArrayType;                                                    \
    using BuilderType = ArrowBuilderType;                                                \
    using ScalarType = ArrowScalarType;                                                  \
    using TensorType = ArrowTensorType;                                                  \
    using CType = ArrowType_::c_type;                                                    \
    static constexpr int64_t bytes_required(int64_t elements) {                          \
      return elements * static_cast&lt;int64_t&gt;(sizeof(CType));                             \
    }                                                                                    \
    constexpr static bool is_parameter_free = true;                                      \
    static inline std::shared_ptr&lt;DataType&gt; type_singleton() { return SingletonFn(); }   \
  };                                                                                     \
                                                                                         \
  template &lt;&gt;                                                                            \
  struct CTypeTraits&lt;CType_&gt; : public TypeTraits&lt;ArrowType_&gt; {                           \
    using ArrowType = ArrowType_;                                                        \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="71" column="9" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" prot="public" static="no">
        <name>PRIMITIVE_TYPE_TRAITS_DEF</name>
        <param><defname>CType</defname></param>
        <param><defname>ArrowShort</defname></param>
        <param><defname>SingletonFn</defname></param>
        <initializer><ref refid="type__traits_8h_1a9f82fb6df6a92ea17529b85e8c8c3de8" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF_</ref>(                                                 \
      CType, <ref refid="macros_8h_1ae1f7d6215bc5c968ab6fec3a6eb48230" kindref="member">ARROW_CONCAT</ref>(ArrowShort, Type), <ref refid="macros_8h_1ae1f7d6215bc5c968ab6fec3a6eb48230" kindref="member">ARROW_CONCAT</ref>(ArrowShort, Array), \
      <ref refid="macros_8h_1ae1f7d6215bc5c968ab6fec3a6eb48230" kindref="member">ARROW_CONCAT</ref>(ArrowShort, Builder), <ref refid="macros_8h_1ae1f7d6215bc5c968ab6fec3a6eb48230" kindref="member">ARROW_CONCAT</ref>(ArrowShort, Scalar),    \
      <ref refid="macros_8h_1ae1f7d6215bc5c968ab6fec3a6eb48230" kindref="member">ARROW_CONCAT</ref>(ArrowShort, Tensor), SingletonFn)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="91" column="9" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bit__util_8h" kindref="compound">arrow/util/bit_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Per-type<sp/>type<sp/>traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="structarrow_1_1_type_traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref><sp/>{};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="38" refid="structarrow_1_1_c_type_traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref><sp/>{};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="41" refid="structarrow_1_1_type_traits_3_01_null_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="42" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1aaec340f6ecbf2d2f2d50a93c19054ec2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_null_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_null_array" kindref="compound">NullArray</ref>;</highlight></codeline>
<codeline lineno="43" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1aa2f594e924a4fdc0ac7694423cb67d35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_null_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_null_builder" kindref="compound">NullBuilder</ref>;</highlight></codeline>
<codeline lineno="44" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1a5f86a4b4fb4f8a4d346b46a10e968633" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_null_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_null_scalar" kindref="compound">NullScalar</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1aadf62b89033198e6e0a2a7a5532b9030" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1aadf62b89033198e6e0a2a7a5532b9030" kindref="member">bytes_required</ref>(int64_t)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="47" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1a0dfce1a53db196e1b4d2f99491bcac01" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48" refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1a790c64db1c01c2c95d145ed59afbedd2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_null_type_01_4_1a790c64db1c01c2c95d145ed59afbedd2" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>();<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="52" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_boolean_type" kindref="compound">BooleanType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="53" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a1b3072687c60e6de2d0e988eeba7f162" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_boolean_array" kindref="compound">BooleanArray</ref>;</highlight></codeline>
<codeline lineno="54" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a12afd9e09e99f217324b71bdf3784a60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">BooleanBuilder</ref>;</highlight></codeline>
<codeline lineno="55" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a23670e5e59f35530c758fdf0d9607c12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_boolean_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_boolean_scalar" kindref="compound">BooleanScalar</ref>;</highlight></codeline>
<codeline lineno="56" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1ac8fd29904238fb54b6fe8c3f5be9c97c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1ac8fd29904238fb54b6fe8c3f5be9c97c" kindref="member">CType</ref><sp/>=<sp/>bool;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1ae5c3fc2fa21764f394fe12e4660f477a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1ae5c3fc2fa21764f394fe12e4660f477a" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BitUtil::BytesForBits(elements);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a17774c6bedc225eb51ecaa91c1ffb3b9" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62" refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a7c3e7919595a91f907cfec47601edf21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_boolean_type_01_4_1a7c3e7919595a91f907cfec47601edf21" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga1e585e8f1c25a9751ac9381a274df057" kindref="member">boolean</ref>();<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="66" refid="structarrow_1_1_c_type_traits_3_01bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;bool&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;BooleanType&gt;<sp/>{</highlight></codeline>
<codeline lineno="67" refid="structarrow_1_1_c_type_traits_3_01bool_01_4_1a4be4f8e20cf899c6e9fe2d979be262f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a60f6c016c8d8b612f78974bc516006b0" kindref="member">BooleanType</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="type__traits_8h_1a9f82fb6df6a92ea17529b85e8c8c3de8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRIMITIVE_TYPE_TRAITS_DEF_(CType_,<sp/>ArrowType_,<sp/>ArrowArrayType,<sp/>ArrowBuilderType,<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrowScalarType,<sp/>ArrowTensorType,<sp/>SingletonFn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>struct<sp/>TypeTraits&lt;ArrowType_&gt;<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>ArrayType<sp/>=<sp/>ArrowArrayType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>BuilderType<sp/>=<sp/>ArrowBuilderType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>ScalarType<sp/>=<sp/>ArrowScalarType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>TensorType<sp/>=<sp/>ArrowTensorType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>CType<sp/>=<sp/>ArrowType_::c_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>int64_t<sp/>bytes_required(int64_t<sp/>elements)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>elements<sp/>*<sp/>static_cast&lt;int64_t&gt;(sizeof(CType));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>constexpr<sp/>static<sp/>bool<sp/>is_parameter_free<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>std::shared_ptr&lt;DataType&gt;<sp/>type_singleton()<sp/>{<sp/>return<sp/>SingletonFn();<sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/>struct<sp/>CTypeTraits&lt;CType_&gt;<sp/>:<sp/>public<sp/>TypeTraits&lt;ArrowType_&gt;<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>ArrowType<sp/>=<sp/>ArrowType_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRIMITIVE_TYPE_TRAITS_DEF(CType,<sp/>ArrowShort,<sp/>SingletonFn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/>PRIMITIVE_TYPE_TRAITS_DEF_(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CType,<sp/>ARROW_CONCAT(ArrowShort,<sp/>Type),<sp/>ARROW_CONCAT(ArrowShort,<sp/>Array),<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ARROW_CONCAT(ArrowShort,<sp/>Builder),<sp/>ARROW_CONCAT(ArrowShort,<sp/>Scalar),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ARROW_CONCAT(ArrowShort,<sp/>Tensor),<sp/>SingletonFn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(uint8_t,<sp/>UInt8,<sp/><ref refid="group__type-factories_1ga4891a423be213550cc24e8ebe830673f" kindref="member">uint8</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(int8_t,<sp/>Int8,<sp/><ref refid="group__type-factories_1ga9c09bf26bc03f0fb0c84a0277215dd67" kindref="member">int8</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(uint16_t,<sp/>UInt16,<sp/><ref refid="group__type-factories_1ga9f1e44bc2ab9b465b6e7b601eb48f0a0" kindref="member">uint16</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(int16_t,<sp/>Int16,<sp/><ref refid="group__type-factories_1ga034c5c703e15039fe76af412d349734d" kindref="member">int16</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(uint32_t,<sp/>UInt32,<sp/><ref refid="group__type-factories_1gae80e510cfb2931ac18c73cba0be6d894" kindref="member">uint32</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(int32_t,<sp/>Int32,<sp/><ref refid="group__type-factories_1ga86f6bfe394347f77befa2143297ad541" kindref="member">int32</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(uint64_t,<sp/>UInt64,<sp/><ref refid="group__type-factories_1gae548d03275f4afaa97a269774ce6930c" kindref="member">uint64</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(int64_t,<sp/>Int64,<sp/><ref refid="group__type-factories_1ga733b16be653069b8d926529662e34e79" kindref="member">int64</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>Float,<sp/><ref refid="group__type-factories_1ga48fca9d26feda61c8255ec3c44a2078c" kindref="member">float32</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="type__traits_8h_1aa38deeae5c0c9c114ab4c8016e0714cb" kindref="member">PRIMITIVE_TYPE_TRAITS_DEF</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>Double,<sp/><ref refid="group__type-factories_1gab6f514320a9b037ab161fa97db73b970" kindref="member">float64</ref>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>PRIMITIVE_TYPE_TRAITS_DEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>PRIMITIVE_TYPE_TRAITS_DEF_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="112" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_date64_type" kindref="compound">Date64Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="113" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a6e0a681ba33b38672262f0d78af5cbc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1aa9a45b66d455778ec8168f937379f22e" kindref="member">Date64Array</ref>;</highlight></codeline>
<codeline lineno="114" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a41d3832c01c62e420d52f176f8f9c04e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1afd7b5640cf95de8799d75b12f901b62a" kindref="member">Date64Builder</ref>;</highlight></codeline>
<codeline lineno="115" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a40f47120014fd68f9b78daf8fa9da542" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_date64_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_date64_scalar" kindref="compound">Date64Scalar</ref>;</highlight></codeline>
<codeline lineno="116" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a2dd5f8f41449175e9ed7d38c42b319bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a2dd5f8f41449175e9ed7d38c42b319bf" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_date64_type_1a33d68b10322a1f00f578acb13a286ff3" kindref="member">Date64Type::c_type</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1ab7a5d6d8f6ee64b94df17700da7598d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1ab7a5d6d8f6ee64b94df17700da7598d4" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a8802b5ec4d7a34d7b118d552ee082b04" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122" refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a66c5ac49feb210668598caa422443b75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_date64_type_01_4_1a66c5ac49feb210668598caa422443b75" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga540dd093466c265aa411a65f29e950b2" kindref="member">date64</ref>();<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="126" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_date32_type" kindref="compound">Date32Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="127" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1af9c681fb66ea215c01e31ba1c5710c0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a3ea89658181e81c18b237da93d8294f7" kindref="member">Date32Array</ref>;</highlight></codeline>
<codeline lineno="128" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a4c46fdf8a0eb51fce6c54346f94556a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1aa210dc2cd0cab7513343548d42c00000" kindref="member">Date32Builder</ref>;</highlight></codeline>
<codeline lineno="129" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1ae3673885961b13a76990409d80a28a04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_date32_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_date32_scalar" kindref="compound">Date32Scalar</ref>;</highlight></codeline>
<codeline lineno="130" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a32a6dcdb03837cf649df90f99d8b6246" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a32a6dcdb03837cf649df90f99d8b6246" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_date32_type_1a2ef2cdd790a7475ca6064938d75f40c9" kindref="member">Date32Type::c_type</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a070a389818df1dc5abf9bc13b4c84617" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a070a389818df1dc5abf9bc13b4c84617" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a3143c0f80a8a8d0793a1d4b232814d28" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136" refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a7c354c902de63706d0077bc48de930db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_date32_type_01_4_1a7c354c902de63706d0077bc48de930db" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gac15fddc26c629cd5a2cb67f432739e8e" kindref="member">date32</ref>();<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="140" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_timestamp_type" kindref="compound">TimestampType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="141" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1af076c07a959948b741cd9d0079592240" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a8da84bd82ad0d204965fe95d134a6c08" kindref="member">TimestampArray</ref>;</highlight></codeline>
<codeline lineno="142" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a3d1153546aa696fc0dca6ef94d4917c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a7c24ba298ea48738e160ebcf6133aa2f" kindref="member">TimestampBuilder</ref>;</highlight></codeline>
<codeline lineno="143" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a4876f127d3bb87ae938a7f2311e167b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_timestamp_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_timestamp_scalar" kindref="compound">TimestampScalar</ref>;</highlight></codeline>
<codeline lineno="144" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a021de623dfefba853e33f21d7cd77e31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a021de623dfefba853e33f21d7cd77e31" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_timestamp_type_1a67004dae37b0f04b1038e752c95b82df" kindref="member">TimestampType::c_type</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a9644e337f9de54860392c775d4ce95a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a9644e337f9de54860392c775d4ce95a0" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149" refid="structarrow_1_1_type_traits_3_01_timestamp_type_01_4_1a220c0e9076d0f949ab73941d0691f113" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="153" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_duration_type" kindref="compound">DurationType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="154" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a64e90d08c826560889e63a0b147a9e8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a44cfa546dbecd78fdb541518d7867fe0" kindref="member">DurationArray</ref>;</highlight></codeline>
<codeline lineno="155" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1ac71ecb12401e6fc2bf9aee854a0affba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1aefd4592209b60fc1aa1d6fc1f2d0f7bf" kindref="member">DurationBuilder</ref>;</highlight></codeline>
<codeline lineno="156" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1ae412fadbcaf81777d994fffeb94facb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_duration_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_duration_scalar" kindref="compound">DurationScalar</ref>;</highlight></codeline>
<codeline lineno="157" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a3921553bda9564a107e6636e56c63092" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a3921553bda9564a107e6636e56c63092" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_duration_type_1ac8269f98c489a6b7dd68a50f44f89840" kindref="member">DurationType::c_type</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a91e924dd1feaad0652f72167ed27ddbf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a91e924dd1feaad0652f72167ed27ddbf" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162" refid="structarrow_1_1_type_traits_3_01_duration_type_01_4_1a6faca5d8ea357c62d731cb701b256257" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="166" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_day_time_interval_type" kindref="compound">DayTimeIntervalType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="167" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1aac28ac464d1c6985a83e4865cc1593cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_day_time_interval_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_day_time_interval_array" kindref="compound">DayTimeIntervalArray</ref>;</highlight></codeline>
<codeline lineno="168" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1ace3779308b83d22f2be52a10d27952fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_day_time_interval_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_day_time_interval_builder" kindref="compound">DayTimeIntervalBuilder</ref>;</highlight></codeline>
<codeline lineno="169" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1a61cf045147f5780e2841ed7e1ad2b95b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_day_time_interval_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_day_time_interval_scalar" kindref="compound">DayTimeIntervalScalar</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1a43a78a328c5e6e3f57fb1e5a75e402e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1a43a78a328c5e6e3f57fb1e5a75e402e4" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structarrow_1_1_day_time_interval_type_1_1_day_milliseconds" kindref="compound">DayTimeIntervalType::DayMilliseconds</ref>));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1ac2975044446d6b4f61c7815e26986f18" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175" refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1a73ed8aef2131c1459729fd6a9e650c41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_day_time_interval_type_01_4_1a73ed8aef2131c1459729fd6a9e650c41" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga81643b6c32e9c11375084c074567cba0" kindref="member">day_time_interval</ref>();<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="179" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_month_interval_type" kindref="compound">MonthIntervalType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="180" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1a7ce9e773d12fcd1bf562c57a639b6a41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a182e773860b508e71ad82e8aa2b9556c" kindref="member">MonthIntervalArray</ref>;</highlight></codeline>
<codeline lineno="181" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1a81ed9fd430a30dcafbb8790e93c183db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a8f513441e20a820ba699fb943d527e03" kindref="member">MonthIntervalBuilder</ref>;</highlight></codeline>
<codeline lineno="182" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ad1473df610fa9f294c251128213b8fc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_month_interval_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_month_interval_scalar" kindref="compound">MonthIntervalScalar</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ac4004555a10d2c44daa2ca5b71d0af6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ac4004555a10d2c44daa2ca5b71d0af6d" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ae5256052b7237c3c9b891ca565c609af" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188" refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ae901e60a396a9eaef1c8ecaa7c83756f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_month_interval_type_01_4_1ae901e60a396a9eaef1c8ecaa7c83756f" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gaf3c6cebcb8e66ada1ea7bbfe5d4c8978" kindref="member">month_interval</ref>();<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="192" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_time32_type" kindref="compound">Time32Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="193" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a6b4341c4f9e968f067f818672b9d9a3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a97345da72ba3bedb03d2b93e8c039b19" kindref="member">Time32Array</ref>;</highlight></codeline>
<codeline lineno="194" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a6b71f37a50cad166fbe0dbfdcc2a79a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a8d407b259c6792c8b8bbb86959259721" kindref="member">Time32Builder</ref>;</highlight></codeline>
<codeline lineno="195" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1ace2ba5de0c3f76d34ea2282a67261d0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_time32_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_time32_scalar" kindref="compound">Time32Scalar</ref>;</highlight></codeline>
<codeline lineno="196" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a95f7ea84f840978c59d9379b2026a94f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a95f7ea84f840978c59d9379b2026a94f" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_time32_type_1afce9c3f8cf3d785c98a4c9f4fb6771b1" kindref="member">Time32Type::c_type</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a4c7cba4ea4a66411445194798466151d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a4c7cba4ea4a66411445194798466151d" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201" refid="structarrow_1_1_type_traits_3_01_time32_type_01_4_1a49cc39654c080d49dafe5bcf0167b443" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="205" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_time64_type" kindref="compound">Time64Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="206" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1abf93866341aa396c3febe027b3762a9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="namespacearrow_1a093e1d42b3a49745a128a04736b56fad" kindref="member">Time64Array</ref>;</highlight></codeline>
<codeline lineno="207" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a036f27d99c31d6adcde192c8fa414b7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a682d18a383e3cc604c5add634bde4980" kindref="member">Time64Builder</ref>;</highlight></codeline>
<codeline lineno="208" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a539eecbe18515864689199a540a23a21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_time64_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_time64_scalar" kindref="compound">Time64Scalar</ref>;</highlight></codeline>
<codeline lineno="209" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a75d45527ce4124da76ad503180bf7299" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a75d45527ce4124da76ad503180bf7299" kindref="member">CType</ref><sp/>=<sp/><ref refid="classarrow_1_1_time64_type_1a74e5e7ab9e8d52bd7f9dc3fe44296d2a" kindref="member">Time64Type::c_type</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a08ed4ce379e1489607d8511a86eb2d15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1a08ed4ce379e1489607d8511a86eb2d15" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214" refid="structarrow_1_1_type_traits_3_01_time64_type_01_4_1ab9bdbcc6db92e72d39a0a5d62951b1f6" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="218" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_half_float_type" kindref="compound">HalfFloatType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="219" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a6aa82b3713399525c28da1650f2d2194" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a6aa82b3713399525c28da1650f2d2194" kindref="member">ArrayType</ref><sp/>=<sp/>HalfFloatArray;</highlight></codeline>
<codeline lineno="220" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a82b026ddfccf4dcc1faae2fb7541440f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1ae87957f6c01fb918bb573f04c5188ca4" kindref="member">HalfFloatBuilder</ref>;</highlight></codeline>
<codeline lineno="221" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a38c476926b252d0ed1dc3ea380cafb86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_half_float_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_half_float_scalar" kindref="compound">HalfFloatScalar</ref>;</highlight></codeline>
<codeline lineno="222" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a21bd985838f128f009128440172c03d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a21bd985838f128f009128440172c03d3" kindref="member">TensorType</ref><sp/>=<sp/>HalfFloatTensor;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a7e8b6e636c4d75ecb02fb7b34121b06c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int64_t<sp/><ref refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a7e8b6e636c4d75ecb02fb7b34121b06c" kindref="member">bytes_required</ref>(int64_t<sp/>elements)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a01bff205036d77cdaa41565e27196f17" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228" refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a663212f2a600f37d6b2c9effe33128eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_half_float_type_01_4_1a663212f2a600f37d6b2c9effe33128eb" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga4fac9b6739876df09be8b82d70b26734" kindref="member">float16</ref>();<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="232" refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_decimal128_type" kindref="compound">Decimal128Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="233" refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4_1a4b705374851f22354abc47a9dc86e4db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_decimal128_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_decimal128_array" kindref="compound">Decimal128Array</ref>;</highlight></codeline>
<codeline lineno="234" refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4_1ad2a88b4937ec0b8bb04573e599039cce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_decimal128_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_decimal128_builder" kindref="compound">Decimal128Builder</ref>;</highlight></codeline>
<codeline lineno="235" refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4_1a8569177aa4b02c80960420a85e88cc01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_decimal128_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_decimal128_scalar" kindref="compound">Decimal128Scalar</ref>;</highlight></codeline>
<codeline lineno="236" refid="structarrow_1_1_type_traits_3_01_decimal128_type_01_4_1a7847912c9a5641e53862267de029ba58" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="240" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_binary_type" kindref="compound">BinaryType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="241" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1a0ecf64fc719b4a35862218c64c7ad1ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_binary_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_binary_array" kindref="compound">BinaryArray</ref>;</highlight></codeline>
<codeline lineno="242" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1ad662529a02103e27fef5f577c04e3453" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_binary_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_binary_builder" kindref="compound">BinaryBuilder</ref>;</highlight></codeline>
<codeline lineno="243" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1a1034512a284d23b1ca7b2a01c6b760fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_binary_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_binary_scalar" kindref="compound">BinaryScalar</ref>;</highlight></codeline>
<codeline lineno="244" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1a83e440fc035a172c641d2b82866ecea8" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245" refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1a166e353c8013015e75e0ce93b38a7df9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_binary_type_01_4_1a166e353c8013015e75e0ce93b38a7df9" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref>();<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="249" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_large_binary_type" kindref="compound">LargeBinaryType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="250" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1ab5c4c7eb2f7e00812093f4d42b3bd5a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_binary_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_binary_array" kindref="compound">LargeBinaryArray</ref>;</highlight></codeline>
<codeline lineno="251" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1af4f82058f08817fb42be1bac8338c752" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_binary_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_binary_builder" kindref="compound">LargeBinaryBuilder</ref>;</highlight></codeline>
<codeline lineno="252" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1a02c5d79723182903386e8bec7b3c60a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_large_binary_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_large_binary_scalar" kindref="compound">LargeBinaryScalar</ref>;</highlight></codeline>
<codeline lineno="253" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1a71b91ba36c0ca724f7a0b41ea6f43673" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254" refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1a82a21ea6a2c09abcc8ddd320acc486c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_large_binary_type_01_4_1a82a21ea6a2c09abcc8ddd320acc486c7" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gad41a46c979c848fee62212f2e49a8d8c" kindref="member">large_binary</ref>();<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="258" refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_fixed_size_binary_type" kindref="compound">FixedSizeBinaryType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="259" refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4_1a147e171074bae7fd5c0dec39ab9fe562" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_binary_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_binary_array" kindref="compound">FixedSizeBinaryArray</ref>;</highlight></codeline>
<codeline lineno="260" refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4_1ac453a60e8df23fd6ea8f7646b21a145f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_binary_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_binary_builder" kindref="compound">FixedSizeBinaryBuilder</ref>;</highlight></codeline>
<codeline lineno="261" refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4_1a0c54cc17d1137baf4f9e8d451e4959fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_fixed_size_binary_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_fixed_size_binary_scalar" kindref="compound">FixedSizeBinaryScalar</ref>;</highlight></codeline>
<codeline lineno="262" refid="structarrow_1_1_type_traits_3_01_fixed_size_binary_type_01_4_1abcb5be0e1ae607ad5d6663a12731ae53" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="266" refid="structarrow_1_1_type_traits_3_01_string_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_string_type" kindref="compound">StringType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="267" refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1af47730a78c0ff078ccbf0bc48dd3fd21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_string_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_string_array" kindref="compound">StringArray</ref>;</highlight></codeline>
<codeline lineno="268" refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1af59feae426da02991fa66b7f3a9afa10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_string_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1_1util_1a7ed4c56c317fc0ac75eb983185f7e2d5" kindref="member">StringBuilder</ref>;</highlight></codeline>
<codeline lineno="269" refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1ae1411b2b41569a52ac8c87de933b0b04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_string_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_string_scalar" kindref="compound">StringScalar</ref>;</highlight></codeline>
<codeline lineno="270" refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1aa6ca9bdb541994ee37d7aba62bdc8fb6" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271" refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1acf544e734357d7d7be20ad1ec5a3fd77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_string_type_01_4_1acf544e734357d7d7be20ad1ec5a3fd77" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga63178820a26f6ecb894ad35963ca981a" kindref="member">utf8</ref>();<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="275" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_large_string_type" kindref="compound">LargeStringType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="276" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1a2cc656ce70fa5fbba723d93fe8d59abe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_string_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_string_array" kindref="compound">LargeStringArray</ref>;</highlight></codeline>
<codeline lineno="277" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1abae9eaf96a6e79af44c09be01bb4edd4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_string_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_string_builder" kindref="compound">LargeStringBuilder</ref>;</highlight></codeline>
<codeline lineno="278" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1a55c152b3f0396f012788ecdcb8f76640" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_large_string_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_large_string_scalar" kindref="compound">LargeStringScalar</ref>;</highlight></codeline>
<codeline lineno="279" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1a5577b65140ceec0a258657b9f0872fc9" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280" refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1ae8e8267a03a8d955fed530b9151a3fd9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_type_traits_3_01_large_string_type_01_4_1ae8e8267a03a8d955fed530b9151a3fd9" kindref="member">type_singleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gacc42ef32dc897b3bee1dea124cefab86" kindref="member">large_utf8</ref>();<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="284" refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::string&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;StringType&gt;<sp/>{</highlight></codeline>
<codeline lineno="285" refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4_1a771bfebd136e074600dc649c4b486ee3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_string_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="classarrow_1_1_string_type" kindref="compound">StringType</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="289" refid="structarrow_1_1_c_type_traits_3_01const_01char_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;const<sp/>char*&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4" kindref="compound">CTypeTraits&lt;std::string&gt;</ref><sp/>{};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="292" refid="structarrow_1_1_c_type_traits_3_01const_01char_07_6_08[_n]_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;const<sp/>char<sp/>(&amp;)[N]&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_c_type_traits_3_01std_1_1string_01_4" kindref="compound">CTypeTraits&lt;std::string&gt;</ref><sp/>{};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="295" refid="structarrow_1_1_c_type_traits_3_01_day_time_interval_type_1_1_day_milliseconds_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;<ref refid="classarrow_1_1_day_time_interval_type" kindref="compound">DayTimeIntervalType</ref>::DayMilliseconds&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;DayTimeIntervalType&gt;<sp/>{</highlight></codeline>
<codeline lineno="297" refid="structarrow_1_1_c_type_traits_3_01_day_time_interval_type_1_1_day_milliseconds_01_4_1ad0bc4a223e447ef8c476627e36e2206b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_day_time_interval_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="classarrow_1_1_day_time_interval_type" kindref="compound">DayTimeIntervalType</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="301" refid="structarrow_1_1_type_traits_3_01_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_list_type" kindref="compound">ListType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="302" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1aab17a5bd4ab94822e00ec5fd702671d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_list_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_list_array" kindref="compound">ListArray</ref>;</highlight></codeline>
<codeline lineno="303" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a9b2dbeef7548488dc453d76d03e863dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_list_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_list_builder" kindref="compound">ListBuilder</ref>;</highlight></codeline>
<codeline lineno="304" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1ace08a50ac6ca62bd69ea8adc0c8d5b2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_list_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_list_scalar" kindref="compound">ListScalar</ref>;</highlight></codeline>
<codeline lineno="305" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a884d779a4f886251bc0f9314735d6df4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_int32_type" kindref="compound">OffsetType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" kindref="member">Int32Type</ref>;</highlight></codeline>
<codeline lineno="306" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a1f8c8e8b9dddb17662f162348ee662fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a1f8c8e8b9dddb17662f162348ee662fb" kindref="member">OffsetArrayType</ref><sp/>=<sp/>Int32Array;</highlight></codeline>
<codeline lineno="307" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a5d77a2e18083b08f574157204220f375" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">OffsetBuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a031c893d8d592c7a099bb9bea3a25f86" kindref="member">Int32Builder</ref>;</highlight></codeline>
<codeline lineno="308" refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a12b61eb4fd1da8d0f5506a72e994b66a" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="312" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_large_list_type" kindref="compound">LargeListType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="313" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a6f6cc117d2888b0e7e48ad851226086c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_list_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_list_array" kindref="compound">LargeListArray</ref>;</highlight></codeline>
<codeline lineno="314" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a62641b374517159f3a6f6b56474c8d3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_large_list_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_large_list_builder" kindref="compound">LargeListBuilder</ref>;</highlight></codeline>
<codeline lineno="315" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a6aa239fe81b95c8fedb47b3701fbe745" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_large_list_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_large_list_scalar" kindref="compound">LargeListScalar</ref>;</highlight></codeline>
<codeline lineno="316" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a88d718544b40a0fefdaa0384cffa2cb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_int64_type" kindref="compound">OffsetType</ref><sp/>=<sp/><ref refid="namespaceparquet_1aebf28a7ea170ee7e771b13b12d06f3cf" kindref="member">Int64Type</ref>;</highlight></codeline>
<codeline lineno="317" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a90bfa426b3b640dad19b64b997a88273" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a90bfa426b3b640dad19b64b997a88273" kindref="member">OffsetArrayType</ref><sp/>=<sp/>Int64Array;</highlight></codeline>
<codeline lineno="318" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a45b6f3f70e2cf2ef17e73410e13fdea3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">OffsetBuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a08fa80026c56e0f1ff24b43c4dc33e61" kindref="member">Int64Builder</ref>;</highlight></codeline>
<codeline lineno="319" refid="structarrow_1_1_type_traits_3_01_large_list_type_01_4_1a388bd2d807d349c13619728872aadd8e" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="323" refid="structarrow_1_1_type_traits_3_01_map_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_map_type" kindref="compound">MapType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="324" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1ab39e3e14bd2a0cb074f31d3212df77f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_map_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_map_array" kindref="compound">MapArray</ref>;</highlight></codeline>
<codeline lineno="325" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1a08743c0a876b600194c6c56050868fed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_map_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_map_builder" kindref="compound">MapBuilder</ref>;</highlight></codeline>
<codeline lineno="326" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1a7068b3718741096724cc8800ddb4f691" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_map_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_map_scalar" kindref="compound">MapScalar</ref>;</highlight></codeline>
<codeline lineno="327" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1ac74b8a3f045e11b5ae5fc49196d7233c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_int32_type" kindref="compound">OffsetType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" kindref="member">Int32Type</ref>;</highlight></codeline>
<codeline lineno="328" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1a4fb42bff64938ee5ccfc7f72c37a3f15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1a4fb42bff64938ee5ccfc7f72c37a3f15" kindref="member">OffsetArrayType</ref><sp/>=<sp/>Int32Array;</highlight></codeline>
<codeline lineno="329" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1a8352064f0446a5e69ff567d90dd43ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">OffsetBuilderType</ref><sp/>=<sp/><ref refid="namespacearrow_1a031c893d8d592c7a099bb9bea3a25f86" kindref="member">Int32Builder</ref>;</highlight></codeline>
<codeline lineno="330" refid="structarrow_1_1_type_traits_3_01_map_type_01_4_1acff1b72544b039ed24d9d1cf7287b5f3" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="334" refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_fixed_size_list_type" kindref="compound">FixedSizeListType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="335" refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4_1a3107c6f5853633249724f67d503cd73f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_list_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_list_array" kindref="compound">FixedSizeListArray</ref>;</highlight></codeline>
<codeline lineno="336" refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4_1a0a49688ac89b9709e014c5ff65062281" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_list_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_list_builder" kindref="compound">FixedSizeListBuilder</ref>;</highlight></codeline>
<codeline lineno="337" refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4_1a22c77d1fbcfc77bab2796bba36217328" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_fixed_size_list_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_fixed_size_list_scalar" kindref="compound">FixedSizeListScalar</ref>;</highlight></codeline>
<codeline lineno="338" refid="structarrow_1_1_type_traits_3_01_fixed_size_list_type_01_4_1a3174e36c176a98d884e071293638f9a8" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CType&gt;</highlight></codeline>
<codeline lineno="342" refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;CType&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;ListType&gt;<sp/>{</highlight></codeline>
<codeline lineno="343" refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4_1a8d0326967242749a5830dd0935c52ffb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_list_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="classarrow_1_1_list_type" kindref="compound">ListType</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4_1adef23579e8ce4e753a10fe32faf90872" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4_1adef23579e8ce4e753a10fe32faf90872" kindref="member">type_singleton</ref>()<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga20e7157554937088556275ed4b6485d3" kindref="member">list</ref>(<ref refid="structarrow_1_1_c_type_traits" kindref="compound">CTypeTraits&lt;CType&gt;::type_singleton</ref>());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="351" refid="structarrow_1_1_type_traits_3_01_struct_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_struct_type" kindref="compound">StructType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="352" refid="structarrow_1_1_type_traits_3_01_struct_type_01_4_1a73c7785f9ef7dd0076b8798fe887c979" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_struct_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_struct_array" kindref="compound">StructArray</ref>;</highlight></codeline>
<codeline lineno="353" refid="structarrow_1_1_type_traits_3_01_struct_type_01_4_1a34288bf62995f3353b7a2d608ea57e11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_struct_builder" kindref="compound">BuilderType</ref><sp/>=<sp/><ref refid="classarrow_1_1_struct_builder" kindref="compound">StructBuilder</ref>;</highlight></codeline>
<codeline lineno="354" refid="structarrow_1_1_type_traits_3_01_struct_type_01_4_1af2fea7492707633c843884230b8929b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_struct_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_struct_scalar" kindref="compound">StructScalar</ref>;</highlight></codeline>
<codeline lineno="355" refid="structarrow_1_1_type_traits_3_01_struct_type_01_4_1a0d791e27ed1eedeeda45020c45e258a1" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="359" refid="structarrow_1_1_type_traits_3_01_union_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_union_type" kindref="compound">UnionType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="360" refid="structarrow_1_1_type_traits_3_01_union_type_01_4_1af4ce351d027304784552142f0dc64cdd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_union_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_union_array" kindref="compound">UnionArray</ref>;</highlight></codeline>
<codeline lineno="361" refid="structarrow_1_1_type_traits_3_01_union_type_01_4_1adfae73fffbb3e9ad5548aac85f81756c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_union_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_union_scalar" kindref="compound">UnionScalar</ref>;</highlight></codeline>
<codeline lineno="362" refid="structarrow_1_1_type_traits_3_01_union_type_01_4_1a5d81723cd6a71551294fa1b6bfa725dd" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="366" refid="structarrow_1_1_type_traits_3_01_dictionary_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_dictionary_type" kindref="compound">DictionaryType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="367" refid="structarrow_1_1_type_traits_3_01_dictionary_type_01_4_1a25dd97f8e8f6603eec243d3f9d0b5690" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary_array" kindref="compound">DictionaryArray</ref>;</highlight></codeline>
<codeline lineno="368" refid="structarrow_1_1_type_traits_3_01_dictionary_type_01_4_1ac0f9a701d71e055b507539a12d93cad1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_dictionary_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_dictionary_scalar" kindref="compound">DictionaryScalar</ref>;</highlight></codeline>
<codeline lineno="369" refid="structarrow_1_1_type_traits_3_01_dictionary_type_01_4_1a3d47dede7abfa3d2b527fc9ec5157aae" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="373" refid="structarrow_1_1_type_traits_3_01_extension_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;<ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="374" refid="structarrow_1_1_type_traits_3_01_extension_type_01_4_1acae1de11877d70312fabc0c6a15547a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ArrayType</ref><sp/>=<sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref>;</highlight></codeline>
<codeline lineno="375" refid="structarrow_1_1_type_traits_3_01_extension_type_01_4_1a87a2e1e166a1f01f3c2f62a7a35eaeb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_extension_scalar" kindref="compound">ScalarType</ref><sp/>=<sp/><ref refid="structarrow_1_1_extension_scalar" kindref="compound">ExtensionScalar</ref>;</highlight></codeline>
<codeline lineno="376" refid="structarrow_1_1_type_traits_3_01_extension_type_01_4_1a84cdfdb66b029a41c56b32bd12d8ba78" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_parameter_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">make_void<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>void;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>void_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>make_void&lt;Ts...&gt;::type;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Useful<sp/>type<sp/>predicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>in<sp/>C++14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="397" refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;B,<sp/>T&gt;::type;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="400" refid="namespacearrow_1ae823a76b8a9209b0553bd12b92f7628e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ae823a76b8a9209b0553bd12b92f7628e" kindref="member">is_null_type</ref><sp/>=<sp/>std::is_same&lt;NullType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="403" refid="namespacearrow_1aefffb639efbe0f7bd75e2a302b7f772e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aefffb639efbe0f7bd75e2a302b7f772e" kindref="member">enable_if_null</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_null_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="406" refid="namespacearrow_1a1505b20d54161f765534e652d0c20118" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a1505b20d54161f765534e652d0c20118" kindref="member">is_boolean_type</ref><sp/>=<sp/>std::is_same&lt;BooleanType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="409" refid="namespacearrow_1acafae5fb16a0ba015d3d5dc0ba94c059" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acafae5fb16a0ba015d3d5dc0ba94c059" kindref="member">enable_if_boolean</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_boolean_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="412" refid="namespacearrow_1a17762801d38e85bb19ba347db78c9e38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a17762801d38e85bb19ba347db78c9e38" kindref="member">is_number_type</ref><sp/>=<sp/>std::is_base_of&lt;NumberType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="415" refid="namespacearrow_1a7630f411a876624d7d347e59dea8ef70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a7630f411a876624d7d347e59dea8ef70" kindref="member">enable_if_number</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_number_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="418" refid="namespacearrow_1a3858c2a0029df0a836908cd00da27a73" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a3858c2a0029df0a836908cd00da27a73" kindref="member">is_integer_type</ref><sp/>=<sp/>std::is_base_of&lt;IntegerType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="421" refid="namespacearrow_1a231590a53c16996c8c7b698333f1ed82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a231590a53c16996c8c7b698333f1ed82" kindref="member">enable_if_integer</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_integer_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a20dd2b914ad4a61e400eb59894d23a70" kindref="member">is_signed_integer_type</ref><sp/>=</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>is_integer_type&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="426" refid="namespacearrow_1a20dd2b914ad4a61e400eb59894d23a70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_signed&lt;typename<sp/>T::c_type&gt;::value&gt;;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="429" refid="namespacearrow_1a5f130ef645ae790fb2b596b1123e6d1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a5f130ef645ae790fb2b596b1123e6d1e" kindref="member">enable_if_signed_integer</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_signed_integer_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1afbff722ac55605b6945c47d8a99feb53" kindref="member">is_unsigned_integer_type</ref><sp/>=</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>is_integer_type&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="434" refid="namespacearrow_1afbff722ac55605b6945c47d8a99feb53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_unsigned&lt;typename<sp/>T::c_type&gt;::value&gt;;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="437" refid="namespacearrow_1a9b2160429e178313ac15141e7277e763" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a9b2160429e178313ac15141e7277e763" kindref="member">enable_if_unsigned_integer</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_unsigned_integer_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>this<sp/>will<sp/>also<sp/>include<sp/>HalfFloatType<sp/>which<sp/>is<sp/>represented<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-floating<sp/>point<sp/>primitive<sp/>(uint16_t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="442" refid="namespacearrow_1ab39920d433ba89ea20da9e9ff52ba0de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ab39920d433ba89ea20da9e9ff52ba0de" kindref="member">is_floating_type</ref><sp/>=<sp/>std::is_base_of&lt;FloatingPointType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="445" refid="namespacearrow_1a9dddaa868c5f1b0f2b0642192f16f29b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a9dddaa868c5f1b0f2b0642192f16f29b" kindref="member">enable_if_floating_point</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_floating_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Half<sp/>floats<sp/>are<sp/>special<sp/>in<sp/>that<sp/>they<sp/>behave<sp/>physically<sp/>like<sp/>an<sp/>unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="450" refid="namespacearrow_1af8b7471bd6e7d3ae3f2a996cca113ac5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1af8b7471bd6e7d3ae3f2a996cca113ac5" kindref="member">is_half_float_type</ref><sp/>=<sp/>std::is_same&lt;HalfFloatType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="453" refid="namespacearrow_1ad60fed4e396b94591b87566731a74a7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ad60fed4e396b94591b87566731a74a7a" kindref="member">enable_if_half_float</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_half_float_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>binary<sp/>refers<sp/>to<sp/>Binary/LargeBinary/String/LargeString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="459" refid="namespacearrow_1a7b18703d712bea4f0e5565ebaf84ed74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a7b18703d712bea4f0e5565ebaf84ed74" kindref="member">is_base_binary_type</ref><sp/>=<sp/>std::is_base_of&lt;BaseBinaryType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="462" refid="namespacearrow_1a5adfa6f41eb212d569e8c644b9815bd8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a5adfa6f41eb212d569e8c644b9815bd8" kindref="member">enable_if_base_binary</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_base_binary_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>binary<sp/>excludes<sp/>string<sp/>from<sp/>Base<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a57b69802ef6353c58cbbf30df4457bf7" kindref="member">is_any_binary_type</ref><sp/>=</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>std::is_same&lt;BinaryType,<sp/>T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="468" refid="namespacearrow_1a57b69802ef6353c58cbbf30df4457bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;LargeBinaryType,<sp/>T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="471" refid="namespacearrow_1aa40d4db05ea1b3772a900c4a0dc1d6df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aa40d4db05ea1b3772a900c4a0dc1d6df" kindref="member">enable_if_any_binary</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_any_binary_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a45709f39fa2d7508b0068c6e493acc5b" kindref="member">is_string_like_type</ref><sp/>=</highlight></codeline>
<codeline lineno="475" refid="namespacearrow_1a45709f39fa2d7508b0068c6e493acc5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>is_base_binary_type&lt;T&gt;::value<sp/>&amp;&amp;<sp/>T::is_utf8&gt;;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="478" refid="namespacearrow_1a4eb96642403fdce64b1f1f1189a859e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a4eb96642403fdce64b1f1f1189a859e4" kindref="member">enable_if_string_like</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_string_like_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>also<sp/>includes<sp/>DecimalType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="482" refid="namespacearrow_1a0f1f61cca333813d5652f9cf7bc54c00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a0f1f61cca333813d5652f9cf7bc54c00" kindref="member">is_fixed_size_binary_type</ref><sp/>=<sp/>std::is_base_of&lt;FixedSizeBinaryType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="485" refid="namespacearrow_1aaaf9cd29f578b7221cbd8cf4183d0d80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aaaf9cd29f578b7221cbd8cf4183d0d80" kindref="member">enable_if_fixed_size_binary</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_fixed_size_binary_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a31da5300521aeadb8c39244e672aad20" kindref="member">is_binary_like_type</ref><sp/>=</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>(is_base_binary_type&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespacearrow_1a45709f39fa2d7508b0068c6e493acc5b" kindref="member">is_string_like_type&lt;T&gt;::value</ref>)<sp/>||</highlight></codeline>
<codeline lineno="491" refid="namespacearrow_1a31da5300521aeadb8c39244e672aad20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a0f1f61cca333813d5652f9cf7bc54c00" kindref="member">is_fixed_size_binary_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="494" refid="namespacearrow_1a07e76ad2a1ac1cc895d9ef4429596e89" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a07e76ad2a1ac1cc895d9ef4429596e89" kindref="member">enable_if_binary_like</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_binary_like_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="497" refid="namespacearrow_1a104b6b0fbbfcaf5420f1e4efbe06e6a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a104b6b0fbbfcaf5420f1e4efbe06e6a0" kindref="member">is_decimal_type</ref><sp/>=<sp/>std::is_base_of&lt;DecimalType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="500" refid="namespacearrow_1a1111b82ec23da8d84da2b9aaca4bc936" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a1111b82ec23da8d84da2b9aaca4bc936" kindref="member">enable_if_decimal</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_decimal_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nested<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="505" refid="namespacearrow_1a29f27de2e50e048565bb9606bb7603d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a29f27de2e50e048565bb9606bb7603d6" kindref="member">is_nested_type</ref><sp/>=<sp/>std::is_base_of&lt;NestedType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="508" refid="namespacearrow_1a5afc66a9dd979542bb7691353facc725" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a5afc66a9dd979542bb7691353facc725" kindref="member">enable_if_nested</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_nested_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ac8355f70ffdffa130e9ca72d01cfdc0c" kindref="member">is_var_length_list_type</ref><sp/>=</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>std::is_base_of&lt;LargeListType,<sp/>T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="513" refid="namespacearrow_1ac8355f70ffdffa130e9ca72d01cfdc0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;ListType,<sp/>T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="516" refid="namespacearrow_1a10348582fba4b40efc0cdacc1e8a3469" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a10348582fba4b40efc0cdacc1e8a3469" kindref="member">enable_if_var_size_list</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_var_length_list_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEPRECATED<sp/>use<sp/>is_var_length_list_type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="520" refid="namespacearrow_1a94978108f2e82a2b903f12d180f12bb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a94978108f2e82a2b903f12d180f12bb8" kindref="member">is_base_list_type</ref><sp/>=<sp/><ref refid="namespacearrow_1ac8355f70ffdffa130e9ca72d01cfdc0c" kindref="member">is_var_length_list_type&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEPRECATED<sp/>use<sp/>enable_if_var_size_list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="524" refid="namespacearrow_1af8d4e2943d8e55e8a58247140746161a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1af8d4e2943d8e55e8a58247140746161a" kindref="member">enable_if_base_list</ref><sp/>=<sp/><ref refid="namespacearrow_1a10348582fba4b40efc0cdacc1e8a3469" kindref="member">enable_if_var_size_list&lt;T, R&gt;</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="527" refid="namespacearrow_1a2d0fa3fa76eca92942333e08afbf5e2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a2d0fa3fa76eca92942333e08afbf5e2c" kindref="member">is_fixed_size_list_type</ref><sp/>=<sp/>std::is_same&lt;FixedSizeListType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="530" refid="namespacearrow_1a5d5fd9fcbc47d7a271bc3e8acffb7419" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a5d5fd9fcbc47d7a271bc3e8acffb7419" kindref="member">enable_if_fixed_size_list</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_fixed_size_list_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a2b6af17dcffa6518fe03a0e26d084814" kindref="member">is_list_like_type</ref><sp/>=</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>is_base_list_type&lt;T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="535" refid="namespacearrow_1a2b6af17dcffa6518fe03a0e26d084814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a2d0fa3fa76eca92942333e08afbf5e2c" kindref="member">is_fixed_size_list_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="538" refid="namespacearrow_1a391a75a25d56b15b309a520d42b7696d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a391a75a25d56b15b309a520d42b7696d" kindref="member">enable_if_list_like</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_list_like_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="541" refid="namespacearrow_1a7cc4639f9805d2ff49d79770577683bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a7cc4639f9805d2ff49d79770577683bb" kindref="member">is_struct_type</ref><sp/>=<sp/>std::is_base_of&lt;StructType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="544" refid="namespacearrow_1a524c1cd0f2b105e5ad18a1410aafcba0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a524c1cd0f2b105e5ad18a1410aafcba0" kindref="member">enable_if_struct</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_struct_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="547" refid="namespacearrow_1a8a8ba17a03d55c0a45607ce41c506e6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a8a8ba17a03d55c0a45607ce41c506e6b" kindref="member">is_union_type</ref><sp/>=<sp/>std::is_base_of&lt;UnionType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="550" refid="namespacearrow_1ada6364f401be8babca103e18af1154c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ada6364f401be8babca103e18af1154c6" kindref="member">enable_if_union</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_union_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TemporalTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="555" refid="namespacearrow_1ad747b7b43421fb8bcb9e41e2b9ccc5e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ad747b7b43421fb8bcb9e41e2b9ccc5e7" kindref="member">is_temporal_type</ref><sp/>=<sp/>std::is_base_of&lt;TemporalType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="558" refid="namespacearrow_1aead9c608ea64700fc81a28485d675cce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aead9c608ea64700fc81a28485d675cce" kindref="member">enable_if_temporal</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_temporal_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="561" refid="namespacearrow_1a201c518970c17cdce4d402b68510edee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a201c518970c17cdce4d402b68510edee" kindref="member">is_date_type</ref><sp/>=<sp/>std::is_base_of&lt;DateType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="564" refid="namespacearrow_1a95bd19f17d8bafe6e5be8f1b6a293466" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a95bd19f17d8bafe6e5be8f1b6a293466" kindref="member">enable_if_date</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_date_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="567" refid="namespacearrow_1aaa20abe6646670908e927e14fe48f238" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aaa20abe6646670908e927e14fe48f238" kindref="member">is_time_type</ref><sp/>=<sp/>std::is_base_of&lt;TimeType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="570" refid="namespacearrow_1a9d121c21d9bf722d5630549f91de2494" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a9d121c21d9bf722d5630549f91de2494" kindref="member">enable_if_time</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_time_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="573" refid="namespacearrow_1abc4fc09acf6524064a074ffc9c8269ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1abc4fc09acf6524064a074ffc9c8269ea" kindref="member">is_timestamp_type</ref><sp/>=<sp/>std::is_base_of&lt;TimestampType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="576" refid="namespacearrow_1a34f916e587fb352a2ac375ca35cb3434" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a34f916e587fb352a2ac375ca35cb3434" kindref="member">enable_if_timestamp</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_timestamp_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="579" refid="namespacearrow_1a9e8b36624157a2c34db12f20a54a20e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a9e8b36624157a2c34db12f20a54a20e4" kindref="member">is_duration_type</ref><sp/>=<sp/>std::is_base_of&lt;DurationType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="582" refid="namespacearrow_1af862a54186228d55eedb5e96a177d816" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1af862a54186228d55eedb5e96a177d816" kindref="member">enable_if_duration</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_duration_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="585" refid="namespacearrow_1a59ba5d87672cd108fd3b167fd258fb54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a59ba5d87672cd108fd3b167fd258fb54" kindref="member">is_interval_type</ref><sp/>=<sp/>std::is_base_of&lt;IntervalType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="588" refid="namespacearrow_1a119121074b7bfa291143daba4f5cd7f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a119121074b7bfa291143daba4f5cd7f0" kindref="member">enable_if_interval</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_interval_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Attribute<sp/>differentiation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="593" refid="namespacearrow_1af5f81113b89cbe368312906d2ea05455" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1af5f81113b89cbe368312906d2ea05455" kindref="member">is_primitive_ctype</ref><sp/>=<sp/>std::is_base_of&lt;PrimitiveCType,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="596" refid="namespacearrow_1ac8463908634b0318bee5971d05f00386" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ac8463908634b0318bee5971d05f00386" kindref="member">enable_if_primitive_ctype</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_primitive_ctype&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a1d618f8e1fb33c3f4ecc90094dc9eec9" kindref="member">has_c_type</ref><sp/>=<sp/>std::integral_constant&lt;bool,<sp/>is_primitive_ctype&lt;T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="600" refid="namespacearrow_1a1d618f8e1fb33c3f4ecc90094dc9eec9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1ad747b7b43421fb8bcb9e41e2b9ccc5e7" kindref="member">is_temporal_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="603" refid="namespacearrow_1a7e090acba4674b10ca16691401701bd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a7e090acba4674b10ca16691401701bd6" kindref="member">enable_if_has_c_type</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;has_c_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a4444a0309da790a63c0856fb90e635b7" kindref="member">has_string_view</ref><sp/>=<sp/>std::integral_constant&lt;bool,<sp/>is_binary_like_type&lt;T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="607" refid="namespacearrow_1a4444a0309da790a63c0856fb90e635b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a45709f39fa2d7508b0068c6e493acc5b" kindref="member">is_string_like_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="610" refid="namespacearrow_1a94667b305c94aaad1ed7c2b667a24fad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a94667b305c94aaad1ed7c2b667a24fad" kindref="member">enable_if_has_string_view</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;has_string_view&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a775977292719f9e7ace109475c3d497b" kindref="member">is_8bit_int</ref><sp/>=<sp/>std::integral_constant&lt;bool,<sp/>std::is_same&lt;UInt8Type,<sp/>T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="614" refid="namespacearrow_1a775977292719f9e7ace109475c3d497b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;Int8Type,<sp/>T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="617" refid="namespacearrow_1ac28ec25ca257b62697c39d4bf10cab62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ac28ec25ca257b62697c39d4bf10cab62" kindref="member">enable_if_8bit_int</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_8bit_int&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a0e3a809d6228febd9b9cd5257de92971" kindref="member">is_paramater_free_type</ref><sp/>=</highlight></codeline>
<codeline lineno="621" refid="namespacearrow_1a0e3a809d6228febd9b9cd5257de92971" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>TypeTraits&lt;T&gt;::is_parameter_free&gt;;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="624" refid="namespacearrow_1a6c7d9fa36c6e17e9653179705ab1f49d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a6c7d9fa36c6e17e9653179705ab1f49d" kindref="member">enable_if_parameter_free</ref><sp/>=<sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_paramater_free_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Physical<sp/>representation<sp/>quirks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a51e9f94af3f7a0c4ed946c23c731e453" kindref="member">is_physical_signed_integer_type</ref><sp/>=</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a20dd2b914ad4a61e400eb59894d23a70" kindref="member">is_signed_integer_type&lt;T&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="632" refid="namespacearrow_1a51e9f94af3f7a0c4ed946c23c731e453" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacearrow_1ad747b7b43421fb8bcb9e41e2b9ccc5e7" kindref="member">is_temporal_type&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/><ref refid="namespacearrow_1a1d618f8e1fb33c3f4ecc90094dc9eec9" kindref="member">has_c_type&lt;T&gt;::value</ref>)&gt;;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1aec365fc8dcb7c75493dae0eef4871118" kindref="member">enable_if_physical_signed_integer</ref><sp/>=</highlight></codeline>
<codeline lineno="636" refid="namespacearrow_1aec365fc8dcb7c75493dae0eef4871118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_physical_signed_integer_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a6c99ff90cd175919ff6aabcb854287d0" kindref="member">is_physical_unsigned_integer_type</ref><sp/>=</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,<sp/>is_unsigned_integer_type&lt;T&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="641" refid="namespacearrow_1a6c99ff90cd175919ff6aabcb854287d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1af8b7471bd6e7d3ae3f2a996cca113ac5" kindref="member">is_half_float_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a8e1f2397f5492a98c6a9aaf17c5afe84" kindref="member">enable_if_physical_unsigned_integer</ref><sp/>=</highlight></codeline>
<codeline lineno="645" refid="namespacearrow_1a8e1f2397f5492a98c6a9aaf17c5afe84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_physical_unsigned_integer_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>is_floating_type<sp/>but<sp/>excluding<sp/>half-floats<sp/>which<sp/>don&apos;t<sp/>have<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>float-like<sp/>c<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a9bec5260c0be3e093d9bfc1bfc4249cb" kindref="member">is_physical_floating_type</ref><sp/>=</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="652" refid="namespacearrow_1a9bec5260c0be3e093d9bfc1bfc4249cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1ab39920d433ba89ea20da9e9ff52ba0de" kindref="member">is_floating_type&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/>!<ref refid="namespacearrow_1af8b7471bd6e7d3ae3f2a996cca113ac5" kindref="member">is_half_float_type&lt;T&gt;::value</ref>&gt;;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a6d501b2058862ff8b769dfbf48ba4cd6" kindref="member">enable_if_physical_floating_point</ref><sp/>=</highlight></codeline>
<codeline lineno="656" refid="namespacearrow_1a6d501b2058862ff8b769dfbf48ba4cd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;is_physical_floating_type&lt;T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_integer(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab8f52afb784526f800c91de101673b42" kindref="member">Type::UINT8</ref>:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44adf9f694eb598f6f8cac8bed3da547d65" kindref="member">Type::INT8</ref>:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a87c4272d67d3a84ed9ce6c6a9a4a6772" kindref="member">Type::UINT16</ref>:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a36b3753b92501b60b2740b29d6e17696" kindref="member">Type::INT16</ref>:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a89620afd46abf8f99b057bd3587a78f0" kindref="member">Type::UINT32</ref>:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af8005f162bc422abcee7f1197bf04cf8" kindref="member">Type::INT32</ref>:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af1096e3ebb2d7a678fc6ddac24bf7639" kindref="member">Type::UINT64</ref>:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af38ec7ec303572a87b11fd48876bc1d0" kindref="member">Type::INT64</ref>:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_floating(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af6ebd198668f2a6c2d79c549f599e896" kindref="member">Type::HALF_FLOAT</ref>:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" kindref="member">Type::FLOAT</ref>:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" kindref="member">Type::DOUBLE</ref>:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_primitive(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af46d8600b17dd993097e0875a46e0b15" kindref="member">Type::NA</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ae4bb4146eedf3fb5a517780000001b30" kindref="member">Type::BOOL</ref>:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab8f52afb784526f800c91de101673b42" kindref="member">Type::UINT8</ref>:</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44adf9f694eb598f6f8cac8bed3da547d65" kindref="member">Type::INT8</ref>:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a87c4272d67d3a84ed9ce6c6a9a4a6772" kindref="member">Type::UINT16</ref>:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a36b3753b92501b60b2740b29d6e17696" kindref="member">Type::INT16</ref>:</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a89620afd46abf8f99b057bd3587a78f0" kindref="member">Type::UINT32</ref>:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af8005f162bc422abcee7f1197bf04cf8" kindref="member">Type::INT32</ref>:</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af1096e3ebb2d7a678fc6ddac24bf7639" kindref="member">Type::UINT64</ref>:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af38ec7ec303572a87b11fd48876bc1d0" kindref="member">Type::INT64</ref>:</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af6ebd198668f2a6c2d79c549f599e896" kindref="member">Type::HALF_FLOAT</ref>:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" kindref="member">Type::FLOAT</ref>:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" kindref="member">Type::DOUBLE</ref>:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a4351aedceb3d92f82cf7ae504476ef30" kindref="member">Type::DATE32</ref>:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a17325202e90c23cd194b1698eea87a38" kindref="member">Type::DATE64</ref>:</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a73fb0fcd2b5d9a4c6071574c73cdf3c5" kindref="member">Type::TIME32</ref>:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ab960cffd22f54b634d9f055f7568d321" kindref="member">Type::TIME64</ref>:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1e41dddee4a6410c4d6fe164b36a230e" kindref="member">Type::TIMESTAMP</ref>:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a5322b7f2fd54030f65ac36e9637ff45b" kindref="member">Type::DURATION</ref>:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa546143f5b445f6478b7e157546ec3f" kindref="member">Type::INTERVAL</ref>:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_base_binary_like(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a442cc62761c7e5a83d26da4d3ed2fe01" kindref="member">Type::BINARY</ref>:</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ac15fc368bd8a9390a69d4e174635781d" kindref="member">Type::LARGE_BINARY</ref>:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a864933bd7cdfa63ea75498c34db6545f" kindref="member">Type::STRING</ref>:</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a97279348163fabb0441e9ae939dc7ef5" kindref="member">Type::LARGE_STRING</ref>:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_binary_like(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a442cc62761c7e5a83d26da4d3ed2fe01" kindref="member">Type::BINARY</ref>:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a864933bd7cdfa63ea75498c34db6545f" kindref="member">Type::STRING</ref>:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_large_binary_like(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44ac15fc368bd8a9390a69d4e174635781d" kindref="member">Type::LARGE_BINARY</ref>:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a97279348163fabb0441e9ae939dc7ef5" kindref="member">Type::LARGE_STRING</ref>:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_dictionary(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_id<sp/>==<sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a3c38b5820a3de12d71713473550c6280" kindref="member">Type::DICTIONARY</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_fixed_size_binary(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type_id)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a014fe7104b592dbd7c70e4e861774a63" kindref="member">Type::DECIMAL</ref>:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a1b3f48148c5ff94c039d09ff689da179" kindref="member">Type::FIXED_SIZE_BINARY</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_fixed_width(<ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_primitive(type_id)<sp/>||<sp/>is_dictionary(type_id)<sp/>||<sp/>is_fixed_size_binary(type_id);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/type_traits.h"/>
  </compounddef>
</doxygen>
