<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_key_value_metadata" kind="class" language="C++" prot="public">
    <compoundname>arrow::KeyValueMetadata</compoundname>
    <includes refid="key__value__metadata_8h" local="no">arrow/util/key_value_metadata.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_key_value_metadata_1aabf59474b275fe00e6246ff2c3fa0f82" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; arrow::KeyValueMetadata::keys_</definition>
        <argsstring></argsstring>
        <name>keys_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="71" column="1" bodyfile="/arrow/cpp/src/arrow/util/key_value_metadata.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_key_value_metadata_1a739a2849a2dcdaf3b9426bd0035b744b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; arrow::KeyValueMetadata::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="72" column="1" bodyfile="/arrow/cpp/src/arrow/util/key_value_metadata.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a2c1cba9126ea75b53979f42558bd844f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::KeyValueMetadata::KeyValueMetadata</definition>
        <argsstring>()</argsstring>
        <name>KeyValueMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1ae1b4b8606254020dfcf56f3f7e7bfe91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::KeyValueMetadata::KeyValueMetadata</definition>
        <argsstring>(std::vector&lt; std::string &gt; keys, std::vector&lt; std::string &gt; values)</argsstring>
        <name>KeyValueMetadata</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1ab51a4993bcc9302a430460e049f80c51" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::KeyValueMetadata::KeyValueMetadata</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::string &gt; &amp;map)</argsstring>
        <name>KeyValueMetadata</name>
        <param>
          <type>const std::unordered_map&lt; std::string, std::string &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a799a3785c1a75d632bd0ec39a25b653d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::KeyValueMetadata::~KeyValueMetadata</definition>
        <argsstring>()=default</argsstring>
        <name>~KeyValueMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a9b7204f66713ccbe31dd2b28434156fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::KeyValueMetadata::ToUnorderedMap</definition>
        <argsstring>(std::unordered_map&lt; std::string, std::string &gt; *out) const</argsstring>
        <name>ToUnorderedMap</name>
        <param>
          <type>std::unordered_map&lt; std::string, std::string &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a7aacdadc5ab3d6518072d7cfea3bd123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::KeyValueMetadata::Append</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Append</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a65a992e827b36addfafd68a6a0ab4780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt;std::string&gt; arrow::KeyValueMetadata::Get</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>Get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a52a9f37e4d7f159d62f8ee6658c7d92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::KeyValueMetadata::Delete</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>Delete</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a7f8f185a46a1ca5e976f7f116c984e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::KeyValueMetadata::Set</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Set</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1aae6d23d17e84473dcad75a0f266aee10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::KeyValueMetadata::Contains</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a9f351c660ea93fca098cf4d2854ca6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::KeyValueMetadata::reserve</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>reserve</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a8c36667c47bd32a7a7f6d07fa28e0a03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::KeyValueMetadata::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a704202c51a7cc7147bee5521acfd96fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; arrow::KeyValueMetadata::key</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>key</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a82e37e830e43da36547db9424a5943e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; arrow::KeyValueMetadata::value</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>value</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1ae9faed98ad087cd7e5067429482c0b0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;std::string, std::string&gt; &gt; arrow::KeyValueMetadata::sorted_pairs</definition>
        <argsstring>() const</argsstring>
        <name>sorted_pairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a6e04ce26cef0a1e12c1cf8aeab1ec0b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::KeyValueMetadata::FindKey</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>FindKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Perform linear search for key, returning -1 if not found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a2475f2b2ee0b2162862230f2685ce58b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref> &gt;</type>
        <definition>std::shared_ptr&lt;KeyValueMetadata&gt; arrow::KeyValueMetadata::Copy</definition>
        <argsstring>() const</argsstring>
        <name>Copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1abb89e954dc8898b208187ce392c228a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref> &gt;</type>
        <definition>std::shared_ptr&lt;KeyValueMetadata&gt; arrow::KeyValueMetadata::Merge</definition>
        <argsstring>(const KeyValueMetadata &amp;other) const</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return a new <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref> by combining the passed metadata with this <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Colliding keys will be overridden by the passed metadata. Assumes keys in both containers are unique </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a794f7b79f275853ca54fc3ca6b5ba8f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::KeyValueMetadata::Equals</definition>
        <argsstring>(const KeyValueMetadata &amp;other) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a98c3b68ffa9b4a417732a08d4451c141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::KeyValueMetadata::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_key_value_metadata_1a1ac34ba5cc8fadf71edd79f38f654ad2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::KeyValueMetadata::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(KeyValueMetadata)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container for key-value pair type metadata. Not thread-safe. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/key_value_metadata.h" line="35" column="1" bodyfile="/arrow/cpp/src/arrow/util/key_value_metadata.h" bodystart="35" bodyend="75"/>
    <listofallmembers>
      <member refid="classarrow_1_1_key_value_metadata_1a7aacdadc5ab3d6518072d7cfea3bd123" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Append</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a1ac34ba5cc8fadf71edd79f38f654ad2" prot="private" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1aae6d23d17e84473dcad75a0f266aee10" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Contains</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a2475f2b2ee0b2162862230f2685ce58b" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Copy</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a52a9f37e4d7f159d62f8ee6658c7d92f" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Delete</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a794f7b79f275853ca54fc3ca6b5ba8f8" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a6e04ce26cef0a1e12c1cf8aeab1ec0b4" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>FindKey</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a65a992e827b36addfafd68a6a0ab4780" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Get</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a704202c51a7cc7147bee5521acfd96fe" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>key</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1aabf59474b275fe00e6246ff2c3fa0f82" prot="private" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>keys_</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a2c1cba9126ea75b53979f42558bd844f" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>KeyValueMetadata</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1ae1b4b8606254020dfcf56f3f7e7bfe91" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>KeyValueMetadata</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1ab51a4993bcc9302a430460e049f80c51" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>KeyValueMetadata</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1abb89e954dc8898b208187ce392c228a4" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Merge</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a9f351c660ea93fca098cf4d2854ca6c9" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>reserve</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a7f8f185a46a1ca5e976f7f116c984e32" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>Set</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a8c36667c47bd32a7a7f6d07fa28e0a03" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>size</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1ae9faed98ad087cd7e5067429482c0b0d" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>sorted_pairs</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a98c3b68ffa9b4a417732a08d4451c141" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a9b7204f66713ccbe31dd2b28434156fb" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>ToUnorderedMap</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a82e37e830e43da36547db9424a5943e8" prot="public" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>value</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a739a2849a2dcdaf3b9426bd0035b744b" prot="private" virt="non-virtual"><scope>arrow::KeyValueMetadata</scope><name>values_</name></member>
      <member refid="classarrow_1_1_key_value_metadata_1a799a3785c1a75d632bd0ec39a25b653d" prot="public" virt="virtual"><scope>arrow::KeyValueMetadata</scope><name>~KeyValueMetadata</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
