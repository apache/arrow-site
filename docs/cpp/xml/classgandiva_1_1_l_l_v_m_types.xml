<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_l_l_v_m_types" kind="class" language="C++" prot="public">
    <compoundname>gandiva::LLVMTypes</compoundname>
    <includes refid="llvm__types_8h" local="no">gandiva/llvm_types.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_types_1ac0ca8c0ad1707c301508f65ff602f598" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">arrow::Type::type</ref>, llvm::Type * &gt;</type>
        <definition>std::map&lt;arrow::Type::type, llvm::Type*&gt; gandiva::LLVMTypes::arrow_id_to_llvm_type_map_</definition>
        <argsstring></argsstring>
        <name>arrow_id_to_llvm_type_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="125" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_l_l_v_m_types_1a3a914de0f2422c628e05b7f149be54ed" prot="private" static="no" mutable="no">
        <type>llvm::LLVMContext &amp;</type>
        <definition>llvm::LLVMContext&amp; gandiva::LLVMTypes::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="127" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1aad73a5528194f960599798b787e5e101" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::LLVMTypes::LLVMTypes</definition>
        <argsstring>(llvm::LLVMContext &amp;context)</argsstring>
        <name>LLVMTypes</name>
        <param>
          <type>llvm::LLVMContext &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a6a45f89cd1c811e5ca51ec4c5efea09d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::void_type</definition>
        <argsstring>()</argsstring>
        <name>void_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="35" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a0f84506d41821e37f99e867ba5485f88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i1_type</definition>
        <argsstring>()</argsstring>
        <name>i1_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="37" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1ad4da7fd1c78effaab58ee93731378bd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i8_type</definition>
        <argsstring>()</argsstring>
        <name>i8_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="39" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a5ebed1875535174059b1d8427b139904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i16_type</definition>
        <argsstring>()</argsstring>
        <name>i16_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="41" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1ad013aadce77e8bd35975e1a2e2a292bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i32_type</definition>
        <argsstring>()</argsstring>
        <name>i32_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="43" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a9e621f63914e3da3dec44353270c82f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i64_type</definition>
        <argsstring>()</argsstring>
        <name>i64_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="45" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1adce0de4531b35b4e174ce19552edcfd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::i128_type</definition>
        <argsstring>()</argsstring>
        <name>i128_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="47" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a734bf2aad400ec68c0f1d2dc793d726e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::StructType *</type>
        <definition>llvm::StructType* gandiva::LLVMTypes::i128_split_type</definition>
        <argsstring>()</argsstring>
        <name>i128_split_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="49" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a47ae6ef213a4c7d5f38a77104053d0a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::float_type</definition>
        <argsstring>()</argsstring>
        <name>float_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="54" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1ab5ba3da4968b3ee1a939237df532edec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::double_type</definition>
        <argsstring>()</argsstring>
        <name>double_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="56" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1ab00c830c5f09a22ceb8c9afb9e713889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::PointerType *</type>
        <definition>llvm::PointerType* gandiva::LLVMTypes::ptr_type</definition>
        <argsstring>(llvm::Type *type)</argsstring>
        <name>ptr_type</name>
        <param>
          <type>llvm::Type *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="58" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a134b8e435285442a696dd21c90f94bbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::PointerType *</type>
        <definition>llvm::PointerType* gandiva::LLVMTypes::i8_ptr_type</definition>
        <argsstring>()</argsstring>
        <name>i8_ptr_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="60" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a018aba26fad864cb1bb836e89f6ae92a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::PointerType *</type>
        <definition>llvm::PointerType* gandiva::LLVMTypes::i32_ptr_type</definition>
        <argsstring>()</argsstring>
        <name>i32_ptr_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="62" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a7920f737a5909c96a1658b82a5859d8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::PointerType *</type>
        <definition>llvm::PointerType* gandiva::LLVMTypes::i64_ptr_type</definition>
        <argsstring>()</argsstring>
        <name>i64_ptr_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="64" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a262cfbd6d0549fba6dccf14f1fae1d50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::PointerType *</type>
        <definition>llvm::PointerType* gandiva::LLVMTypes::i128_ptr_type</definition>
        <argsstring>()</argsstring>
        <name>i128_ptr_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="66" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a63254eb510625ec60ba6858fc699d89b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ctype</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
            <defval>(sizeof(ctype) * CHAR_BIT)</defval>
          </param>
        </templateparamlist>
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::int_constant</definition>
        <argsstring>(ctype val)</argsstring>
        <name>int_constant</name>
        <param>
          <type>ctype</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="69" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a94d086794c06e9100a1ce7002781f442" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i1_constant</definition>
        <argsstring>(bool val)</argsstring>
        <name>i1_constant</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="73" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a99194c606b961586f69f72283edde9ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i8_constant</definition>
        <argsstring>(int8_t val)</argsstring>
        <name>i8_constant</name>
        <param>
          <type>int8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="74" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a5a9da3808cdcac2f9fd5f92842f727c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i16_constant</definition>
        <argsstring>(int16_t val)</argsstring>
        <name>i16_constant</name>
        <param>
          <type>int16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="75" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1abaf522ebc172324ad8898c31da6f393c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i32_constant</definition>
        <argsstring>(int32_t val)</argsstring>
        <name>i32_constant</name>
        <param>
          <type>int32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="76" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1acc97464f6ac01623ee20d73c79f5e4ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i64_constant</definition>
        <argsstring>(int64_t val)</argsstring>
        <name>i64_constant</name>
        <param>
          <type>int64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="77" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a7eaa85fda168db38d2314133990a068e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i128_constant</definition>
        <argsstring>(int64_t val)</argsstring>
        <name>i128_constant</name>
        <param>
          <type>int64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="78" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1aeddc73206b9228c6078466efe1f7342f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::true_constant</definition>
        <argsstring>()</argsstring>
        <name>true_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="80" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a577534fc40cba1e85ce730c875af01ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::false_constant</definition>
        <argsstring>()</argsstring>
        <name>false_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="81" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1adb7565de977217c4c3dd7c7597e132fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i128_zero</definition>
        <argsstring>()</argsstring>
        <name>i128_zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="83" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1aae86aaba76e8a062299c96286d510248" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::i128_one</definition>
        <argsstring>()</argsstring>
        <name>i128_one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="84" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1ad83f5828181d78225c9155f7dfcf0a2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::float_constant</definition>
        <argsstring>(float val)</argsstring>
        <name>float_constant</name>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="86" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a7afc3f204156faa09aea6c69377c5655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::double_constant</definition>
        <argsstring>(double val)</argsstring>
        <name>double_constant</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="90" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1adbe480f06152896c49ae80e518887f76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Constant *</type>
        <definition>llvm::Constant* gandiva::LLVMTypes::NullConstant</definition>
        <argsstring>(llvm::Type *type)</argsstring>
        <name>NullConstant</name>
        <param>
          <type>llvm::Type *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="94" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a63d6d0328bb176fc49ac7c6691840fba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::DataVecType</definition>
        <argsstring>(const DataTypePtr &amp;data_type)</argsstring>
        <name>DataVecType</name>
        <param>
          <type>const <ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref> &amp;</type>
          <declname>data_type</declname>
        </param>
        <briefdescription>
<para>For a given data type, find the ir type used for the data vector slot. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="106" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1a478917eb68b4a5d78dd52c741c3914bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Type *</type>
        <definition>llvm::Type* gandiva::LLVMTypes::IRType</definition>
        <argsstring>(arrow::Type::type arrow_type)</argsstring>
        <name>IRType</name>
        <param>
          <type><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">arrow::Type::type</ref></type>
          <declname>arrow_type</declname>
        </param>
        <briefdescription>
<para>For a given minor type, find the corresponding ir type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="111" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_l_l_v_m_types_1aa3f64afc1a3c0ae3fc939f1e9ff685a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">arrow::Type::type</ref> &gt;</type>
        <definition>std::vector&lt;arrow::Type::type&gt; gandiva::LLVMTypes::GetSupportedArrowTypes</definition>
        <argsstring>()</argsstring>
        <name>GetSupportedArrowTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="116" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="116" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holder for llvm types, and mappings between arrow types and llvm types. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/llvm_types.h" line="31" column="1" bodyfile="/arrow/cpp/src/gandiva/llvm_types.h" bodystart="31" bodyend="128"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ac0ca8c0ad1707c301508f65ff602f598" prot="private" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>arrow_id_to_llvm_type_map_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a3a914de0f2422c628e05b7f149be54ed" prot="private" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>context_</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a63d6d0328bb176fc49ac7c6691840fba" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>DataVecType</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a7afc3f204156faa09aea6c69377c5655" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>double_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ab5ba3da4968b3ee1a939237df532edec" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>double_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a577534fc40cba1e85ce730c875af01ae" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>false_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ad83f5828181d78225c9155f7dfcf0a2e" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>float_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a47ae6ef213a4c7d5f38a77104053d0a0" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>float_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1aa3f64afc1a3c0ae3fc939f1e9ff685a1" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>GetSupportedArrowTypes</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a7eaa85fda168db38d2314133990a068e" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1aae86aaba76e8a062299c96286d510248" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_one</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a262cfbd6d0549fba6dccf14f1fae1d50" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_ptr_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a734bf2aad400ec68c0f1d2dc793d726e" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_split_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1adce0de4531b35b4e174ce19552edcfd7" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1adb7565de977217c4c3dd7c7597e132fc" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i128_zero</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a5a9da3808cdcac2f9fd5f92842f727c3" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i16_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a5ebed1875535174059b1d8427b139904" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i16_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a94d086794c06e9100a1ce7002781f442" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i1_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a0f84506d41821e37f99e867ba5485f88" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i1_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1abaf522ebc172324ad8898c31da6f393c" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i32_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a018aba26fad864cb1bb836e89f6ae92a" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i32_ptr_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ad013aadce77e8bd35975e1a2e2a292bc" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i32_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1acc97464f6ac01623ee20d73c79f5e4ed" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i64_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a7920f737a5909c96a1658b82a5859d8a" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i64_ptr_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a9e621f63914e3da3dec44353270c82f1" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i64_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a99194c606b961586f69f72283edde9ba" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i8_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a134b8e435285442a696dd21c90f94bbf" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i8_ptr_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ad4da7fd1c78effaab58ee93731378bd6" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>i8_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a63254eb510625ec60ba6858fc699d89b" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>int_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a478917eb68b4a5d78dd52c741c3914bb" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>IRType</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1aad73a5528194f960599798b787e5e101" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>LLVMTypes</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1adbe480f06152896c49ae80e518887f76" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>NullConstant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1ab00c830c5f09a22ceb8c9afb9e713889" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>ptr_type</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1aeddc73206b9228c6078466efe1f7342f" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>true_constant</name></member>
      <member refid="classgandiva_1_1_l_l_v_m_types_1a6a45f89cd1c811e5ca51ec4c5efea09d" prot="public" virt="non-virtual"><scope>gandiva::LLVMTypes</scope><name>void_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
