<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_chunk_meta_data_builder" kind="class" language="C++" prot="public">
    <compoundname>parquet::ColumnChunkMetaDataBuilder</compoundname>
    <includes refid="metadata_8h" local="no">parquet/metadata.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_column_chunk_meta_data_builder_1a0e6d5e7f54ada8f2ca2c4406be2e9b85" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; ColumnChunkMetaDataBuilderImpl &gt;</type>
        <definition>std::unique_ptr&lt;ColumnChunkMetaDataBuilderImpl&gt; parquet::ColumnChunkMetaDataBuilder::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="349" column="1" bodyfile="/arrow/cpp/src/parquet/metadata.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1aca26784b02bbb069ea281929938e47c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ColumnChunkMetaDataBuilder&gt; parquet::ColumnChunkMetaDataBuilder::Make</definition>
        <argsstring>(std::shared_ptr&lt; WriterProperties &gt; props, const ColumnDescriptor *column)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>props</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1ab82c98311fd41c1aa3e684bdeda2e9d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ColumnChunkMetaDataBuilder&gt; parquet::ColumnChunkMetaDataBuilder::Make</definition>
        <argsstring>(std::shared_ptr&lt; WriterProperties &gt; props, const ColumnDescriptor *column, void *contents)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>props</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>column</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="311" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a0c25cfd5b8440c52cf272e6a376648ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnChunkMetaDataBuilder::~ColumnChunkMetaDataBuilder</definition>
        <argsstring>()</argsstring>
        <name>~ColumnChunkMetaDataBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a48fd854372a865352c246721136c4483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnChunkMetaDataBuilder::set_file_path</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>set_file_path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1af8404a31f69e87063eedbbefda18cf6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnChunkMetaDataBuilder::SetStatistics</definition>
        <argsstring>(const EncodedStatistics &amp;stats)</argsstring>
        <name>SetStatistics</name>
        <param>
          <type>const <ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref> &amp;</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a1a30560d256430b64c719202fcc9637d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
        <definition>const ColumnDescriptor* parquet::ColumnChunkMetaDataBuilder::descr</definition>
        <argsstring>() const</argsstring>
        <name>descr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a3e8dfba8f2cc367ddb22e539d0fe5f95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaDataBuilder::total_compressed_size</definition>
        <argsstring>() const</argsstring>
        <name>total_compressed_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a264a7561484f2ea42e9808e6416b6983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnChunkMetaDataBuilder::Finish</definition>
        <argsstring>(int64_t num_values, int64_t dictionary_page_offset, int64_t index_page_offset, int64_t data_page_offset, int64_t compressed_size, int64_t uncompressed_size, bool has_dictionary, bool dictionary_fallback, const std::map&lt; Encoding::type, int32_t &gt; &amp;dict_encoding_stats_, const std::map&lt; Encoding::type, int32_t &gt; &amp;data_encoding_stats_, const std::shared_ptr&lt; Encryptor &gt; &amp;encryptor=NULLPTR)</argsstring>
        <name>Finish</name>
        <param>
          <type>int64_t</type>
          <declname>num_values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dictionary_page_offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>index_page_offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>data_page_offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>compressed_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>uncompressed_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_dictionary</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dictionary_fallback</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref>, int32_t &gt; &amp;</type>
          <declname>dict_encoding_stats_</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref>, int32_t &gt; &amp;</type>
          <declname>data_encoding_stats_</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_encryptor" kindref="compound">Encryptor</ref> &gt; &amp;</type>
          <declname>encryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1abcd239e9f03e55748eacf6690976d2bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* parquet::ColumnChunkMetaDataBuilder::contents</definition>
        <argsstring>() const</argsstring>
        <name>contents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a3b01fb0a884648e14a66021b9f211433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ColumnChunkMetaDataBuilder::WriteTo</definition>
        <argsstring>(::arrow::io::OutputStream *sink)</argsstring>
        <name>WriteTo</name>
        <param>
          <type>::<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">arrow::io::OutputStream</ref> *</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="340" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a9a26f6258ffdf0ab0598195e314ec0b4" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnChunkMetaDataBuilder::ColumnChunkMetaDataBuilder</definition>
        <argsstring>(std::shared_ptr&lt; WriterProperties &gt; props, const ColumnDescriptor *column)</argsstring>
        <name>ColumnChunkMetaDataBuilder</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>props</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_builder_1a1505c2a7fc8e4da9580054470ec79393" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnChunkMetaDataBuilder::ColumnChunkMetaDataBuilder</definition>
        <argsstring>(std::shared_ptr&lt; WriterProperties &gt; props, const ColumnDescriptor *column, void *contents)</argsstring>
        <name>ColumnChunkMetaDataBuilder</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> &gt;</type>
          <declname>props</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>column</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="345" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/metadata.h" line="305" column="1" bodyfile="/arrow/cpp/src/parquet/metadata.h" bodystart="305" bodyend="350"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a9a26f6258ffdf0ab0598195e314ec0b4" prot="private" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>ColumnChunkMetaDataBuilder</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a1505c2a7fc8e4da9580054470ec79393" prot="private" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>ColumnChunkMetaDataBuilder</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1abcd239e9f03e55748eacf6690976d2bf" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>contents</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a1a30560d256430b64c719202fcc9637d" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>descr</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a264a7561484f2ea42e9808e6416b6983" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>Finish</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a0e6d5e7f54ada8f2ca2c4406be2e9b85" prot="private" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>impl_</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1aca26784b02bbb069ea281929938e47c9" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>Make</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1ab82c98311fd41c1aa3e684bdeda2e9d8" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>Make</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a48fd854372a865352c246721136c4483" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>set_file_path</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1af8404a31f69e87063eedbbefda18cf6f" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>SetStatistics</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a3e8dfba8f2cc367ddb22e539d0fe5f95" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>total_compressed_size</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a3b01fb0a884648e14a66021b9f211433" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>WriteTo</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_builder_1a0c25cfd5b8440c52cf272e6a376648ae" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaDataBuilder</scope><name>~ColumnChunkMetaDataBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
