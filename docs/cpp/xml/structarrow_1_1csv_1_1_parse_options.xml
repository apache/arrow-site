<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1csv_1_1_parse_options" kind="struct" language="C++" prot="public">
    <compoundname>arrow::csv::ParseOptions</compoundname>
    <includes refid="csv_2options_8h" local="no">arrow/csv/options.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a643fe293fbe30e050e1a724d418cd923" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char arrow::csv::ParseOptions::delimiter</definition>
        <argsstring></argsstring>
        <name>delimiter</name>
        <initializer>= &apos;,&apos;</initializer>
        <briefdescription>
<para><ref refid="classarrow_1_1_field" kindref="compound">Field</ref> delimiter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="41" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a6bd71cca235d202e11af50e9973aaf32" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::csv::ParseOptions::quoting</definition>
        <argsstring></argsstring>
        <name>quoting</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether quoting is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="43" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a18786436c836e6a8a5289a21a0d3c338" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char arrow::csv::ParseOptions::quote_char</definition>
        <argsstring></argsstring>
        <name>quote_char</name>
        <initializer>= &apos;&quot;&apos;</initializer>
        <briefdescription>
<para>Quoting character (if <computeroutput>quoting</computeroutput> is true) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="45" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a666dcc4c8c51fa3ace18eb7942bcc309" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::csv::ParseOptions::double_quote</definition>
        <argsstring></argsstring>
        <name>double_quote</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether a quote inside a value is double-quoted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="47" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a8d29de5703140253b3e5422b78510892" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::csv::ParseOptions::escaping</definition>
        <argsstring></argsstring>
        <name>escaping</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether escaping is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="49" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1ae4a284f4c9a7d7dbe1b4e32847c54c6d" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char arrow::csv::ParseOptions::escape_char</definition>
        <argsstring></argsstring>
        <name>escape_char</name>
        <initializer>= <ref refid="namespacearrow_1_1csv_1ac987902741a31b40f121f75e5e2cd25d" kindref="member">kDefaultEscapeChar</ref></initializer>
        <briefdescription>
<para>Escaping character (if <computeroutput>escaping</computeroutput> is true) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="51" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1ae49d4e0ce2775d4ccb1cba5bc13baefe" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::csv::ParseOptions::newlines_in_values</definition>
        <argsstring></argsstring>
        <name>newlines_in_values</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether values are allowed to contain CR (0x0d) and LF (0x0a) characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="53" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1csv_1_1_parse_options_1a33afc4ca4d66b25c1b4854bf5cdbfcd0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::csv::ParseOptions::ignore_empty_lines</definition>
        <argsstring></argsstring>
        <name>ignore_empty_lines</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether empty lines are ignored. </para>        </briefdescription>
        <detaileddescription>
<para>If false, an empty line represents a single empty value (assuming a one-column CSV file). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1csv_1_1_parse_options_1a711152ca27eb1f058dfd25a8e2a657e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1csv_1_1_parse_options" kindref="compound">ParseOptions</ref></type>
        <definition>static ParseOptions arrow::csv::ParseOptions::Defaults</definition>
        <argsstring>()</argsstring>
        <name>Defaults</name>
        <briefdescription>
<para>Create parsing options with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/options.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/csv/options.h" line="37" column="1" bodyfile="/arrow/cpp/src/arrow/csv/options.h" bodystart="37" bodyend="60"/>
    <listofallmembers>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a711152ca27eb1f058dfd25a8e2a657e2" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>Defaults</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a643fe293fbe30e050e1a724d418cd923" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>delimiter</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a666dcc4c8c51fa3ace18eb7942bcc309" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>double_quote</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1ae4a284f4c9a7d7dbe1b4e32847c54c6d" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>escape_char</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a8d29de5703140253b3e5422b78510892" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>escaping</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a33afc4ca4d66b25c1b4854bf5cdbfcd0" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>ignore_empty_lines</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1ae49d4e0ce2775d4ccb1cba5bc13baefe" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>newlines_in_values</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a18786436c836e6a8a5289a21a0d3c338" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>quote_char</name></member>
      <member refid="structarrow_1_1csv_1_1_parse_options_1a6bd71cca235d202e11af50e9973aaf32" prot="public" virt="non-virtual"><scope>arrow::csv::ParseOptions</scope><name>quoting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
