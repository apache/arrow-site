<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classplasma_1_1_external_stores" kind="class" language="C++" prot="public">
    <compoundname>plasma::ExternalStores</compoundname>
    <includes refid="external__store_8h" local="no">plasma/external_store.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classplasma_1_1_external_stores_1ab0cc5b08fdf419deeff18c4fa4757cf0" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classplasma_1_1_external_store" kindref="compound">ExternalStore</ref> &gt; &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, std::shared_ptr&lt;ExternalStore&gt; &gt; plasma::ExternalStores::StoreMap</definition>
        <argsstring></argsstring>
        <name>StoreMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="79" column="1" bodyfile="/arrow/cpp/src/plasma/external_store.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classplasma_1_1_external_stores_1aa9b5877afec99e46364ad10644db07c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status plasma::ExternalStores::ExtractStoreName</definition>
        <argsstring>(const std::string &amp;endpoint, std::string *store_name)</argsstring>
        <name>ExtractStoreName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>store_name</declname>
        </param>
        <briefdescription>
<para>Extracts the external store name from the external store endpoint. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The endpoint for the external store. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">store_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the external store. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return status. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_external_stores_1ae03aeb82a6fcea2d2f5908b73afaa939" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void plasma::ExternalStores::RegisterStore</definition>
        <argsstring>(const std::string &amp;store_name, std::shared_ptr&lt; ExternalStore &gt; store)</argsstring>
        <name>RegisterStore</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>store_name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classplasma_1_1_external_store" kindref="compound">ExternalStore</ref> &gt;</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Register a new external store. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the new external store. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new external store object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_external_stores_1add4087d2fcb18f793cc7db1a3fb29edf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void plasma::ExternalStores::DeregisterStore</definition>
        <argsstring>(const std::string &amp;store_name)</argsstring>
        <name>DeregisterStore</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>store_name</declname>
        </param>
        <briefdescription>
<para>Remove an external store from the registry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the external store to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_external_stores_1aba6fed17d555e82bbf18811c67be9392" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classplasma_1_1_external_store" kindref="compound">ExternalStore</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;ExternalStore&gt; plasma::ExternalStores::GetStore</definition>
        <argsstring>(const std::string &amp;store_name)</argsstring>
        <name>GetStore</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>store_name</declname>
        </param>
        <briefdescription>
<para>Obtain the external store given its name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the external store. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The external store object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classplasma_1_1_external_stores_1a1fc7beaeb347b99c1ab6891feb63dc82" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classplasma_1_1_external_stores_1ab0cc5b08fdf419deeff18c4fa4757cf0" kindref="member">StoreMap</ref> &amp;</type>
        <definition>static StoreMap&amp; plasma::ExternalStores::Stores</definition>
        <argsstring>()</argsstring>
        <name>Stores</name>
        <briefdescription>
<para>Obtain mapping between external store names and store instances. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mapping between external store names and store instances. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/external_store.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/plasma/external_store.h" line="77" column="1" bodyfile="/arrow/cpp/src/plasma/external_store.h" bodystart="77" bodyend="110"/>
    <listofallmembers>
      <member refid="classplasma_1_1_external_stores_1add4087d2fcb18f793cc7db1a3fb29edf" prot="public" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>DeregisterStore</name></member>
      <member refid="classplasma_1_1_external_stores_1aa9b5877afec99e46364ad10644db07c6" prot="public" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>ExtractStoreName</name></member>
      <member refid="classplasma_1_1_external_stores_1aba6fed17d555e82bbf18811c67be9392" prot="public" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>GetStore</name></member>
      <member refid="classplasma_1_1_external_stores_1ae03aeb82a6fcea2d2f5908b73afaa939" prot="public" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>RegisterStore</name></member>
      <member refid="classplasma_1_1_external_stores_1ab0cc5b08fdf419deeff18c4fa4757cf0" prot="public" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>StoreMap</name></member>
      <member refid="classplasma_1_1_external_stores_1a1fc7beaeb347b99c1ab6891feb63dc82" prot="private" virt="non-virtual"><scope>plasma::ExternalStores</scope><name>Stores</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
