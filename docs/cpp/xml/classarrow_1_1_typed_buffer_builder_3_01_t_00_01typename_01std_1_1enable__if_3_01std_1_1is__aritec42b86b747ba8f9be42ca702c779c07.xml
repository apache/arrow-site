<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07" kind="class" language="C++" prot="public">
    <compoundname>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</compoundname>
    <includes refid="buffer__builder_8h" local="no">arrow/buffer_builder.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a164c709f46ec9b33d95833ff947b35ff" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_buffer_builder" kindref="compound">BufferBuilder</ref></type>
        <definition>BufferBuilder arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::bytes_builder_</definition>
        <argsstring></argsstring>
        <name>bytes_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="266" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ad6976dcfbdce307ec18f5efe220944f8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::TypedBufferBuilder</definition>
        <argsstring>(MemoryPool *pool=default_memory_pool())</argsstring>
        <name>TypedBufferBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="197" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="197" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a37b0f0e7fa21f6533de04ca509bf401b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::TypedBufferBuilder</definition>
        <argsstring>(std::shared_ptr&lt; ResizableBuffer &gt; buffer, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>TypedBufferBuilder</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="200" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ad017cebd5a74de4ce237bd4b604ffbe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Append</definition>
        <argsstring>(T value)</argsstring>
        <name>Append</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="204" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a29b44ec7ccf589d7c3166dc4471543b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Append</definition>
        <argsstring>(const T *values, int64_t num_elements)</argsstring>
        <name>Append</name>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="208" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1afd88ce089b857e1c34cc78f3a94a857f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Append</definition>
        <argsstring>(const int64_t num_copies, T value)</argsstring>
        <name>Append</name>
        <param>
          <type>const int64_t</type>
          <declname>num_copies</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="213" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1aeb0622138ab635c38a5f95599dcd2a7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::UnsafeAppend</definition>
        <argsstring>(T value)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="219" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ab377c4ebb3410b83e123525105314d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::UnsafeAppend</definition>
        <argsstring>(const T *values, int64_t num_elements)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="223" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1adf4250641915431f30737d0bb5ca48ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::UnsafeAppend</definition>
        <argsstring>(Iter values_begin, Iter values_end)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>Iter</type>
          <declname>values_begin</declname>
        </param>
        <param>
          <type>Iter</type>
          <declname>values_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="229" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a1198a0c0ec16873da8fad8b14c0d858b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::UnsafeAppend</definition>
        <argsstring>(const int64_t num_copies, T value)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const int64_t</type>
          <declname>num_copies</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="236" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a69b2c15e8fe460fb21920454bc8eb823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Resize</definition>
        <argsstring>(const int64_t new_capacity, bool shrink_to_fit=true)</argsstring>
        <name>Resize</name>
        <param>
          <type>const int64_t</type>
          <declname>new_capacity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shrink_to_fit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="242" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1abc360388521708752c9ddae2e085a2da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Reserve</definition>
        <argsstring>(const int64_t additional_elements)</argsstring>
        <name>Reserve</name>
        <param>
          <type>const int64_t</type>
          <declname>additional_elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="246" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1af99c2589da13d5a7315c2143d8beffe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Advance</definition>
        <argsstring>(const int64_t length)</argsstring>
        <name>Advance</name>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="250" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a05c95bb246556f872c8ab0b113fd89f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Finish</definition>
        <argsstring>(std::shared_ptr&lt; Buffer &gt; *out, bool shrink_to_fit=true)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shrink_to_fit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="254" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a02c1ea384e9345bb5365a3b29fc6ee18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="258" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a725518026223941b05bd690a7a5dcb1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="260" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a8fa8c26da4b579a3a1cc526a6f2aeaa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="261" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a35996a8d1aef7fb23808dd72cf83cb7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="262" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a420c7b5cf027df75670bcff014470b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;::mutable_data</definition>
        <argsstring>()</argsstring>
        <name>mutable_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="263" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="263" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classarrow_1_1_buffer_builder" kindref="compound">BufferBuilder</ref> for building a buffer of arithmetic elements. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="195" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="193" bodyend="267"/>
    <listofallmembers>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1af99c2589da13d5a7315c2143d8beffe4" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ad017cebd5a74de4ce237bd4b604ffbe9" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Append</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a29b44ec7ccf589d7c3166dc4471543b3" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Append</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1afd88ce089b857e1c34cc78f3a94a857f" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Append</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a164c709f46ec9b33d95833ff947b35ff" prot="private" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>bytes_builder_</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a8fa8c26da4b579a3a1cc526a6f2aeaa2" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a35996a8d1aef7fb23808dd72cf83cb7d" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>data</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a05c95bb246556f872c8ab0b113fd89f2" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a725518026223941b05bd690a7a5dcb1b" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>length</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a420c7b5cf027df75670bcff014470b95" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>mutable_data</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1abc360388521708752c9ddae2e085a2da" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a02c1ea384e9345bb5365a3b29fc6ee18" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a69b2c15e8fe460fb21920454bc8eb823" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ad6976dcfbdce307ec18f5efe220944f8" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>TypedBufferBuilder</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a37b0f0e7fa21f6533de04ca509bf401b" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>TypedBufferBuilder</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1aeb0622138ab635c38a5f95599dcd2a7c" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1ab377c4ebb3410b83e123525105314d17" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1adf4250641915431f30737d0bb5ca48ac" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_typed_buffer_builder_3_01_t_00_01typename_01std_1_1enable__if_3_01std_1_1is__aritec42b86b747ba8f9be42ca702c779c07_1a1198a0c0ec16873da8fad8b14c0d858b" prot="public" virt="non-virtual"><scope>arrow::TypedBufferBuilder&lt; T, typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value||std::is_standard_layout&lt; T &gt;::value &gt;::type &gt;</scope><name>UnsafeAppend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
