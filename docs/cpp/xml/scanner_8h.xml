<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="scanner_8h" kind="file" language="C++">
    <compoundname>scanner.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="context_8h" local="yes">arrow/compute/context.h</includes>
    <includes refid="dataset_8h" local="yes">arrow/dataset/dataset.h</includes>
    <includes refid="arrow_2dataset_2projector_8h" local="yes">arrow/dataset/projector.h</includes>
    <includes refid="dataset_2type__fwd_8h" local="yes">arrow/dataset/type_fwd.h</includes>
    <includes refid="arrow_2dataset_2visibility_8h" local="yes">arrow/dataset/visibility.h</includes>
    <includes refid="memory__pool_8h" local="yes">arrow/memory_pool.h</includes>
    <includedby refid="dataset_2api_8h" local="yes">/arrow/cpp/src/arrow/dataset/api.h</includedby>
    <includedby refid="file__base_8h" local="yes">/arrow/cpp/src/arrow/dataset/file_base.h</includedby>
    <includedby refid="arrow_2dataset_2pch_8h" local="yes">/arrow/cpp/src/arrow/dataset/pch.h</includedby>
    <includedby refid="scanner__internal_8h" local="yes">/arrow/cpp/src/arrow/dataset/scanner_internal.h</includedby>
    <incdepgraph>
      <node id="6039">
        <label>atomic</label>
      </node>
      <node id="6043">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6044" relation="include">
        </childnode>
        <childnode refid="6034" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
      </node>
      <node id="6054">
        <label>arrow/dataset/projector.h</label>
        <link refid="arrow_2dataset_2projector_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6035" relation="include">
        </childnode>
        <childnode refid="6052" relation="include">
        </childnode>
        <childnode refid="6053" relation="include">
        </childnode>
        <childnode refid="6049" relation="include">
        </childnode>
      </node>
      <node id="6051">
        <label>functional</label>
      </node>
      <node id="6037">
        <label>cstdint</label>
      </node>
      <node id="6040">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="6041" relation="include">
        </childnode>
        <childnode refid="6042" relation="include">
        </childnode>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6034" relation="include">
        </childnode>
        <childnode refid="6043" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
        <childnode refid="6046" relation="include">
        </childnode>
        <childnode refid="6048" relation="include">
        </childnode>
      </node>
      <node id="6049">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6035" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
        <childnode refid="6048" relation="include">
        </childnode>
      </node>
      <node id="6032">
        <label>string</label>
      </node>
      <node id="6033">
        <label>unordered_set</label>
      </node>
      <node id="6047">
        <label>ostream</label>
      </node>
      <node id="6048">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="6036">
        <label>arrow/compute/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="6037" relation="include">
        </childnode>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6038" relation="include">
        </childnode>
        <childnode refid="6040" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
        <childnode refid="6048" relation="include">
        </childnode>
      </node>
      <node id="6038">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="6039" relation="include">
        </childnode>
        <childnode refid="6037" relation="include">
        </childnode>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6040" relation="include">
        </childnode>
        <childnode refid="6049" relation="include">
        </childnode>
        <childnode refid="6048" relation="include">
        </childnode>
      </node>
      <node id="6035">
        <label>vector</label>
      </node>
      <node id="6034">
        <label>utility</label>
      </node>
      <node id="6030">
        <label>/arrow/cpp/src/arrow/dataset/scanner.h</label>
        <link refid="scanner_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6033" relation="include">
        </childnode>
        <childnode refid="6034" relation="include">
        </childnode>
        <childnode refid="6035" relation="include">
        </childnode>
        <childnode refid="6036" relation="include">
        </childnode>
        <childnode refid="6050" relation="include">
        </childnode>
        <childnode refid="6054" relation="include">
        </childnode>
        <childnode refid="6052" relation="include">
        </childnode>
        <childnode refid="6053" relation="include">
        </childnode>
        <childnode refid="6038" relation="include">
        </childnode>
      </node>
      <node id="6042">
        <label>iosfwd</label>
      </node>
      <node id="6050">
        <label>arrow/dataset/dataset.h</label>
        <link refid="dataset_8h"/>
        <childnode refid="6051" relation="include">
        </childnode>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6034" relation="include">
        </childnode>
        <childnode refid="6035" relation="include">
        </childnode>
        <childnode refid="6052" relation="include">
        </childnode>
        <childnode refid="6053" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
      </node>
      <node id="6052">
        <label>arrow/dataset/type_fwd.h</label>
        <link refid="dataset_2type__fwd_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6035" relation="include">
        </childnode>
        <childnode refid="6053" relation="include">
        </childnode>
        <childnode refid="6049" relation="include">
        </childnode>
      </node>
      <node id="6053">
        <label>arrow/dataset/visibility.h</label>
        <link refid="arrow_2dataset_2visibility_8h"/>
      </node>
      <node id="6044">
        <label>type_traits</label>
      </node>
      <node id="6041">
        <label>cstring</label>
      </node>
      <node id="6046">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="6031" relation="include">
        </childnode>
        <childnode refid="6047" relation="include">
        </childnode>
        <childnode refid="6032" relation="include">
        </childnode>
        <childnode refid="6034" relation="include">
        </childnode>
        <childnode refid="6048" relation="include">
        </childnode>
      </node>
      <node id="6031">
        <label>memory</label>
      </node>
      <node id="6045">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="6037" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6059">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="6056" relation="include">
        </childnode>
      </node>
      <node id="6057">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="6056" relation="include">
        </childnode>
        <childnode refid="6058" relation="include">
        </childnode>
        <childnode refid="6059" relation="include">
        </childnode>
      </node>
      <node id="6061">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="6058">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="6056" relation="include">
        </childnode>
      </node>
      <node id="6055">
        <label>/arrow/cpp/src/arrow/dataset/scanner.h</label>
        <link refid="scanner_8h"/>
        <childnode refid="6056" relation="include">
        </childnode>
        <childnode refid="6057" relation="include">
        </childnode>
        <childnode refid="6060" relation="include">
        </childnode>
        <childnode refid="6061" relation="include">
        </childnode>
      </node>
      <node id="6060">
        <label>/arrow/cpp/src/arrow/dataset/pch.h</label>
        <link refid="arrow_2dataset_2pch_8h"/>
      </node>
      <node id="6056">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structarrow_1_1dataset_1_1_scan_context" prot="public">arrow::dataset::ScanContext</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_scan_options" prot="public">arrow::dataset::ScanOptions</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_scan_task" prot="public">arrow::dataset::ScanTask</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_in_memory_scan_task" prot="public">arrow::dataset::InMemoryScanTask</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_scanner" prot="public">arrow::dataset::Scanner</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_scanner_builder" prot="public">arrow::dataset::ScannerBuilder</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1dataset">arrow::dataset</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">arrow/compute/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataset_8h" kindref="compound">arrow/dataset/dataset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2dataset_2projector_8h" kindref="compound">arrow/dataset/projector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataset_2type__fwd_8h" kindref="compound">arrow/dataset/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2dataset_2visibility_8h" kindref="compound">arrow/dataset/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__pool_8h" kindref="compound">arrow/memory_pool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Table;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TaskGroup;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dataset<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structarrow_1_1dataset_1_1_scan_context" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="structarrow_1_1dataset_1_1_scan_context_1a33f649a12f0964275c50ed01be80fb69" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structarrow_1_1dataset_1_1_scan_context_1a5b91375d6c3f9e4d3a618e9fe86e2505" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_threads<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;internal::TaskGroup&gt;<sp/>TaskGroup()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classarrow_1_1dataset_1_1_scan_options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classarrow_1_1dataset_1_1_scan_options_1a19f9ff42556e7d48808993dcca766027" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_options_1a19f9ff42556e7d48808993dcca766027" kindref="member">Make</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref>(std::move(schema)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>options<sp/>with<sp/>a<sp/>different<sp/>schema.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>projector<sp/>will<sp/>be<sp/>reconstructed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>ReplaceSchema(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classarrow_1_1dataset_1_1_scan_options_1a00d7cd40824d0f8949502873484187d7" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Expression&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_options_1a00d7cd40824d0f8949502873484187d7" kindref="member">filter</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluator<sp/>for<sp/>Filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classarrow_1_1dataset_1_1_scan_options_1a9df896726eacf0410a3d7b35e66cd859" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ExpressionEvaluator&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_options_1a9df896726eacf0410a3d7b35e66cd859" kindref="member">evaluator</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Schema<sp/>to<sp/>which<sp/>record<sp/>batches<sp/>will<sp/>be<sp/>reconciled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classarrow_1_1dataset_1_1_scan_options_1a9f58264a9531bd90f5a517b4c75b5724" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_options_1a9f58264a9531bd90f5a517b4c75b5724" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>projector.schema();<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Projector<sp/>for<sp/>reconciling<sp/>the<sp/>final<sp/>RecordBatch<sp/>to<sp/>the<sp/>requested<sp/>schema.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classarrow_1_1dataset_1_1_scan_options_1affc67a05e4ff3120aa9d45c071f5f457" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref><sp/><ref refid="classarrow_1_1dataset_1_1_scan_options_1affc67a05e4ff3120aa9d45c071f5f457" kindref="member">projector</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>row<sp/>count<sp/>for<sp/>scanned<sp/>batches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classarrow_1_1dataset_1_1_scan_options_1a3c28eef3c8804a93c488a4861ad193ee" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/>batch_size<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>vector<sp/>of<sp/>fields<sp/>that<sp/>requires<sp/>materialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>usually<sp/>the<sp/>union<sp/>of<sp/>the<sp/>fields<sp/>referenced<sp/>in<sp/>the<sp/>projection<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>expression.<sp/>Examples:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>`SELECT<sp/>a,<sp/>b<sp/>WHERE<sp/>a<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>c<sp/>&gt;<sp/>1`<sp/>=&gt;<sp/>[&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;a&quot;,<sp/>&quot;c&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>`SELECT<sp/>a<sp/>+<sp/>b<sp/>&lt;<sp/>3<sp/>WHERE<sp/>a<sp/>&gt;<sp/>1`<sp/>=&gt;<sp/>[&quot;a&quot;,<sp/>&quot;b&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>needed<sp/>for<sp/>expression<sp/>where<sp/>a<sp/>field<sp/>may<sp/>not<sp/>be<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>the<sp/>final<sp/>projection<sp/>but<sp/>is<sp/>still<sp/>required<sp/>to<sp/>evaluate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>expression.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>by<sp/>Fragments<sp/>implementation<sp/>to<sp/>apply<sp/>the<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sub-selection<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>MaterializedFields()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref>(std::shared_ptr&lt;Schema&gt;<sp/>schema);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classarrow_1_1dataset_1_1_scan_task" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_scan_task" kindref="compound">ScanTask</ref><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;RecordBatchIterator&gt;</ref><sp/>Execute()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_scan_task" kindref="compound">ScanTask</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1dataset_1_1_scan_task_1ac49a5f8595955c06cf1999aaa1424fd4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_task_1ac49a5f8595955c06cf1999aaa1424fd4" kindref="member">options</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options_;<sp/>}</highlight></codeline>
<codeline lineno="115" refid="classarrow_1_1dataset_1_1_scan_task_1a03176fc4d3ece4ba543c35f7c6910e89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanContext&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_task_1a03176fc4d3ece4ba543c35f7c6910e89" kindref="member">context</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context_;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118" refid="classarrow_1_1dataset_1_1_scan_task_1af63c00b0e1373d5997e5503411398cc6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_scan_task_1af63c00b0e1373d5997e5503411398cc6" kindref="member">ScanTask</ref>(std::shared_ptr&lt;ScanOptions&gt;<sp/>options,<sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>context)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>options_(<ref refid="namespacestd" kindref="compound">std</ref>::move(options)),<sp/>context_(<ref refid="namespacestd" kindref="compound">std</ref>::move(context))<sp/>{}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classarrow_1_1dataset_1_1_scan_task_1a5063400971461979bbb900d5bf64aff3" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_task_1a5063400971461979bbb900d5bf64aff3" kindref="member">options_</ref>;</highlight></codeline>
<codeline lineno="122" refid="classarrow_1_1dataset_1_1_scan_task_1a080bf2d9988d8d0ad9051cb21873ffcd" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scan_task_1a080bf2d9988d8d0ad9051cb21873ffcd" kindref="member">context_</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classarrow_1_1dataset_1_1_in_memory_scan_task" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_scan_task" kindref="compound">InMemoryScanTask</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_scan_task" kindref="compound">ScanTask</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128" refid="classarrow_1_1dataset_1_1_in_memory_scan_task_1a3ec629fddddbd9f772bc47bd635538e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_scan_task_1a3ec629fddddbd9f772bc47bd635538e9" kindref="member">InMemoryScanTask</ref>(std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;<sp/>record_batches,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>options,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>context)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_scan_task" kindref="compound">ScanTask</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(options),<sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(context)),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record_batches_(<ref refid="namespacestd" kindref="compound">std</ref>::move(record_batches))<sp/>{}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;RecordBatchIterator&gt;</ref><sp/>Execute()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137" refid="classarrow_1_1dataset_1_1_in_memory_scan_task_1a4cc862dfedb751ca3b1124f380bdad97" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_in_memory_scan_task_1a4cc862dfedb751ca3b1124f380bdad97" kindref="member">record_batches_</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;ScanTaskIterator&gt;</ref><sp/><ref refid="namespacearrow_1_1dataset_1a0148791459932f55a1260bcf98952793" kindref="member">ScanTaskIteratorFromRecordBatch</ref>(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;<sp/>batches,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>options,<sp/>std::shared_ptr&lt;ScanContext&gt;);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classarrow_1_1dataset_1_1_scanner" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_scanner" kindref="compound">Scanner</ref><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155" refid="classarrow_1_1dataset_1_1_scanner_1a48f5f29614584eac06abf869e31e9d39" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a48f5f29614584eac06abf869e31e9d39" kindref="member">Scanner</ref>(std::shared_ptr&lt;Dataset&gt;<sp/>dataset,<sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>scan_context)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>dataset_(<ref refid="namespacestd" kindref="compound">std</ref>::move(dataset)),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_options_(<ref refid="namespacestd" kindref="compound">std</ref>::move(scan_options)),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_context_(<ref refid="namespacestd" kindref="compound">std</ref>::move(scan_context))<sp/>{}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classarrow_1_1dataset_1_1_scanner_1abb1af6defbfbe9e38b0d77d51c5a57ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1abb1af6defbfbe9e38b0d77d51c5a57ce" kindref="member">Scanner</ref>(std::shared_ptr&lt;Fragment&gt;<sp/>fragment,<sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>scan_context)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fragment_(<ref refid="namespacestd" kindref="compound">std</ref>::move(fragment)),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_options_(fragment_-&gt;scan_options()),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_context_(<ref refid="namespacestd" kindref="compound">std</ref>::move(scan_context))<sp/>{}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;ScanTaskIterator&gt;</ref><sp/>Scan();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>ToTable();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>GetFragments();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classarrow_1_1dataset_1_1_scanner_1a10ec007f0958a624a6262d5b3b466dac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a10ec007f0958a624a6262d5b3b466dac" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scan_options_-&gt;schema();<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classarrow_1_1dataset_1_1_scanner_1adddf7d3dea394e017624ad7ea6c27b71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanOptions&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1adddf7d3dea394e017624ad7ea6c27b71" kindref="member">options</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scan_options_;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classarrow_1_1dataset_1_1_scanner_1a339333233cc8a0c4abd6497ba86afb4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ScanContext&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a339333233cc8a0c4abd6497ba86afb4a" kindref="member">context</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scan_context_;<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187" refid="classarrow_1_1dataset_1_1_scanner_1a45845a7347d0a487338463bed77a8aec" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Dataset&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a45845a7347d0a487338463bed77a8aec" kindref="member">dataset_</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(ARROW-8065)<sp/>remove<sp/>fragment_<sp/>after<sp/>a<sp/>Dataset<sp/>is<sp/>constuctible<sp/>from<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classarrow_1_1dataset_1_1_scanner_1a63021202875dc2c322e27adc8c22a3df" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Fragment&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a63021202875dc2c322e27adc8c22a3df" kindref="member">fragment_</ref>;</highlight></codeline>
<codeline lineno="190" refid="classarrow_1_1dataset_1_1_scanner_1a1b29c0b3c3853dcb625491c684869ffb" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1a1b29c0b3c3853dcb625491c684869ffb" kindref="member">scan_options_</ref>;</highlight></codeline>
<codeline lineno="191" refid="classarrow_1_1dataset_1_1_scanner_1aedbd13f65aa59dae32d50daa7a039ddc" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_1aedbd13f65aa59dae32d50daa7a039ddc" kindref="member">scan_context_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classarrow_1_1dataset_1_1_scanner_builder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_scanner_builder" kindref="compound">ScannerBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_scanner_builder" kindref="compound">ScannerBuilder</ref>(std::shared_ptr&lt;Dataset&gt;<sp/>dataset,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>scan_context);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Project(std::vector&lt;std::string&gt;<sp/>columns);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1a5197379391d1425601f697bc949d7229" kindref="member">Filter</ref>(std::shared_ptr&lt;Expression&gt;<sp/>filter);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1a5197379391d1425601f697bc949d7229" kindref="member">Filter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref>&amp;<sp/>filter);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>UseThreads(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_threads<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>BatchSize(int64_t<sp/>batch_size);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Scanner&gt;</ref>&gt;<sp/>Finish()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classarrow_1_1dataset_1_1_scanner_builder_1aba4fd10be789d5faa1cbb2a005ad03fa" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_scanner_builder_1aba4fd10be789d5faa1cbb2a005ad03fa" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataset_-&gt;schema();<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Dataset&gt;<sp/>dataset_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanOptions&gt;<sp/>scan_options_;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ScanContext&gt;<sp/>scan_context_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_projection_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>project_columns_;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/dataset/scanner.h"/>
  </compounddef>
</doxygen>
