<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_flight_stream_writer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::flight::FlightStreamWriter</compoundname>
    <basecompoundref refid="classarrow_1_1ipc_1_1_record_batch_writer" prot="public" virt="non-virtual">arrow::ipc::RecordBatchWriter</basecompoundref>
    <includes refid="arrow_2flight_2client_8h" local="no">arrow/flight/client.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_stream_writer_1a7e38b5ee1d907203b953c3543bd608c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::FlightStreamWriter::WriteWithMetadata</definition>
        <argsstring>(const RecordBatch &amp;batch, std::shared_ptr&lt; Buffer &gt; app_metadata)=0</argsstring>
        <name>WriteWithMetadata</name>
        <param>
          <type>const <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &amp;</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt;</type>
          <declname>app_metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/client.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_stream_writer_1a5d0da94bfa911d652d8257ee13fbe8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::FlightStreamWriter::DoneWriting</definition>
        <argsstring>()=0</argsstring>
        <name>DoneWriting</name>
        <briefdescription>
<para>Indicate that the application is done writing to this stream. </para>        </briefdescription>
        <detaileddescription>
<para>The application may not write to this stream after calling this. This differs from closing the stream because this writer may represent only one half of a readable and writable stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/client.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A RecordBatchWriter that also allows sending application-defined metadata via the Flight protocol. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1930">
        <label>arrow::flight::FlightStreamWriter</label>
        <link refid="classarrow_1_1flight_1_1_flight_stream_writer"/>
        <childnode refid="1931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1931">
        <label>arrow::ipc::RecordBatchWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_writer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1932">
        <label>arrow::flight::FlightStreamWriter</label>
        <link refid="classarrow_1_1flight_1_1_flight_stream_writer"/>
        <childnode refid="1933" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1933">
        <label>arrow::ipc::RecordBatchWriter</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_writer"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/flight/client.h" line="91" column="1" bodyfile="/arrow/cpp/src/arrow/flight/client.h" bodystart="91" bodyend="101"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1706dac64039b5e46bf03458d65ed1a" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>Close</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_stream_writer_1a5d0da94bfa911d652d8257ee13fbe8ed" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>DoneWriting</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac8080471d5fccf8a486955932a3965ed" prot="public" virt="non-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>set_memory_pool</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1a9f8bf7d6a2fa74a05e345097aa171e6e" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>WriteRecordBatch</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ad1d588a01d6e03df40baa283d207d00c" prot="public" virt="non-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1af1d2049d61c5d3e18ccdd3001d104982" prot="public" virt="non-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>WriteTable</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_stream_writer_1a7e38b5ee1d907203b953c3543bd608c5" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>WriteWithMetadata</name></member>
      <member refid="classarrow_1_1ipc_1_1_record_batch_writer_1ac1eab409618a90045b1bba229d401f28" prot="public" virt="virtual"><scope>arrow::flight::FlightStreamWriter</scope><name>~RecordBatchWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
