<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_level_encoder" kind="class" language="C++" prot="public">
    <compoundname>parquet::LevelEncoder</compoundname>
    <includes refid="column__writer_8h" local="no">parquet/column_writer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_level_encoder_1a8d810d62e3e08ce76ea66b5ebc2bc875" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::LevelEncoder::bit_width_</definition>
        <argsstring></argsstring>
        <name>bit_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="75" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_level_encoder_1acbe2dc65f66e2bf73a48de43d6a7f930" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::LevelEncoder::rle_length_</definition>
        <argsstring></argsstring>
        <name>rle_length_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="76" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_level_encoder_1a42b2b705186086ad87fbfe6dc79aeec4" prot="private" static="no" mutable="no">
        <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
        <definition>Encoding::type parquet::LevelEncoder::encoding_</definition>
        <argsstring></argsstring>
        <name>encoding_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="77" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_level_encoder_1ab9b975c0ef35d22d4ce0e09dbdeeee56" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt;::<ref refid="classarrow_1_1util_1_1_rle_encoder" kindref="compound">arrow::util::RleEncoder</ref> &gt;</type>
        <definition>std::unique_ptr&lt;::arrow::util::RleEncoder&gt; parquet::LevelEncoder::rle_encoder_</definition>
        <argsstring></argsstring>
        <name>rle_encoder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="78" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_level_encoder_1a25b164ecfba4ce91c0aeb0a13b54d23b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt;::arrow::BitUtil::BitWriter &gt;</type>
        <definition>std::unique_ptr&lt;::arrow::BitUtil::BitWriter&gt; parquet::LevelEncoder::bit_packed_encoder_</definition>
        <argsstring></argsstring>
        <name>bit_packed_encoder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="79" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1a8f37ad9cf3b9b778aada6c5e1c654573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::LevelEncoder::LevelEncoder</definition>
        <argsstring>()</argsstring>
        <name>LevelEncoder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1ace7ccce389603373e53186e10d692b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::LevelEncoder::~LevelEncoder</definition>
        <argsstring>()</argsstring>
        <name>~LevelEncoder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1ac238630442c49056ec989d2e05ebee0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::LevelEncoder::Init</definition>
        <argsstring>(Encoding::type encoding, int16_t max_level, int num_buffered_values, uint8_t *data, int data_size)</argsstring>
        <name>Init</name>
        <param>
          <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_buffered_values</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1a3047fa51945d08b1d0a570c9581398b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::LevelEncoder::Encode</definition>
        <argsstring>(int batch_size, const int16_t *levels)</argsstring>
        <name>Encode</name>
        <param>
          <type>int</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1a510a14e96e8b9ccbf7f6cb122a68950e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t parquet::LevelEncoder::len</definition>
        <argsstring>()</argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="67" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_level_encoder_1a04b6d213e6348e9c7367c20547570e0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parquet::LevelEncoder::MaxBufferSize</definition>
        <argsstring>(Encoding::type encoding, int16_t max_level, int num_buffered_values)</argsstring>
        <name>MaxBufferSize</name>
        <param>
          <type><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>max_level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_buffered_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/column_writer.h" line="52" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="52" bodyend="80"/>
    <listofallmembers>
      <member refid="classparquet_1_1_level_encoder_1a25b164ecfba4ce91c0aeb0a13b54d23b" prot="private" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>bit_packed_encoder_</name></member>
      <member refid="classparquet_1_1_level_encoder_1a8d810d62e3e08ce76ea66b5ebc2bc875" prot="private" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>bit_width_</name></member>
      <member refid="classparquet_1_1_level_encoder_1a3047fa51945d08b1d0a570c9581398b3" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>Encode</name></member>
      <member refid="classparquet_1_1_level_encoder_1a42b2b705186086ad87fbfe6dc79aeec4" prot="private" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>encoding_</name></member>
      <member refid="classparquet_1_1_level_encoder_1ac238630442c49056ec989d2e05ebee0e" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>Init</name></member>
      <member refid="classparquet_1_1_level_encoder_1a510a14e96e8b9ccbf7f6cb122a68950e" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>len</name></member>
      <member refid="classparquet_1_1_level_encoder_1a8f37ad9cf3b9b778aada6c5e1c654573" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>LevelEncoder</name></member>
      <member refid="classparquet_1_1_level_encoder_1a04b6d213e6348e9c7367c20547570e0f" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>MaxBufferSize</name></member>
      <member refid="classparquet_1_1_level_encoder_1ab9b975c0ef35d22d4ce0e09dbdeeee56" prot="private" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>rle_encoder_</name></member>
      <member refid="classparquet_1_1_level_encoder_1acbe2dc65f66e2bf73a48de43d6a7f930" prot="private" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>rle_length_</name></member>
      <member refid="classparquet_1_1_level_encoder_1ace7ccce389603373e53186e10d692b9f" prot="public" virt="non-virtual"><scope>parquet::LevelEncoder</scope><name>~LevelEncoder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
