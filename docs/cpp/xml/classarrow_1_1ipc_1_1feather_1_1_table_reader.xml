<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1feather_1_1_table_reader" kind="class" language="C++" prot="public">
    <compoundname>arrow::ipc::feather::TableReader</compoundname>
    <includes refid="feather_8h" local="no">arrow/ipc/feather.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a9b0205b1fa948d5b756dd330012f4325" prot="private" static="no" mutable="no">
        <type>class <ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref></type>
        <definition>class ARROW_NO_EXPORT arrow::ipc::feather::TableReader::TableReaderImpl</definition>
        <argsstring></argsstring>
        <name>TableReaderImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="120" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/feather.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1ad2c39ff6cb1e3d09c8b934991139b6fd" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; TableReaderImpl &gt;</type>
        <definition>std::unique_ptr&lt;TableReaderImpl&gt; arrow::ipc::feather::TableReader::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="124" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/feather.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a24cabf078d9fa0f526811e79f2843f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::feather::TableReader::TableReader</definition>
        <argsstring>()</argsstring>
        <name>TableReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a2db56428c818a24c3d4bcd7ddbb1c1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::feather::TableReader::~TableReader</definition>
        <argsstring>()</argsstring>
        <name>~TableReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1aa725c53f94a3cd6ef282ce1905dcd320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::ipc::feather::TableReader::GetDescription</definition>
        <argsstring>() const</argsstring>
        <name>GetDescription</name>
        <briefdescription>
<para>Optional table description. </para>        </briefdescription>
        <detaileddescription>
<para>This does not return a const std::string&amp; because a string has to be copied from the flatbuffer to be able to return a non-flatbuffer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a9993890e5a918cf5f1499d6d90f601a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::ipc::feather::TableReader::HasDescription</definition>
        <argsstring>() const</argsstring>
        <name>HasDescription</name>
        <briefdescription>
<para>Return true if the table has a description field populated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a25d6ef6f2d30fe5d344e2652b75aa0df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::ipc::feather::TableReader::version</definition>
        <argsstring>() const</argsstring>
        <name>version</name>
        <briefdescription>
<para>Return the version number of the Feather file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1af0522c4baed022053f595cdb8fba7813" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::ipc::feather::TableReader::num_rows</definition>
        <argsstring>() const</argsstring>
        <name>num_rows</name>
        <briefdescription>
<para>Return the number of rows in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a6355b47ca873a41f0c961e147626663a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::ipc::feather::TableReader::num_columns</definition>
        <argsstring>() const</argsstring>
        <name>num_columns</name>
        <briefdescription>
<para>Return the number of columns in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1abebeef0907bd96ee6551e180663984be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::ipc::feather::TableReader::GetColumnName</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetColumnName</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a44e44200971d7e1c4b51b995b7f5cfbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::feather::TableReader::GetColumn</definition>
        <argsstring>(int i, std::shared_ptr&lt; ChunkedArray &gt; *out)</argsstring>
        <name>GetColumn</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read a column from the file as an <ref refid="classarrow_1_1_chunked_array" kindref="compound">arrow::ChunkedArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>the column index to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned column </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a5cd76042179db2b89b1d2d1bd672cf16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::feather::TableReader::Read</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read all columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a0b5e5167abba67fd2293f09e118b1012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::feather::TableReader::Read</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;indices, std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read only the specified columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the column indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a651fb5efa8dac9d88609a432ca0b62ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::feather::TableReader::Read</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names, std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read only the specified columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">names</parametername>
</parameternamelist>
<parameterdescription>
<para>the column names to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_table_reader_1ad703b2796a5c051f00cc2a6207a0bf92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ipc::feather::TableReader::Open</definition>
        <argsstring>(const std::shared_ptr&lt; io::RandomAccessFile &gt; &amp;source, std::unique_ptr&lt; TableReader &gt; *out)</argsstring>
        <name>Open</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref> &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1feather_1_1_table_reader" kindref="compound">TableReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Open a Feather file from a RandomAccessFile interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>a RandomAccessFile instance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the table reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface for reading columns from Feather files. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="55" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/feather.h" bodystart="55" bodyend="125"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a44e44200971d7e1c4b51b995b7f5cfbc" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>GetColumn</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1abebeef0907bd96ee6551e180663984be" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>GetColumnName</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1aa725c53f94a3cd6ef282ce1905dcd320" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>GetDescription</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a9993890e5a918cf5f1499d6d90f601a8" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>HasDescription</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1ad2c39ff6cb1e3d09c8b934991139b6fd" prot="private" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>impl_</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a6355b47ca873a41f0c961e147626663a" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>num_columns</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1af0522c4baed022053f595cdb8fba7813" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>num_rows</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1ad703b2796a5c051f00cc2a6207a0bf92" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a5cd76042179db2b89b1d2d1bd672cf16" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a0b5e5167abba67fd2293f09e118b1012" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a651fb5efa8dac9d88609a432ca0b62ad" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a24cabf078d9fa0f526811e79f2843f69" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>TableReader</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a9b0205b1fa948d5b756dd330012f4325" prot="private" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>TableReaderImpl</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a25d6ef6f2d30fe5d344e2652b75aa0df" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>version</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_table_reader_1a2db56428c818a24c3d4bcd7ddbb1c1e5" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::TableReader</scope><name>~TableReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
