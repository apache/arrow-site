<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1util_1_1_arrow_log" kind="class" language="C++" prot="public">
    <compoundname>arrow::util::ArrowLog</compoundname>
    <basecompoundref refid="classarrow_1_1util_1_1_arrow_log_base" prot="public" virt="non-virtual">arrow::util::ArrowLogBase</basecompoundref>
    <includes refid="arrow_2util_2logging_8h" local="no">arrow/util/logging.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1util_1_1_arrow_log_1a583b05e0e84dfb81dae18c3a4d633875" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* arrow::util::ArrowLog::logging_provider_</definition>
        <argsstring></argsstring>
        <name>logging_provider_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="207" column="1" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1util_1_1_arrow_log_1ae5e5b9562c6658abb94abae4e47a9550" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::util::ArrowLog::is_enabled_</definition>
        <argsstring></argsstring>
        <name>is_enabled_</name>
        <briefdescription>
<para>True if log messages should be logged and false if they should be ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="209" column="1" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1util_1_1_arrow_log_1a94f54042a5b5e4e277ea96cbe5799d5d" prot="private" static="yes" mutable="no">
        <type><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref></type>
        <definition>ArrowLogLevel arrow::util::ArrowLog::severity_threshold_</definition>
        <argsstring></argsstring>
        <name>severity_threshold_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="211" column="1" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a004db0777d4ca21765aa92d847b211f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::util::ArrowLog::ArrowLog</definition>
        <argsstring>(const char *file_name, int line_number, ArrowLogLevel severity)</argsstring>
        <name>ArrowLog</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref></type>
          <declname>severity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1aaa1d9a156b411a1f2bf3e96495487409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::util::ArrowLog::~ArrowLog</definition>
        <argsstring>() override</argsstring>
        <name>~ArrowLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a69249e2b9b26c990116ef777c60862ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::util::ArrowLog::IsEnabled</definition>
        <argsstring>() const override</argsstring>
        <name>IsEnabled</name>
        <reimplements refid="classarrow_1_1util_1_1_arrow_log_base_1a392eb03c5a264213eec410e96b18af63">IsEnabled</reimplements>
        <briefdescription>
<para>Return whether or not current logging instance is enabled. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if logging is enabled and false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a61ba46783c104a2559531a3b4bfc9935" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void arrow::util::ArrowLog::StartArrowLog</definition>
        <argsstring>(const std::string &amp;appName, ArrowLogLevel severity_threshold=ArrowLogLevel::ARROW_INFO, const std::string &amp;logDir=&quot;&quot;)</argsstring>
        <name>StartArrowLog</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref></type>
          <declname>severity_threshold</declname>
          <defval><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343a59aacc91653e3ffb42c555add8409dd9" kindref="member">ArrowLogLevel::ARROW_INFO</ref></defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>logDir</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>The init function of arrow log for a program which should be called only once. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>appName</parametername>
</parameternamelist>
<parameterdescription>
<para>The app name which starts the log. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>severity_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Logging threshold for the program. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logDir</parametername>
</parameternamelist>
<parameterdescription>
<para>Logging output file name. If empty, the log won&apos;t output to file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a31b5c4ccde1f738466baceaed289ec69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void arrow::util::ArrowLog::ShutDownArrowLog</definition>
        <argsstring>()</argsstring>
        <name>ShutDownArrowLog</name>
        <briefdescription>
<para>The shutdown function of arrow log, it should be used with StartArrowLog as a pair. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a3e2a0cf715bb007aed318c999ea22b15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void arrow::util::ArrowLog::InstallFailureSignalHandler</definition>
        <argsstring>()</argsstring>
        <name>InstallFailureSignalHandler</name>
        <briefdescription>
<para>Install the failure signal handler to output call stack when crash. </para>        </briefdescription>
        <detaileddescription>
<para>If glog is not installed, this function won&apos;t do anything. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a332caeba62ae8a2a33cb98c4a629252a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void arrow::util::ArrowLog::UninstallSignalAction</definition>
        <argsstring>()</argsstring>
        <name>UninstallSignalAction</name>
        <briefdescription>
<para>Uninstall the signal actions installed by InstallFailureSignalHandler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a830d5c76421284abecb115cfc6e3edf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool arrow::util::ArrowLog::IsLevelEnabled</definition>
        <argsstring>(ArrowLogLevel log_level)</argsstring>
        <name>IsLevelEnabled</name>
        <param>
          <type><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref></type>
          <declname>log_level</declname>
        </param>
        <briefdescription>
<para>Return whether or not the log level is enabled in current setting. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log_level</parametername>
</parameternamelist>
<parameterdescription>
<para>The input log level to test. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if input log level is not lower than the threshold. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="200" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a8d138931b3d202babb3ac1cebba018ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::util::ArrowLog::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(ArrowLog)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">ArrowLog</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="203" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1util_1_1_arrow_log_1a3bff946a7ffc974907d4239413d38554" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; arrow::util::ArrowLog::Stream</definition>
        <argsstring>() override</argsstring>
        <name>Stream</name>
        <reimplements refid="classarrow_1_1util_1_1_arrow_log_base_1a08b98ff0ac9357ce569f5d3509e4651d">Stream</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="214" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="169">
        <label>arrow::util::ArrowLog</label>
        <link refid="classarrow_1_1util_1_1_arrow_log"/>
        <childnode refid="170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="170">
        <label>arrow::util::ArrowLogBase</label>
        <link refid="classarrow_1_1util_1_1_arrow_log_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="171">
        <label>arrow::util::ArrowLog</label>
        <link refid="classarrow_1_1util_1_1_arrow_log"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
      <node id="172">
        <label>arrow::util::ArrowLogBase</label>
        <link refid="classarrow_1_1util_1_1_arrow_log_base"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/util/logging.h" line="167" column="1" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="167" bodyend="215"/>
    <listofallmembers>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a8d138931b3d202babb3ac1cebba018ea" prot="private" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a004db0777d4ca21765aa92d847b211f1" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>ArrowLog</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a3e2a0cf715bb007aed318c999ea22b15" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>InstallFailureSignalHandler</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1ae5e5b9562c6658abb94abae4e47a9550" prot="private" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>is_enabled_</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a69249e2b9b26c990116ef777c60862ce" prot="public" virt="virtual"><scope>arrow::util::ArrowLog</scope><name>IsEnabled</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a830d5c76421284abecb115cfc6e3edf7" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>IsLevelEnabled</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a583b05e0e84dfb81dae18c3a4d633875" prot="private" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>logging_provider_</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_base_1a3f398448d0a9c28072bfa193d5fb9158" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>operator&lt;&lt;</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a94f54042a5b5e4e277ea96cbe5799d5d" prot="private" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>severity_threshold_</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a31b5c4ccde1f738466baceaed289ec69" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>ShutDownArrowLog</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a61ba46783c104a2559531a3b4bfc9935" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>StartArrowLog</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a3bff946a7ffc974907d4239413d38554" prot="protected" virt="virtual"><scope>arrow::util::ArrowLog</scope><name>Stream</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1a332caeba62ae8a2a33cb98c4a629252a" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>UninstallSignalAction</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_1aaa1d9a156b411a1f2bf3e96495487409" prot="public" virt="non-virtual"><scope>arrow::util::ArrowLog</scope><name>~ArrowLog</name></member>
      <member refid="classarrow_1_1util_1_1_arrow_log_base_1a08505cfe6c7950c0c821161e74bb3631" prot="public" virt="virtual"><scope>arrow::util::ArrowLog</scope><name>~ArrowLogBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
