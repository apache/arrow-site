<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="deprecated__io_8h" kind="file" language="C++">
    <compoundname>deprecated_io.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includedby refid="parquet_2api_2io_8h" local="yes">/arrow/cpp/src/parquet/api/io.h</includedby>
    <incdepgraph>
      <node id="19022">
        <label>atomic</label>
      </node>
      <node id="19008">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
      </node>
      <node id="19030">
        <label>limits</label>
      </node>
      <node id="18994">
        <label>cstdint</label>
      </node>
      <node id="18997">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18998" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="19003" relation="include">
        </childnode>
        <childnode refid="19004" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19024">
        <label>endian.h</label>
      </node>
      <node id="19009">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="18998" relation="include">
        </childnode>
        <childnode refid="19010" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19008" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19011" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19031">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19032" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
      </node>
      <node id="19005">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="18996">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19016" relation="include">
        </childnode>
        <childnode refid="19021" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19023" relation="include">
        </childnode>
        <childnode refid="19034" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
      </node>
      <node id="19015">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="19004" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19029">
        <label>cmath</label>
      </node>
      <node id="19028">
        <label>cassert</label>
      </node>
      <node id="19020">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
      </node>
      <node id="18999">
        <label>string</label>
      </node>
      <node id="19014">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19012">
        <label>ostream</label>
      </node>
      <node id="19007">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19003">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19004" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="19008" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="18993">
        <label>/arrow/cpp/src/parquet/deprecated_io.h</label>
        <link refid="deprecated__io_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
      </node>
      <node id="19021">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19022" relation="include">
        </childnode>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19023">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19024" relation="include">
        </childnode>
        <childnode refid="19025" relation="include">
        </childnode>
        <childnode refid="19026" relation="include">
        </childnode>
        <childnode refid="19027" relation="include">
        </childnode>
        <childnode refid="19028" relation="include">
        </childnode>
        <childnode refid="19029" relation="include">
        </childnode>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18998" relation="include">
        </childnode>
        <childnode refid="19030" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="19018" relation="include">
        </childnode>
        <childnode refid="19008" relation="include">
        </childnode>
        <childnode refid="19031" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19011" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
        <childnode refid="19033" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19027">
        <label>bitset</label>
      </node>
      <node id="19032">
        <label>tuple</label>
      </node>
      <node id="19002">
        <label>vector</label>
      </node>
      <node id="19019">
        <label>new</label>
      </node>
      <node id="19001">
        <label>utility</label>
      </node>
      <node id="19013">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19014" relation="include">
        </childnode>
      </node>
      <node id="19026">
        <label>array</label>
      </node>
      <node id="19016">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19017" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19004">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19010">
        <label>iosfwd</label>
      </node>
      <node id="19017">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19018" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19020" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19018">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19019" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19008" relation="include">
        </childnode>
      </node>
      <node id="19000">
        <label>type_traits</label>
      </node>
      <node id="19034">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="19030" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19018" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="19025">
        <label>algorithm</label>
      </node>
      <node id="18998">
        <label>cstring</label>
      </node>
      <node id="19011">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19012" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
      </node>
      <node id="18995">
        <label>memory</label>
      </node>
      <node id="19006">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="18994" relation="include">
        </childnode>
      </node>
      <node id="19033">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19000" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19038">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="19037">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="19035">
        <label>/arrow/cpp/src/parquet/deprecated_io.h</label>
        <link refid="deprecated__io_8h"/>
        <childnode refid="19036" relation="include">
        </childnode>
      </node>
      <node id="19036">
        <label>/arrow/cpp/src/parquet/api/io.h</label>
        <link refid="parquet_2api_2io_8h"/>
        <childnode refid="19037" relation="include">
        </childnode>
        <childnode refid="19038" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_file_interface" prot="public">parquet::FileInterface</innerclass>
    <innerclass refid="classparquet_1_1_random_access_source" prot="public">parquet::RandomAccessSource</innerclass>
    <innerclass refid="classparquet_1_1_output_stream" prot="public">parquet::OutputStream</innerclass>
    <innerclass refid="classparquet_1_1_parquet_input_wrapper" prot="public">parquet::ParquetInputWrapper</innerclass>
    <innerclass refid="classparquet_1_1_parquet_output_wrapper" prot="public">parquet::ParquetOutputWrapper</innerclass>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEPRECATED<sp/>IO<sp/>INTERFACES:<sp/>We<sp/>have<sp/>transitioned<sp/>to<sp/>using<sp/>the<sp/>Apache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arrow<sp/>file<sp/>input<sp/>and<sp/>output<sp/>abstract<sp/>interfaces<sp/>defined<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrow/io/interfaces.h.<sp/>These<sp/>legacy<sp/>interfaces<sp/>are<sp/>being<sp/>preserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>through<sp/>a<sp/>wrapper<sp/>layer<sp/>for<sp/>one<sp/>to<sp/>two<sp/>releases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classparquet_1_1_file_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_interface" kindref="compound">FileInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_file_interface" kindref="compound">FileInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Close()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>position<sp/>in<sp/>the<sp/>file<sp/>relative<sp/>to<sp/>the<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>Tell()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classparquet_1_1_random_access_source" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_interface" kindref="compound">FileInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>Size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>bytes<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>Read(int64_t<sp/>nbytes,<sp/>uint8_t*<sp/>out)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>Read(int64_t<sp/>nbytes)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes,<sp/>uint8_t*<sp/>out)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classparquet_1_1_output_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_output_stream" kindref="compound">OutputStream</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_interface" kindref="compound">FileInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_output_stream" kindref="compound">OutputStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>bytes<sp/>into<sp/>the<sp/>output<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>length)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classparquet_1_1_parquet_input_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_parquet_input_wrapper" kindref="compound">ParquetInputWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">::arrow::io::RandomAccessFile</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_input_wrapper" kindref="compound">ParquetInputWrapper</ref>(std::unique_ptr&lt;RandomAccessSource&gt;<sp/>source);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_input_wrapper" kindref="compound">ParquetInputWrapper</ref>(<ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref>*<sp/>source);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_parquet_input_wrapper" kindref="compound">ParquetInputWrapper</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FileInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">::arrow::Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Seekable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">::arrow::Status</ref><sp/>Seek(int64_t<sp/>position)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>InputStream<sp/>/<sp/>RandomAccessFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;int64_t&gt;</ref><sp/>Read(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>Read(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>ReadAt(int64_t<sp/>position,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;int64_t&gt;</ref><sp/>GetSize()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;RandomAccessSource&gt;<sp/>owned_source_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref>*<sp/>source_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classparquet_1_1_parquet_output_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_parquet_output_wrapper" kindref="compound">ParquetOutputWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">::arrow::io::OutputStream</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_output_wrapper" kindref="compound">ParquetOutputWrapper</ref>(std::shared_ptr&lt;::parquet::OutputStream&gt;<sp/>sink);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_output_wrapper" kindref="compound">ParquetOutputWrapper</ref>(std::unique_ptr&lt;::parquet::OutputStream&gt;<sp/>sink);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_output_wrapper" kindref="compound">ParquetOutputWrapper</ref>(::<ref refid="classparquet_1_1_output_stream" kindref="compound">parquet::OutputStream</ref>*<sp/>sink);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_parquet_output_wrapper" kindref="compound">ParquetOutputWrapper</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FileInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">::arrow::Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">::arrow::Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">::arrow::Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;::parquet::OutputStream&gt;<sp/>owned_sink_;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;::parquet::OutputStream&gt;<sp/>shared_sink_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_output_stream" kindref="compound">::parquet::OutputStream</ref>*<sp/>sink_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed_;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/deprecated_io.h"/>
  </compounddef>
</doxygen>
