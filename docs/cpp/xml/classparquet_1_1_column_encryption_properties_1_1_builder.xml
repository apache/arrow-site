<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_encryption_properties_1_1_builder" kind="class" language="C++" prot="public">
    <compoundname>parquet::ColumnEncryptionProperties::Builder</compoundname>
    <includes refid="encryption_8h" local="no">parquet/encryption.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a89b972ac4c3c6d88a97b9d98a02faad2" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string parquet::ColumnEncryptionProperties::Builder::column_path_</definition>
        <argsstring></argsstring>
        <name>column_path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="129" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_encryption_properties_1_1_builder_1ae57ebecc936ec1fa08378a21e481c9a0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::ColumnEncryptionProperties::Builder::encrypted_</definition>
        <argsstring></argsstring>
        <name>encrypted_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="130" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_encryption_properties_1_1_builder_1acd12b8be978f56e5b235118a0e98e167" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::ColumnEncryptionProperties::Builder::key_</definition>
        <argsstring></argsstring>
        <name>key_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="131" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_encryption_properties_1_1_builder_1aba911b37c0cda13ead812d0b1d391afe" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::ColumnEncryptionProperties::Builder::key_metadata_</definition>
        <argsstring></argsstring>
        <name>key_metadata_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="132" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a42837095e1a38a6acd85173da7fcbe10" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnEncryptionProperties::Builder::Builder</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>Builder</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Convenience builder for encrypted columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="98" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a08ff6a4547b38d09395b343fbfc47c55" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnEncryptionProperties::Builder::Builder</definition>
        <argsstring>(const std::shared_ptr&lt; schema::ColumnPath &gt; &amp;path)</argsstring>
        <name>Builder</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Convenience builder for encrypted columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="101" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a247d8ac5e19ca7e5e7cc5360cb8ac507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::ColumnEncryptionProperties::Builder::key</definition>
        <argsstring>(std::string column_key)</argsstring>
        <name>key</name>
        <param>
          <type>std::string</type>
          <declname>column_key</declname>
        </param>
        <briefdescription>
<para>Set a column-specific key. </para>        </briefdescription>
        <detaileddescription>
<para>If key is not set on an encrypted column, the column will be encrypted with the footer key. keyBytes Key length must be either 16, 24 or 32 bytes. The key is cloned, and will be wiped out (array values set to 0) upon completion of file writing. Caller is responsible for wiping out the input key array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1af2c5d5b95d4196905b586801f7316096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::ColumnEncryptionProperties::Builder::key_metadata</definition>
        <argsstring>(const std::string &amp;key_metadata)</argsstring>
        <name>key_metadata</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key_metadata</declname>
        </param>
        <briefdescription>
<para>Set a key retrieval metadata. </para>        </briefdescription>
        <detaileddescription>
<para>use either <ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1af2c5d5b95d4196905b586801f7316096" kindref="member">key_metadata()</ref> or <ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1ad94e368a423ad1872631503197019668" kindref="member">key_id()</ref>, not both </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1ad94e368a423ad1872631503197019668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref> *</type>
        <definition>Builder* parquet::ColumnEncryptionProperties::Builder::key_id</definition>
        <argsstring>(const std::string &amp;key_id)</argsstring>
        <name>key_id</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key_id</declname>
        </param>
        <briefdescription>
<para>A convenience function to set key metadata using a string id. </para>        </briefdescription>
        <detaileddescription>
<para>Set a key retrieval metadata (converted from String). use either <ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1af2c5d5b95d4196905b586801f7316096" kindref="member">key_metadata()</ref> or <ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1ad94e368a423ad1872631503197019668" kindref="member">key_id()</ref>, not both key_id will be converted to metadata (UTF-8 array). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a5d3126e8c4c7604ea4fae417bbe1dc68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ColumnEncryptionProperties&gt; parquet::ColumnEncryptionProperties::Builder::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="123" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="123" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_column_encryption_properties_1_1_builder_1a7590deeb51ffb8afcb2a06c9adb2a4d9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnEncryptionProperties::Builder::Builder</definition>
        <argsstring>(const std::string path, bool encrypted)</argsstring>
        <name>Builder</name>
        <param>
          <type>const std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="134" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="134" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/encryption.h" line="95" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="95" bodyend="136"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a5d3126e8c4c7604ea4fae417bbe1dc68" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>build</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a42837095e1a38a6acd85173da7fcbe10" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>Builder</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a08ff6a4547b38d09395b343fbfc47c55" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>Builder</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a7590deeb51ffb8afcb2a06c9adb2a4d9" prot="private" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>Builder</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a89b972ac4c3c6d88a97b9d98a02faad2" prot="private" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>column_path_</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1ae57ebecc936ec1fa08378a21e481c9a0" prot="private" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>encrypted_</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a247d8ac5e19ca7e5e7cc5360cb8ac507" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>key</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1acd12b8be978f56e5b235118a0e98e167" prot="private" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>key_</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1ad94e368a423ad1872631503197019668" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>key_id</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1af2c5d5b95d4196905b586801f7316096" prot="public" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>key_metadata</name></member>
      <member refid="classparquet_1_1_column_encryption_properties_1_1_builder_1aba911b37c0cda13ead812d0b1d391afe" prot="private" virt="non-virtual"><scope>parquet::ColumnEncryptionProperties::Builder</scope><name>key_metadata_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
