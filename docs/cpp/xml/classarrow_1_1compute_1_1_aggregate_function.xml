<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_aggregate_function" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::compute::AggregateFunction</compoundname>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_aggregate_function_static_state" prot="public" virt="non-virtual">arrow::compute::AggregateFunctionStaticState&lt; StateType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1compute_1_1_aggregate_function_static_state" prot="public" virt="non-virtual">arrow::compute::AggregateFunctionStaticState&lt; State &gt;</derivedcompoundref>
    <includes refid="aggregate_8h" local="no">arrow/compute/kernels/aggregate.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a528a5c4be69b501039a75b02edc602cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::AggregateFunction::Consume</definition>
        <argsstring>(const Array &amp;input, void *state) const =0</argsstring>
        <name>Consume</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ace72785d9c92c264ad783a7eec24c143">Consume</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ace72785d9c92c264ad783a7eec24c143">Consume</reimplementedby>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Consume an array into a state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a4b5871b1fdfdacc15b34bfa8f06cc342" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::AggregateFunction::Merge</definition>
        <argsstring>(const void *src, void *dst) const =0</argsstring>
        <name>Merge</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1a13f5dc6a21279ab51cb077ef89c550f2">Merge</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1a13f5dc6a21279ab51cb077ef89c550f2">Merge</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Merge states. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a64c7175c4a7ff30a6332ec14cf7ba294" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::AggregateFunction::Finalize</definition>
        <argsstring>(const void *src, Datum *output) const =0</argsstring>
        <name>Finalize</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ae1a3215e0ce168e05d9e7fe415e94810">Finalize</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ae1a3215e0ce168e05d9e7fe415e94810">Finalize</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert state into a final result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a826b5a193e24381ddf54d9f8f1a69d3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual arrow::compute::AggregateFunction::~AggregateFunction</definition>
        <argsstring>()</argsstring>
        <name>~AggregateFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="58" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1af5efd6754d2fdd5e0f9881b53efe2322" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;DataType&gt; arrow::compute::AggregateFunction::out_type</definition>
        <argsstring>() const =0</argsstring>
        <name>out_type</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_sum_aggregate_function_1a9b1b098f9f32dbfd1a9bdaabf9cc4883">out_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1afe04ebaa4d6c1f525476f00294c5ef80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t arrow::compute::AggregateFunction::Size</definition>
        <argsstring>() const =0</argsstring>
        <name>Size</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1a4cae7095740edb4ea6359462e958d70f">Size</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1a4cae7095740edb4ea6359462e958d70f">Size</reimplementedby>
        <briefdescription>
<para>State management methods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a7edc5e94e4c7128c570508a1b2db7052" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void arrow::compute::AggregateFunction::New</definition>
        <argsstring>(void *ptr) const =0</argsstring>
        <name>New</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ac374ad61f9d59d476b23dcbe5428418a">New</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ac374ad61f9d59d476b23dcbe5428418a">New</reimplementedby>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_function_1a4740aa9e8febf25757f8e5b164b87bcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void arrow::compute::AggregateFunction::Delete</definition>
        <argsstring>(void *ptr) const =0</argsstring>
        <name>Delete</name>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ae837a3e24d4d696718985517196ef1d9">Delete</reimplementedby>
        <reimplementedby refid="classarrow_1_1compute_1_1_aggregate_function_static_state_1ae837a3e24d4d696718985517196ef1d9">Delete</reimplementedby>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1compute_1_1_aggregate_function" kindref="compound">AggregateFunction</ref> is an interface for Aggregates. </para>    </briefdescription>
    <detaileddescription>
<para>An aggregates transforms an array into single result called a state via the Consume method.. State supports the merge operation via the Merge method. State can be sealed into a final result via the Finalize method. State ownership is handled by callers, thus the interface exposes 3 methods for the caller to manage memory:<itemizedlist>
<listitem><para>Size</para></listitem><listitem><para>New (placement new constructor invocation)</para></listitem><listitem><para>Delete (state destructor)</para></listitem></itemizedlist>
</para><para>Design inspired by ClickHouse aggregate functions. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="51">
        <label>arrow::compute::AggregateFunction</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function"/>
      </node>
      <node id="53">
        <label>arrow::compute::SumAggregateFunction&lt; ArrowType, StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_sum_aggregate_function"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>arrow::compute::AggregateFunctionStaticState&lt; StateType &gt;</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function_static_state"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>arrow::compute::AggregateFunctionStaticState&lt; State &gt;</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_function_static_state"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="47" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" bodystart="47" bodyend="66"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a528a5c4be69b501039a75b02edc602cd" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>Consume</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a4740aa9e8febf25757f8e5b164b87bcd" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>Delete</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a64c7175c4a7ff30a6332ec14cf7ba294" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>Finalize</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a4b5871b1fdfdacc15b34bfa8f06cc342" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>Merge</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a7edc5e94e4c7128c570508a1b2db7052" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>New</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1af5efd6754d2fdd5e0f9881b53efe2322" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>out_type</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1afe04ebaa4d6c1f525476f00294c5ef80" prot="public" virt="pure-virtual"><scope>arrow::compute::AggregateFunction</scope><name>Size</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_function_1a826b5a193e24381ddf54d9f8f1a69d3b" prot="public" virt="virtual"><scope>arrow::compute::AggregateFunction</scope><name>~AggregateFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
