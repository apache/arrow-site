<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_writable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::io::Writable</compoundname>
    <derivedcompoundref refid="classarrow_1_1io_1_1_output_stream" prot="public" virt="non-virtual">arrow::io::OutputStream</derivedcompoundref>
    <includes refid="interfaces_8h" local="no">arrow/io/interfaces.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::io::Writable::~Writable</definition>
        <argsstring>()=default</argsstring>
        <name>~Writable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::io::Writable::Write</definition>
        <argsstring>(const void *data, int64_t nbytes)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="classarrow_1_1io_1_1_stdout_stream_1ae853de6dd0e39980954acf5c07921dc1">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_buffer_output_stream_1a8e637f158713cbc254e714d83a5710d9">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_compressed_output_stream_1a48b8e0daaf2ea4280238675e023350ef">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_file_output_stream_1a0f696e1c6827955c6306337b930247ca">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1_py_output_stream_1acf6e5f8750ce5c38879dea976abef386">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_stderr_stream_1a99319c33bcdd9d35e36c9790e5eb6d2e">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_buffered_output_stream_1a5668ed55058204e0235f58e036621a45">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_mock_output_stream_1a1eaec4069a49129bed7af3476128526f">Write</reimplementedby>
        <reimplementedby refid="classparquet_1_1_parquet_output_wrapper_1ab000fabff0d123e8ab09a8d2c6fe3812">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_fixed_size_buffer_writer_1a5b4d5f27023b1e90fa33c72c867bf88b">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_memory_mapped_file_1a8010d2df9fe39e6bd977f62cc9fab57b">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1cuda_1_1_cuda_buffer_writer_1a6f581e34f2ab08354be9ad8d2c0c5e7a">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_hdfs_output_stream_1a853e04eea4a807cb56d7e6c56db36c76">Write</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This method always processes the bytes in full. Depending on the semantics of the stream, the data may be written out immediately, held in a buffer, or written asynchronously. In the case where the stream buffers the data, it will be copied. To avoid potentially large copies, use the Write variant that takes an owned <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::io::Writable::Write</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;data)</argsstring>
        <name>Write</name>
        <reimplementedby refid="classarrow_1_1py_1_1_py_output_stream_1aa55c82246902c9ba5dd66b5438f47f33">Write</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_buffered_output_stream_1aabc285ebb13d48a41e21efbaa1a98487">Write</reimplementedby>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Since the <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> owns its memory, this method can avoid a copy if buffering is required. See <ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">Write(const void*, int64_t)</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::io::Writable::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <reimplementedby refid="classarrow_1_1io_1_1_compressed_output_stream_1af80e3bf7dc0b484060b9d0831d7a53c8">Flush</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_buffered_output_stream_1a31c9b6cdaad2df77af04bf7214e4b7b3">Flush</reimplementedby>
        <reimplementedby refid="classarrow_1_1cuda_1_1_cuda_buffer_writer_1a5b1378916dcf383f54bbe22ae6519119">Flush</reimplementedby>
        <reimplementedby refid="classarrow_1_1io_1_1_hdfs_output_stream_1abb9e85dcac81b757dbc737e28c62e747">Flush</reimplementedby>
        <briefdescription>
<para>Flush buffered bytes, if any. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::Writable::Write</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>Write</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="122" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5233">
        <label>arrow::cuda::CudaBufferWriter</label>
        <link refid="classarrow_1_1cuda_1_1_cuda_buffer_writer"/>
        <childnode refid="5232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5223">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="5222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5226">
        <label>arrow::io::CompressedOutputStream</label>
        <link refid="classarrow_1_1io_1_1_compressed_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5236">
        <label>arrow::io::MemoryMappedFile</label>
        <link refid="classarrow_1_1io_1_1_memory_mapped_file"/>
        <childnode refid="5235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5232">
        <label>arrow::io::WritableFile</label>
        <link refid="classarrow_1_1io_1_1_writable_file"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5228">
        <label>arrow::io::HdfsOutputStream</label>
        <link refid="classarrow_1_1io_1_1_hdfs_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5222">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="5227">
        <label>arrow::io::FileOutputStream</label>
        <link refid="classarrow_1_1io_1_1_file_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5234">
        <label>arrow::io::FixedSizeBufferWriter</label>
        <link refid="classarrow_1_1io_1_1_fixed_size_buffer_writer"/>
        <childnode refid="5232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5224">
        <label>arrow::io::BufferedOutputStream</label>
        <link refid="classarrow_1_1io_1_1_buffered_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5235">
        <label>arrow::io::ReadWriteFileInterface</label>
        <link refid="classarrow_1_1io_1_1_read_write_file_interface"/>
        <childnode refid="5232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5230">
        <label>arrow::io::StderrStream</label>
        <link refid="classarrow_1_1io_1_1_stderr_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5229">
        <label>arrow::io::MockOutputStream</label>
        <link refid="classarrow_1_1io_1_1_mock_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5237">
        <label>arrow::py::PyOutputStream</label>
        <link refid="classarrow_1_1py_1_1_py_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5231">
        <label>arrow::io::StdoutStream</label>
        <link refid="classarrow_1_1io_1_1_stdout_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5225">
        <label>arrow::io::BufferOutputStream</label>
        <link refid="classarrow_1_1io_1_1_buffer_output_stream"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5238">
        <label>parquet::ParquetOutputWrapper</label>
        <link refid="classparquet_1_1_parquet_output_wrapper"/>
        <childnode refid="5223" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="100" column="1" bodyfile="/arrow/cpp/src/arrow/io/interfaces.h" bodystart="100" bodyend="123"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f" prot="public" virt="virtual"><scope>arrow::io::Writable</scope><name>Flush</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" prot="public" virt="pure-virtual"><scope>arrow::io::Writable</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069" prot="public" virt="virtual"><scope>arrow::io::Writable</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" virt="non-virtual"><scope>arrow::io::Writable</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" virt="virtual"><scope>arrow::io::Writable</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
