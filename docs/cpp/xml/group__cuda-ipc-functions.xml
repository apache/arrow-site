<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__cuda-ipc-functions" kind="group">
    <compoundname>cuda-ipc-functions</compoundname>
    <title>Functions for CUDA IPC</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__cuda-ipc-functions_1ga1d251e8fccb9ad26d0988e4127c028dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Result&lt; std::shared_ptr&lt; CudaBuffer &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;CudaBuffer&gt; &gt; arrow::cuda::SerializeRecordBatch</definition>
        <argsstring>(const RecordBatch &amp;batch, CudaContext *ctx)</argsstring>
        <name>SerializeRecordBatch</name>
        <param>
          <type>const RecordBatch &amp;</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>CudaContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Write record batch message to GPU device memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>record batch to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classarrow_1_1cuda_1_1_cuda_context" kindref="compound">CudaContext</ref> to allocate device memory from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1cuda_1_1_cuda_buffer" kindref="compound">CudaBuffer</ref> or <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__cuda-ipc-functions_1ga95f8dc7cf1e2f5f20c31300e7eec3d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Result&lt; std::shared_ptr&lt; RecordBatch &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;RecordBatch&gt; &gt; arrow::cuda::ReadRecordBatch</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, const std::shared_ptr&lt; CudaBuffer &gt; &amp;buffer, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>ReadRecordBatch</name>
        <param>
          <type>const std::shared_ptr&lt; Schema &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; CudaBuffer &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>MemoryPool *</type>
          <declname>pool</declname>
          <defval>default_memory_pool()</defval>
        </param>
        <briefdescription>
<para>ReadRecordBatch specialized to handle metadata on CUDA device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> for the record batch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1cuda_1_1_cuda_buffer" kindref="compound">CudaBuffer</ref> containing the complete IPC message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocating space for the metadata </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> or <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
