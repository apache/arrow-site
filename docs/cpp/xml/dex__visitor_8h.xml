<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dex__visitor_8h" kind="file" language="C++">
    <compoundname>dex_visitor.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="gandiva_2logging_8h" local="yes">gandiva/logging.h</includes>
    <includes refid="gandiva_2visibility_8h" local="yes">gandiva/visibility.h</includes>
    <includedby refid="bitmap__accumulator_8h" local="yes">/arrow/cpp/src/gandiva/bitmap_accumulator.h</includedby>
    <includedby refid="dex_8h" local="yes">/arrow/cpp/src/gandiva/dex.h</includedby>
    <includedby refid="llvm__generator_8h" local="yes">/arrow/cpp/src/gandiva/llvm_generator.h</includedby>
    <incdepgraph>
      <node id="15431">
        <label>cstdint</label>
      </node>
      <node id="15425">
        <label>string</label>
      </node>
      <node id="15424">
        <label>/arrow/cpp/src/gandiva/dex_visitor.h</label>
        <link refid="dex__visitor_8h"/>
        <childnode refid="15425" relation="include">
        </childnode>
        <childnode refid="15426" relation="include">
        </childnode>
        <childnode refid="15433" relation="include">
        </childnode>
      </node>
      <node id="15429">
        <label>ostream</label>
      </node>
      <node id="15432">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="15427">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="15428" relation="include">
        </childnode>
        <childnode refid="15429" relation="include">
        </childnode>
        <childnode refid="15425" relation="include">
        </childnode>
        <childnode refid="15430" relation="include">
        </childnode>
        <childnode refid="15432" relation="include">
        </childnode>
      </node>
      <node id="15426">
        <label>gandiva/logging.h</label>
        <link refid="gandiva_2logging_8h"/>
        <childnode refid="15427" relation="include">
        </childnode>
      </node>
      <node id="15433">
        <label>gandiva/visibility.h</label>
        <link refid="gandiva_2visibility_8h"/>
      </node>
      <node id="15428">
        <label>memory</label>
      </node>
      <node id="15430">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="15431" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15437">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="15434">
        <label>/arrow/cpp/src/gandiva/dex_visitor.h</label>
        <link refid="dex__visitor_8h"/>
        <childnode refid="15435" relation="include">
        </childnode>
        <childnode refid="15436" relation="include">
        </childnode>
        <childnode refid="15437" relation="include">
        </childnode>
      </node>
      <node id="15436">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="15435" relation="include">
        </childnode>
      </node>
      <node id="15435">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgandiva_1_1_in_expr_dex_base" prot="public">gandiva::InExprDexBase</innerclass>
    <innerclass refid="classgandiva_1_1_dex_visitor" prot="public">gandiva::DexVisitor</innerclass>
    <innerclass refid="classgandiva_1_1_dex_default_visitor" prot="public">gandiva::DexDefaultVisitor</innerclass>
    <innernamespace refid="namespacegandiva">gandiva</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" prot="public" static="no">
        <name>VISIT_DCHECK</name>
        <param><defname>DEX_CLASS</defname></param>
        <initializer>void Visit(const DEX_CLASS&amp; dex) override { <ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(0); }</initializer>
        <briefdescription>
<para>Default implementation with only <ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/dex_visitor.h" line="67" column="9" bodyfile="/arrow/cpp/src/gandiva/dex_visitor.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva_2logging_8h" kindref="compound">gandiva/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva_2visibility_8h" kindref="compound">gandiva/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva" kindref="compound">gandiva</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VectorReadValidityDex;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VectorReadFixedLenValueDex;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VectorReadVarLenValueDex;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LocalBitMapValidityDex;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LiteralDex;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrueDex;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FalseDex;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NonNullableFuncDex;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NullableNeverFuncDex;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NullableInternalFuncDex;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IfDex;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BooleanAndDex;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BooleanOrDex;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InExprDexBase;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classgandiva_1_1_dex_visitor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_dex_visitor" kindref="compound">DexVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgandiva_1_1_dex_visitor" kindref="compound">DexVisitor</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_validity_dex" kindref="compound">VectorReadValidityDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_fixed_len_value_dex" kindref="compound">VectorReadFixedLenValueDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_var_len_value_dex" kindref="compound">VectorReadVarLenValueDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_local_bit_map_validity_dex" kindref="compound">LocalBitMapValidityDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_true_dex" kindref="compound">TrueDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_false_dex" kindref="compound">FalseDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_literal_dex" kindref="compound">LiteralDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_non_nullable_func_dex" kindref="compound">NonNullableFuncDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_nullable_never_func_dex" kindref="compound">NullableNeverFuncDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_nullable_internal_func_dex" kindref="compound">NullableInternalFuncDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_if_dex" kindref="compound">IfDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_boolean_and_dex" kindref="compound">BooleanAndDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_boolean_or_dex" kindref="compound">BooleanOrDex</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int32_t&gt;</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int64_t&gt;</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;std::string&gt;</ref>&amp;<sp/>dex)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" refkind="member"><highlight class="preprocessor">#define<sp/>VISIT_DCHECK(DEX_CLASS)<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/>void<sp/>Visit(const<sp/>DEX_CLASS&amp;<sp/>dex)<sp/>override<sp/>{<sp/>DCHECK(0);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classgandiva_1_1_dex_default_visitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_dex_default_visitor" kindref="compound">DexDefaultVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_dex_visitor" kindref="compound">DexVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_vector_read_validity_dex" kindref="compound">VectorReadValidityDex</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_vector_read_fixed_len_value_dex" kindref="compound">VectorReadFixedLenValueDex</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_vector_read_var_len_value_dex" kindref="compound">VectorReadVarLenValueDex</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_local_bit_map_validity_dex" kindref="compound">LocalBitMapValidityDex</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_true_dex" kindref="compound">TrueDex</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_false_dex" kindref="compound">FalseDex</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_literal_dex" kindref="compound">LiteralDex</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_non_nullable_func_dex" kindref="compound">NonNullableFuncDex</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_nullable_never_func_dex" kindref="compound">NullableNeverFuncDex</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_nullable_internal_func_dex" kindref="compound">NullableInternalFuncDex</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_if_dex" kindref="compound">IfDex</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_boolean_and_dex" kindref="compound">BooleanAndDex</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_boolean_or_dex" kindref="compound">BooleanOrDex</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int32_t&gt;</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int64_t&gt;</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="dex__visitor_8h_1ad57af14423365d605fcfdf5e5ebf513f" kindref="member">VISIT_DCHECK</ref>(<ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;std::string&gt;</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gandiva</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/dex_visitor.h"/>
  </compounddef>
</doxygen>
