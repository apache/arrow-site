<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_filter" kind="class" language="C++" prot="public">
    <compoundname>gandiva::Filter</compoundname>
    <includes refid="gandiva_2filter_8h" local="no">gandiva/filter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_filter_1a0d96e7f635cafebef90b3450223c4971" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LLVMGenerator&gt; gandiva::Filter::llvm_generator_</definition>
        <argsstring></argsstring>
        <name>llvm_generator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="82" column="1" bodyfile="/arrow/cpp/src/gandiva/filter.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_filter_1a86edefdd9703c8d4370e956caf3a468d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1a650de9b918fc7348689854c307e50d56" kindref="member">SchemaPtr</ref></type>
        <definition>SchemaPtr gandiva::Filter::schema_</definition>
        <argsstring></argsstring>
        <name>schema_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="83" column="1" bodyfile="/arrow/cpp/src/gandiva/filter.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_filter_1a635dab6d8381cd3d5afc084155ad23ac" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_configuration" kindref="compound">Configuration</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Configuration&gt; gandiva::Filter::configuration_</definition>
        <argsstring></argsstring>
        <name>configuration_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="84" column="1" bodyfile="/arrow/cpp/src/gandiva/filter.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_filter_1ad38ff9208d08403bdf18411e118a0383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::Filter::Filter</definition>
        <argsstring>(std::unique_ptr&lt; LLVMGenerator &gt; llvm_generator, SchemaPtr schema, std::shared_ptr&lt; Configuration &gt; config)</argsstring>
        <name>Filter</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref> &gt;</type>
          <declname>llvm_generator</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1a650de9b918fc7348689854c307e50d56" kindref="member">SchemaPtr</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_configuration" kindref="compound">Configuration</ref> &gt;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_filter_1a7515959f8129222699501a09c8ba3930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::Filter::~Filter</definition>
        <argsstring>()</argsstring>
        <name>~Filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_filter_1aacb615d7ba59f8871d17eb241e28b750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::Filter::Evaluate</definition>
        <argsstring>(const arrow::RecordBatch &amp;batch, std::shared_ptr&lt; SelectionVector &gt; out_selection)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const <ref refid="classarrow_1_1_record_batch" kindref="compound">arrow::RecordBatch</ref> &amp;</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_selection_vector" kindref="compound">SelectionVector</ref> &gt;</type>
          <declname>out_selection</declname>
        </param>
        <briefdescription>
<para>Evaluate the specified record batch, and populate output selection vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the record batch. schema should be the same as the one in &apos;Make&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">out_selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the selection array with indices of rows that match the condition. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_filter_1a3d54aff8735ba9ca85d52fc1ce203cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gandiva::Filter::DumpIR</definition>
        <argsstring>()</argsstring>
        <name>DumpIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_filter_1ad4ace313a4b9e7ea22b908249e50fa8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>static Status gandiva::Filter::Make</definition>
        <argsstring>(SchemaPtr schema, ConditionPtr condition, std::shared_ptr&lt; Filter &gt; *filter)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="namespacegandiva_1a650de9b918fc7348689854c307e50d56" kindref="member">SchemaPtr</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1ac50f3d4579d827449480b7d45be3529f" kindref="member">ConditionPtr</ref></type>
          <declname>condition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_filter" kindref="compound">Filter</ref> &gt; *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Build a filter for the given schema and condition, with the default configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>schema for the record batches, and the condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">condition</parametername>
</parameternamelist>
<parameterdescription>
<para>filter condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">filter</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned filter object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="55" column="1" bodyfile="/arrow/cpp/src/gandiva/filter.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_filter_1a21fb6a4e01a7839d72fd333e1603cc1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>static Status gandiva::Filter::Make</definition>
        <argsstring>(SchemaPtr schema, ConditionPtr condition, std::shared_ptr&lt; Configuration &gt; config, std::shared_ptr&lt; Filter &gt; *filter)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="namespacegandiva_1a650de9b918fc7348689854c307e50d56" kindref="member">SchemaPtr</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1ac50f3d4579d827449480b7d45be3529f" kindref="member">ConditionPtr</ref></type>
          <declname>condition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_configuration" kindref="compound">Configuration</ref> &gt;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_filter" kindref="compound">Filter</ref> &gt; *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Build a filter for the given schema and condition. </para>        </briefdescription>
        <detaileddescription>
<para>Customize the filter with runtime configuration.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>schema for the record batches, and the condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">condition</parametername>
</parameternamelist>
<parameterdescription>
<para>filter conditions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>run time configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">filter</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned filter object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/filter.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>filter records based on a condition. </para>    </briefdescription>
    <detaileddescription>
<para>A filter is built for a specific schema and condition. Once the filter is built, it can be used to evaluate many row batches. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/filter.h" line="41" column="1" bodyfile="/arrow/cpp/src/gandiva/filter.h" bodystart="41" bodyend="85"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_filter_1a635dab6d8381cd3d5afc084155ad23ac" prot="private" virt="non-virtual"><scope>gandiva::Filter</scope><name>configuration_</name></member>
      <member refid="classgandiva_1_1_filter_1a3d54aff8735ba9ca85d52fc1ce203cf2" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>DumpIR</name></member>
      <member refid="classgandiva_1_1_filter_1aacb615d7ba59f8871d17eb241e28b750" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>Evaluate</name></member>
      <member refid="classgandiva_1_1_filter_1ad38ff9208d08403bdf18411e118a0383" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>Filter</name></member>
      <member refid="classgandiva_1_1_filter_1a0d96e7f635cafebef90b3450223c4971" prot="private" virt="non-virtual"><scope>gandiva::Filter</scope><name>llvm_generator_</name></member>
      <member refid="classgandiva_1_1_filter_1ad4ace313a4b9e7ea22b908249e50fa8e" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>Make</name></member>
      <member refid="classgandiva_1_1_filter_1a21fb6a4e01a7839d72fd333e1603cc1b" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>Make</name></member>
      <member refid="classgandiva_1_1_filter_1a86edefdd9703c8d4370e956caf3a468d" prot="private" virt="non-virtual"><scope>gandiva::Filter</scope><name>schema_</name></member>
      <member refid="classgandiva_1_1_filter_1a7515959f8129222699501a09c8ba3930" prot="public" virt="non-virtual"><scope>gandiva::Filter</scope><name>~Filter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
