<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_typed_scanner" kind="class" language="C++" prot="public">
    <compoundname>parquet::TypedScanner</compoundname>
    <basecompoundref refid="classparquet_1_1_scanner" prot="public" virt="non-virtual">parquet::Scanner</basecompoundref>
    <includes refid="column__scanner_8h" local="no">parquet/column_scanner.h</includes>
    <templateparamlist>
      <param>
        <type>typename DType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classparquet_1_1_typed_scanner_1a57fc58f122bb895c74376396dd250829" prot="public" static="no">
        <type>DType::c_type</type>
        <definition>typedef DType::c_type parquet::TypedScanner&lt; DType &gt;::T</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="89" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_typed_scanner_1a349fce60b4c4da8d069caaadaee1505f" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_typed_column_reader" kindref="compound">TypedColumnReader</ref>&lt; DType &gt; *</type>
        <definition>TypedColumnReader&lt;DType&gt;* parquet::TypedScanner&lt; DType &gt;::typed_reader_</definition>
        <argsstring></argsstring>
        <name>typed_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="198" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_typed_scanner_1afc51fe9ce9a47ddeb7b6032cc6625d35" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_typed_scanner_1a57fc58f122bb895c74376396dd250829" kindref="member">T</ref> *</type>
        <definition>T* parquet::TypedScanner&lt; DType &gt;::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="202" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a7f315f081825801e36f4f99f5d680534" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::TypedScanner&lt; DType &gt;::TypedScanner</definition>
        <argsstring>(std::shared_ptr&lt; ColumnReader &gt; reader, int64_t batch_size=DEFAULT_SCANNER_BATCH_SIZE, ::arrow::MemoryPool *pool=::arrow::default_memory_pool())</argsstring>
        <name>TypedScanner</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> &gt;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
          <defval>DEFAULT_SCANNER_BATCH_SIZE</defval>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="91" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1aa5ffb19cca0e721d27c51cfb96b8b530" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::TypedScanner&lt; DType &gt;::~TypedScanner</definition>
        <argsstring>()</argsstring>
        <name>~TypedScanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="101" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1af7c50cf79812f8d3435041f2515f4cba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::TypedScanner&lt; DType &gt;::NextLevels</definition>
        <argsstring>(int16_t *def_level, int16_t *rep_level)</argsstring>
        <name>NextLevels</name>
        <param>
          <type>int16_t *</type>
          <declname>def_level</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>rep_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="103" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="103" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a41af94dd8bdbe6484cabbf9cdaecda9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::TypedScanner&lt; DType &gt;::Next</definition>
        <argsstring>(T *val, int16_t *def_level, int16_t *rep_level, bool *is_null)</argsstring>
        <name>Next</name>
        <param>
          <type><ref refid="classparquet_1_1_typed_scanner_1a57fc58f122bb895c74376396dd250829" kindref="member">T</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>def_level</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>rep_level</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>is_null</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="121" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="121" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a01db20f55d558e339aa694d0d1bc7644" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::TypedScanner&lt; DType &gt;::NextValue</definition>
        <argsstring>(T *val, bool *is_null)</argsstring>
        <name>NextValue</name>
        <param>
          <type><ref refid="classparquet_1_1_typed_scanner_1a57fc58f122bb895c74376396dd250829" kindref="member">T</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>is_null</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="144" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="144" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a3a375e9e675a0183bc8dd4c743466eee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void parquet::TypedScanner&lt; DType &gt;::PrintNext</definition>
        <argsstring>(std::ostream &amp;out, int width, bool with_levels=false)</argsstring>
        <name>PrintNext</name>
        <reimplements refid="classparquet_1_1_scanner_1a35f46a19982647c9e7cad2528b4d46c6">PrintNext</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_levels</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="169" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="169" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a3f23ec9f93e01b7c2762cb01d90c50bc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::TypedScanner&lt; DType &gt;::FormatValue</definition>
        <argsstring>(void *val, char *buffer, int bufsize, int width)</argsstring>
        <name>FormatValue</name>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="200" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1ae4859bd1acd9eb200487c52b6fd39251" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::TypedScanner&lt; Int96Type &gt;::FormatValue</definition>
        <argsstring>(void *val, char *buffer, int bufsize, int width)</argsstring>
        <name>FormatValue</name>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="213" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1ad6a84700cf84efaf92f787e9f2e29b79" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::TypedScanner&lt; ByteArrayType &gt;::FormatValue</definition>
        <argsstring>(void *val, char *buffer, int bufsize, int width)</argsstring>
        <name>FormatValue</name>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="221" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_typed_scanner_1a3f137f15f08ccf86dde61328623351ce" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::TypedScanner&lt; FLBAType &gt;::FormatValue</definition>
        <argsstring>(void *val, char *buffer, int bufsize, int width)</argsstring>
        <name>FormatValue</name>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="229" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="229" bodyend="235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4770">
        <label>parquet::Scanner</label>
        <link refid="classparquet_1_1_scanner"/>
      </node>
      <node id="4769">
        <label>parquet::TypedScanner&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_scanner"/>
        <childnode refid="4770" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4772">
        <label>parquet::Scanner</label>
        <link refid="classparquet_1_1_scanner"/>
      </node>
      <node id="4771">
        <label>parquet::TypedScanner&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_scanner"/>
        <childnode refid="4772" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/column_scanner.h" line="87" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="87" bodyend="203"/>
    <listofallmembers>
      <member refid="classparquet_1_1_scanner_1a7592811a80284998bdc23c043f2995db" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>batch_size</name></member>
      <member refid="classparquet_1_1_scanner_1a21648d45b89d30755fd87ced6091c86e" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>batch_size_</name></member>
      <member refid="classparquet_1_1_scanner_1a99d531a9f73c66f0f3f4441c9a80fc35" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>def_levels_</name></member>
      <member refid="classparquet_1_1_scanner_1a78e33590d14008fb407acfad430ce013" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>descr</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a3f23ec9f93e01b7c2762cb01d90c50bc" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>FormatValue</name></member>
      <member refid="classparquet_1_1_typed_scanner_1ae4859bd1acd9eb200487c52b6fd39251" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>FormatValue</name></member>
      <member refid="classparquet_1_1_typed_scanner_1ad6a84700cf84efaf92f787e9f2e29b79" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>FormatValue</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a3f137f15f08ccf86dde61328623351ce" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>FormatValue</name></member>
      <member refid="classparquet_1_1_scanner_1afe85dc1bc7859a8e0b5c8cfd79e52083" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>HasNext</name></member>
      <member refid="classparquet_1_1_scanner_1a62d61605383341c6b97ad2e6dfab6f39" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>level_offset_</name></member>
      <member refid="classparquet_1_1_scanner_1ac30a31477cff1b595b2c89a387895ceb" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>levels_buffered_</name></member>
      <member refid="classparquet_1_1_scanner_1a3e53c018819d4e00f21c3ab31b881efe" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>Make</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a41af94dd8bdbe6484cabbf9cdaecda9b" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>Next</name></member>
      <member refid="classparquet_1_1_typed_scanner_1af7c50cf79812f8d3435041f2515f4cba" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>NextLevels</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a01db20f55d558e339aa694d0d1bc7644" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>NextValue</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a3a375e9e675a0183bc8dd4c743466eee" prot="public" virt="virtual"><scope>parquet::TypedScanner</scope><name>PrintNext</name></member>
      <member refid="classparquet_1_1_scanner_1ad5dff576a1eafc1c6bf5f419871d520b" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>reader_</name></member>
      <member refid="classparquet_1_1_scanner_1aa37a305b04092e670c921520a82a00b5" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>rep_levels_</name></member>
      <member refid="classparquet_1_1_scanner_1ab8c41bcaacf2a85c91fec5ce112cd28c" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>Scanner</name></member>
      <member refid="classparquet_1_1_scanner_1ac499d6423adc56c56b268044800cb3ad" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>SetBatchSize</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a57fc58f122bb895c74376396dd250829" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>T</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a349fce60b4c4da8d069caaadaee1505f" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>typed_reader_</name></member>
      <member refid="classparquet_1_1_typed_scanner_1a7f315f081825801e36f4f99f5d680534" prot="public" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>TypedScanner</name></member>
      <member refid="classparquet_1_1_scanner_1addbc3b8b0e56d4fb48fb457e9a09def6" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>value_buffer_</name></member>
      <member refid="classparquet_1_1_scanner_1ae82b669fa5d36806b638f500174e8ba4" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>value_offset_</name></member>
      <member refid="classparquet_1_1_typed_scanner_1afc51fe9ce9a47ddeb7b6032cc6625d35" prot="private" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>values_</name></member>
      <member refid="classparquet_1_1_scanner_1ac573288280768558be10a3230550f9a3" prot="protected" virt="non-virtual"><scope>parquet::TypedScanner</scope><name>values_buffered_</name></member>
      <member refid="classparquet_1_1_scanner_1ab5d1a0e88092ac828e90ce0678b127b2" prot="public" virt="virtual"><scope>parquet::TypedScanner</scope><name>~Scanner</name></member>
      <member refid="classparquet_1_1_typed_scanner_1aa5ffb19cca0e721d27c51cfb96b8b530" prot="public" virt="virtual"><scope>parquet::TypedScanner</scope><name>~TypedScanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
