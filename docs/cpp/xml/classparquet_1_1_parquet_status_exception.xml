<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_status_exception" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetStatusException</compoundname>
    <basecompoundref refid="classparquet_1_1_parquet_exception" prot="public" virt="non-virtual">parquet::ParquetException</basecompoundref>
    <derivedcompoundref refid="classparquet_1_1_parquet_invalid_or_corrupted_file_exception" prot="public" virt="non-virtual">parquet::ParquetInvalidOrCorruptedFileException</derivedcompoundref>
    <includes refid="exception_8h" local="no">parquet/exception.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_status_exception_1ae1485a7138409d7db405414be630ae73" prot="private" static="no" mutable="no">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::ParquetStatusException::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="119" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_status_exception_1a87bf745b94ebf2f907b48d448f2f317d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetStatusException::ParquetStatusException</definition>
        <argsstring>(::arrow::Status status)</argsstring>
        <name>ParquetStatusException</name>
        <param>
          <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="113" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_status_exception_1a5fbe0de855470cea3a5541cf2abc1c92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref> &amp;</type>
        <definition>const ::arrow::Status&amp; parquet::ParquetStatusException::status</definition>
        <argsstring>() const</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="116" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="116" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3508">
        <label>parquet::ParquetInvalidOrCorruptedFileException</label>
        <link refid="classparquet_1_1_parquet_invalid_or_corrupted_file_exception"/>
        <childnode refid="3505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3507">
        <label>std::exception</label>
      </node>
      <node id="3506">
        <label>parquet::ParquetException</label>
        <link refid="classparquet_1_1_parquet_exception"/>
        <childnode refid="3507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3505">
        <label>parquet::ParquetStatusException</label>
        <link refid="classparquet_1_1_parquet_status_exception"/>
        <childnode refid="3506" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3511">
        <label>std::exception</label>
      </node>
      <node id="3510">
        <label>parquet::ParquetException</label>
        <link refid="classparquet_1_1_parquet_exception"/>
        <childnode refid="3511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3509">
        <label>parquet::ParquetStatusException</label>
        <link refid="classparquet_1_1_parquet_status_exception"/>
        <childnode refid="3510" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/exception.h" line="111" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="111" bodyend="120"/>
    <listofallmembers>
      <member refid="classparquet_1_1_parquet_exception_1a5752cf55feb25124ecfca21ed4f45d30" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>EofException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a2793f36435178ba03ec93fe7f11dabd5" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>NYI</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a57763b3e29227c039ff7e3b88cc60008" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a483b09e93705babc5d731f63dca27041" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1ab178142e3dfbba0e5a1625c6db3e9ae3" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_status_exception_1a87bf745b94ebf2f907b48d448f2f317d" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>ParquetStatusException</name></member>
      <member refid="classparquet_1_1_parquet_status_exception_1a5fbe0de855470cea3a5541cf2abc1c92" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>status</name></member>
      <member refid="classparquet_1_1_parquet_status_exception_1ae1485a7138409d7db405414be630ae73" prot="private" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>status_</name></member>
      <member refid="classparquet_1_1_parquet_exception_1ad140e5d0c4292572d39ab3d07ce2fd7e" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>what</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a9d427a782991484fcd229e099e7296f9" prot="public" virt="non-virtual"><scope>parquet::ParquetStatusException</scope><name>~ParquetException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
