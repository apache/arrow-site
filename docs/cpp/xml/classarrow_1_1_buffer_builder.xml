<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_buffer_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::BufferBuilder</compoundname>
    <includes refid="buffer__builder_8h" local="no">arrow/buffer_builder.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_buffer_builder_1a9544fafc7f12fc76397b8c6ba0b71639" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ResizableBuffer&gt; arrow::BufferBuilder::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="181" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_buffer_builder_1ad4b857975203084d5856758a90f669a4" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::BufferBuilder::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="182" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_buffer_builder_1a58dae3a8f530eba77e77d045d86e8396" prot="private" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* arrow::BufferBuilder::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="183" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_buffer_builder_1a91cd1d83d90defa391115f3fbdc03d63" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::BufferBuilder::capacity_</definition>
        <argsstring></argsstring>
        <name>capacity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="184" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_buffer_builder_1ae2580f25b0c08e4bf6e0656d365b0bff" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::BufferBuilder::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="185" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a4638043568be6da600ee8d78e13a149e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::BufferBuilder::BufferBuilder</definition>
        <argsstring>(MemoryPool *pool=default_memory_pool())</argsstring>
        <name>BufferBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="44" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a9456c4811c844fd67a7d6fe64a4f704c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::BufferBuilder::BufferBuilder</definition>
        <argsstring>(std::shared_ptr&lt; ResizableBuffer &gt; buffer, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>BufferBuilder</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructs new Builder that will start using the provided buffer until Finish/Reset are called. </para>        </briefdescription>
        <detaileddescription>
<para>The buffer is not resized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="55" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a865e377404f5e80e3b716e654d0f3ec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Resize</definition>
        <argsstring>(const int64_t new_capacity, bool shrink_to_fit=true)</argsstring>
        <name>Resize</name>
        <param>
          <type>const int64_t</type>
          <declname>new_capacity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shrink_to_fit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Resize the buffer to the nearest multiple of 64 bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the new capacity of the of the builder. Will be rounded up to a multiple of 64 bytes for padding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shrink_to_fit</parametername>
</parameternamelist>
<parameterdescription>
<para>if new capacity is smaller than the existing size, reallocate internal buffer. Set to false to avoid reallocations when shrinking the builder. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="70" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a1935ba967d1358acf6775cb4a8135640" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Reserve</definition>
        <argsstring>(const int64_t additional_bytes)</argsstring>
        <name>Reserve</name>
        <param>
          <type>const int64_t</type>
          <declname>additional_bytes</declname>
        </param>
        <briefdescription>
<para>Ensure that builder can accommodate the additional number of bytes without the need to perform allocations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">additional_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of additional bytes to make space for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="90" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a9f2f25ecb063582ceaca0a5b7bd5d128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Append</definition>
        <argsstring>(const void *data, const int64_t length)</argsstring>
        <name>Append</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Append the given data to the buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The buffer is automatically expanded if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="110" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a2936c8b4601d3529af547290bc5b808b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Append</definition>
        <argsstring>(const int64_t num_copies, uint8_t value)</argsstring>
        <name>Append</name>
        <param>
          <type>const int64_t</type>
          <declname>num_copies</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Append copies of a value to the buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The buffer is automatically expanded if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="121" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1ab7ba2e8716f69a8bccd68aa33cc12286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Advance</definition>
        <argsstring>(const int64_t length)</argsstring>
        <name>Advance</name>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="128" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a4e1bedb7b6a81134013e235d983191aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::BufferBuilder::UnsafeAdvance</definition>
        <argsstring>(const int64_t length)</argsstring>
        <name>UnsafeAdvance</name>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="131" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1ab4b387fc60779d5fce5514ad988f4040" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::BufferBuilder::UnsafeAppend</definition>
        <argsstring>(const void *data, const int64_t length)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="134" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a92d99c5f2dfee7a9db82eb28c074adbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::BufferBuilder::UnsafeAppend</definition>
        <argsstring>(const int64_t num_copies, uint8_t value)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const int64_t</type>
          <declname>num_copies</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="139" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a1d24a7508b789222ab27939a3ac3b481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::BufferBuilder::Finish</definition>
        <argsstring>(std::shared_ptr&lt; Buffer &gt; *out, bool shrink_to_fit=true)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shrink_to_fit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return result of builder as a <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The builder is reset and can be reused afterwards.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shrink_to_fit</parametername>
</parameternamelist>
<parameterdescription>
<para>if the buffer size is smaller than its capacity, reallocate to fit more tightly in memory. Set to false to avoid a reallocation, at the expense of potentially more memory consumption. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="153" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1ae8d4ba958542c2f74dbab41d1456e6aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::BufferBuilder::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="164" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1adb061b4250de92be4822316b207ddcee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::BufferBuilder::Rewind</definition>
        <argsstring>(int64_t position)</argsstring>
        <name>Rewind</name>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Set size to a smaller value without modifying builder contents. </para>        </briefdescription>
        <detaileddescription>
<para>For reusable <ref refid="classarrow_1_1_buffer_builder" kindref="compound">BufferBuilder</ref> classes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>must be non-negative and less than or equal to the current <ref refid="classarrow_1_1_buffer_builder_1a9c3803b7ecb1c2c122a95b2346fbb0a2" kindref="member">length()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="173" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a1728b024c99b4255177659c6dcd0b650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::BufferBuilder::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="175" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a9c3803b7ecb1c2c122a95b2346fbb0a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::BufferBuilder::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="176" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a44d11575460cb39216ae61999a29fa2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* arrow::BufferBuilder::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="177" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a32d1ed9e7d7b859475410aeb49384ed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* arrow::BufferBuilder::mutable_data</definition>
        <argsstring>()</argsstring>
        <name>mutable_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="178" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="178" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_buffer_builder_1a289bc7d6c344eb6fb1ec7936e99b05bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t arrow::BufferBuilder::GrowByFactor</definition>
        <argsstring>(int64_t current_capacity, int64_t new_capacity)</argsstring>
        <name>GrowByFactor</name>
        <param>
          <type>int64_t</type>
          <declname>current_capacity</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>new_capacity</declname>
        </param>
        <briefdescription>
<para>Return a capacity expanded by the desired growth factor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="99" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="99" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class for incrementally building a contiguous chunk of in-memory data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/buffer_builder.h" line="42" column="1" bodyfile="/arrow/cpp/src/arrow/buffer_builder.h" bodystart="42" bodyend="186"/>
    <listofallmembers>
      <member refid="classarrow_1_1_buffer_builder_1ab7ba2e8716f69a8bccd68aa33cc12286" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a9f2f25ecb063582ceaca0a5b7bd5d128" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a2936c8b4601d3529af547290bc5b808b" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a9544fafc7f12fc76397b8c6ba0b71639" prot="private" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>buffer_</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a4638043568be6da600ee8d78e13a149e" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>BufferBuilder</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a9456c4811c844fd67a7d6fe64a4f704c" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>BufferBuilder</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a1728b024c99b4255177659c6dcd0b650" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a91cd1d83d90defa391115f3fbdc03d63" prot="private" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a44d11575460cb39216ae61999a29fa2f" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>data</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a58dae3a8f530eba77e77d045d86e8396" prot="private" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>data_</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a1d24a7508b789222ab27939a3ac3b481" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a289bc7d6c344eb6fb1ec7936e99b05bb" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>GrowByFactor</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a9c3803b7ecb1c2c122a95b2346fbb0a2" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a32d1ed9e7d7b859475410aeb49384ed8" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>mutable_data</name></member>
      <member refid="classarrow_1_1_buffer_builder_1ad4b857975203084d5856758a90f669a4" prot="private" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a1935ba967d1358acf6775cb4a8135640" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_buffer_builder_1ae8d4ba958542c2f74dbab41d1456e6aa" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a865e377404f5e80e3b716e654d0f3ec9" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_buffer_builder_1adb061b4250de92be4822316b207ddcee" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>Rewind</name></member>
      <member refid="classarrow_1_1_buffer_builder_1ae2580f25b0c08e4bf6e0656d365b0bff" prot="private" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>size_</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a4e1bedb7b6a81134013e235d983191aa" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>UnsafeAdvance</name></member>
      <member refid="classarrow_1_1_buffer_builder_1ab4b387fc60779d5fce5514ad988f4040" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_buffer_builder_1a92d99c5f2dfee7a9db82eb28c074adbf" prot="public" virt="non-virtual"><scope>arrow::BufferBuilder</scope><name>UnsafeAppend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
