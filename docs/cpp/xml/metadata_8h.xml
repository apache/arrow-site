<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="metadata_8h" kind="file" language="C++">
    <compoundname>metadata.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="key__value__metadata_8h" local="yes">arrow/util/key_value_metadata.h</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="properties_8h" local="yes">parquet/properties.h</includes>
    <includes refid="schema_8h" local="yes">parquet/schema.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includedby refid="parquet_2api_2reader_8h" local="yes">/arrow/cpp/src/parquet/api/reader.h</includedby>
    <includedby refid="reader__internal_8h" local="yes">/arrow/cpp/src/parquet/arrow/reader_internal.h</includedby>
    <includedby refid="file__reader_8h" local="yes">/arrow/cpp/src/parquet/file_reader.h</includedby>
    <includedby refid="file__writer_8h" local="yes">/arrow/cpp/src/parquet/file_writer.h</includedby>
    <includedby refid="parquet_2pch_8h" local="yes">/arrow/cpp/src/parquet/pch.h</includedby>
    <incdepgraph>
      <node id="19594">
        <label>atomic</label>
      </node>
      <node id="19577">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
      </node>
      <node id="19602">
        <label>limits</label>
      </node>
      <node id="19563">
        <label>cstdint</label>
      </node>
      <node id="19583">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19575" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19584" relation="include">
        </childnode>
        <childnode refid="19585" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19596">
        <label>endian.h</label>
      </node>
      <node id="19574">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="19575" relation="include">
        </childnode>
        <childnode refid="19576" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19577" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19579" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19603">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19604" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
      </node>
      <node id="19586">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19582">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19583" relation="include">
        </childnode>
        <childnode refid="19589" relation="include">
        </childnode>
        <childnode refid="19590" relation="include">
        </childnode>
        <childnode refid="19593" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19595" relation="include">
        </childnode>
        <childnode refid="19606" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
      </node>
      <node id="19589">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19585" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19601">
        <label>cmath</label>
      </node>
      <node id="19600">
        <label>cassert</label>
      </node>
      <node id="19592">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
      </node>
      <node id="19566">
        <label>string</label>
      </node>
      <node id="19588">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19611">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="19612" relation="include">
        </childnode>
      </node>
      <node id="19564">
        <label>map</label>
      </node>
      <node id="19562">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19564" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19569" relation="include">
        </childnode>
        <childnode refid="19582" relation="include">
        </childnode>
        <childnode refid="19607" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19619" relation="include">
        </childnode>
      </node>
      <node id="19608">
        <label>unordered_set</label>
      </node>
      <node id="19615">
        <label>parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="19616" relation="include">
        </childnode>
        <childnode refid="19617" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19582" relation="include">
        </childnode>
      </node>
      <node id="19616">
        <label>exception</label>
      </node>
      <node id="19613">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19580">
        <label>ostream</label>
      </node>
      <node id="19581">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19607">
        <label>parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19570" relation="include">
        </childnode>
        <childnode refid="19608" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19609" relation="include">
        </childnode>
        <childnode refid="19606" relation="include">
        </childnode>
        <childnode refid="19614" relation="include">
        </childnode>
        <childnode refid="19615" relation="include">
        </childnode>
        <childnode refid="19621" relation="include">
        </childnode>
        <childnode refid="19582" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19619" relation="include">
        </childnode>
      </node>
      <node id="19584">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19585" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19577" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19593">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19594" relation="include">
        </childnode>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19595">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19596" relation="include">
        </childnode>
        <childnode refid="19597" relation="include">
        </childnode>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19599" relation="include">
        </childnode>
        <childnode refid="19600" relation="include">
        </childnode>
        <childnode refid="19601" relation="include">
        </childnode>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19575" relation="include">
        </childnode>
        <childnode refid="19602" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19583" relation="include">
        </childnode>
        <childnode refid="19571" relation="include">
        </childnode>
        <childnode refid="19577" relation="include">
        </childnode>
        <childnode refid="19603" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19579" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
        <childnode refid="19605" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19599">
        <label>bitset</label>
      </node>
      <node id="19604">
        <label>tuple</label>
      </node>
      <node id="19568">
        <label>vector</label>
      </node>
      <node id="19572">
        <label>new</label>
      </node>
      <node id="19567">
        <label>utility</label>
      </node>
      <node id="19587">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19588" relation="include">
        </childnode>
      </node>
      <node id="19598">
        <label>array</label>
      </node>
      <node id="19617">
        <label>sstream</label>
      </node>
      <node id="19569">
        <label>arrow/util/key_value_metadata.h</label>
        <link refid="key__value__metadata_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19570" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19571" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19590">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19591" relation="include">
        </childnode>
        <childnode refid="19589" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19618">
        <label>parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19580" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19570" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19582" relation="include">
        </childnode>
        <childnode refid="19619" relation="include">
        </childnode>
      </node>
      <node id="19585">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19576">
        <label>iosfwd</label>
      </node>
      <node id="19591">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19589" relation="include">
        </childnode>
        <childnode refid="19571" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19592" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19570">
        <label>unordered_map</label>
      </node>
      <node id="19612">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="19571">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19572" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19577" relation="include">
        </childnode>
      </node>
      <node id="19610">
        <label>climits</label>
      </node>
      <node id="19609">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="19594" relation="include">
        </childnode>
        <childnode refid="19610" relation="include">
        </childnode>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19576" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19568" relation="include">
        </childnode>
        <childnode refid="19571" relation="include">
        </childnode>
        <childnode refid="19586" relation="include">
        </childnode>
        <childnode refid="19592" relation="include">
        </childnode>
        <childnode refid="19578" relation="include">
        </childnode>
        <childnode refid="19611" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
        <childnode refid="19613" relation="include">
        </childnode>
      </node>
      <node id="19573">
        <label>type_traits</label>
      </node>
      <node id="19606">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19602" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19571" relation="include">
        </childnode>
        <childnode refid="19574" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19597">
        <label>algorithm</label>
      </node>
      <node id="19621">
        <label>parquet/parquet_version.h</label>
      </node>
      <node id="19620">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19602" relation="include">
        </childnode>
        <childnode refid="19573" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19614">
        <label>parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="19564" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19570" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19615" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19619" relation="include">
        </childnode>
      </node>
      <node id="19575">
        <label>cstring</label>
      </node>
      <node id="19619">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="19597" relation="include">
        </childnode>
        <childnode refid="19563" relation="include">
        </childnode>
        <childnode refid="19575" relation="include">
        </childnode>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19617" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19620" relation="include">
        </childnode>
        <childnode refid="19587" relation="include">
        </childnode>
        <childnode refid="19582" relation="include">
        </childnode>
      </node>
      <node id="19579">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="19565" relation="include">
        </childnode>
        <childnode refid="19580" relation="include">
        </childnode>
        <childnode refid="19566" relation="include">
        </childnode>
        <childnode refid="19567" relation="include">
        </childnode>
        <childnode refid="19581" relation="include">
        </childnode>
      </node>
      <node id="19565">
        <label>memory</label>
      </node>
      <node id="19578">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="19563" relation="include">
        </childnode>
      </node>
      <node id="19605">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19573" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19629">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="19627">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="19625">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="19623" relation="include">
        </childnode>
        <childnode refid="19626" relation="include">
        </childnode>
        <childnode refid="19624" relation="include">
        </childnode>
        <childnode refid="19627" relation="include">
        </childnode>
      </node>
      <node id="19622">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="19623" relation="include">
        </childnode>
        <childnode refid="19624" relation="include">
        </childnode>
        <childnode refid="19625" relation="include">
        </childnode>
        <childnode refid="19628" relation="include">
        </childnode>
        <childnode refid="19631" relation="include">
        </childnode>
      </node>
      <node id="19623">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="19624">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="19628">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19630" relation="include">
        </childnode>
      </node>
      <node id="19631">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="19630">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="19627" relation="include">
        </childnode>
      </node>
      <node id="19626">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_application_version" prot="public">parquet::ApplicationVersion</innerclass>
    <innerclass refid="classparquet_1_1_column_crypto_meta_data" prot="public">parquet::ColumnCryptoMetaData</innerclass>
    <innerclass refid="structparquet_1_1_page_encoding_stats" prot="public">parquet::PageEncodingStats</innerclass>
    <innerclass refid="classparquet_1_1_column_chunk_meta_data" prot="public">parquet::ColumnChunkMetaData</innerclass>
    <innerclass refid="classparquet_1_1_row_group_meta_data" prot="public">parquet::RowGroupMetaData</innerclass>
    <innerclass refid="classparquet_1_1_file_meta_data" prot="public">parquet::FileMetaData</innerclass>
    <innerclass refid="classparquet_1_1_file_crypto_meta_data" prot="public">parquet::FileCryptoMetaData</innerclass>
    <innerclass refid="classparquet_1_1_column_chunk_meta_data_builder" prot="public">parquet::ColumnChunkMetaDataBuilder</innerclass>
    <innerclass refid="classparquet_1_1_row_group_meta_data_builder" prot="public">parquet::RowGroupMetaDataBuilder</innerclass>
    <innerclass refid="classparquet_1_1_file_meta_data_builder" prot="public">parquet::FileMetaDataBuilder</innerclass>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <innernamespace refid="namespaceparquet_1_1schema">parquet::schema</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key__value__metadata_8h" kindref="compound">arrow/util/key_value_metadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="properties_8h" kindref="compound">parquet/properties.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">parquet/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnDescriptor;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EncodedStatistics;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Statistics;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SchemaDescriptor;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileCryptoMetaData;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InternalFileDecryptor;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Decryptor;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Encryptor;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FooterSigningEncryptor;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespaceparquet_1_1schema" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">ColumnPath</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_key_value_metadata" kindref="compound">KeyValueMetadata</ref><sp/>=<sp/><ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">::arrow::KeyValueMetadata</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classparquet_1_1_application_version" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Known<sp/>Versions<sp/>with<sp/>Issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>PARQUET_251_FIXED_VERSION();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>PARQUET_816_FIXED_VERSION();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>PARQUET_CPP_FIXED_STATS_VERSION();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>PARQUET_MR_FIXED_STATS_VERSION();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>expression<sp/>for<sp/>the<sp/>version<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>major<sp/>.<sp/>minor<sp/>.<sp/>patch<sp/>unknown<sp/>-<sp/>prerelease.x<sp/>+<sp/>build<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eg:<sp/>1.5.0ab-cdh5.5.0+cd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classparquet_1_1_application_version_1a24ecb241f283bbca55740606a64799e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>VERSION_FORMAT<sp/>=</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;^(\\d+)\\.(\\d+)\\.(\\d+)([^-+]*)?(?:-([^+]*))?(?:\\+(.*))?$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>expression<sp/>for<sp/>the<sp/>application<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>application_name<sp/>version<sp/>VERSION_FORMAT<sp/>(build<sp/>build_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eg:<sp/>parquet-cpp<sp/>version<sp/>1.5.0ab-xyz5.5.0+cd<sp/>(build<sp/>abcd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classparquet_1_1_application_version_1ac942f32b53c6f97b5edb5cf1b3ab75a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>APPLICATION_FORMAT<sp/>=</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(.*?)\\s*(?:(version\\s*(?:([^(]*?)\\s*(?:\\(\\s*build\\s*([^)]*?)\\s*\\))?)?)?)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Application<sp/>that<sp/>wrote<sp/>the<sp/>file.<sp/>e.g.<sp/>&quot;IMPALA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classparquet_1_1_application_version_1a36e2e952d4eb77de05f5e508d7970394" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_application_version_1a36e2e952d4eb77de05f5e508d7970394" kindref="member">application_</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classparquet_1_1_application_version_1ae84be8ee5ae0dc1a837dea3a7772fb9f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_application_version_1ae84be8ee5ae0dc1a837dea3a7772fb9f" kindref="member">build_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Version<sp/>of<sp/>the<sp/>application<sp/>that<sp/>wrote<sp/>the<sp/>file,<sp/>expressed<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;).<sp/>Unmatched<sp/>parts<sp/>default<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;1.2.3&quot;<sp/><sp/><sp/><sp/>=&gt;<sp/>{1,<sp/>2,<sp/>3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;1.2&quot;<sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>{0,<sp/>0,<sp/>0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;1.2-cdh5&quot;<sp/>=&gt;<sp/>{0,<sp/>0,<sp/>0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>(majetideepak):<sp/>Implement<sp/>support<sp/>for<sp/>pre_release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="classparquet_1_1_application_version_1a9569ed7cc1b7203d5106c0e6d3242cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version_1a9569ed7cc1b7203d5106c0e6d3242cad" kindref="member">major</ref>;</highlight></codeline>
<codeline lineno="85" refid="classparquet_1_1_application_version_1a091790afd00e07b68eef5e85752f45c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version_1a091790afd00e07b68eef5e85752f45c9" kindref="member">minor</ref>;</highlight></codeline>
<codeline lineno="86" refid="classparquet_1_1_application_version_1a7f6d888b019facc07ee239c15f5d25f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version_1a7f6d888b019facc07ee239c15f5d25f1" kindref="member">patch</ref>;</highlight></codeline>
<codeline lineno="87" refid="classparquet_1_1_application_version_1a194b6ab0b92b01f0c27c52043cacbe23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_application_version_1a194b6ab0b92b01f0c27c52043cacbe23" kindref="member">unknown</ref>;</highlight></codeline>
<codeline lineno="88" refid="classparquet_1_1_application_version_1a0dc45487ccd28b65954e4ed92c23f5f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_application_version_1a0dc45487ccd28b65954e4ed92c23f5f0" kindref="member">pre_release</ref>;</highlight></codeline>
<codeline lineno="89" refid="classparquet_1_1_application_version_1a87fcd9366c37ae2f68fb0bbd992fac5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_application_version_1a87fcd9366c37ae2f68fb0bbd992fac5d" kindref="member">build_info</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}<sp/>version;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classparquet_1_1_application_version_1aebc3865391ce0be5f9d4073c2e56ad84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_application_version_1aebc3865391ce0be5f9d4073c2e56ad84" kindref="member">ApplicationVersion</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>created_by);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>application,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>patch);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>version<sp/>is<sp/>strictly<sp/>less<sp/>than<sp/>other_version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>VersionLt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>other_version)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>version<sp/>is<sp/>strictly<sp/>less<sp/>than<sp/>other_version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>VersionEq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>other_version)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>the<sp/>Version<sp/>has<sp/>the<sp/>correct<sp/>statistics<sp/>for<sp/>a<sp/>given<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasCorrectStatistics(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>primitive,<sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/>statistics,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref><sp/>sort_order<sp/>=<sp/><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8a345a20982b3fad52c262436456071f0a" kindref="member">SortOrder::SIGNED</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classparquet_1_1_column_crypto_meta_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_crypto_meta_data" kindref="compound">ColumnCryptoMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ColumnCryptoMetaData&gt;<sp/>Make(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>metadata);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_column_crypto_meta_data" kindref="compound">ColumnCryptoMetaData</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;schema::ColumnPath&gt;<sp/>path_in_schema()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_with_footer_key()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_crypto_meta_data" kindref="compound">ColumnCryptoMetaData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>metadata);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnCryptoMetaDataImpl;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ColumnCryptoMetaDataImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structparquet_1_1_page_encoding_stats" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_page_encoding_stats" kindref="compound">PageEncodingStats</ref><sp/>{</highlight></codeline>
<codeline lineno="125" refid="structparquet_1_1_page_encoding_stats_1a73074e32bfc66800bebebd6cbef52627" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316d" kindref="member">PageType::type</ref><sp/><ref refid="structparquet_1_1_page_encoding_stats_1a73074e32bfc66800bebebd6cbef52627" kindref="member">page_type</ref>;</highlight></codeline>
<codeline lineno="126" refid="structparquet_1_1_page_encoding_stats_1a99f0906931ec74ae43b69f9517583f34" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/><ref refid="structparquet_1_1_page_encoding_stats_1a99f0906931ec74ae43b69f9517583f34" kindref="member">encoding</ref>;</highlight></codeline>
<codeline lineno="127" refid="structparquet_1_1_page_encoding_stats_1a3eea43cf71a869c87198a4f354ae7f5a" refkind="member"><highlight class="normal"><sp/><sp/>int32_t<sp/><ref refid="structparquet_1_1_page_encoding_stats_1a3eea43cf71a869c87198a4f354ae7f5a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classparquet_1_1_column_chunk_meta_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_chunk_meta_data" kindref="compound">ColumnChunkMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ColumnChunkMetaData&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>*<sp/>writer_version<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,<sp/>int16_t<sp/>row_group_ordinal<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>column_ordinal<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_column_chunk_meta_data" kindref="compound">ColumnChunkMetaData</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>int64_t<sp/>file_offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>is<sp/>only<sp/>used<sp/>when<sp/>a<sp/>dataset<sp/>is<sp/>spread<sp/>across<sp/>multiple<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_path()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_metadata_set()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_values()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;schema::ColumnPath&gt;<sp/>path_in_schema()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_stats_set()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Statistics&gt;<sp/>statistics()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>compression()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>if<sp/>the<sp/>ColumnChunk<sp/>compression<sp/>is<sp/>supported<sp/>by<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compiled<sp/>parquet<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>can_decompress()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Encoding::type&gt;&amp;<sp/>encodings()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PageEncodingStats&gt;&amp;<sp/>encoding_stats()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_dictionary_page()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>int64_t<sp/>dictionary_page_offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>int64_t<sp/>data_page_offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_index_page()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>int64_t<sp/>index_page_offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>int64_t<sp/>total_compressed_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>int64_t<sp/>total_uncompressed_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ColumnCryptoMetaData&gt;<sp/>crypto_metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_chunk_meta_data" kindref="compound">ColumnChunkMetaData</ref>(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,<sp/>int16_t<sp/>row_group_ordinal,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>column_ordinal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>*<sp/>writer_version<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnChunkMetaDataImpl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ColumnChunkMetaDataImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classparquet_1_1_row_group_meta_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_row_group_meta_data" kindref="compound">RowGroupMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;RowGroupMetaData&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>*<sp/>writer_version<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_row_group_meta_data" kindref="compound">RowGroupMetaData</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row-group<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_columns()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_rows()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>int64_t<sp/>total_byte_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const-pointer<sp/>to<sp/>make<sp/>it<sp/>clear<sp/>that<sp/>this<sp/>object<sp/>is<sp/>not<sp/>to<sp/>be<sp/>copied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>if<sp/>all<sp/>of<sp/>the<sp/>RowGroup&apos;s<sp/>ColumnChunks<sp/>can<sp/>be<sp/>decompressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>can_decompress()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ColumnChunkMetaData&gt;<sp/>ColumnChunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_row_group_meta_data" kindref="compound">RowGroupMetaData</ref>(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/>schema,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>*<sp/>writer_version<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RowGroupMetaDataImpl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;RowGroupMetaDataImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classparquet_1_1_file_meta_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;FileMetaData&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>serialized_metadata,<sp/>uint32_t*<sp/>inout_metadata_len,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>VerifySignature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>signature);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>uint32_t<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_columns()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_rows()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_row_groups()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref><sp/>version()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>created_by()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_schema_elements()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;RowGroupMetaData&gt;<sp/>RowGroup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref>&amp;<sp/>writer_version()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>if<sp/>all<sp/>of<sp/>the<sp/>FileMetadata&apos;s<sp/>RowGroups<sp/>can<sp/>be<sp/>decompressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>can_decompress()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_encryption_algorithm_set()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>encryption_algorithm()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_signing_key_metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteTo(::<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">arrow::io::OutputStream</ref>*<sp/>dst,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Encryptor&gt;&amp;<sp/>encryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>std::string<sp/>SerializeToString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const-pointer<sp/>to<sp/>make<sp/>it<sp/>clear<sp/>that<sp/>this<sp/>object<sp/>is<sp/>not<sp/>to<sp/>be<sp/>copied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>file_path<sp/>ColumnChunk<sp/>fields<sp/>to<sp/>a<sp/>particular<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_file_path(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>row-group<sp/>metadata<sp/>from<sp/>&quot;other&quot;<sp/>FileMetaData<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendRowGroups(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref>;</highlight></codeline>
<codeline lineno="269" refid="classparquet_1_1_file_meta_data_1ac1d1db7db4ba64732828d6940e43b7fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SerializedFile;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>serialized_metadata,<sp/>uint32_t*<sp/>metadata_len,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_file_decryptor(std::shared_ptr&lt;InternalFileDecryptor&gt;<sp/>file_decryptor);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileMetaDataImpl;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FileMetaDataImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classparquet_1_1_file_crypto_meta_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_crypto_meta_data" kindref="compound">FileCryptoMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;FileCryptoMetaData&gt;<sp/>Make(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>serialized_metadata,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t*<sp/>metadata_len);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_file_crypto_meta_data" kindref="compound">FileCryptoMetaData</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>encryption_algorithm()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteTo(::<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">arrow::io::OutputStream</ref>*<sp/>dst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_crypto_meta_data" kindref="compound">FileCryptoMetaData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>serialized_metadata,<sp/>uint32_t*<sp/>metadata_len);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_crypto_meta_data" kindref="compound">FileCryptoMetaData</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileCryptoMetaDataImpl;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FileCryptoMetaDataImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builder<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classparquet_1_1_column_chunk_meta_data_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>reader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ColumnChunkMetaDataBuilder&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WriterProperties&gt;<sp/>props,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>column);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ColumnChunkMetaDataBuilder&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WriterProperties&gt;<sp/>props,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>column,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>when<sp/>a<sp/>dataset<sp/>is<sp/>spread<sp/>across<sp/>multiple<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_file_path(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStatistics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/>stats);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>column<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>int64_t<sp/>total_compressed_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>commit<sp/>the<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Finish(int64_t<sp/>num_values,<sp/>int64_t<sp/>dictionary_page_offset,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>index_page_offset,<sp/>int64_t<sp/>data_page_offset,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>compressed_size,<sp/>int64_t<sp/>uncompressed_size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_dictionary,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dictionary_fallback,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;Encoding::type,<sp/>int32_t&gt;&amp;<sp/>dict_encoding_stats_,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;Encoding::type,<sp/>int32_t&gt;&amp;<sp/>data_encoding_stats_,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Encryptor&gt;&amp;<sp/>encryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>metadata<sp/>contents,<sp/>suitable<sp/>for<sp/>passing<sp/>to<sp/>ColumnChunkMetaData::Make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>writing<sp/>metadata<sp/>at<sp/>end<sp/>of<sp/>column<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteTo(::<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">arrow::io::OutputStream</ref>*<sp/>sink);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>(std::shared_ptr&lt;WriterProperties&gt;<sp/>props,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>column);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>(std::shared_ptr&lt;WriterProperties&gt;<sp/>props,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>column,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnChunkMetaDataBuilderImpl;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ColumnChunkMetaDataBuilderImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classparquet_1_1_row_group_meta_data_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_row_group_meta_data_builder" kindref="compound">RowGroupMetaDataBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>reader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;RowGroupMetaDataBuilder&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WriterProperties&gt;<sp/>props,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/>schema_,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_row_group_meta_data_builder" kindref="compound">RowGroupMetaDataBuilder</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref>*<sp/>NextColumnChunk();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_columns();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_rows();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_column()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_num_rows(int64_t<sp/>num_rows);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>commit<sp/>the<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Finish(int64_t<sp/>total_bytes_written,<sp/>int16_t<sp/>row_group_ordinal<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_row_group_meta_data_builder" kindref="compound">RowGroupMetaDataBuilder</ref>(std::shared_ptr&lt;WriterProperties&gt;<sp/>props,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/>schema_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RowGroupMetaDataBuilderImpl;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;RowGroupMetaDataBuilderImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="classparquet_1_1_file_meta_data_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>convenience<sp/>to<sp/>get<sp/>a<sp/>MetaData<sp/>reader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;FileMetaDataBuilder&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,<sp/>std::shared_ptr&lt;WriterProperties&gt;<sp/>props,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;<sp/><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref><sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>~<ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>prior<sp/>RowGroupMetaDataBuilder<sp/>(if<sp/>any)<sp/>is<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_row_group_meta_data_builder" kindref="compound">RowGroupMetaDataBuilder</ref>*<sp/>AppendRowGroup();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>the<sp/>Thrift<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FileMetaData&gt;<sp/>Finish();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>crypto<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FileCryptoMetaData&gt;<sp/>GetCryptoMetaData();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_meta_data_builder" kindref="compound">FileMetaDataBuilder</ref>(</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/>schema,<sp/>std::shared_ptr&lt;WriterProperties&gt;<sp/>props,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;<sp/><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref><sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileMetaDataBuilderImpl;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FileMetaDataBuilderImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">PARQUET_EXPORT<sp/>std::string<sp/><ref refid="namespaceparquet_1afe4f929dcd70fea8d2799ce4fcafc0fc" kindref="member">ParquetVersionToString</ref>(<ref refid="structparquet_1_1_parquet_version_1aaf8586f6c213f55116376dcff4c70805" kindref="member">ParquetVersion::type</ref><sp/>ver);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/metadata.h"/>
  </compounddef>
</doxygen>
