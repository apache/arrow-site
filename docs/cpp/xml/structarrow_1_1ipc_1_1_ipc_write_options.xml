<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1ipc_1_1_ipc_write_options" kind="struct" language="C++" prot="public">
    <compoundname>arrow::ipc::IpcWriteOptions</compoundname>
    <includes refid="ipc_2options_8h" local="no">arrow/ipc/options.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a069711feb5a9230774f8ac0f1d1ffa0d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::ipc::IpcWriteOptions::allow_64bit</definition>
        <argsstring></argsstring>
        <name>allow_64bit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="42" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a6602365f423aee8557b80e5826dbd20f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::ipc::IpcWriteOptions::max_recursion_depth</definition>
        <argsstring></argsstring>
        <name>max_recursion_depth</name>
        <initializer>= <ref refid="namespacearrow_1_1ipc_1a2dfe6a86ac11df4637223d48d29111a9" kindref="member">kMaxNestingDepth</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="44" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a0cacd69067efc1a1530c02059b2ca931" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::ipc::IpcWriteOptions::alignment</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="48" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a8502278af861038dcb9a910324b07903" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::ipc::IpcWriteOptions::write_legacy_ipc_format</definition>
        <argsstring></argsstring>
        <name>write_legacy_ipc_format</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Write the pre-0.15.0 encapsulated IPC message format consisting of a 4-byte prefix instead of 8 byte. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="52" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a09ddce1594c5400ede80e8896c64c884" prot="public" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::ipc::IpcWriteOptions::memory_pool</definition>
        <argsstring></argsstring>
        <name>memory_pool</name>
        <initializer>= <ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</initializer>
        <briefdescription>
<para>The memory pool to use for allocations made during IPC writing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="55" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a7c1ca6df80d9419f4380b3ed9700ebbe" prot="public" static="no" mutable="no">
        <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
        <definition>Compression::type arrow::ipc::IpcWriteOptions::compression</definition>
        <argsstring></argsstring>
        <name>compression</name>
        <initializer>= <ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaeba5020cda7bd5be9f453fcbdba7eb9" kindref="member">Compression::UNCOMPRESSED</ref></initializer>
        <briefdescription>
<para>EXPERIMENTAL: Codec to use for compressing and decompressing record batch body buffers. </para>        </briefdescription>
        <detaileddescription>
<para>This is not part of the Arrow IPC protocol and only for internal use (e.g. Feather files). May only be LZ4_FRAME and ZSTD </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="61" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1a6768bccaa2b7f584e5706a4a18ed0cf8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::ipc::IpcWriteOptions::compression_level</definition>
        <argsstring></argsstring>
        <name>compression_level</name>
        <initializer>= <ref refid="structarrow_1_1_compression_1a6771e13d8b7b2eacb6c282ab00ee0e70" kindref="member">Compression::kUseDefaultCompressionLevel</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="62" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_write_options_1ab5b5e0a22c7cff37a2345b5cdeb9e91e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::ipc::IpcWriteOptions::use_threads</definition>
        <argsstring></argsstring>
        <name>use_threads</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Use global CPU thread pool to parallelize any computational tasks like compression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="66" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1ipc_1_1_ipc_write_options_1ad66a7351569c732ff6c105140204be67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1ipc_1_1_ipc_write_options" kindref="compound">IpcWriteOptions</ref></type>
        <definition>static IpcWriteOptions arrow::ipc::IpcWriteOptions::Defaults</definition>
        <argsstring>()</argsstring>
        <name>Defaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Options for writing Arrow IPC messages. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2629">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="2628">
        <label>arrow::ipc::IpcWriteOptions</label>
        <link refid="structarrow_1_1ipc_1_1_ipc_write_options"/>
        <childnode refid="2629" relation="usage">
          <edgelabel>memory_pool</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/ipc/options.h" line="39" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="39" bodyend="69"/>
    <listofallmembers>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a0cacd69067efc1a1530c02059b2ca931" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>alignment</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a069711feb5a9230774f8ac0f1d1ffa0d" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>allow_64bit</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a7c1ca6df80d9419f4380b3ed9700ebbe" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>compression</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a6768bccaa2b7f584e5706a4a18ed0cf8" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>compression_level</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1ad66a7351569c732ff6c105140204be67" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>Defaults</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a6602365f423aee8557b80e5826dbd20f" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>max_recursion_depth</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a09ddce1594c5400ede80e8896c64c884" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>memory_pool</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1ab5b5e0a22c7cff37a2345b5cdeb9e91e" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>use_threads</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_write_options_1a8502278af861038dcb9a910324b07903" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcWriteOptions</scope><name>write_legacy_ipc_format</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
