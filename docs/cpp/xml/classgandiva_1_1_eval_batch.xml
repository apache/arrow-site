<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_eval_batch" kind="class" language="C++" prot="public">
    <compoundname>gandiva::EvalBatch</compoundname>
    <includes refid="eval__batch_8h" local="no">gandiva/eval_batch.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1a0c9483f4c6260cfe3c05a706763463e3" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t gandiva::EvalBatch::num_records_</definition>
        <argsstring></argsstring>
        <name>num_records_</name>
        <briefdescription>
<para>number of records in the current batch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="88" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1ae44bada2747299b757389cbf516ea11f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gandiva::EvalBatch::num_buffers_</definition>
        <argsstring></argsstring>
        <name>num_buffers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="91" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1a618dfe41760ef29b4d9b9c559c980284" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t *[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t*[]&gt; gandiva::EvalBatch::buffers_array_</definition>
        <argsstring></argsstring>
        <name>buffers_array_</name>
        <briefdescription>
<para>An array of &apos;num_buffers_&apos;, each containing a buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The buffer sizes depends on the data type, but all of them have the same number of slots (equal to num_records_). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="96" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1a22ea7fa8d112b2e3ac18539dc84a9222" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; int64_t[]&gt;</type>
        <definition>std::unique_ptr&lt;int64_t[]&gt; gandiva::EvalBatch::buffer_offsets_array_</definition>
        <argsstring></argsstring>
        <name>buffer_offsets_array_</name>
        <briefdescription>
<para>An array of &apos;num_buffers_&apos;, each containing the offset for corresponding buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="100" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1a0c46857470b755641353b03ae9fb1876" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_local_bit_maps_holder" kindref="compound">LocalBitMapsHolder</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LocalBitMapsHolder&gt; gandiva::EvalBatch::local_bitmaps_holder_</definition>
        <argsstring></argsstring>
        <name>local_bitmaps_holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="102" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_eval_batch_1aab5d2207e95e7231608b3a72ceea7022" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_execution_context" kindref="compound">ExecutionContext</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ExecutionContext&gt; gandiva::EvalBatch::execution_context_</definition>
        <argsstring></argsstring>
        <name>execution_context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="104" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a1f10445f553b0ab826d2340d51673bf4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::EvalBatch::EvalBatch</definition>
        <argsstring>(int64_t num_records, int num_buffers, int num_local_bitmaps)</argsstring>
        <name>EvalBatch</name>
        <param>
          <type>int64_t</type>
          <declname>num_records</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_buffers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_local_bitmaps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="35" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="35" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a053e4e054882d146aab054227307e044" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t gandiva::EvalBatch::num_records</definition>
        <argsstring>() const</argsstring>
        <name>num_records</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="45" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a93525fe07d6efc01dec953f82cce1122" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t **</type>
        <definition>uint8_t** gandiva::EvalBatch::GetBufferArray</definition>
        <argsstring>() const</argsstring>
        <name>GetBufferArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="47" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a7b4a41e3ec8189646de057b8e78cd1e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t *</type>
        <definition>int64_t* gandiva::EvalBatch::GetBufferOffsetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetBufferOffsetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="49" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1aff6d0419fe187020fa5704e1487a35fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gandiva::EvalBatch::GetNumBuffers</definition>
        <argsstring>() const</argsstring>
        <name>GetNumBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="51" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1ab6167f14a637de1904cb998b881d9873" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* gandiva::EvalBatch::GetBuffer</definition>
        <argsstring>(int idx) const</argsstring>
        <name>GetBuffer</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="53" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a08a923804fce3b08778a7db86712192c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t gandiva::EvalBatch::GetBufferOffset</definition>
        <argsstring>(int idx) const</argsstring>
        <name>GetBufferOffset</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="58" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a873a8dedeca81c2b7cb1be2eeb8ec543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::EvalBatch::SetBuffer</definition>
        <argsstring>(int idx, uint8_t *buffer, int64_t offset)</argsstring>
        <name>SetBuffer</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="63" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a33e6e7382338021017148c3a03944266" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gandiva::EvalBatch::GetNumLocalBitMaps</definition>
        <argsstring>() const</argsstring>
        <name>GetNumLocalBitMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="69" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a80efead9061168b3dcb8384b48112c5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t gandiva::EvalBatch::GetLocalBitmapSize</definition>
        <argsstring>() const</argsstring>
        <name>GetLocalBitmapSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="71" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1adc41d0f5e25460e60698bbe419da1ad2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* gandiva::EvalBatch::GetLocalBitMap</definition>
        <argsstring>(int idx) const</argsstring>
        <name>GetLocalBitMap</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="75" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1adae9e77351f4fa363b2f302be8f79edf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t **</type>
        <definition>uint8_t** gandiva::EvalBatch::GetLocalBitMapArray</definition>
        <argsstring>() const</argsstring>
        <name>GetLocalBitMapArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="80" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_eval_batch_1a340afdf9ccaf26f71f85db241273ef91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgandiva_1_1_execution_context" kindref="compound">ExecutionContext</ref> *</type>
        <definition>ExecutionContext* gandiva::EvalBatch::GetExecutionContext</definition>
        <argsstring>() const</argsstring>
        <name>GetExecutionContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="84" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="84" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The buffers corresponding to one batch of records, used for expression evaluation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/eval_batch.h" line="33" column="1" bodyfile="/arrow/cpp/src/gandiva/eval_batch.h" bodystart="33" bodyend="105"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_eval_batch_1a22ea7fa8d112b2e3ac18539dc84a9222" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>buffer_offsets_array_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a618dfe41760ef29b4d9b9c559c980284" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>buffers_array_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a1f10445f553b0ab826d2340d51673bf4" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>EvalBatch</name></member>
      <member refid="classgandiva_1_1_eval_batch_1aab5d2207e95e7231608b3a72ceea7022" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>execution_context_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1ab6167f14a637de1904cb998b881d9873" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetBuffer</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a93525fe07d6efc01dec953f82cce1122" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetBufferArray</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a08a923804fce3b08778a7db86712192c" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetBufferOffset</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a7b4a41e3ec8189646de057b8e78cd1e9" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetBufferOffsetArray</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a340afdf9ccaf26f71f85db241273ef91" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetExecutionContext</name></member>
      <member refid="classgandiva_1_1_eval_batch_1adc41d0f5e25460e60698bbe419da1ad2" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetLocalBitMap</name></member>
      <member refid="classgandiva_1_1_eval_batch_1adae9e77351f4fa363b2f302be8f79edf" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetLocalBitMapArray</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a80efead9061168b3dcb8384b48112c5b" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetLocalBitmapSize</name></member>
      <member refid="classgandiva_1_1_eval_batch_1aff6d0419fe187020fa5704e1487a35fa" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetNumBuffers</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a33e6e7382338021017148c3a03944266" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>GetNumLocalBitMaps</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a0c46857470b755641353b03ae9fb1876" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>local_bitmaps_holder_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1ae44bada2747299b757389cbf516ea11f" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>num_buffers_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a053e4e054882d146aab054227307e044" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>num_records</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a0c9483f4c6260cfe3c05a706763463e3" prot="private" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>num_records_</name></member>
      <member refid="classgandiva_1_1_eval_batch_1a873a8dedeca81c2b7cb1be2eeb8ec543" prot="public" virt="non-virtual"><scope>gandiva::EvalBatch</scope><name>SetBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
