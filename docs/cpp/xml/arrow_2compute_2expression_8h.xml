<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2compute_2expression_8h" kind="file" language="C++">
    <compoundname>expression.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="compute_2type__fwd_8h" local="yes">arrow/compute/type_fwd.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <incdepgraph>
      <node id="3009">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>cstdint</label>
      </node>
      <node id="3005">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3011" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
      </node>
      <node id="2996">
        <label>/arrow/cpp/src/arrow/compute/expression.h</label>
        <link refid="arrow_2compute_2expression_8h"/>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="2999" relation="include">
        </childnode>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
      </node>
      <node id="3000">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
      </node>
      <node id="2998">
        <label>string</label>
      </node>
      <node id="3012">
        <label>ostream</label>
      </node>
      <node id="3004">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="2999">
        <label>arrow/compute/type_fwd.h</label>
        <link refid="compute_2type__fwd_8h"/>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="3000" relation="include">
        </childnode>
      </node>
      <node id="3001">
        <label>vector</label>
      </node>
      <node id="3008">
        <label>utility</label>
      </node>
      <node id="3007">
        <label>iosfwd</label>
      </node>
      <node id="3010">
        <label>type_traits</label>
      </node>
      <node id="3006">
        <label>cstring</label>
      </node>
      <node id="3011">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
      </node>
      <node id="2997">
        <label>memory</label>
      </node>
      <node id="3002">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="3003" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classarrow_1_1compute_1_1_expr" prot="public">arrow::compute::Expr</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_value_expr" prot="public">arrow::compute::ValueExpr</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_array_expr" prot="public">arrow::compute::ArrayExpr</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_scalar_expr" prot="public">arrow::compute::ScalarExpr</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_value_mixin" prot="public">arrow::compute::value::ValueMixin</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_null" prot="public">arrow::compute::value::Null</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_bool" prot="public">arrow::compute::value::Bool</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_number" prot="public">arrow::compute::value::Number</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_integer" prot="public">arrow::compute::value::Integer</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_signed_integer" prot="public">arrow::compute::value::SignedInteger</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_int8" prot="public">arrow::compute::value::Int8</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_int16" prot="public">arrow::compute::value::Int16</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_int32" prot="public">arrow::compute::value::Int32</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_int64" prot="public">arrow::compute::value::Int64</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" prot="public">arrow::compute::value::UnsignedInteger</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_u_int8" prot="public">arrow::compute::value::UInt8</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_u_int16" prot="public">arrow::compute::value::UInt16</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_u_int32" prot="public">arrow::compute::value::UInt32</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_u_int64" prot="public">arrow::compute::value::UInt64</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_floating" prot="public">arrow::compute::value::Floating</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_float16" prot="public">arrow::compute::value::Float16</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_float32" prot="public">arrow::compute::value::Float32</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_float64" prot="public">arrow::compute::value::Float64</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_binary" prot="public">arrow::compute::value::Binary</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_utf8" prot="public">arrow::compute::value::Utf8</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_list" prot="public">arrow::compute::value::List</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1value_1_1_struct" prot="public">arrow::compute::value::Struct</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1scalar_1_1_list" prot="public">arrow::compute::scalar::List</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1scalar_1_1_struct" prot="public">arrow::compute::scalar::Struct</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1array_1_1_list" prot="public">arrow::compute::array::List</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1array_1_1_struct" prot="public">arrow::compute::array::Struct</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1compute">arrow::compute</innernamespace>
    <innernamespace refid="namespacearrow_1_1compute_1_1value">arrow::compute::value</innernamespace>
    <innernamespace refid="namespacearrow_1_1compute_1_1scalar">arrow::compute::scalar</innernamespace>
    <innernamespace refid="namespacearrow_1_1compute_1_1array">arrow::compute::array</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" prot="public" static="no">
        <name>SIMPLE_EXPR_FACTORY</name>
        <param><defname>NAME</defname></param>
        <initializer>ARROW_EXPORT ExprPtr NAME(ConstOpPtr op);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="124" column="9" bodyfile="/arrow/cpp/src/arrow/compute/expression.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" prot="public" static="no">
        <name>DECLARE_SCALAR_EXPR</name>
        <param><defname>TYPE</defname></param>
        <initializer>class ARROW_EXPORT TYPE : public ScalarExpr, public value::TYPE { \
   public:                                                          \
    explicit TYPE(ConstOpPtr op);                                   \
    using ScalarExpr::kind;                                         \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="128" column="9" bodyfile="/arrow/cpp/src/arrow/compute/expression.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" prot="public" static="no">
        <name>DECLARE_ARRAY_EXPR</name>
        <param><defname>TYPE</defname></param>
        <initializer>class ARROW_EXPORT TYPE : public ArrayExpr, public value::TYPE { \
   public:                                                         \
    explicit TYPE(ConstOpPtr op);                                  \
    using ArrayExpr::kind;                                         \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="185" column="9" bodyfile="/arrow/cpp/src/arrow/compute/expression.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compute_2type__fwd_8h" kindref="compound">arrow/compute/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">compute<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LogicalType;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExprVisitor;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Operation;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classarrow_1_1compute_1_1_expr" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1_expr" kindref="compound">Expr</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_expr" kindref="compound">Expr</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1compute_1_1_expr" kindref="compound">Expr</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>kind()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>Status<sp/>Accept(ExprVisitor*<sp/>visitor)<sp/>const<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classarrow_1_1compute_1_1_expr_1a89480eaf6debbc12675ddec6bcfb0782" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/><ref refid="classarrow_1_1compute_1_1_expr_1a89480eaf6debbc12675ddec6bcfb0782" kindref="member">op</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op_;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56" refid="classarrow_1_1compute_1_1_expr_1a80d5e33eda9eef25716e721dfbabbefa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/><ref refid="classarrow_1_1compute_1_1_expr_1a80d5e33eda9eef25716e721dfbabbefa" kindref="member">op_</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" kindref="member">ValueRank</ref><sp/>{<sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0ba8f3d9a4b6a7b7f2c7afa61ca113d0db9" kindref="member">SCALAR</ref>,<sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0bacb4fb1757fb37c43cded35d3eb857c43" kindref="member">ARRAY</ref><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classarrow_1_1compute_1_1_value_expr" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1_value_expr" kindref="compound">ValueExpr</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_expr" kindref="compound">Expr</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>const<sp/>ExprName&amp;<sp/>name()<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" kindref="member">ValueRank</ref><sp/>rank()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1_value_expr" kindref="compound">ValueExpr</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classarrow_1_1compute_1_1_value_expr_1aa717699b5de8bba46c38e269156e5924" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/><ref refid="classarrow_1_1compute_1_1_value_expr_1aa717699b5de8bba46c38e269156e5924" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classarrow_1_1compute_1_1_array_expr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1_array_expr" kindref="compound">ArrayExpr</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_value_expr" kindref="compound">ValueExpr</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_value_expr_1a36df92e3eeed446472d4a9a9a88d738f" kindref="member">ValueExpr::ValueExpr</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::string<sp/>kind()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" kindref="member">ValueRank</ref><sp/>rank()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classarrow_1_1compute_1_1_scalar_expr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1_scalar_expr" kindref="compound">ScalarExpr</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_value_expr" kindref="compound">ValueExpr</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_value_expr_1a36df92e3eeed446472d4a9a9a88d738f" kindref="member">ValueExpr::ValueExpr</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::string<sp/>kind()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1compute_1a8c7314c2838c3f4df31d9027983e7b0b" kindref="member">ValueRank</ref><sp/>rank()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespacearrow_1_1compute_1_1value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">value<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>mixin<sp/>classes<sp/>to<sp/>provide<sp/>a<sp/>type<sp/>hierarchy<sp/>for<sp/>values<sp/>identify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classarrow_1_1compute_1_1value_1_1_value_mixin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="99" refid="classarrow_1_1compute_1_1value_1_1_null" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_null" kindref="compound">Null</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="100" refid="classarrow_1_1compute_1_1value_1_1_bool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_bool" kindref="compound">Bool</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="101" refid="classarrow_1_1compute_1_1value_1_1_number" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_number" kindref="compound">Number</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="102" refid="classarrow_1_1compute_1_1value_1_1_integer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_integer" kindref="compound">Integer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_number" kindref="compound">Number</ref><sp/>{};</highlight></codeline>
<codeline lineno="103" refid="classarrow_1_1compute_1_1value_1_1_signed_integer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_signed_integer" kindref="compound">SignedInteger</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_integer" kindref="compound">Integer</ref><sp/>{};</highlight></codeline>
<codeline lineno="104" refid="classarrow_1_1compute_1_1value_1_1_int8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_int8" kindref="compound">Int8</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_signed_integer" kindref="compound">SignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="105" refid="classarrow_1_1compute_1_1value_1_1_int16" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_int16" kindref="compound">Int16</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_signed_integer" kindref="compound">SignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="106" refid="classarrow_1_1compute_1_1value_1_1_int32" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_int32" kindref="compound">Int32</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_signed_integer" kindref="compound">SignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="107" refid="classarrow_1_1compute_1_1value_1_1_int64" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_int64" kindref="compound">Int64</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_signed_integer" kindref="compound">SignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="108" refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" kindref="compound">UnsignedInteger</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_integer" kindref="compound">Integer</ref><sp/>{};</highlight></codeline>
<codeline lineno="109" refid="classarrow_1_1compute_1_1value_1_1_u_int8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_u_int8" kindref="compound">UInt8</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" kindref="compound">UnsignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="110" refid="classarrow_1_1compute_1_1value_1_1_u_int16" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_u_int16" kindref="compound">UInt16</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" kindref="compound">UnsignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="111" refid="classarrow_1_1compute_1_1value_1_1_u_int32" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_u_int32" kindref="compound">UInt32</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" kindref="compound">UnsignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="112" refid="classarrow_1_1compute_1_1value_1_1_u_int64" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_u_int64" kindref="compound">UInt64</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_unsigned_integer" kindref="compound">UnsignedInteger</ref><sp/>{};</highlight></codeline>
<codeline lineno="113" refid="classarrow_1_1compute_1_1value_1_1_floating" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_floating" kindref="compound">Floating</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_number" kindref="compound">Number</ref><sp/>{};</highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1compute_1_1value_1_1_float16" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_float16" kindref="compound">Float16</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_floating" kindref="compound">Floating</ref><sp/>{};</highlight></codeline>
<codeline lineno="115" refid="classarrow_1_1compute_1_1value_1_1_float32" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_float32" kindref="compound">Float32</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_floating" kindref="compound">Floating</ref><sp/>{};</highlight></codeline>
<codeline lineno="116" refid="classarrow_1_1compute_1_1value_1_1_float64" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_float64" kindref="compound">Float64</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_floating" kindref="compound">Floating</ref><sp/>{};</highlight></codeline>
<codeline lineno="117" refid="classarrow_1_1compute_1_1value_1_1_binary" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_binary" kindref="compound">Binary</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="118" refid="classarrow_1_1compute_1_1value_1_1_utf8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_utf8" kindref="compound">Utf8</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_binary" kindref="compound">Binary</ref><sp/>{};</highlight></codeline>
<codeline lineno="119" refid="classarrow_1_1compute_1_1value_1_1_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_list" kindref="compound">List</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="120" refid="classarrow_1_1compute_1_1value_1_1_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1value_1_1_struct" kindref="compound">Struct</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_value_mixin" kindref="compound">ValueMixin</ref><sp/>{};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLE_EXPR_FACTORY(NAME)<sp/>ARROW_EXPORT<sp/>ExprPtr<sp/>NAME(ConstOpPtr<sp/>op);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="namespacearrow_1_1compute_1_1scalar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow_1_1dataset_1abbc0528fcaf8fe939da7b3784bb120d4" kindref="member">scalar</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_SCALAR_EXPR(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/>class<sp/>ARROW_EXPORT<sp/>TYPE<sp/>:<sp/>public<sp/>ScalarExpr,<sp/>public<sp/>value::TYPE<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/>public:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>TYPE(ConstOpPtr<sp/>op);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>ScalarExpr::kind;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Null)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Bool)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Int8)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Int16)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Int32)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Int64)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(UInt8)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(UInt16)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(UInt32)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(UInt64)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Float16)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Float32)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Float64)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Binary)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1abe7dd3e18e6b814cac586f3aa6ea4397" kindref="member">DECLARE_SCALAR_EXPR</ref>(Utf8)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DECLARE_SCALAR_EXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga9c09bf26bc03f0fb0c84a0277215dd67" kindref="member">int8</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga034c5c703e15039fe76af412d349734d" kindref="member">int16</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga86f6bfe394347f77befa2143297ad541" kindref="member">int32</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga733b16be653069b8d926529662e34e79" kindref="member">int64</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga4891a423be213550cc24e8ebe830673f" kindref="member">uint8</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga9f1e44bc2ab9b465b6e7b601eb48f0a0" kindref="member">uint16</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gae80e510cfb2931ac18c73cba0be6d894" kindref="member">uint32</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gae548d03275f4afaa97a269774ce6930c" kindref="member">uint64</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga4fac9b6739876df09be8b82d70b26734" kindref="member">float16</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga48fca9d26feda61c8255ec3c44a2078c" kindref="member">float32</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gab6f514320a9b037ab161fa97db73b970" kindref="member">float64</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga63178820a26f6ecb894ad35963ca981a" kindref="member">utf8</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classarrow_1_1compute_1_1scalar_1_1_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1scalar_1_1_list" kindref="compound">List</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_scalar_expr" kindref="compound">ScalarExpr</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_list" kindref="compound">value::List</ref><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1scalar_1_1_list" kindref="compound">List</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_scalar_expr_1a7d43014d45e3d1948531e9460ee1b563" kindref="member">ScalarExpr::kind</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classarrow_1_1compute_1_1scalar_1_1_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1scalar_1_1_struct" kindref="compound">Struct</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_scalar_expr" kindref="compound">ScalarExpr</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_struct" kindref="compound">value::Struct</ref><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1scalar_1_1_struct" kindref="compound">Struct</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_scalar_expr_1a7d43014d45e3d1948531e9460ee1b563" kindref="member">ScalarExpr::kind</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="namespacearrow_1_1compute_1_1array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">array<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ARRAY_EXPR(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/>class<sp/>ARROW_EXPORT<sp/>TYPE<sp/>:<sp/>public<sp/>ArrayExpr,<sp/>public<sp/>value::TYPE<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/>public:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>TYPE(ConstOpPtr<sp/>op);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>ArrayExpr::kind;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Null)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Bool)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Int8)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Int16)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Int32)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Int64)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(UInt8)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(UInt16)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(UInt32)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(UInt64)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Float16)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Float32)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Float64)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Binary)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a004f436b88aafe75834ed5707b92784a" kindref="member">DECLARE_ARRAY_EXPR</ref>(Utf8)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DECLARE_ARRAY_EXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga9c09bf26bc03f0fb0c84a0277215dd67" kindref="member">int8</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga034c5c703e15039fe76af412d349734d" kindref="member">int16</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga86f6bfe394347f77befa2143297ad541" kindref="member">int32</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga733b16be653069b8d926529662e34e79" kindref="member">int64</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga4891a423be213550cc24e8ebe830673f" kindref="member">uint8</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga9f1e44bc2ab9b465b6e7b601eb48f0a0" kindref="member">uint16</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gae80e510cfb2931ac18c73cba0be6d894" kindref="member">uint32</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gae548d03275f4afaa97a269774ce6930c" kindref="member">uint64</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga4fac9b6739876df09be8b82d70b26734" kindref="member">float16</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga48fca9d26feda61c8255ec3c44a2078c" kindref="member">float32</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1gab6f514320a9b037ab161fa97db73b970" kindref="member">float64</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="arrow_2compute_2expression_8h_1a461789d135d18e102ce4edafb3e3d979" kindref="member">SIMPLE_EXPR_FACTORY</ref>(<ref refid="group__type-factories_1ga63178820a26f6ecb894ad35963ca981a" kindref="member">utf8</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classarrow_1_1compute_1_1array_1_1_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1array_1_1_list" kindref="compound">List</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_expr" kindref="compound">ArrayExpr</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_list" kindref="compound">value::List</ref><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1array_1_1_list" kindref="compound">List</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_expr_1aac3734649fae83373efe522c3972f1cf" kindref="member">ArrayExpr::kind</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classarrow_1_1compute_1_1array_1_1_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1compute_1_1array_1_1_struct" kindref="compound">Struct</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_expr" kindref="compound">ArrayExpr</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1value_1_1_struct" kindref="compound">value::Struct</ref><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1array_1_1_struct" kindref="compound">Struct</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>type);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_expr_1aac3734649fae83373efe522c3972f1cf" kindref="member">ArrayExpr::kind</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SIMPLE_EXPR_FACTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="243" refid="namespacearrow_1_1compute_1acb07c5f8cc6b295a7b39681058a1af39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1acb07c5f8cc6b295a7b39681058a1af39" kindref="member">InheritsFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectType*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj)<sp/>!=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="248" refid="namespacearrow_1_1compute_1a137884557c4ada6b6c4b9f381fd7165b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1acb07c5f8cc6b295a7b39681058a1af39" kindref="member">InheritsFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectType&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;obj)<sp/>!=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1abc53dddd8a483d5a242c37aa655c5ddc" kindref="member">GetScalarExpr</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>ty,<sp/><ref refid="namespacearrow_1_1compute_1a3d7741dfdaf5c06817fdbdaa539534a2" kindref="member">ExprPtr</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1a0444dc9ae8752dfc070c0583106d3193" kindref="member">GetArrayExpr</ref>(<ref refid="namespacearrow_1_1compute_1af255a47e73df4040c1239b137018bb89" kindref="member">ConstOpPtr</ref><sp/>op,<sp/><ref refid="namespacearrow_1_1compute_1a21de3825cdde68e67cd591917584b21b" kindref="member">LogicalTypePtr</ref><sp/>ty,<sp/><ref refid="namespacearrow_1_1compute_1a3d7741dfdaf5c06817fdbdaa539534a2" kindref="member">ExprPtr</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/compute/expression.h"/>
  </compounddef>
</doxygen>
