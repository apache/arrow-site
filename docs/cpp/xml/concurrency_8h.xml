<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="concurrency_8h" kind="file" language="C++">
    <compoundname>concurrency.h</compoundname>
    <includes local="no">memory</includes>
    <includes refid="interfaces_8h" local="yes">arrow/io/interfaces.h</includes>
    <includes refid="result_8h" local="yes">arrow/result.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="checked__cast_8h" local="yes">arrow/util/checked_cast.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="cuda__memory_8h" local="yes">/arrow/cpp/src/arrow/gpu/cuda_memory.h</includedby>
    <includedby refid="buffered_8h" local="yes">/arrow/cpp/src/arrow/io/buffered.h</includedby>
    <includedby refid="compressed_8h" local="yes">/arrow/cpp/src/arrow/io/compressed.h</includedby>
    <includedby refid="file_8h" local="yes">/arrow/cpp/src/arrow/io/file.h</includedby>
    <includedby refid="io_2memory_8h" local="yes">/arrow/cpp/src/arrow/io/memory.h</includedby>
    <incdepgraph>
      <node id="8076">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8071" relation="include">
        </childnode>
        <childnode refid="8072" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
      </node>
      <node id="8060">
        <label>cstdint</label>
      </node>
      <node id="8073">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8074" relation="include">
        </childnode>
        <childnode refid="8075" relation="include">
        </childnode>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8072" relation="include">
        </childnode>
        <childnode refid="8076" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
        <childnode refid="8077" relation="include">
        </childnode>
        <childnode refid="8066" relation="include">
        </childnode>
      </node>
      <node id="8064">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8062" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
        <childnode refid="8066" relation="include">
        </childnode>
      </node>
      <node id="8059">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="8060" relation="include">
        </childnode>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8062" relation="include">
        </childnode>
        <childnode refid="8063" relation="include">
        </childnode>
        <childnode refid="8064" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
        <childnode refid="8067" relation="include">
        </childnode>
        <childnode refid="8066" relation="include">
        </childnode>
      </node>
      <node id="8079">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8071" relation="include">
        </childnode>
      </node>
      <node id="8061">
        <label>string</label>
      </node>
      <node id="8068">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="8078">
        <label>ostream</label>
      </node>
      <node id="8066">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8062">
        <label>vector</label>
      </node>
      <node id="8070">
        <label>new</label>
      </node>
      <node id="8072">
        <label>utility</label>
      </node>
      <node id="8067">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="8060" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8068" relation="include">
        </childnode>
      </node>
      <node id="8063">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="8075">
        <label>iosfwd</label>
      </node>
      <node id="8057">
        <label>/arrow/cpp/src/arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8059" relation="include">
        </childnode>
        <childnode refid="8069" relation="include">
        </childnode>
        <childnode refid="8073" relation="include">
        </childnode>
        <childnode refid="8079" relation="include">
        </childnode>
        <childnode refid="8065" relation="include">
        </childnode>
        <childnode refid="8066" relation="include">
        </childnode>
      </node>
      <node id="8069">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8070" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8071" relation="include">
        </childnode>
        <childnode refid="8072" relation="include">
        </childnode>
        <childnode refid="8073" relation="include">
        </childnode>
        <childnode refid="8076" relation="include">
        </childnode>
      </node>
      <node id="8071">
        <label>type_traits</label>
      </node>
      <node id="8074">
        <label>cstring</label>
      </node>
      <node id="8077">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8058" relation="include">
        </childnode>
        <childnode refid="8078" relation="include">
        </childnode>
        <childnode refid="8061" relation="include">
        </childnode>
        <childnode refid="8072" relation="include">
        </childnode>
        <childnode refid="8066" relation="include">
        </childnode>
      </node>
      <node id="8058">
        <label>memory</label>
      </node>
      <node id="8065">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8060" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8100">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="8105">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="8085">
        <label>/arrow/cpp/src/arrow/io/api.h</label>
        <link refid="io_2api_8h"/>
      </node>
      <node id="8104">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="8105" relation="include">
        </childnode>
        <childnode refid="8106" relation="include">
        </childnode>
      </node>
      <node id="8124">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="8114" relation="include">
        </childnode>
      </node>
      <node id="8120">
        <label>/arrow/cpp/src/parquet/murmur3.h</label>
        <link refid="murmur3_8h"/>
      </node>
      <node id="8083">
        <label>/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h</label>
        <link refid="cuda__arrow__ipc_8h"/>
        <childnode refid="8082" relation="include">
        </childnode>
      </node>
      <node id="8082">
        <label>/arrow/cpp/src/arrow/gpu/cuda_api.h</label>
        <link refid="cuda__api_8h"/>
      </node>
      <node id="8116">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="8103">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="8099">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="8127">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="8093">
        <label>/arrow/cpp/src/parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8095" relation="include">
        </childnode>
        <childnode refid="8096" relation="include">
        </childnode>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8098" relation="include">
        </childnode>
        <childnode refid="8099" relation="include">
        </childnode>
        <childnode refid="8100" relation="include">
        </childnode>
        <childnode refid="8101" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8104" relation="include">
        </childnode>
        <childnode refid="8107" relation="include">
        </childnode>
        <childnode refid="8109" relation="include">
        </childnode>
        <childnode refid="8111" relation="include">
        </childnode>
        <childnode refid="8117" relation="include">
        </childnode>
        <childnode refid="8118" relation="include">
        </childnode>
        <childnode refid="8119" relation="include">
        </childnode>
        <childnode refid="8120" relation="include">
        </childnode>
        <childnode refid="8121" relation="include">
        </childnode>
        <childnode refid="8115" relation="include">
        </childnode>
        <childnode refid="8122" relation="include">
        </childnode>
        <childnode refid="8125" relation="include">
        </childnode>
        <childnode refid="8126" relation="include">
        </childnode>
        <childnode refid="8114" relation="include">
        </childnode>
        <childnode refid="8128" relation="include">
        </childnode>
      </node>
      <node id="8117">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8096" relation="include">
        </childnode>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8103" relation="include">
        </childnode>
      </node>
      <node id="8087">
        <label>/arrow/cpp/src/arrow/io/file.h</label>
        <link refid="file_8h"/>
        <childnode refid="8088" relation="include">
        </childnode>
        <childnode refid="8085" relation="include">
        </childnode>
      </node>
      <node id="8091">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="8089" relation="include">
        </childnode>
      </node>
      <node id="8119">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8117" relation="include">
        </childnode>
        <childnode refid="8118" relation="include">
        </childnode>
        <childnode refid="8110" relation="include">
        </childnode>
      </node>
      <node id="8125">
        <label>/arrow/cpp/src/parquet/schema_internal.h</label>
        <link refid="schema__internal_8h"/>
      </node>
      <node id="8111">
        <label>/arrow/cpp/src/parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="8108" relation="include">
        </childnode>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8105" relation="include">
        </childnode>
        <childnode refid="8101" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8104" relation="include">
        </childnode>
        <childnode refid="8109" relation="include">
        </childnode>
        <childnode refid="8112" relation="include">
        </childnode>
        <childnode refid="8110" relation="include">
        </childnode>
        <childnode refid="8115" relation="include">
        </childnode>
        <childnode refid="8114" relation="include">
        </childnode>
      </node>
      <node id="8113">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="8114" relation="include">
        </childnode>
      </node>
      <node id="8102">
        <label>/arrow/cpp/src/parquet/column_scanner.h</label>
        <link refid="column__scanner_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
      </node>
      <node id="8115">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8096" relation="include">
        </childnode>
        <childnode refid="8099" relation="include">
        </childnode>
        <childnode refid="8116" relation="include">
        </childnode>
        <childnode refid="8117" relation="include">
        </childnode>
        <childnode refid="8118" relation="include">
        </childnode>
        <childnode refid="8119" relation="include">
        </childnode>
        <childnode refid="8110" relation="include">
        </childnode>
      </node>
      <node id="8094">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="8088">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="8089" relation="include">
        </childnode>
        <childnode refid="8090" relation="include">
        </childnode>
        <childnode refid="8091" relation="include">
        </childnode>
      </node>
      <node id="8107">
        <label>/arrow/cpp/src/parquet/deprecated_io.h</label>
        <link refid="deprecated__io_8h"/>
        <childnode refid="8108" relation="include">
        </childnode>
      </node>
      <node id="8114">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="8101">
        <label>/arrow/cpp/src/parquet/column_reader.h</label>
        <link refid="column__reader_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8103" relation="include">
        </childnode>
      </node>
      <node id="8121">
        <label>/arrow/cpp/src/parquet/printer.h</label>
        <link refid="printer_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
      </node>
      <node id="8097">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="8084">
        <label>/arrow/cpp/src/arrow/io/buffered.h</label>
        <link refid="buffered_8h"/>
        <childnode refid="8085" relation="include">
        </childnode>
      </node>
      <node id="8090">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="8089" relation="include">
        </childnode>
      </node>
      <node id="8092">
        <label>/arrow/cpp/src/arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="8085" relation="include">
        </childnode>
        <childnode refid="8093" relation="include">
        </childnode>
      </node>
      <node id="8122">
        <label>/arrow/cpp/src/parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="8123" relation="include">
        </childnode>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8098" relation="include">
        </childnode>
        <childnode refid="8101" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8112" relation="include">
        </childnode>
        <childnode refid="8118" relation="include">
        </childnode>
        <childnode refid="8124" relation="include">
        </childnode>
        <childnode refid="8113" relation="include">
        </childnode>
        <childnode refid="8119" relation="include">
        </childnode>
        <childnode refid="8110" relation="include">
        </childnode>
        <childnode refid="8115" relation="include">
        </childnode>
        <childnode refid="8125" relation="include">
        </childnode>
      </node>
      <node id="8081">
        <label>/arrow/cpp/src/arrow/gpu/cuda_memory.h</label>
        <link refid="cuda__memory_8h"/>
        <childnode refid="8082" relation="include">
        </childnode>
        <childnode refid="8083" relation="include">
        </childnode>
      </node>
      <node id="8080">
        <label>/arrow/cpp/src/arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="8081" relation="include">
        </childnode>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8086" relation="include">
        </childnode>
        <childnode refid="8087" relation="include">
        </childnode>
        <childnode refid="8092" relation="include">
        </childnode>
      </node>
      <node id="8118">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="8105" relation="include">
        </childnode>
        <childnode refid="8106" relation="include">
        </childnode>
      </node>
      <node id="8109">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="8110" relation="include">
        </childnode>
      </node>
      <node id="8086">
        <label>/arrow/cpp/src/arrow/io/compressed.h</label>
        <link refid="compressed_8h"/>
        <childnode refid="8085" relation="include">
        </childnode>
      </node>
      <node id="8126">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8105" relation="include">
        </childnode>
        <childnode refid="8127" relation="include">
        </childnode>
        <childnode refid="8114" relation="include">
        </childnode>
      </node>
      <node id="8098">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="8097" relation="include">
        </childnode>
      </node>
      <node id="8123">
        <label>/arrow/cpp/src/parquet/api/schema.h</label>
        <link refid="api_2schema_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8105" relation="include">
        </childnode>
      </node>
      <node id="8110">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="8106">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="8103" relation="include">
        </childnode>
      </node>
      <node id="8108">
        <label>/arrow/cpp/src/parquet/api/io.h</label>
        <link refid="parquet_2api_2io_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8105" relation="include">
        </childnode>
      </node>
      <node id="8129">
        <label>/arrow/cpp/src/parquet/hasher.h</label>
        <link refid="hasher_8h"/>
        <childnode refid="8100" relation="include">
        </childnode>
        <childnode refid="8120" relation="include">
        </childnode>
      </node>
      <node id="8112">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="8113" relation="include">
        </childnode>
        <childnode refid="8115" relation="include">
        </childnode>
      </node>
      <node id="8128">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="8100" relation="include">
        </childnode>
        <childnode refid="8127" relation="include">
        </childnode>
        <childnode refid="8101" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8104" relation="include">
        </childnode>
        <childnode refid="8109" relation="include">
        </childnode>
        <childnode refid="8112" relation="include">
        </childnode>
        <childnode refid="8116" relation="include">
        </childnode>
        <childnode refid="8129" relation="include">
        </childnode>
        <childnode refid="8119" relation="include">
        </childnode>
        <childnode refid="8120" relation="include">
        </childnode>
        <childnode refid="8110" relation="include">
        </childnode>
        <childnode refid="8115" relation="include">
        </childnode>
        <childnode refid="8122" relation="include">
        </childnode>
        <childnode refid="8125" relation="include">
        </childnode>
        <childnode refid="8126" relation="include">
        </childnode>
        <childnode refid="8114" relation="include">
        </childnode>
      </node>
      <node id="8089">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
      <node id="8095">
        <label>/arrow/cpp/src/parquet/arrow/path_internal.h</label>
        <link refid="path__internal_8h"/>
      </node>
      <node id="8096">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interfaces_8h" kindref="compound">arrow/io/interfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="result_8h" kindref="compound">arrow/result.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="checked__cast_8h" kindref="compound">arrow/util/checked_cast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LockType&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SharedLockGuard<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>SharedLockGuard(LockType*<sp/>lock)<sp/>:<sp/>lock_(lock)<sp/>{<sp/>lock_-&gt;LockShared();<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>~SharedLockGuard()<sp/>{<sp/>lock_-&gt;UnlockShared();<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>LockType*<sp/>lock_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LockType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExclusiveLockGuard<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>ExclusiveLockGuard(LockType*<sp/>lock)<sp/>:<sp/>lock_(lock)<sp/>{<sp/>lock_-&gt;LockExclusive();<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>~ExclusiveLockGuard()<sp/>{<sp/>lock_-&gt;UnlockExclusive();<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>LockType*<sp/>lock_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>concurrency<sp/>checker<sp/>that<sp/>marks<sp/>&quot;shared&quot;<sp/>and<sp/>&quot;exclusive&quot;<sp/>code<sp/>sections,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aborting<sp/>if<sp/>the<sp/>concurrency<sp/>rules<sp/>get<sp/>violated.<sp/><sp/>Does<sp/>nothing<sp/>in<sp/>release<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>intentionally<sp/>use<sp/>the<sp/>same<sp/>class<sp/>declaration<sp/>in<sp/>debug<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>release<sp/>builds<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>runtime<sp/>failures<sp/>when<sp/>e.g.<sp/>loading<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>release-built<sp/>DLL<sp/>with<sp/>a<sp/>debug-built<sp/>application,<sp/>or<sp/>the<sp/>reverse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>SharedExclusiveChecker<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>SharedExclusiveChecker();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LockShared();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnlockShared();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LockExclusive();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnlockExclusive();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>SharedLockGuard&lt;SharedExclusiveChecker&gt;<sp/>shared_guard()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SharedLockGuard&lt;SharedExclusiveChecker&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ExclusiveLockGuard&lt;SharedExclusiveChecker&gt;<sp/>exclusive_guard()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExclusiveLockGuard&lt;SharedExclusiveChecker&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Concurrency<sp/>wrappers<sp/>for<sp/>IO<sp/>classes<sp/>that<sp/>check<sp/>the<sp/>correctness<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>concurrent<sp/>calls<sp/>to<sp/>various<sp/>methods.<sp/><sp/>It<sp/>is<sp/>not<sp/>necessary<sp/>to<sp/>wrap<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IO<sp/>classes<sp/>with<sp/>these,<sp/>only<sp/>a<sp/>few<sp/>core<sp/>classes<sp/>that<sp/>get<sp/>used<sp/>in<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>not<sp/>using<sp/>virtual<sp/>inheritance<sp/>here<sp/>as<sp/>virtual<sp/>bases<sp/>have<sp/>poorly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>understood<sp/>semantic<sp/>overhead<sp/>which<sp/>we&apos;d<sp/>be<sp/>passing<sp/>on<sp/>to<sp/>implementers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>users<sp/>of<sp/>these<sp/>interfaces.<sp/><sp/>Instead,<sp/>we<sp/>just<sp/>duplicate<sp/>the<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wrappers<sp/>between<sp/>those<sp/>two<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>InputStreamConcurrencyWrapper<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>InputStream<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Close()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoClose();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Abort()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoAbort();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>Tell()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoTell();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>Read(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoRead(nbytes,<sp/>out);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>Read(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoRead(nbytes);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>Result&lt;util::string_view&gt;<sp/>Peek(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoPeek(nbytes);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/>Methods<sp/>to<sp/>implement<sp/>in<sp/>derived<sp/>class:</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/>Status<sp/>DoClose();</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoTell()<sp/>const;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoRead(int64_t<sp/>nbytes,<sp/>void*<sp/>out);</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>DoRead(int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/>And<sp/>optionally:</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>Status<sp/>DoAbort()<sp/>override;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>Result&lt;util::string_view&gt;<sp/>DoPeek(int64_t<sp/>nbytes)<sp/>override;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/>These<sp/>methods<sp/>should<sp/>be<sp/>protected<sp/>in<sp/>the<sp/>derived<sp/>class<sp/>and</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/>InputStreamConcurrencyWrapper<sp/>declared<sp/>as<sp/>a<sp/>friend<sp/>with</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/>friend<sp/>InputStreamConcurrencyWrapper&lt;derived&gt;;</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>implementations.<sp/><sp/>They<sp/>are<sp/>virtual<sp/>because<sp/>the<sp/>derived<sp/>class<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>derived<sp/>classes<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>DoAbort()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoClose();<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Result&lt;util::string_view&gt;<sp/>DoPeek(int64_t<sp/><ref refid="macros_8h_1a563379ffcc9ec4421d5fdeb876a194aa" kindref="member">ARROW_ARG_UNUSED</ref>(nbytes))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" kindref="member">Status::NotImplemented</ref>(</highlight><highlight class="stringliteral">&quot;Peek<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>Derived*<sp/>derived()<sp/>{<sp/>return<sp/>::arrow::internal::checked_cast&lt;Derived*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived*<sp/>derived()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::arrow::internal::checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>SharedExclusiveChecker<sp/>lock_;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>RandomAccessFileConcurrencyWrapper<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RandomAccessFile<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Close()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoClose();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Abort()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoAbort();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>Tell()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoTell();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>Read(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoRead(nbytes,<sp/>out);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>Read(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoRead(nbytes);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>Result&lt;util::string_view&gt;<sp/>Peek(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoPeek(nbytes);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Seek(int64_t<sp/>position)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.exclusive_guard();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoSeek(position);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>GetSize()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.shared_guard();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoGetSize();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>ReadAt<sp/>doesn&apos;t<sp/>use<sp/>stream<sp/>pointer,<sp/>but<sp/>it<sp/>is<sp/>allowed<sp/>to<sp/>update<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(it&apos;s<sp/>the<sp/>case<sp/>on<sp/>Windows<sp/>when<sp/>using<sp/>ReadFileEx).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>any<sp/>method<sp/>that<sp/>relies<sp/>on<sp/>the<sp/>current<sp/>position<sp/>(even<sp/>if<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>it,<sp/>such<sp/>as<sp/>Peek)<sp/>cannot<sp/>run<sp/>in<sp/>parallel<sp/>with<sp/>ReadAt<sp/>and<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>the<sp/>exclusive_guard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>Result&lt;int64_t&gt;<sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.shared_guard();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoReadAt(position,<sp/>nbytes,<sp/>out);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>ReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guard<sp/>=<sp/>lock_.shared_guard();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoReadAt(position,<sp/>nbytes);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>Methods<sp/>to<sp/>implement<sp/>in<sp/>derived<sp/>class:</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/>Status<sp/>DoClose();</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoTell()<sp/>const;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoRead(int64_t<sp/>nbytes,<sp/>void*<sp/>out);</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>DoRead(int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/>Status<sp/>DoSeek(int64_t<sp/>position);</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoGetSize()</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/>Result&lt;int64_t&gt;<sp/>DoReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes,<sp/>void*<sp/>out);</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>DoReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="231"><highlight class="comment"></highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/>And<sp/>optionally:</highlight></codeline>
<codeline lineno="233"><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>Status<sp/>DoAbort()<sp/>override;</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>Result&lt;util::string_view&gt;<sp/>DoPeek(int64_t<sp/>nbytes)<sp/>override;</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>These<sp/>methods<sp/>should<sp/>be<sp/>protected<sp/>in<sp/>the<sp/>derived<sp/>class<sp/>and</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/>RandomAccessFileConcurrencyWrapper<sp/>declared<sp/>as<sp/>a<sp/>friend<sp/>with</highlight></codeline>
<codeline lineno="239"><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/>friend<sp/>RandomAccessFileConcurrencyWrapper&lt;derived&gt;;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>implementations.<sp/><sp/>They<sp/>are<sp/>virtual<sp/>because<sp/>the<sp/>derived<sp/>class<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>derived<sp/>classes<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>DoAbort()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derived()-&gt;DoClose();<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Result&lt;util::string_view&gt;<sp/>DoPeek(int64_t<sp/><ref refid="macros_8h_1a563379ffcc9ec4421d5fdeb876a194aa" kindref="member">ARROW_ARG_UNUSED</ref>(nbytes))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" kindref="member">Status::NotImplemented</ref>(</highlight><highlight class="stringliteral">&quot;Peek<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>Derived*<sp/>derived()<sp/>{<sp/>return<sp/>::arrow::internal::checked_cast&lt;Derived*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived*<sp/>derived()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::arrow::internal::checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>SharedExclusiveChecker<sp/>lock_;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/io/concurrency.h"/>
  </compounddef>
</doxygen>
