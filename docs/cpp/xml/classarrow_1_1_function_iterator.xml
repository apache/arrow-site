<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_function_iterator" kind="class" language="C++" prot="public">
    <compoundname>arrow::FunctionIterator</compoundname>
    <includes refid="iterator_8h" local="no">arrow/util/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename Fn</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_function_iterator_1a3f5bd6413e9c9a792eea1a3d4ef7add6" prot="private" static="no" mutable="no">
        <type>Fn</type>
        <definition>Fn arrow::FunctionIterator&lt; Fn, T &gt;::fn_</definition>
        <argsstring></argsstring>
        <name>fn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="203" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_function_iterator_1a569f452db5226577842161edeb295860" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::FunctionIterator&lt; Fn, T &gt;::FunctionIterator</definition>
        <argsstring>(Fn fn)</argsstring>
        <name>FunctionIterator</name>
        <param>
          <type>Fn</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="198" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_function_iterator_1acc5f4eaf08c0a076a4219ce30c25da45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt;T&gt; arrow::FunctionIterator&lt; Fn, T &gt;::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="200" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="200" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/iterator.h" line="196" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="196" bodyend="204"/>
    <listofallmembers>
      <member refid="classarrow_1_1_function_iterator_1a3f5bd6413e9c9a792eea1a3d4ef7add6" prot="private" virt="non-virtual"><scope>arrow::FunctionIterator</scope><name>fn_</name></member>
      <member refid="classarrow_1_1_function_iterator_1a569f452db5226577842161edeb295860" prot="public" virt="non-virtual"><scope>arrow::FunctionIterator</scope><name>FunctionIterator</name></member>
      <member refid="classarrow_1_1_function_iterator_1acc5f4eaf08c0a076a4219ce30c25da45" prot="public" virt="non-virtual"><scope>arrow::FunctionIterator</scope><name>Next</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
