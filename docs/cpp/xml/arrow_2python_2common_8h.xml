<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2python_2common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes refid="arrow_2python_2config_8h" local="yes">arrow/python/config.h</includes>
    <includes refid="buffer_8h" local="yes">arrow/buffer.h</includes>
    <includes refid="pyarrow_8h" local="yes">arrow/python/pyarrow.h</includes>
    <includes refid="arrow_2python_2visibility_8h" local="yes">arrow/python/visibility.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includedby refid="python_2api_8h" local="yes">/arrow/cpp/src/arrow/python/api.h</includedby>
    <includedby refid="python_2extension__type_8h" local="yes">/arrow/cpp/src/arrow/python/extension_type.h</includedby>
    <includedby refid="flight_8h" local="yes">/arrow/cpp/src/arrow/python/flight.h</includedby>
    <includedby refid="inference_8h" local="yes">/arrow/cpp/src/arrow/python/inference.h</includedby>
    <includedby refid="arrow_2python_2io_8h" local="yes">/arrow/cpp/src/arrow/python/io.h</includedby>
    <includedby refid="iterators_8h" local="yes">/arrow/cpp/src/arrow/python/iterators.h</includedby>
    <includedby refid="python__to__arrow_8h" local="yes">/arrow/cpp/src/arrow/python/python_to_arrow.h</includedby>
    <incdepgraph>
      <node id="8976">
        <label>atomic</label>
      </node>
      <node id="8968">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
      </node>
      <node id="9009">
        <label>limits</label>
      </node>
      <node id="8971">
        <label>cstdint</label>
      </node>
      <node id="8998">
        <label>arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="8999" relation="include">
        </childnode>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
        <childnode refid="8979" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="9001" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8982" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8992">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8995" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="9004">
        <label>endian.h</label>
      </node>
      <node id="8964">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="9010">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="9011" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
      </node>
      <node id="8981">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="9008">
        <label>cmath</label>
      </node>
      <node id="9007">
        <label>cassert</label>
      </node>
      <node id="8982">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
      </node>
      <node id="8967">
        <label>string</label>
      </node>
      <node id="8996">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="9000">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8989">
        <label>numpy/arrayobject.h</label>
      </node>
      <node id="8983">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="8984" relation="include">
        </childnode>
      </node>
      <node id="8985">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8973">
        <label>ostream</label>
      </node>
      <node id="8988">
        <label>numpy/numpyconfig.h</label>
      </node>
      <node id="8974">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8997">
        <label>arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8998" relation="include">
        </childnode>
      </node>
      <node id="8986">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8993">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="9003">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="9004" relation="include">
        </childnode>
        <childnode refid="8961" relation="include">
        </childnode>
        <childnode refid="9005" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9007" relation="include">
        </childnode>
        <childnode refid="9008" relation="include">
        </childnode>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="9009" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="8979" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8995" relation="include">
        </childnode>
        <childnode refid="9012" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="9006">
        <label>bitset</label>
      </node>
      <node id="9011">
        <label>tuple</label>
      </node>
      <node id="8959">
        <label>Python.h</label>
      </node>
      <node id="8963">
        <label>arrow/python/visibility.h</label>
        <link refid="arrow_2python_2visibility_8h"/>
      </node>
      <node id="8978">
        <label>vector</label>
      </node>
      <node id="9001">
        <label>arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="9002" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8980">
        <label>new</label>
      </node>
      <node id="8956">
        <label>utility</label>
      </node>
      <node id="8995">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8996" relation="include">
        </childnode>
      </node>
      <node id="9005">
        <label>array</label>
      </node>
      <node id="9002">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
      </node>
      <node id="8991">
        <label>numpy/ufuncobject.h</label>
      </node>
      <node id="8994">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="8966">
        <label>iosfwd</label>
      </node>
      <node id="8960">
        <label>datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="8961" relation="include">
        </childnode>
        <childnode refid="8962" relation="include">
        </childnode>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8986" relation="include">
        </childnode>
      </node>
      <node id="8987">
        <label>arrow/python/numpy_interop.h</label>
        <link refid="numpy__interop_8h"/>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8988" relation="include">
        </childnode>
        <childnode refid="8989" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="8991" relation="include">
        </childnode>
      </node>
      <node id="8957">
        <label>arrow/python/config.h</label>
        <link refid="arrow_2python_2config_8h"/>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
      </node>
      <node id="8999">
        <label>cstddef</label>
      </node>
      <node id="8990">
        <label>numpy/arrayscalars.h</label>
      </node>
      <node id="8984">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="8979">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8980" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
      </node>
      <node id="8977">
        <label>climits</label>
      </node>
      <node id="8954">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8957" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
      </node>
      <node id="8958">
        <label>arrow/python/platform.h</label>
        <link refid="arrow_2python_2platform_8h"/>
        <childnode refid="8959" relation="include">
        </childnode>
        <childnode refid="8960" relation="include">
        </childnode>
      </node>
      <node id="8962">
        <label>chrono</label>
      </node>
      <node id="8975">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="8976" relation="include">
        </childnode>
        <childnode refid="8977" relation="include">
        </childnode>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8979" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="8982" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8983" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8985" relation="include">
        </childnode>
      </node>
      <node id="8969">
        <label>type_traits</label>
      </node>
      <node id="8961">
        <label>algorithm</label>
      </node>
      <node id="8965">
        <label>cstring</label>
      </node>
      <node id="8972">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8955">
        <label>memory</label>
      </node>
      <node id="8970">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
      </node>
      <node id="9012">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="8969" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9016">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="9019">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
      </node>
      <node id="9015">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="9017">
        <label>/arrow/cpp/src/arrow/python/inference.h</label>
        <link refid="inference_8h"/>
        <childnode refid="9014" relation="include">
        </childnode>
      </node>
      <node id="9014">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="9018">
        <label>/arrow/cpp/src/arrow/python/io.h</label>
        <link refid="arrow_2python_2io_8h"/>
        <childnode refid="9014" relation="include">
        </childnode>
      </node>
      <node id="9013">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="9014" relation="include">
        </childnode>
        <childnode refid="9015" relation="include">
        </childnode>
        <childnode refid="9016" relation="include">
        </childnode>
        <childnode refid="9017" relation="include">
        </childnode>
        <childnode refid="9018" relation="include">
        </childnode>
        <childnode refid="9019" relation="include">
        </childnode>
        <childnode refid="9020" relation="include">
        </childnode>
      </node>
      <node id="9020">
        <label>/arrow/cpp/src/arrow/python/python_to_arrow.h</label>
        <link refid="python__to__arrow_8h"/>
        <childnode refid="9014" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_result" prot="public">arrow::Result</innerclass>
    <innerclass refid="classarrow_1_1py_1_1_py_acquire_g_i_l" prot="public">arrow::py::PyAcquireGIL</innerclass>
    <innerclass refid="classarrow_1_1py_1_1_py_release_g_i_l" prot="public">arrow::py::PyReleaseGIL</innerclass>
    <innerclass refid="classarrow_1_1py_1_1_owned_ref" prot="public">arrow::py::OwnedRef</innerclass>
    <innerclass refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" prot="public">arrow::py::OwnedRefNoGIL</innerclass>
    <innerclass refid="structarrow_1_1py_1_1_py_bytes_view" prot="public">arrow::py::PyBytesView</innerclass>
    <innerclass refid="classarrow_1_1py_1_1_py_buffer" prot="public">arrow::py::PyBuffer</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1py">arrow::py</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" prot="public" static="no">
        <name>RETURN_IF_PYERROR</name>
        <param></param>
        <initializer><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(CheckPyError());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/common.h" line="58" column="9" bodyfile="/arrow/cpp/src/arrow/python/common.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2python_2common_8h_1acae7d13f31abc214abe5d1e7c901b72f" prot="public" static="no">
        <name>PY_RETURN_IF_ERROR</name>
        <param><defname>CODE</defname></param>
        <initializer><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(CheckPyError(CODE));</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/common.h" line="60" column="9" bodyfile="/arrow/cpp/src/arrow/python/common.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2python_2config_8h" kindref="compound">arrow/python/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="buffer_8h" kindref="compound">arrow/buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pyarrow_8h" kindref="compound">arrow/python/pyarrow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2python_2visibility_8h" kindref="compound">arrow/python/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34" refid="classarrow_1_1_result" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>current<sp/>Python<sp/>error<sp/>to<sp/>a<sp/>Status.<sp/><sp/>The<sp/>Python<sp/>error<sp/>state<sp/>is<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>can<sp/>be<sp/>restored<sp/>with<sp/>RestorePyError().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1py_1a1113a76ab7c4a76286d0321cf5be6b32" kindref="member">ConvertPyError</ref>(<ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref><sp/>code<sp/>=<sp/><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188fabfaef30f1c8011c5cefa38ae470fb7aa" kindref="member">StatusCode::UnknownError</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>ConvertPyError(),<sp/>but<sp/>returns<sp/>Status::OK()<sp/>if<sp/>no<sp/>Python<sp/>error<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1py_1a57f23af2985054854984640fa50e0ef6" kindref="member">PassPyError</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Query<sp/>whether<sp/>the<sp/>given<sp/>Status<sp/>is<sp/>a<sp/>Python<sp/>error<sp/>(as<sp/>wrapped<sp/>by<sp/>ConvertPyError()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1aed5431730b7cc34a7d97ee6ef9c0f558" kindref="member">IsPyError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Restore<sp/>a<sp/>Python<sp/>error<sp/>wrapped<sp/>in<sp/>a<sp/>Status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1a911c6ec152b9aff88dcba363d89b9fc0" kindref="member">RestorePyError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Catch<sp/>a<sp/>pending<sp/>Python<sp/>exception<sp/>and<sp/>return<sp/>the<sp/>corresponding<sp/>Status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>exception<sp/>is<sp/>pending,<sp/>Status::OK()<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespacearrow_1_1py_1a37da12f47177606bf2725384804bef19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1py_1a37da12f47177606bf2725384804bef19" kindref="member">CheckPyError</ref>(<ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref><sp/>code<sp/>=<sp/><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188fabfaef30f1c8011c5cefa38ae470fb7aa" kindref="member">StatusCode::UnknownError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(!PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1a1113a76ab7c4a76286d0321cf5be6b32" kindref="member">ConvertPyError</ref>(code);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_IF_PYERROR()<sp/>ARROW_RETURN_NOT_OK(CheckPyError());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="arrow_2python_2common_8h_1acae7d13f31abc214abe5d1e7c901b72f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_RETURN_IF_ERROR(CODE)<sp/>ARROW_RETURN_NOT_OK(CheckPyError(CODE));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>Cython,<sp/>as<sp/>you<sp/>can&apos;t<sp/>define<sp/>template<sp/>C++<sp/>functions<sp/>in<sp/>Cython,<sp/>only<sp/>use<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>set<sp/>a<sp/>Python<sp/>exception.<sp/><sp/>It<sp/>assumes<sp/>that<sp/>T<sp/>has<sp/>a<sp/>(cheap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="namespacearrow_1_1py_1af31afdff1ed8ce0e3e08315b609757c0" refkind="member"><highlight class="normal">T<sp/><ref refid="namespacearrow_1_1py_1af31afdff1ed8ce0e3e08315b609757c0" kindref="member">GetResultValue</ref>(<ref refid="classarrow_1_1_result" kindref="compound">Result&lt;T&gt;</ref><sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(result.<ref refid="classarrow_1_1_result_1a6d1f64c394afe8ba05938053be5939bf" kindref="member">ok</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::move(result);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>internal::check_status(result.<ref refid="classarrow_1_1_result_1a7f9be249188ee2c9516ac69ec06b0235" kindref="member">status</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>takes<sp/>the<sp/>GIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(r<sp/>==<sp/>-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>have<sp/>errored<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8h_1aa696459b563e15751224cec3dabc50bc" kindref="member">ARROW_UNUSED</ref>(r);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>RAII-style<sp/>helper<sp/>that<sp/>ensures<sp/>the<sp/>GIL<sp/>is<sp/>acquired<sp/>inside<sp/>a<sp/>lexical<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classarrow_1_1py_1_1_py_acquire_g_i_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l" kindref="compound">PyAcquireGIL</ref><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80" refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a176ad0a1d753c1e1297a8c8c8e24edfc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a176ad0a1d753c1e1297a8c8c8e24edfc" kindref="member">PyAcquireGIL</ref>()<sp/>:<sp/>acquired_gil_(false)<sp/>{<sp/>acquire();<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1aa07961f7d96ca5dd17319aa4fb65facc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1aa07961f7d96ca5dd17319aa4fb65facc" kindref="member">~PyAcquireGIL</ref>()<sp/>{<sp/>release();<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a705f95bb8ae5f01b9c6615ef3694aef4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a705f95bb8ae5f01b9c6615ef3694aef4" kindref="member">acquire</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acquired_gil_)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state_<sp/>=<sp/>PyGILState_Ensure();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acquired_gil_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>idempotent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a9b0f2a430dac36520aeedd344d21fb3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l_1a9b0f2a430dac36520aeedd344d21fb3f" kindref="member">release</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acquired_gil_)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(state_);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acquired_gil_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acquired_gil_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>PyGILState_STATE<sp/>state_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l" kindref="compound">PyAcquireGIL</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>RAII-style<sp/>helper<sp/>that<sp/>releases<sp/>the<sp/>GIL<sp/>until<sp/>the<sp/>end<sp/>of<sp/>a<sp/>lexical<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classarrow_1_1py_1_1_py_release_g_i_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1py_1_1_py_release_g_i_l" kindref="compound">PyReleaseGIL</ref><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108" refid="classarrow_1_1py_1_1_py_release_g_i_l_1accd1574cd7f9b8f2dfb0a21aa3ca69a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_release_g_i_l_1accd1574cd7f9b8f2dfb0a21aa3ca69a4" kindref="member">PyReleaseGIL</ref>()<sp/>{<sp/>saved_state_<sp/>=<sp/>PyEval_SaveThread();<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classarrow_1_1py_1_1_py_release_g_i_l_1a448bca091f6d31868a70013200c04cf2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_release_g_i_l_1a448bca091f6d31868a70013200c04cf2" kindref="member">~PyReleaseGIL</ref>()<sp/>{<sp/>PyEval_RestoreThread(saved_state_);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>PyThreadState*<sp/>saved_state_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1py_1_1_py_release_g_i_l" kindref="compound">PyReleaseGIL</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>to<sp/>call<sp/>safely<sp/>into<sp/>the<sp/>Python<sp/>interpreter<sp/>from<sp/>arbitrary<sp/>C++<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>GIL<sp/>is<sp/>acquired,<sp/>and<sp/>the<sp/>current<sp/>thread&apos;s<sp/>error<sp/>status<sp/>is<sp/>preserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="120" refid="namespacearrow_1_1py_1a1851ff007ff03e0ac1655fa63515085b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1a1851ff007ff03e0ac1655fa63515085b" kindref="member">SafeCallIntoPython</ref>(Function&amp;&amp;<sp/>func)<sp/>-&gt;<sp/>decltype(func())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l" kindref="compound">PyAcquireGIL</ref><sp/>lock;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>exc_type;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>exc_value;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>exc_traceback;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>PyErr_Fetch(&amp;exc_type,<sp/>&amp;exc_value,<sp/>&amp;exc_traceback);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maybe_status<sp/>=<sp/>std::forward&lt;Function&gt;(func)();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>return<sp/>Status<sp/>is<sp/>a<sp/>&quot;Python<sp/>error&quot;,<sp/>the<sp/>current<sp/>Python<sp/>error<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>describes<sp/>the<sp/>error<sp/>and<sp/>shouldn&apos;t<sp/>be<sp/>clobbered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacearrow_1_1py_1aed5431730b7cc34a7d97ee6ef9c0f558" kindref="member">IsPyError</ref>(::arrow::internal::GenericToStatus(maybe_status))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exc_type<sp/>!=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(exc_type,<sp/>exc_value,<sp/>exc_traceback);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maybe_status;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>RAII<sp/>primitive<sp/>that<sp/>DECREFs<sp/>the<sp/>underlying<sp/>PyObject*<sp/>when<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>goes<sp/>out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classarrow_1_1py_1_1_owned_ref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140" refid="classarrow_1_1py_1_1_owned_ref_1a23c568f39cefb24111a5b126342907fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a23c568f39cefb24111a5b126342907fb" kindref="member">OwnedRef</ref>()<sp/>:<sp/>obj_(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="141" refid="classarrow_1_1py_1_1_owned_ref_1abbf808f76a630e08324908ff8f0164a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1abbf808f76a630e08324908ff8f0164a1" kindref="member">OwnedRef</ref>(<ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>&amp;&amp;<sp/>other)<sp/>:<sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>(other.detach())<sp/>{}</highlight></codeline>
<codeline lineno="142" refid="classarrow_1_1py_1_1_owned_ref_1a4fa414445a0d45fc6876e22a48323818" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a4fa414445a0d45fc6876e22a48323818" kindref="member">OwnedRef</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>:<sp/>obj_(obj)<sp/>{}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classarrow_1_1py_1_1_owned_ref_1ac532ea6b2a2ef8f021f1bd195830df69" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>&amp;<sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1ac532ea6b2a2ef8f021f1bd195830df69" kindref="member">operator=</ref>(<ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>obj_<sp/>=<sp/>other.<ref refid="classarrow_1_1py_1_1_owned_ref_1acec5dc3d562adf45d8df3a5d74cc105b" kindref="member">detach</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classarrow_1_1py_1_1_owned_ref_1a8dbf530a3d56e9cc8be52ee72de0a2f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a8dbf530a3d56e9cc8be52ee72de0a2f8" kindref="member">~OwnedRef</ref>()<sp/>{<sp/>reset();<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classarrow_1_1py_1_1_owned_ref_1ad99c47163961c1b346c3ea9836783eda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1ad99c47163961c1b346c3ea9836783eda" kindref="member">reset</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(obj_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>obj_<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classarrow_1_1py_1_1_owned_ref_1a7f4ec7d4b8ed3a376739239dd1e1987b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a7f4ec7d4b8ed3a376739239dd1e1987b" kindref="member">reset</ref>()<sp/>{<sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a7f4ec7d4b8ed3a376739239dd1e1987b" kindref="member">reset</ref>(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classarrow_1_1py_1_1_owned_ref_1acec5dc3d562adf45d8df3a5d74cc105b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1acec5dc3d562adf45d8df3a5d74cc105b" kindref="member">detach</ref>()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>result<sp/>=<sp/>obj_;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>obj_<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classarrow_1_1py_1_1_owned_ref_1ac9d1b421eef89af1daff63c14fe828d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1ac9d1b421eef89af1daff63c14fe828d2" kindref="member">obj</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj_;<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classarrow_1_1py_1_1_owned_ref_1a4f277e7908da30c544136911ddd5e11e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>**<sp/><ref refid="classarrow_1_1py_1_1_owned_ref_1a4f277e7908da30c544136911ddd5e11e" kindref="member">ref</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;obj_;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classarrow_1_1py_1_1_owned_ref_1aab08c8f7391e16952029b7741d47d803" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj_<sp/>!=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj_;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>OwnedRef,<sp/>but<sp/>ensures<sp/>the<sp/>GIL<sp/>is<sp/>taken<sp/>when<sp/>it<sp/>goes<sp/>out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>for<sp/>situations<sp/>where<sp/>the<sp/>GIL<sp/>is<sp/>not<sp/>always<sp/>known<sp/>to<sp/>be<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(e.g.<sp/>if<sp/>it<sp/>is<sp/>released<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>a<sp/>function<sp/>for<sp/>performance<sp/>reasons)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" kindref="compound">OwnedRefNoGIL</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181" refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1ad0dd0d09fc802fc0dd21718fd827b713" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1ad0dd0d09fc802fc0dd21718fd827b713" kindref="member">OwnedRefNoGIL</ref>()<sp/>:<sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="182" refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1a0087f6a81e7e6a5b0176494c47607138" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1a0087f6a81e7e6a5b0176494c47607138" kindref="member">OwnedRefNoGIL</ref>(<ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" kindref="compound">OwnedRefNoGIL</ref>&amp;&amp;<sp/>other)<sp/>:<sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>(other.detach())<sp/>{}</highlight></codeline>
<codeline lineno="183" refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1a27fb138ed68d2ff91fddff0842d923b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1a27fb138ed68d2ff91fddff0842d923b9" kindref="member">OwnedRefNoGIL</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>:<sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref>(obj)<sp/>{}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1ae0943d984c8e64c5609793c149d9a5bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l_1ae0943d984c8e64c5609793c149d9a5bc" kindref="member">~OwnedRefNoGIL</ref>()<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_acquire_g_i_l" kindref="compound">PyAcquireGIL</ref><sp/>lock;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>temporary<sp/>conversion<sp/>of<sp/>a<sp/>Python<sp/>object<sp/>to<sp/>a<sp/>bytes<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structarrow_1_1py_1_1_py_bytes_view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1py_1_1_py_bytes_view" kindref="compound">PyBytesView</ref><sp/>{</highlight></codeline>
<codeline lineno="193" refid="structarrow_1_1py_1_1_py_bytes_view_1a6dcfada3d934979b6ebac34ccd8f3336" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a6dcfada3d934979b6ebac34ccd8f3336" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="194" refid="structarrow_1_1py_1_1_py_bytes_view_1a2abfcac41c6d2157869190773ab54ddc" refkind="member"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a2abfcac41c6d2157869190773ab54ddc" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structarrow_1_1py_1_1_py_bytes_view_1a9a0bd5cc89fabd0a2ac819411db7847f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a9a0bd5cc89fabd0a2ac819411db7847f" kindref="member">PyBytesView</ref>()<sp/>:<sp/>bytes(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>),<sp/>size(0),<sp/>ref(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>View<sp/>the<sp/>given<sp/>Python<sp/>object<sp/>as<sp/>binary-like,<sp/>i.e.<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structarrow_1_1py_1_1_py_bytes_view_1af8a34ca8430d0b7f42b330d50620c725" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1af8a34ca8430d0b7f42b330d50620c725" kindref="member">FromBinary</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1af8a34ca8430d0b7f42b330d50620c725" kindref="member">FromBinary</ref>(obj,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>bytes<sp/>object&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structarrow_1_1py_1_1_py_bytes_view_1ad76516b29a48ea1187e59b6777c742d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1ad76516b29a48ea1187e59b6777c742d5" kindref="member">FromString</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignored<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromString(obj,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;ignored);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structarrow_1_1py_1_1_py_bytes_view_1a1546e527d918a778676a5a3c25619f9b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a1546e527d918a778676a5a3c25619f9b" kindref="member">FromString</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_utf8)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromString(obj,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>is_utf8);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structarrow_1_1py_1_1_py_bytes_view_1ae3f7dbace202034b091360e0a2fdde06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1ae3f7dbace202034b091360e0a2fdde06" kindref="member">FromUnicode</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>utf-8<sp/>representation<sp/>is<sp/>cached<sp/>on<sp/>the<sp/>unicode<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref><sp/>=<sp/>PyUnicode_AsUTF8AndSize(obj,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bytes<sp/>=<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ref.reset();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222" refid="structarrow_1_1py_1_1_py_bytes_view_1a96cb35199dff8192a165ca1952062364" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a96cb35199dff8192a165ca1952062364" kindref="member">PyBytesView</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b,<sp/>Py_ssize_t<sp/>s,<sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bytes(b),<sp/>size(s),<sp/>ref(obj)<sp/>{}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>View<sp/>the<sp/>given<sp/>Python<sp/>object<sp/>as<sp/>string-like,<sp/>i.e.<sp/>str<sp/>or<sp/>(utf8)<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="structarrow_1_1py_1_1_py_bytes_view_1a0f27c4778684e07ecc6fef905db6000b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a0f27c4778684e07ecc6fef905db6000b" kindref="member">FromString</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_utf8,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_utf8)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyUnicode_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*is_utf8<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromUnicode(obj);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(FromBinary(obj,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>string<sp/>or<sp/>bytes<sp/>object&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_utf8)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>bytes<sp/>are<sp/>utf8<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref><sp/>decoded(PyUnicode_FromStringAndSize(bytes,<sp/>size));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(!PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*is_utf8<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*is_utf8<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*is_utf8<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="structarrow_1_1py_1_1_py_bytes_view_1a830036d48822762433dc503512ef2204" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a830036d48822762433dc503512ef2204" kindref="member">FromBinary</ref>(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected_msg)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyBytes_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bytes<sp/>=<sp/>PyBytes_AS_STRING(obj);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>PyBytes_GET_SIZE(obj);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ref.reset();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyByteArray_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bytes<sp/>=<sp/>PyByteArray_AS_STRING(obj);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>PyByteArray_GET_SIZE(obj);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ref.reset();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyMemoryView_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>contig_view<sp/>=<sp/>PyMemoryView_GetContiguous(obj,<sp/>PyBUF_READ,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ref.reset(contig_view);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_buffer*<sp/>buf<sp/>=<sp/>PyMemoryView_GET_BUFFER(contig_view);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bytes<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf-&gt;buf);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>buf-&gt;len;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a0ff96a9163346d8af8abe40e9809a8ba" kindref="member">Status::TypeError</ref>(</highlight><highlight class="stringliteral">&quot;Expected<sp/>&quot;</highlight><highlight class="normal">,<sp/>expected_msg,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>got<sp/>a<sp/>&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(obj)-&gt;tp_name,<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structarrow_1_1py_1_1_py_bytes_view_1a766c1f311246f552e6d90884dd0804d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_owned_ref" kindref="compound">OwnedRef</ref><sp/><ref refid="structarrow_1_1py_1_1_py_bytes_view_1a766c1f311246f552e6d90884dd0804d2" kindref="member">ref</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classarrow_1_1py_1_1_py_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1py_1_1_py_buffer" kindref="compound">PyBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1py_1_1_py_buffer" kindref="compound">PyBuffer</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>FromPyObject(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1py_1_1_py_buffer" kindref="compound">PyBuffer</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Init(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>Py_buffer<sp/>py_buf_;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>common<sp/>PyArrow<sp/>memory<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1ac2dd609c3eaaf1b9de1a370783cb3ea3" kindref="member">set_default_memory_pool</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><ref refid="arrow_2python_2visibility_8h_1a86dc99bcc6e4347fd32c29d18f412d18" kindref="member">ARROW_PYTHON_EXPORT</ref><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/><ref refid="namespacearrow_1_1py_1ac88d01c02de1799ff375317de45a0378" kindref="member">get_memory_pool</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>annoying:<sp/>because<sp/>C++11<sp/>does<sp/>not<sp/>allow<sp/>implicit<sp/>conversion<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>literals<sp/>to<sp/>non-const<sp/>char*,<sp/>we<sp/>need<sp/>to<sp/>go<sp/>through<sp/>some<sp/>gymnastics<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PyObject_CallMethod<sp/>without<sp/>a<sp/>lot<sp/>of<sp/>pain<sp/>(its<sp/>arguments<sp/>are<sp/>non-const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>char*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgTypes&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>cpp_PyObject_CallMethod(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method_name,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argspec,<sp/>ArgTypes...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_CallMethod(obj,<sp/>const_cast&lt;char*&gt;(method_name),</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;char*&gt;(argspec),<sp/>args...);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/python/common.h"/>
  </compounddef>
</doxygen>
