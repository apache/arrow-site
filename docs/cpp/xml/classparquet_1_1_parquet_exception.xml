<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_exception" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <derivedcompoundref refid="classparquet_1_1_hidden_column_exception" prot="public" virt="non-virtual">parquet::HiddenColumnException</derivedcompoundref>
    <derivedcompoundref refid="classparquet_1_1_key_access_denied_exception" prot="public" virt="non-virtual">parquet::KeyAccessDeniedException</derivedcompoundref>
    <derivedcompoundref refid="classparquet_1_1_parquet_status_exception" prot="public" virt="non-virtual">parquet::ParquetStatusException</derivedcompoundref>
    <includes refid="exception_8h" local="no">parquet/exception.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_exception_1a84cddc678842401378650707c9205ccc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::ParquetException::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="108" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1a5752cf55feb25124ecfca21ed4f45d30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="parquet_2platform_8h_1a86ba5954ebc86d1368b25ec1fbe90ed3" kindref="member">PARQUET_NORETURN</ref> void</type>
        <definition>static PARQUET_NORETURN void parquet::ParquetException::EofException</definition>
        <argsstring>(const std::string &amp;msg=&quot;&quot;)</argsstring>
        <name>EofException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="82" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1a2793f36435178ba03ec93fe7f11dabd5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="parquet_2platform_8h_1a86ba5954ebc86d1368b25ec1fbe90ed3" kindref="member">PARQUET_NORETURN</ref> void</type>
        <definition>static PARQUET_NORETURN void parquet::ParquetException::NYI</definition>
        <argsstring>(const std::string &amp;msg=&quot;&quot;)</argsstring>
        <name>NYI</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="91" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="91" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1a57763b3e29227c039ff7e3b88cc60008" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetException::ParquetException</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>ParquetException</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="97" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1a483b09e93705babc5d731f63dca27041" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetException::ParquetException</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>ParquetException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="99" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1ab178142e3dfbba0e5a1625c6db3e9ae3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetException::ParquetException</definition>
        <argsstring>(const char *msg, std::exception &amp;)</argsstring>
        <name>ParquetException</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::exception &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="101" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1a9d427a782991484fcd229e099e7296f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetException::~ParquetException</definition>
        <argsstring>() override</argsstring>
        <name>~ParquetException</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="103" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_exception_1ad140e5d0c4292572d39ab3d07ce2fd7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* parquet::ParquetException::what</definition>
        <argsstring>() const override</argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/exception.h" line="105" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3450">
        <label>parquet::KeyAccessDeniedException</label>
        <link refid="classparquet_1_1_key_access_denied_exception"/>
        <childnode refid="3447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3452">
        <label>parquet::ParquetInvalidOrCorruptedFileException</label>
        <link refid="classparquet_1_1_parquet_invalid_or_corrupted_file_exception"/>
        <childnode refid="3451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3448">
        <label>std::exception</label>
      </node>
      <node id="3449">
        <label>parquet::HiddenColumnException</label>
        <link refid="classparquet_1_1_hidden_column_exception"/>
        <childnode refid="3447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3447">
        <label>parquet::ParquetException</label>
        <link refid="classparquet_1_1_parquet_exception"/>
        <childnode refid="3448" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3451">
        <label>parquet::ParquetStatusException</label>
        <link refid="classparquet_1_1_parquet_status_exception"/>
        <childnode refid="3447" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3454">
        <label>std::exception</label>
      </node>
      <node id="3453">
        <label>parquet::ParquetException</label>
        <link refid="classparquet_1_1_parquet_exception"/>
        <childnode refid="3454" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/exception.h" line="80" column="1" bodyfile="/arrow/cpp/src/parquet/exception.h" bodystart="80" bodyend="109"/>
    <listofallmembers>
      <member refid="classparquet_1_1_parquet_exception_1a5752cf55feb25124ecfca21ed4f45d30" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>EofException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a84cddc678842401378650707c9205ccc" prot="private" virt="non-virtual"><scope>parquet::ParquetException</scope><name>msg_</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a2793f36435178ba03ec93fe7f11dabd5" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>NYI</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a57763b3e29227c039ff7e3b88cc60008" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a483b09e93705babc5d731f63dca27041" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1ab178142e3dfbba0e5a1625c6db3e9ae3" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>ParquetException</name></member>
      <member refid="classparquet_1_1_parquet_exception_1ad140e5d0c4292572d39ab3d07ce2fd7e" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>what</name></member>
      <member refid="classparquet_1_1_parquet_exception_1a9d427a782991484fcd229e099e7296f9" prot="public" virt="non-virtual"><scope>parquet::ParquetException</scope><name>~ParquetException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
