<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_numeric_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::NumericBuilder</compoundname>
    <basecompoundref refid="classarrow_1_1_array_builder" prot="public" virt="non-virtual">arrow::ArrayBuilder</basecompoundref>
    <includes refid="builder__primitive_8h" local="no">arrow/array/builder_primitive.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_numeric_builder_1aa9e0eba6216d1f27ba6c20871def5664" prot="public" static="no">
        <type>T</type>
        <definition>using arrow::NumericBuilder&lt; T &gt;::TypeClass =  T</definition>
        <argsstring></argsstring>
        <name>TypeClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="62" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" prot="public" static="no">
        <type>typename T::c_type</type>
        <definition>using arrow::NumericBuilder&lt; T &gt;::value_type =  typename T::c_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="63" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" prot="public" static="no">
        <type>typename <ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt; T &gt;::<ref refid="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" kindref="member">ArrayType</ref></type>
        <definition>using arrow::NumericBuilder&lt; T &gt;::ArrayType =  typename TypeTraits&lt;T&gt;::ArrayType</definition>
        <argsstring></argsstring>
        <name>ArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1_numeric_builder_1a0db44a4a7372621e16801c8f0e3f6b7b" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::NumericBuilder&lt; T &gt;::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="252" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_numeric_builder_1a2d7f2bcb6bfc60f5f7a285112663cada" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> &gt;</type>
        <definition>TypedBufferBuilder&lt;value_type&gt; arrow::NumericBuilder&lt; T &gt;::data_builder_</definition>
        <argsstring></argsstring>
        <name>data_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="253" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1acaf5b63f37f848e565c8dd4a84effeed" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>arrow::NumericBuilder&lt; T &gt;::NumericBuilder</definition>
        <argsstring>(enable_if_parameter_free&lt; T1, MemoryPool *&gt; pool=default_memory_pool())</argsstring>
        <name>NumericBuilder</name>
        <param>
          <type><ref refid="namespacearrow_1a6c7d9fa36c6e17e9653179705ab1f49d" kindref="member">enable_if_parameter_free</ref>&lt; T1, <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *&gt;</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="67" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a3c7c1ba894e6022678612f97f8313c1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::NumericBuilder&lt; T &gt;::NumericBuilder</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type, MemoryPool *pool)</argsstring>
        <name>NumericBuilder</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="71" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a1e2842359a508f3d23ba6fc766c7eeb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::Append</definition>
        <argsstring>(const value_type val)</argsstring>
        <name>Append</name>
        <param>
          <type>const <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Append a single scalar and increase the size if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="75" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendNulls</definition>
        <argsstring>(int64_t length) final</argsstring>
        <name>AppendNulls</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14">AppendNulls</reimplements>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Write nulls as uint8_t* (0 value indicates null) into pre-allocated memory The memory at the corresponding data slot is set to 0 to prevent uninitialized memory access. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="84" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendNull</definition>
        <argsstring>() final</argsstring>
        <name>AppendNull</name>
        <reimplements refid="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015">AppendNull</reimplements>
        <briefdescription>
<para>Append a single null element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="92" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a2c172bf80efaa7cbfd65f69c311df653" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref></type>
        <definition>value_type arrow::NumericBuilder&lt; T &gt;::GetValue</definition>
        <argsstring>(int64_t index) const</argsstring>
        <name>GetValue</name>
        <param>
          <type>int64_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="99" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void arrow::NumericBuilder&lt; T &gt;::Reset</definition>
        <argsstring>() override</argsstring>
        <name>Reset</name>
        <reimplements refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98">Reset</reimplements>
        <briefdescription>
<para>Reset the builder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="101" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::Resize</definition>
        <argsstring>(int64_t capacity) override</argsstring>
        <name>Resize</name>
        <reimplements refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b">Resize</reimplements>
        <param>
          <type>int64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Ensure that enough memory has been allocated to fit the indicated number of total elements in the builder, including any that have already been appended. </para>        </briefdescription>
        <detaileddescription>
<para>Does not account for reallocations that may be due to variable size data, like binary values. To make space for incremental appends, use Reserve instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum number of total array values to accommodate. Must be greater than the current capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="103" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a5e65b195d542a60c2125712d1cd225dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref></type>
        <definition>value_type arrow::NumericBuilder&lt; T &gt;::operator[]</definition>
        <argsstring>(int64_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int64_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="110" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1ad0fd74467c25225aaed35926654cca0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> &amp;</type>
        <definition>value_type&amp; arrow::NumericBuilder&lt; T &gt;::operator[]</definition>
        <argsstring>(int64_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int64_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="112" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a3915eb06a4672f31eb27423e691cf0a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(const value_type *values, int64_t length, const uint8_t *valid_bytes=NULLPTR)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>a contiguous C array of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of values to append </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">valid_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of bytes where non-zero indicates a valid (non-null) value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="122" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a65bb6b23c8af350d196fafb77a7c8dcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(const value_type *values, int64_t length, const std::vector&lt; bool &gt; &amp;is_valid)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>a contiguous C array of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of values to append </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_valid</parametername>
</parameternamelist>
<parameterdescription>
<para>an std::vector&lt;bool&gt; indicating valid (1) or null (0). Equal in length to values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="137" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1aa1a26f86af18021733b560584e05df3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(const std::vector&lt; value_type &gt; &amp;values, const std::vector&lt; bool &gt; &amp;is_valid)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const std::vector&lt; <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>a std::vector of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_valid</parametername>
</parameternamelist>
<parameterdescription>
<para>an std::vector&lt;bool&gt; indicating valid (1) or null (0). Equal in length to values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="151" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a2ec37ffd870fb48037cb993f16d7209a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(const std::vector&lt; value_type &gt; &amp;values)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const std::vector&lt; <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>a std::vector of values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="159" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::FinishInternal</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; *out) override</argsstring>
        <name>FinishInternal</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0e0aea1c332b472f3671bea9da5ec473">FinishInternal</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an internal generic <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Resets builder except for dictionary builder</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="163" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="163" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1abf365d5609340d6286cb9487e1cc4f55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::Finish</definition>
        <argsstring>(std::shared_ptr&lt; ArrayType &gt; *out)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" kindref="member">ArrayType</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="176" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a9c3316f90bbf3c02d12bca34739456c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValuesIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(ValuesIter values_begin, ValuesIter values_end)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>ValuesIter</type>
          <declname>values_begin</declname>
        </param>
        <param>
          <type>ValuesIter</type>
          <declname>values_end</declname>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>InputIterator to the beginning of the values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values_end</parametername>
</parameternamelist>
<parameterdescription>
<para>InputIterator pointing to the end of the values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="183" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1aca0586ee57cd48f9729ac0669805aa25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValuesIter</type>
          </param>
          <param>
            <type>typename ValidIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t</ref>&lt;!std::is_pointer&lt; ValidIter &gt;::value, <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &gt;</type>
        <definition>enable_if_t&lt;!std::is_pointer&lt;ValidIter&gt;::value, Status&gt; arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(ValuesIter values_begin, ValuesIter values_end, ValidIter valid_begin)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>ValuesIter</type>
          <declname>values_begin</declname>
        </param>
        <param>
          <type>ValuesIter</type>
          <declname>values_end</declname>
        </param>
        <param>
          <type>ValidIter</type>
          <declname>valid_begin</declname>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot, with a specified nullmap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>InputIterator to the beginning of the values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values_end</parametername>
</parameternamelist>
<parameterdescription>
<para>InputIterator pointing to the end of the values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">valid_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>InputIterator with elements indication valid(1) or null(0) values. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="199" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="199" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a389944ca8c9ba12998501ebd7d6c1fe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValuesIter</type>
          </param>
          <param>
            <type>typename ValidIter</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t</ref>&lt; std::is_pointer&lt; ValidIter &gt;::value, <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &gt;</type>
        <definition>enable_if_t&lt;std::is_pointer&lt;ValidIter&gt;::value, Status&gt; arrow::NumericBuilder&lt; T &gt;::AppendValues</definition>
        <argsstring>(ValuesIter values_begin, ValuesIter values_end, ValidIter valid_begin)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>ValuesIter</type>
          <declname>values_begin</declname>
        </param>
        <param>
          <type>ValuesIter</type>
          <declname>values_end</declname>
        </param>
        <param>
          <type>ValidIter</type>
          <declname>valid_begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="216" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="216" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a7ad22f6fc4114b23bcfb74e61636d911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::NumericBuilder&lt; T &gt;::UnsafeAppend</definition>
        <argsstring>(const value_type val)</argsstring>
        <name>UnsafeAppend</name>
        <param>
          <type>const <ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Append a single scalar under the assumption that the underlying <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> is large enough. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not capacity-check; make sure to call Reserve beforehand. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="239" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1a309510723719178089c4cf2bd9b70853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::NumericBuilder&lt; T &gt;::UnsafeAppendNull</definition>
        <argsstring>()</argsstring>
        <name>UnsafeAppendNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="244" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::NumericBuilder&lt; T &gt;::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classarrow_1_1_array_builder_1a39b4b420be1fcf4fe7219fe953eb65c7">type</reimplements>
        <briefdescription>
<para>Return the type of the built <ref refid="classarrow_1_1_array" kindref="compound">Array</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="249" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="249" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all Builders that emit an <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> of a scalar numerical type. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3316">
        <label>arrow::NumericBuilder&lt; T &gt;</label>
        <link refid="classarrow_1_1_numeric_builder"/>
        <childnode refid="3317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3317">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3318">
        <label>arrow::NumericBuilder&lt; T &gt;</label>
        <link refid="classarrow_1_1_numeric_builder"/>
        <childnode refid="3319" relation="public-inheritance">
        </childnode>
        <childnode refid="3322" relation="usage">
          <edgelabel>data_builder_</edgelabel>
        </childnode>
      </node>
      <node id="3322">
        <label>arrow::TypedBufferBuilder&lt; value_type &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder"/>
      </node>
      <node id="3320">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="3321">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="3319">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="3320" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="3321" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_primitive.h" line="60" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_primitive.h" bodystart="60" bodyend="254"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a1e2842359a508f3d23ba6fc766c7eeb0" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a3915eb06a4672f31eb27423e691cf0a2" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a65bb6b23c8af350d196fafb77a7c8dcc" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1aa1a26f86af18021733b560584e05df3b" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a2ec37ffd870fb48037cb993f16d7209a" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a9c3316f90bbf3c02d12bca34739456c5" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1aca0586ee57cd48f9729ac0669805aa25" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a389944ca8c9ba12998501ebd7d6c1fe5" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>ArrayType</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a2d7f2bcb6bfc60f5f7a285112663cada" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>data_builder_</name></member>
      <member refid="classarrow_1_1_numeric_builder_1abf365d5609340d6286cb9487e1cc4f55" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual" ambiguityscope="arrow::ArrayBuilder::"><scope>arrow::NumericBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a2c172bf80efaa7cbfd65f69c311df653" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>GetValue</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_numeric_builder_1acaf5b63f37f848e565c8dd4a84effeed" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>NumericBuilder</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a3c7c1ba894e6022678612f97f8313c1b" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>NumericBuilder</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a5e65b195d542a60c2125712d1cd225dc" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>operator[]</name></member>
      <member refid="classarrow_1_1_numeric_builder_1ad0fd74467c25225aaed35926654cca0d" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>operator[]</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a0db44a4a7372621e16801c8f0e3f6b7b" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>type_</name></member>
      <member refid="classarrow_1_1_numeric_builder_1aa9e0eba6216d1f27ba6c20871def5664" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>TypeClass</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a7ad22f6fc4114b23bcfb74e61636d911" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppend</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a309510723719178089c4cf2bd9b70853" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" prot="public" virt="non-virtual"><scope>arrow::NumericBuilder</scope><name>value_type</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::NumericBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
