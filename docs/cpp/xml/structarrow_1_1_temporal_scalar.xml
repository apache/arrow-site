<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_temporal_scalar" kind="struct" language="C++" prot="public">
    <compoundname>arrow::TemporalScalar</compoundname>
    <basecompoundref refid="structarrow_1_1_scalar" prot="public" virt="non-virtual">arrow::Scalar</basecompoundref>
    <derivedcompoundref refid="structarrow_1_1_date_scalar" prot="public" virt="non-virtual">arrow::DateScalar&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_interval_scalar" prot="public" virt="non-virtual">arrow::IntervalScalar&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="structarrow_1_1_time_scalar" prot="public" virt="non-virtual">arrow::TimeScalar&lt; T &gt;</derivedcompoundref>
    <includes refid="scalar_8h" local="no">arrow/scalar.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structarrow_1_1_temporal_scalar_1aa0c7857f2afe118ada0ffe46be60f8b5" prot="public" static="no">
        <type>T</type>
        <definition>using arrow::TemporalScalar&lt; T &gt;::TypeClass =  T</definition>
        <argsstring></argsstring>
        <name>TypeClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="241" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_temporal_scalar_1aa3e7d4c233f99c9513adad6ccef997c0" prot="public" static="no">
        <type>typename T::c_type</type>
        <definition>using arrow::TemporalScalar&lt; T &gt;::ValueType =  typename T::c_type</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="242" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1_temporal_scalar_1a00150dbd82233996c5544727a1fe82a7" prot="public" static="no" mutable="no">
        <type><ref refid="structarrow_1_1_temporal_scalar_1aa3e7d4c233f99c9513adad6ccef997c0" kindref="member">ValueType</ref></type>
        <definition>ValueType arrow::TemporalScalar&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="250" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1_temporal_scalar_1a56f453c85d12a738a8c786f5f73d31ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::TemporalScalar&lt; T &gt;::TemporalScalar</definition>
        <argsstring>(ValueType value, std::shared_ptr&lt; DataType &gt; type)</argsstring>
        <name>TemporalScalar</name>
        <param>
          <type><ref refid="structarrow_1_1_temporal_scalar_1aa3e7d4c233f99c9513adad6ccef997c0" kindref="member">ValueType</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="244" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="244" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_temporal_scalar_1a99b1d4414ea416d9047ca298b0edb90b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::TemporalScalar&lt; T &gt;::TemporalScalar</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; type)</argsstring>
        <name>TemporalScalar</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="247" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="247" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4542">
        <label>arrow::IntervalScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_interval_scalar"/>
        <childnode refid="4538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4541">
        <label>arrow::DateScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_date_scalar"/>
        <childnode refid="4538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4539">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="4540" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4538">
        <label>arrow::TemporalScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="4539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4543">
        <label>arrow::TimeScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_time_scalar"/>
        <childnode refid="4538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4540">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4545">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="4546" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4544">
        <label>arrow::TemporalScalar&lt; T &gt;</label>
        <link refid="structarrow_1_1_temporal_scalar"/>
        <childnode refid="4545" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4546">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/scalar.h" line="239" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="239" bodyend="251"/>
    <listofallmembers>
      <member refid="structarrow_1_1_scalar_1a3c91f8282f4f480813f2417f1e52366a" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>CastTo</name></member>
      <member refid="structarrow_1_1_scalar_1ae2831b0780d206f113707ae9d162778e" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>Equals</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a140cfdea92ae17331d8db8f69aad082f" prot="public" virt="non-virtual" ambiguityscope="EqualityComparable&lt; Scalar &gt;::"><scope>arrow::TemporalScalar</scope><name>Equals</name></member>
      <member refid="structarrow_1_1_scalar_1a42453c42084d0c9a955c8c398831a57e" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>is_valid</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a1a7ff2c6f720209bc960524c47ad0535" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>operator!=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1ac0e8ec25e77ece923689ee31c389200e" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>operator==</name></member>
      <member refid="structarrow_1_1_scalar_1a1e0788ef6c5defa729c8703366adc815" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>Parse</name></member>
      <member refid="structarrow_1_1_scalar_1ad9fe0e6c79f98c6875a23ed8b27e5175" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_scalar_1aff32301b232ace9c6172685d88e68e97" prot="protected" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_temporal_scalar_1a56f453c85d12a738a8c786f5f73d31ab" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>TemporalScalar</name></member>
      <member refid="structarrow_1_1_temporal_scalar_1a99b1d4414ea416d9047ca298b0edb90b" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>TemporalScalar</name></member>
      <member refid="structarrow_1_1_scalar_1a345c3828551c3614df492397f3b558d4" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>ToString</name></member>
      <member refid="structarrow_1_1_scalar_1ae3f8aa29da0a3f3ac9d3de6a97818328" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>type</name></member>
      <member refid="structarrow_1_1_temporal_scalar_1aa0c7857f2afe118ada0ffe46be60f8b5" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>TypeClass</name></member>
      <member refid="structarrow_1_1_temporal_scalar_1a00150dbd82233996c5544727a1fe82a7" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>value</name></member>
      <member refid="structarrow_1_1_temporal_scalar_1aa3e7d4c233f99c9513adad6ccef997c0" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>ValueType</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a14c5ed61e030855eef29edebc6355806" prot="public" virt="non-virtual"><scope>arrow::TemporalScalar</scope><name>~EqualityComparable</name></member>
      <member refid="structarrow_1_1_scalar_1a6410100776cd901718531f54738a32c2" prot="public" virt="virtual"><scope>arrow::TemporalScalar</scope><name>~Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
