<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_writer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::ColumnWriter</compoundname>
    <derivedcompoundref refid="classparquet_1_1_typed_column_writer" prot="public" virt="non-virtual">parquet::TypedColumnWriter&lt; DType &gt;</derivedcompoundref>
    <includes refid="column__writer_8h" local="no">parquet/column_writer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_writer_1a337ecabbf2d3341aff7c36e9a23aae32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual parquet::ColumnWriter::~ColumnWriter</definition>
        <argsstring>()=default</argsstring>
        <name>~ColumnWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1a45c4182a717acccbb655a7647cca1ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::ColumnWriter::Close</definition>
        <argsstring>()=0</argsstring>
        <name>Close</name>
        <briefdescription>
<para>Closes the <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref>, commits any buffered values to pages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Total size of the column in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1aaec76bcbc2b1761851437453b44da2f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
        <definition>virtual Type::type parquet::ColumnWriter::type</definition>
        <argsstring>() const =0</argsstring>
        <name>type</name>
        <briefdescription>
<para>The physical Parquet type of the column. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1aabe47ac83ace157172f8add2a60168b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
        <definition>virtual const ColumnDescriptor* parquet::ColumnWriter::descr</definition>
        <argsstring>() const =0</argsstring>
        <name>descr</name>
        <briefdescription>
<para>The schema for the column. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1aa03b2aad08f580f136fbf2969016a4fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::ColumnWriter::rows_written</definition>
        <argsstring>() const =0</argsstring>
        <name>rows_written</name>
        <briefdescription>
<para>The number of rows written so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1a266b537f4243e88492190f0812f04c1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::ColumnWriter::total_compressed_bytes</definition>
        <argsstring>() const =0</argsstring>
        <name>total_compressed_bytes</name>
        <briefdescription>
<para>The total size of the compressed pages + page headers. </para>        </briefdescription>
        <detaileddescription>
<para>Some values might be still buffered and not written to a page yet </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1ab1488fe0b62cdcd0ac4197fb77af1ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::ColumnWriter::total_bytes_written</definition>
        <argsstring>() const =0</argsstring>
        <name>total_bytes_written</name>
        <briefdescription>
<para>The total number of bytes written as serialized data and dictionary pages to the ColumnChunk so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1a05cf8f0a9c6062a264f9150e425a1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> *</type>
        <definition>virtual const WriterProperties* parquet::ColumnWriter::properties</definition>
        <argsstring>()=0</argsstring>
        <name>properties</name>
        <briefdescription>
<para>The file-level writer properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_writer_1a86548e46b18ef624e83d8bf56d2e4efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>virtual ::arrow::Status parquet::ColumnWriter::WriteArrow</definition>
        <argsstring>(const int16_t *def_levels, const int16_t *rep_levels, int64_t num_levels, const ::arrow::Array &amp;array, ArrowWriteContext *ctx)=0</argsstring>
        <name>WriteArrow</name>
        <param>
          <type>const int16_t *</type>
          <declname>def_levels</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>rep_levels</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_levels</declname>
        </param>
        <param>
          <type>const ::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="structparquet_1_1_arrow_write_context" kindref="compound">ArrowWriteContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Write Apache Arrow columnar data directly to <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns error status if the array data type is not compatible with the concrete writer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_column_writer_1af3b3f366b1f2bcffdf99846e6c4ef772" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_writer" kindref="compound">ColumnWriter</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;ColumnWriter&gt; parquet::ColumnWriter::Make</definition>
        <argsstring>(ColumnChunkMetaDataBuilder *, std::unique_ptr&lt; PageWriter &gt;, const WriterProperties *properties)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref> *</type>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_page_writer" kindref="compound">PageWriter</ref> &gt;</type>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_writer_properties" kindref="compound">WriterProperties</ref> *</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="621">
        <label>parquet::ColumnWriter</label>
        <link refid="classparquet_1_1_column_writer"/>
      </node>
      <node id="622">
        <label>parquet::TypedColumnWriter&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_column_writer"/>
        <childnode refid="621" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/parquet/column_writer.h" line="110" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="110" bodyend="148"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_writer_1a45c4182a717acccbb655a7647cca1ea7" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>Close</name></member>
      <member refid="classparquet_1_1_column_writer_1aabe47ac83ace157172f8add2a60168b6" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>descr</name></member>
      <member refid="classparquet_1_1_column_writer_1af3b3f366b1f2bcffdf99846e6c4ef772" prot="public" virt="non-virtual"><scope>parquet::ColumnWriter</scope><name>Make</name></member>
      <member refid="classparquet_1_1_column_writer_1a05cf8f0a9c6062a264f9150e425a1c97" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>properties</name></member>
      <member refid="classparquet_1_1_column_writer_1aa03b2aad08f580f136fbf2969016a4fc" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>rows_written</name></member>
      <member refid="classparquet_1_1_column_writer_1ab1488fe0b62cdcd0ac4197fb77af1ac9" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>total_bytes_written</name></member>
      <member refid="classparquet_1_1_column_writer_1a266b537f4243e88492190f0812f04c1b" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>total_compressed_bytes</name></member>
      <member refid="classparquet_1_1_column_writer_1aaec76bcbc2b1761851437453b44da2f0" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>type</name></member>
      <member refid="classparquet_1_1_column_writer_1a86548e46b18ef624e83d8bf56d2e4efe" prot="public" virt="pure-virtual"><scope>parquet::ColumnWriter</scope><name>WriteArrow</name></member>
      <member refid="classparquet_1_1_column_writer_1a337ecabbf2d3341aff7c36e9a23aae32" prot="public" virt="virtual"><scope>parquet::ColumnWriter</scope><name>~ColumnWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
