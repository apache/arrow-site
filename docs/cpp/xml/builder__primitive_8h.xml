<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="builder__primitive_8h" kind="file" language="C++">
    <compoundname>builder_primitive.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="array_8h" local="yes">arrow/array.h</includes>
    <includes refid="builder__base_8h" local="yes">arrow/array/builder_base.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includedby refid="builder__dict_8h" local="yes">/arrow/cpp/src/arrow/array/builder_dict.h</includedby>
    <includedby refid="builder__time_8h" local="yes">/arrow/cpp/src/arrow/array/builder_time.h</includedby>
    <includedby refid="builder_8h" local="yes">/arrow/cpp/src/arrow/builder.h</includedby>
    <incdepgraph>
      <node id="1414">
        <label>atomic</label>
      </node>
      <node id="1429">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
      </node>
      <node id="1444">
        <label>limits</label>
      </node>
      <node id="1454">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1415">
        <label>cstdint</label>
      </node>
      <node id="1445">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1439">
        <label>endian.h</label>
      </node>
      <node id="1409">
        <label>/arrow/cpp/src/arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1427">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1450">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
      </node>
      <node id="1432">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1443">
        <label>cmath</label>
      </node>
      <node id="1442">
        <label>cassert</label>
      </node>
      <node id="1433">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
      </node>
      <node id="1417">
        <label>string</label>
      </node>
      <node id="1449">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="1420">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1434">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="1435" relation="include">
        </childnode>
      </node>
      <node id="1436">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1431">
        <label>ostream</label>
      </node>
      <node id="1422">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="1446">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1438">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1441">
        <label>bitset</label>
      </node>
      <node id="1451">
        <label>tuple</label>
      </node>
      <node id="1412">
        <label>vector</label>
      </node>
      <node id="1453">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1426">
        <label>new</label>
      </node>
      <node id="1419">
        <label>utility</label>
      </node>
      <node id="1448">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1440">
        <label>array</label>
      </node>
      <node id="1437">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
      </node>
      <node id="1447">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="1416">
        <label>iosfwd</label>
      </node>
      <node id="1413">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1435">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="1425">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="1426" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
      </node>
      <node id="1424">
        <label>climits</label>
      </node>
      <node id="1455">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
      </node>
      <node id="1423">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
      </node>
      <node id="1418">
        <label>type_traits</label>
      </node>
      <node id="1410">
        <label>algorithm</label>
      </node>
      <node id="1428">
        <label>cstring</label>
      </node>
      <node id="1430">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1411">
        <label>memory</label>
      </node>
      <node id="1421">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="1415" relation="include">
        </childnode>
      </node>
      <node id="1452">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="1418" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1458">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="1505">
        <label>/arrow/cpp/src/gandiva/exported_funcs_registry.h</label>
        <link refid="exported__funcs__registry_8h"/>
        <childnode refid="1506" relation="include">
        </childnode>
      </node>
      <node id="1504">
        <label>/arrow/cpp/src/gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1509">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="1487">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="1456">
        <label>/arrow/cpp/src/arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1468">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="1507">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="1508" relation="include">
        </childnode>
      </node>
      <node id="1495">
        <label>/arrow/cpp/src/gandiva/function_registry_arithmetic.h</label>
        <link refid="function__registry__arithmetic_8h"/>
      </node>
      <node id="1467">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>/arrow/cpp/src/gandiva/execution_context.h</label>
        <link refid="execution__context_8h"/>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
      </node>
      <node id="1460">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="1517">
        <label>/arrow/cpp/src/arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1474">
        <label>/arrow/cpp/src/gandiva/decimal_type_util.h</label>
        <link refid="decimal__type__util_8h"/>
      </node>
      <node id="1491">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="1492" relation="include">
        </childnode>
      </node>
      <node id="1485">
        <label>/arrow/cpp/src/gandiva/func_descriptor.h</label>
        <link refid="func__descriptor_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
      </node>
      <node id="1471">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="1499">
        <label>/arrow/cpp/src/gandiva/function_registry_string.h</label>
        <link refid="function__registry__string_8h"/>
      </node>
      <node id="1481">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="1513">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1490">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1480">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="1481" relation="include">
        </childnode>
      </node>
      <node id="1465">
        <label>/arrow/cpp/src/arrow/util/hashing.h</label>
        <link refid="hashing_8h"/>
        <childnode refid="1458" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>/arrow/cpp/src/arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1503">
        <label>/arrow/cpp/src/gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
      </node>
      <node id="1489">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1494">
        <label>/arrow/cpp/src/gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
      </node>
      <node id="1514">
        <label>/arrow/cpp/src/gandiva/selection_vector_impl.h</label>
        <link refid="selection__vector__impl_8h"/>
      </node>
      <node id="1502">
        <label>/arrow/cpp/src/gandiva/jni/module_holder.h</label>
        <link refid="module__holder_8h"/>
      </node>
      <node id="1457">
        <label>/arrow/cpp/src/arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>/arrow/cpp/src/gandiva/simple_arena.h</label>
        <link refid="simple__arena_8h"/>
        <childnode refid="1516" relation="include">
        </childnode>
      </node>
      <node id="1482">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="1492">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1466">
        <label>/arrow/cpp/src/gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>/arrow/cpp/src/gandiva/date_utils.h</label>
        <link refid="date__utils_8h"/>
      </node>
      <node id="1484">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="1476" relation="include">
        </childnode>
      </node>
      <node id="1472">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="1508">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="1486">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
      </node>
      <node id="1483">
        <label>/arrow/cpp/src/gandiva/field_descriptor.h</label>
        <link refid="field__descriptor_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
      </node>
      <node id="1464">
        <label>/arrow/cpp/src/arrow/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>/arrow/cpp/src/gandiva/function_registry_hash.h</label>
        <link refid="function__registry__hash_8h"/>
      </node>
      <node id="1498">
        <label>/arrow/cpp/src/gandiva/function_registry_math_ops.h</label>
        <link refid="function__registry__math__ops_8h"/>
      </node>
      <node id="1476">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="1479">
        <label>/arrow/cpp/src/gandiva/expression.h</label>
        <link refid="gandiva_2expression_8h"/>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
      </node>
      <node id="1461">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="1496">
        <label>/arrow/cpp/src/gandiva/function_registry_datetime.h</label>
        <link refid="function__registry__datetime_8h"/>
      </node>
      <node id="1469">
        <label>/arrow/cpp/src/gandiva/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
      </node>
      <node id="1500">
        <label>/arrow/cpp/src/gandiva/function_registry_timestamp_arithmetic.h</label>
        <link refid="function__registry__timestamp__arithmetic_8h"/>
      </node>
      <node id="1510">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="1475" relation="include">
        </childnode>
      </node>
      <node id="1512">
        <label>/arrow/cpp/src/gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
      </node>
      <node id="1501">
        <label>/arrow/cpp/src/gandiva/in_holder.h</label>
        <link refid="in__holder_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
      </node>
      <node id="1506">
        <label>/arrow/cpp/src/gandiva/exported_funcs.h</label>
        <link refid="exported__funcs_8h"/>
      </node>
      <node id="1470">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="1471" relation="include">
        </childnode>
      </node>
      <node id="1488">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1493">
        <label>/arrow/cpp/src/gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
      </node>
      <node id="1475">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
      </node>
      <node id="1462">
        <label>/arrow/cpp/src/arrow/python/type_traits.h</label>
        <link refid="python_2type__traits_8h"/>
      </node>
      <node id="1477">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="1478">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="1511">
        <label>/arrow/cpp/src/gandiva/regex_util.h</label>
        <link refid="regex__util_8h"/>
      </node>
      <node id="1463">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_null_builder" prot="public">arrow::NullBuilder</innerclass>
    <innerclass refid="classarrow_1_1_numeric_builder" prot="public">arrow::NumericBuilder</innerclass>
    <innerclass refid="classarrow_1_1_boolean_builder" prot="public">arrow::BooleanBuilder</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="array_8h" kindref="compound">arrow/array.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder__base_8h" kindref="compound">arrow/array/builder_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classarrow_1_1_null_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_null_builder" kindref="compound">NullBuilder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classarrow_1_1_null_builder_1a0b6eae790197fd3a5caecedeaa728537" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_null_builder_1a0b6eae790197fd3a5caecedeaa728537" kindref="member">NullBuilder</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())<sp/>:<sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref>(pool)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classarrow_1_1_null_builder_1a16d3ef02a9cd9ac54c1d0f4c450e6d3b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_null_builder_1a16d3ef02a9cd9ac54c1d0f4c450e6d3b" kindref="member">AppendNulls</ref>(int64_t<sp/>length)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;length<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classarrow_1_1_null_builder_1af2c0562e2cb8a6e899bc07ab3c72858c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_null_builder_1af2c0562e2cb8a6e899bc07ab3c72858c" kindref="member">AppendNull</ref>()<sp/>final<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AppendNulls(1);<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classarrow_1_1_null_builder_1a47058828b0a4c2ed530c6e69a9207313" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_null_builder_1a47058828b0a4c2ed530c6e69a9207313" kindref="member">Append</ref>(std::nullptr_t)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AppendNull();<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FinishInternal(std::shared_ptr&lt;ArrayData&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" kindref="member">ArrayBuilder::Finish</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classarrow_1_1_null_builder_1aa6a17412ccc108d7e1fc3acd8d3a6083" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_null_builder_1aa6a17412ccc108d7e1fc3acd8d3a6083" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>();<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classarrow_1_1_null_builder_1a035dd6696c1f43afcfee5f8c71d21e28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_null_builder_1a035dd6696c1f43afcfee5f8c71d21e28" kindref="member">Finish</ref>(std::shared_ptr&lt;NullArray&gt;*<sp/>out)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinishTyped(out);<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60" refid="classarrow_1_1_numeric_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62" refid="classarrow_1_1_numeric_builder_1aa9e0eba6216d1f27ba6c20871def5664" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_day_time_interval_type" kindref="compound">TypeClass</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="63" refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::c_type;</highlight></codeline>
<codeline lineno="64" refid="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1ad07d8640c863b7c96262dcd8a38454a4" kindref="member">ArrayType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits&lt;T&gt;::ArrayType</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="67" refid="classarrow_1_1_numeric_builder_1acaf5b63f37f848e565c8dd4a84effeed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1acaf5b63f37f848e565c8dd4a84effeed" kindref="member">NumericBuilder</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a6c7d9fa36c6e17e9653179705ab1f49d" kindref="member">enable_if_parameter_free&lt;T1, MemoryPool*&gt;</ref><sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref>(pool),<sp/>type_(<ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;T&gt;::type_singleton())<sp/>{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classarrow_1_1_numeric_builder_1a3c7c1ba894e6022678612f97f8313c1b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_builder_1a3c7c1ba894e6022678612f97f8313c1b" kindref="member">NumericBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref>(pool),<sp/>type_(type)<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classarrow_1_1_numeric_builder_1a1e2842359a508f3d23ba6fc766c7eeb0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a1e2842359a508f3d23ba6fc766c7eeb0" kindref="member">Append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(<ref refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" kindref="member">ArrayBuilder::Reserve</ref>(1));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppend(val);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7" kindref="member">AppendNulls</ref>(int64_t<sp/>length)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(length,<sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>{});<sp/><sp/></highlight><highlight class="comment">//<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeSetNull(length);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815" kindref="member">AppendNull</ref>()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(1));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(<ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>{});<sp/><sp/></highlight><highlight class="comment">//<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppendToBitmap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classarrow_1_1_numeric_builder_1a2c172bf80efaa7cbfd65f69c311df653" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a2c172bf80efaa7cbfd65f69c311df653" kindref="member">GetValue</ref>(int64_t<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_builder_.data()[index];<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b" kindref="member">Reset</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>data_builder_.Reset();<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83" kindref="member">Resize</ref>(int64_t<sp/>capacity)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(CheckCapacity(capacity));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity<sp/>=<sp/>std::max(capacity,<sp/><ref refid="namespacearrow_1a4cd38814abf185253aa1c8f68c9ca5ab" kindref="member">kMinBuilderCapacity</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(data_builder_.Resize(capacity));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b" kindref="member">ArrayBuilder::Resize</ref>(capacity);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classarrow_1_1_numeric_builder_1a5e65b195d542a60c2125712d1cd225dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a5e65b195d542a60c2125712d1cd225dc" kindref="member">operator[]</ref>(int64_t<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetValue(index);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classarrow_1_1_numeric_builder_1ad0fd74467c25225aaed35926654cca0d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>&amp;<sp/><ref refid="classarrow_1_1_numeric_builder_1ad0fd74467c25225aaed35926654cca0d" kindref="member">operator[]</ref>(int64_t<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_builder_.mutable_data())[index];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classarrow_1_1_numeric_builder_1a3915eb06a4672f31eb27423e691cf0a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a3915eb06a4672f31eb27423e691cf0a2" kindref="member">AppendValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(values,<sp/>length);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length_<sp/>is<sp/>update<sp/>by<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" kindref="member">ArrayBuilder::UnsafeAppendToBitmap</ref>(valid_bytes,<sp/>length);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classarrow_1_1_numeric_builder_1a65bb6b23c8af350d196fafb77a7c8dcc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a65bb6b23c8af350d196fafb77a7c8dcc" kindref="member">AppendValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(values,<sp/>length);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length_<sp/>is<sp/>update<sp/>by<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" kindref="member">ArrayBuilder::UnsafeAppendToBitmap</ref>(is_valid);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classarrow_1_1_numeric_builder_1aa1a26f86af18021733b560584e05df3b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1aa1a26f86af18021733b560584e05df3b" kindref="member">AppendValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;value_type&gt;&amp;<sp/>values,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AppendValues(values.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(values.size()),<sp/>is_valid);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classarrow_1_1_numeric_builder_1a2ec37ffd870fb48037cb993f16d7209a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a2ec37ffd870fb48037cb993f16d7209a" kindref="member">AppendValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;value_type&gt;&amp;<sp/>values)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AppendValues(values.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(values.size()));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c" kindref="member">FinishInternal</ref>(std::shared_ptr&lt;ArrayData&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>null_bitmap;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(null_bitmap_builder_.Finish(&amp;null_bitmap));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(data_builder_.Finish(&amp;data));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>*out<sp/>=<sp/><ref refid="structarrow_1_1_array_data_1a8ae8d2e9fb0220b87410df967e645641" kindref="member">ArrayData::Make</ref>(type(),<sp/>length_,<sp/>{null_bitmap,<sp/>data},<sp/>null_count_);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity_<sp/>=<sp/>length_<sp/>=<sp/>null_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" kindref="member">ArrayBuilder::Finish</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classarrow_1_1_numeric_builder_1abf365d5609340d6286cb9487e1cc4f55" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1abf365d5609340d6286cb9487e1cc4f55" kindref="member">Finish</ref>(std::shared_ptr&lt;ArrayType&gt;*<sp/>out)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinishTyped(out);<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter&gt;</highlight></codeline>
<codeline lineno="183" refid="classarrow_1_1_numeric_builder_1a9c3316f90bbf3c02d12bca34739456c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a9c3316f90bbf3c02d12bca34739456c5" kindref="member">AppendValues</ref>(ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(values_begin,<sp/>values_end);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>updates<sp/>the<sp/>length_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeSetNotNull(length);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">Iter&gt;</highlight></codeline>
<codeline lineno="199" refid="classarrow_1_1_numeric_builder_1aca0586ee57cd48f9729ac0669805aa25" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;!std::is_pointer&lt;ValidIter&gt;::value</ref>,<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&gt;<sp/><ref refid="classarrow_1_1_numeric_builder_1aca0586ee57cd48f9729ac0669805aa25" kindref="member">AppendValues</ref>(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end,<sp/>ValidIter<sp/>valid_begin)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(!internal::is_null_pointer&lt;ValidIter&gt;::value,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>pass<sp/>a<sp/>NULLPTR<sp/>directly<sp/>as<sp/>valid_begin,<sp/>use<sp/>the<sp/>2-argument<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;version<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(values_begin,<sp/>values_end);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;valid_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*valid_begin++;<sp/>});</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>=<sp/>null_bitmap_builder_.length();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>=<sp/>null_bitmap_builder_.false_count();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>with<sp/>a<sp/>pointer<sp/>type<sp/>ValidIter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">Iter&gt;</highlight></codeline>
<codeline lineno="216" refid="classarrow_1_1_numeric_builder_1a389944ca8c9ba12998501ebd7d6c1fe5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;std::is_pointer&lt;ValidIter&gt;::value</ref>,<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&gt;<sp/><ref refid="classarrow_1_1_numeric_builder_1a389944ca8c9ba12998501ebd7d6c1fe5" kindref="member">AppendValues</ref>(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end,<sp/>ValidIter<sp/>valid_begin)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(values_begin,<sp/>values_end);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>updates<sp/>the<sp/>length_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid_begin<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UnsafeSetNotNull(length);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;valid_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*valid_begin++;<sp/>});</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length_<sp/>=<sp/>null_bitmap_builder_.length();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_count_<sp/>=<sp/>null_bitmap_builder_.false_count();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classarrow_1_1_numeric_builder_1a7ad22f6fc4114b23bcfb74e61636d911" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a7ad22f6fc4114b23bcfb74e61636d911" kindref="member">UnsafeAppend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" kindref="member">ArrayBuilder::UnsafeAppendToBitmap</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(val);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classarrow_1_1_numeric_builder_1a309510723719178089c4cf2bd9b70853" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder_1a309510723719178089c4cf2bd9b70853" kindref="member">UnsafeAppendNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" kindref="member">ArrayBuilder::UnsafeAppendToBitmap</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(<ref refid="classarrow_1_1_numeric_builder_1a3245a5b97300beaf74e49a7184d37a76" kindref="member">value_type</ref>{});<sp/><sp/></highlight><highlight class="comment">//<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252" refid="classarrow_1_1_numeric_builder_1a0db44a4a7372621e16801c8f0e3f6b7b" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_numeric_builder_1a0db44a4a7372621e16801c8f0e3f6b7b" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="253" refid="classarrow_1_1_numeric_builder_1a2d7f2bcb6bfc60f5f7a285112663cada" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder&lt;value_type&gt;</ref><sp/><ref refid="classarrow_1_1_numeric_builder_1a2d7f2bcb6bfc60f5f7a285112663cada" kindref="member">data_builder_</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="namespacearrow_1adab028f188008a82d790cd69ac351a3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">UInt8Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;UInt8Type&gt;</ref>;</highlight></codeline>
<codeline lineno="259" refid="namespacearrow_1a6f7720234c751cfa79a0d6d4e2014485" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">UInt16Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;UInt16Type&gt;</ref>;</highlight></codeline>
<codeline lineno="260" refid="namespacearrow_1a54e6101656a21b97a88179c8d1c453b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">UInt32Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;UInt32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="261" refid="namespacearrow_1a1777cb0f7c98036ad6f078fa0f1a6829" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">UInt64Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;UInt64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="namespacearrow_1a9675d2aecdd6ad622ee1358c358ba278" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Int8Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;Int8Type&gt;</ref>;</highlight></codeline>
<codeline lineno="264" refid="namespacearrow_1ab5ad5330bb34a045c6e87ecee875057e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Int16Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;Int16Type&gt;</ref>;</highlight></codeline>
<codeline lineno="265" refid="namespacearrow_1a031c893d8d592c7a099bb9bea3a25f86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Int32Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="266" refid="namespacearrow_1a08fa80026c56e0f1ff24b43c4dc33e61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Int64Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="namespacearrow_1ae87957f6c01fb918bb573f04c5188ca4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">HalfFloatBuilder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;HalfFloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="269" refid="namespacearrow_1afc7f8a9698e4a5b6e8c3884c2cf3aedb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">FloatBuilder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="270" refid="namespacearrow_1ab98cad76b29efffe92c6c88af8947873" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">DoubleBuilder</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">NumericBuilder&lt;DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classarrow_1_1_boolean_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">BooleanBuilder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274" refid="classarrow_1_1_boolean_builder_1a015a0bf935ed6cfed91128fe627679b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_type" kindref="compound">TypeClass</ref><sp/>=<sp/><ref refid="namespaceparquet_1a60f6c016c8d8b612f78974bc516006b0" kindref="member">BooleanType</ref>;</highlight></codeline>
<codeline lineno="275" refid="classarrow_1_1_boolean_builder_1adafbb5c2669ffc31a0c47df21f72a4a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder_1adafbb5c2669ffc31a0c47df21f72a4a8" kindref="member">value_type</ref><sp/>=<sp/>bool;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">BooleanBuilder</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">BooleanBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classarrow_1_1_boolean_builder_1a3ac08ddd73dd5be1d27f2f148cf95d75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1a3ac08ddd73dd5be1d27f2f148cf95d75" kindref="member">AppendNulls</ref>(int64_t<sp/>length)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(length,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeSetNull(length);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classarrow_1_1_boolean_builder_1aae9f39dbf89f8d1874cc8a4a90aec06b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1aae9f39dbf89f8d1874cc8a4a90aec06b" kindref="member">AppendNull</ref>()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(1));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppendNull();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classarrow_1_1_boolean_builder_1a8780642eb6e5a4a45e31222e78c1cc09" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1a8780642eb6e5a4a45e31222e78c1cc09" kindref="member">Append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(1));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppend(val);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classarrow_1_1_boolean_builder_1afc580587e3bf57107e524767c375d251" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1afc580587e3bf57107e524767c375d251" kindref="member">Append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder_1afc580587e3bf57107e524767c375d251" kindref="member">Append</ref>(val<sp/>!=<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classarrow_1_1_boolean_builder_1a3695606656e7e71457473c59d1cee0a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder_1a3695606656e7e71457473c59d1cee0a8" kindref="member">UnsafeAppend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(val);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppendToBitmap(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classarrow_1_1_boolean_builder_1ac6708b26cb77b0a2390b8ddb64bf8737" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder_1ac6708b26cb77b0a2390b8ddb64bf8737" kindref="member">UnsafeAppendNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeAppendToBitmap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classarrow_1_1_boolean_builder_1abf0ae864d7e51ee2cb10f9026b699bdb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder_1abf0ae864d7e51ee2cb10f9026b699bdb" kindref="member">UnsafeAppend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>val)<sp/>{<sp/><ref refid="classarrow_1_1_boolean_builder_1abf0ae864d7e51ee2cb10f9026b699bdb" kindref="member">UnsafeAppend</ref>(val<sp/>!=<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>is_valid);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>values,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>is_valid);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>values);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>is_valid);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>values);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter&gt;</highlight></codeline>
<codeline lineno="367" refid="classarrow_1_1_boolean_builder_1ae2a6d1b574abe92480d25c9736c51e69" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1ae2a6d1b574abe92480d25c9736c51e69" kindref="member">AppendValues</ref>(ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;values_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*values_begin++;<sp/>});</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>updates<sp/>length_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsafeSetNotNull(length);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">Iter&gt;</highlight></codeline>
<codeline lineno="384" refid="classarrow_1_1_boolean_builder_1aedf2ef31c0989d7507e7241fc535a29b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;!std::is_pointer&lt;ValidIter&gt;::value</ref>,<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&gt;<sp/><ref refid="classarrow_1_1_boolean_builder_1aedf2ef31c0989d7507e7241fc535a29b" kindref="member">AppendValues</ref>(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end,<sp/>ValidIter<sp/>valid_begin)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(!internal::is_null_pointer&lt;ValidIter&gt;::value,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>pass<sp/>a<sp/>NULLPTR<sp/>directly<sp/>as<sp/>valid_begin,<sp/>use<sp/>the<sp/>2-argument<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;version<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;values_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*values_begin++;<sp/>});</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;valid_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*valid_begin++;<sp/>});</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>=<sp/>null_bitmap_builder_.length();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>=<sp/>null_bitmap_builder_.false_count();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>for<sp/>a<sp/>pointer<sp/>type<sp/>ValidIter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValuesIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">Iter&gt;</highlight></codeline>
<codeline lineno="403" refid="classarrow_1_1_boolean_builder_1ade97955cdc3e192bffdee3f1c5ba0552" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;std::is_pointer&lt;ValidIter&gt;::value</ref>,<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref>&gt;<sp/><ref refid="classarrow_1_1_boolean_builder_1ade97955cdc3e192bffdee3f1c5ba0552" kindref="member">AppendValues</ref>(</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValuesIter<sp/>values_begin,<sp/>ValuesIter<sp/>values_end,<sp/>ValidIter<sp/>valid_begin)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::distance(values_begin,<sp/>values_end));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(length));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>data_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;values_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*values_begin++;<sp/>});</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid_begin<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UnsafeSetNotNull(length);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_.UnsafeAppend&lt;</highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>[&amp;valid_begin]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*valid_begin++;<sp/>});</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>=<sp/>null_bitmap_builder_.length();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>=<sp/>null_bitmap_builder_.false_count();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AppendValues(int64_t<sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FinishInternal(std::shared_ptr&lt;ArrayData&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" kindref="member">ArrayBuilder::Finish</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classarrow_1_1_boolean_builder_1ac18cf571ba568b0e58510290e429e9ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1ac18cf571ba568b0e58510290e429e9ec" kindref="member">Finish</ref>(std::shared_ptr&lt;BooleanArray&gt;*<sp/>out)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinishTyped(out);<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Resize(int64_t<sp/>capacity)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classarrow_1_1_boolean_builder_1aa3517d917b67cb7221fe3ef21fe553c6" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_boolean_builder_1aa3517d917b67cb7221fe3ef21fe553c6" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1ga1e585e8f1c25a9751ac9381a274df057" kindref="member">boolean</ref>();<sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="437" refid="classarrow_1_1_boolean_builder_1a476a09025041ecd70885132105c946a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4" kindref="compound">TypedBufferBuilder&lt;bool&gt;</ref><sp/><ref refid="classarrow_1_1_boolean_builder_1a476a09025041ecd70885132105c946a2" kindref="member">data_builder_</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/array/builder_primitive.h"/>
  </compounddef>
</doxygen>
