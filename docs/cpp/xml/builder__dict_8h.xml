<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="builder__dict_8h" kind="file" language="C++">
    <compoundname>builder_dict.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">memory</includes>
    <includes refid="builder__adaptive_8h" local="yes">arrow/array/builder_adaptive.h</includes>
    <includes refid="builder__base_8h" local="yes">arrow/array/builder_base.h</includes>
    <includes refid="builder__primitive_8h" local="yes">arrow/array/builder_primitive.h</includes>
    <includes refid="array_8h" local="yes">arrow/array.h</includes>
    <includedby refid="dict__internal_8h" local="yes">/arrow/cpp/src/arrow/array/dict_internal.h</includedby>
    <includedby refid="builder_8h" local="yes">/arrow/cpp/src/arrow/builder.h</includedby>
    <incdepgraph>
      <node id="1232">
        <label>atomic</label>
      </node>
      <node id="1212">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>limits</label>
      </node>
      <node id="1204">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1198">
        <label>cstdint</label>
      </node>
      <node id="1206">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1220">
        <label>endian.h</label>
      </node>
      <node id="1239">
        <label>arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1240" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
      <node id="1213">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1227">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="1228" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1209">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1224">
        <label>cmath</label>
      </node>
      <node id="1223">
        <label>cassert</label>
      </node>
      <node id="1234">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>string</label>
      </node>
      <node id="1218">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="1241">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1235">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1237">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1216">
        <label>ostream</label>
      </node>
      <node id="1211">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="1207">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1219">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1193">
        <label>/arrow/cpp/src/arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1239" relation="include">
        </childnode>
        <childnode refid="1240" relation="include">
        </childnode>
      </node>
      <node id="1222">
        <label>bitset</label>
      </node>
      <node id="1228">
        <label>tuple</label>
      </node>
      <node id="1196">
        <label>arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>vector</label>
      </node>
      <node id="1197">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1238" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1226">
        <label>new</label>
      </node>
      <node id="1202">
        <label>utility</label>
      </node>
      <node id="1217">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
      </node>
      <node id="1221">
        <label>array</label>
      </node>
      <node id="1238">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="1214">
        <label>iosfwd</label>
      </node>
      <node id="1240">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="1232" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1241" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1238" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1236">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="1225">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1233">
        <label>climits</label>
      </node>
      <node id="1230">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1231">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="1232" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1237" relation="include">
        </childnode>
      </node>
      <node id="1201">
        <label>type_traits</label>
      </node>
      <node id="1194">
        <label>algorithm</label>
      </node>
      <node id="1199">
        <label>cstring</label>
      </node>
      <node id="1215">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1195">
        <label>memory</label>
      </node>
      <node id="1210">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
      </node>
      <node id="1229">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="1201" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1243">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="1290">
        <label>/arrow/cpp/src/gandiva/exported_funcs_registry.h</label>
        <link refid="exported__funcs__registry_8h"/>
        <childnode refid="1291" relation="include">
        </childnode>
      </node>
      <node id="1289">
        <label>/arrow/cpp/src/gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1294">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="1272">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="1253">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="1292">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="1293" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>/arrow/cpp/src/gandiva/function_registry_arithmetic.h</label>
        <link refid="function__registry__arithmetic_8h"/>
      </node>
      <node id="1252">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1301">
        <label>/arrow/cpp/src/gandiva/execution_context.h</label>
        <link refid="execution__context_8h"/>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1245">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="1259">
        <label>/arrow/cpp/src/gandiva/decimal_type_util.h</label>
        <link refid="decimal__type__util_8h"/>
      </node>
      <node id="1276">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="1277" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>/arrow/cpp/src/gandiva/func_descriptor.h</label>
        <link refid="func__descriptor_8h"/>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
      </node>
      <node id="1256">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="1284">
        <label>/arrow/cpp/src/gandiva/function_registry_string.h</label>
        <link refid="function__registry__string_8h"/>
      </node>
      <node id="1266">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="1298">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1275">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1265">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1250">
        <label>/arrow/cpp/src/arrow/util/hashing.h</label>
        <link refid="hashing_8h"/>
        <childnode refid="1243" relation="include">
        </childnode>
      </node>
      <node id="1244">
        <label>/arrow/cpp/src/arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="1245" relation="include">
        </childnode>
        <childnode refid="1246" relation="include">
        </childnode>
        <childnode refid="1247" relation="include">
        </childnode>
        <childnode refid="1248" relation="include">
        </childnode>
        <childnode refid="1249" relation="include">
        </childnode>
        <childnode refid="1250" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
      </node>
      <node id="1288">
        <label>/arrow/cpp/src/gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
      </node>
      <node id="1274">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1279">
        <label>/arrow/cpp/src/gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
      </node>
      <node id="1299">
        <label>/arrow/cpp/src/gandiva/selection_vector_impl.h</label>
        <link refid="selection__vector__impl_8h"/>
      </node>
      <node id="1287">
        <label>/arrow/cpp/src/gandiva/jni/module_holder.h</label>
        <link refid="module__holder_8h"/>
      </node>
      <node id="1242">
        <label>/arrow/cpp/src/arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="1243" relation="include">
        </childnode>
        <childnode refid="1244" relation="include">
        </childnode>
      </node>
      <node id="1300">
        <label>/arrow/cpp/src/gandiva/simple_arena.h</label>
        <link refid="simple__arena_8h"/>
        <childnode refid="1301" relation="include">
        </childnode>
      </node>
      <node id="1267">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="1277">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1251">
        <label>/arrow/cpp/src/gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="1252" relation="include">
        </childnode>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1299" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
      </node>
      <node id="1258">
        <label>/arrow/cpp/src/gandiva/date_utils.h</label>
        <link refid="date__utils_8h"/>
      </node>
      <node id="1269">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1257">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="1293">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="1271">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>/arrow/cpp/src/gandiva/field_descriptor.h</label>
        <link refid="field__descriptor_8h"/>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1249">
        <label>/arrow/cpp/src/arrow/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="1245" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>/arrow/cpp/src/gandiva/function_registry_hash.h</label>
        <link refid="function__registry__hash_8h"/>
      </node>
      <node id="1283">
        <label>/arrow/cpp/src/gandiva/function_registry_math_ops.h</label>
        <link refid="function__registry__math__ops_8h"/>
      </node>
      <node id="1261">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="1264">
        <label>/arrow/cpp/src/gandiva/expression.h</label>
        <link refid="gandiva_2expression_8h"/>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1257" relation="include">
        </childnode>
      </node>
      <node id="1246">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="1281">
        <label>/arrow/cpp/src/gandiva/function_registry_datetime.h</label>
        <link refid="function__registry__datetime_8h"/>
      </node>
      <node id="1254">
        <label>/arrow/cpp/src/gandiva/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1257" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>/arrow/cpp/src/gandiva/function_registry_timestamp_arithmetic.h</label>
        <link refid="function__registry__timestamp__arithmetic_8h"/>
      </node>
      <node id="1295">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="1260" relation="include">
        </childnode>
      </node>
      <node id="1297">
        <label>/arrow/cpp/src/gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1299" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>/arrow/cpp/src/gandiva/in_holder.h</label>
        <link refid="in__holder_8h"/>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1291">
        <label>/arrow/cpp/src/gandiva/exported_funcs.h</label>
        <link refid="exported__funcs_8h"/>
      </node>
      <node id="1255">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="1256" relation="include">
        </childnode>
      </node>
      <node id="1273">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>/arrow/cpp/src/gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1260">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="1252" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1247">
        <label>/arrow/cpp/src/arrow/python/type_traits.h</label>
        <link refid="python_2type__traits_8h"/>
      </node>
      <node id="1262">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="1263">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="1296">
        <label>/arrow/cpp/src/gandiva/regex_util.h</label>
        <link refid="regex__util_8h"/>
      </node>
      <node id="1248">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_dictionary_builder" prot="public">arrow::DictionaryBuilder</innerclass>
    <innerclass refid="classarrow_1_1_dictionary32_builder" prot="public">arrow::Dictionary32Builder</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder__adaptive_8h" kindref="compound">arrow/array/builder_adaptive.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder__base_8h" kindref="compound">arrow/array/builder_base.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder__primitive_8h" kindref="compound">arrow/array/builder_primitive.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="array_8h" kindref="compound">arrow/array.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dictionary<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictionaryScalar<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::c_type;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictionaryScalar&lt;BinaryType&gt;<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictionaryScalar&lt;StringType&gt;<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictionaryScalar&lt;FixedSizeBinaryType&gt;<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>DictionaryMemoTable<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>DictionaryMemoTable(<ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>DictionaryMemoTable(<ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;&amp;<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>~DictionaryMemoTable();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(int8_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(int16_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(int32_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(int64_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(uint8_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(uint16_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(uint32_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(uint64_t<sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetOrInsert(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/>value,<sp/>int32_t*<sp/>out);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetArrayData(int64_t<sp/>start_offset,<sp/>std::shared_ptr&lt;ArrayData&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>InsertValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>values);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>int32_t<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryMemoTableImpl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;DictionaryMemoTableImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BuilderType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryBuilderBase<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArrayBuilder<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Scalar<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_scalar_1ae3f8aa29da0a3f3ac9d3de6a97818328" kindref="member">DictionaryScalar&lt;T&gt;::type</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>the<sp/>type<sp/>given<sp/>below<sp/>is<sp/>the<sp/>value<sp/>type,<sp/>not<sp/>the<sp/>DictionaryType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>DictionaryType<sp/>is<sp/>instantiated<sp/>on<sp/>the<sp/>Finish()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>DictionaryBuilderBase(<ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t</ref>&lt;!std::is_base_of&lt;FixedSizeBinaryType,<sp/>T1&gt;::value,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo_table_(new<sp/>internal::DictionaryMemoTable(pool,<sp/>value_type)),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_offset_(0),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_width_(-1),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices_builder_(pool),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type_(value_type)<sp/>{}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>DictionaryBuilderBase(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1aaaf9cd29f578b7221cbd8cf4183d0d80" kindref="member">enable_if_fixed_size_binary</ref>&lt;T1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;&gt;<sp/>value_type,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo_table_(new<sp/>internal::DictionaryMemoTable(pool,<sp/>value_type)),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_offset_(0),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_width_(static_cast&lt;const<sp/>T1&amp;&gt;(*value_type).byte_width()),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices_builder_(pool),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type_(value_type)<sp/>{}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>DictionaryBuilderBase(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enable_if_parameter_free&lt;T1,<sp/>MemoryPool*&gt;<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>DictionaryBuilderBase&lt;BuilderType,<sp/>T1&gt;(TypeTraits&lt;T1&gt;::type_singleton(),<sp/>pool)<sp/>{}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constructor<sp/>doesn&apos;t<sp/>check<sp/>for<sp/>errors.<sp/>Use<sp/>InsertMemoValues<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>DictionaryBuilderBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;&amp;<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo_table_(new<sp/>internal::DictionaryMemoTable(pool,<sp/>dictionary)),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_offset_(0),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_width_(-1),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices_builder_(pool),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type_(dictionary-&gt;type())<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>~DictionaryBuilderBase()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>int64_t<sp/>dictionary_length()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memo_table_-&gt;size();<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Reserve(1));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>memo_index;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(memo_table_-&gt;GetOrInsert(value,<sp/>&amp;memo_index));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(indices_builder_.Append(memo_index));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>enable_if_fixed_size_binary&lt;T1,<sp/>Status&gt;<sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(reinterpret_cast&lt;const<sp/>char*&gt;(value),<sp/>byte_width_));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>enable_if_fixed_size_binary&lt;T1,<sp/>Status&gt;<sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(value,<sp/>byte_width_));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>enable_if_binary_like&lt;T1,<sp/>Status&gt;<sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>value,<sp/>int32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Append(reinterpret_cast&lt;const<sp/>char*&gt;(value),<sp/>length);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>enable_if_binary_like&lt;T1,<sp/>Status&gt;<sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,<sp/>int32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(value,<sp/>length));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>enable_if_string_like&lt;T1,<sp/>Status&gt;<sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,<sp/>int32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(value,<sp/>length));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>AppendNull()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_builder_.AppendNull();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>AppendNulls(int64_t<sp/>length)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_builder_.AppendNulls(length);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>InsertMemoValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>values)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memo_table_-&gt;InsertValues(values);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>enable_if_t&lt;!is_fixed_size_binary_type&lt;T1&gt;::value,<sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>&gt;<sp/>AppendArray(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ArrayType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeTraits&lt;T&gt;::ArrayType;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>concrete_array<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">ArrayType&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(array);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>array.length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array.IsNull(i))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(AppendNull());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Append(concrete_array.GetView(i)));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>enable_if_fixed_size_binary&lt;T1,<sp/>Status&gt;<sp/>AppendArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value_type_-&gt;Equals(*array.type()))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>append<sp/>FixedSizeBinary<sp/>array<sp/>with<sp/>non-matching<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>concrete_array<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">FixedSizeBinaryArray&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(array);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>array.length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array.IsNull(i))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(AppendNull());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(Append(concrete_array.GetValue(i)));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>partial<sp/>reset.<sp/>Call<sp/>ResetFull<sp/>to<sp/>also<sp/>reset<sp/>the<sp/>accumulated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" kindref="member">ArrayBuilder::Reset</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>indices_builder_.Reset();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetFull()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>Reset();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>memo_table_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>internal::DictionaryMemoTable(pool_,<sp/>value_type_));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Resize(int64_t<sp/>capacity)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(CheckCapacity(capacity));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity<sp/>=<sp/>std::max(capacity,<sp/><ref refid="namespacearrow_1a4cd38814abf185253aa1c8f68c9ca5ab" kindref="member">kMinBuilderCapacity</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(indices_builder_.Resize(capacity));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity_<sp/>=<sp/>indices_builder_.capacity();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>FinishDelta(std::shared_ptr&lt;Array&gt;*<sp/>out_indices,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;*<sp/>out_delta)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArrayData&gt;<sp/>indices_data;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(FinishWithDictOffset(delta_offset_,<sp/>&amp;indices_data,<sp/>out_delta));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_indices<sp/>=<sp/><ref refid="namespacearrow_1a7edcc7f88dec3ddcfcd8ccf1882cb833" kindref="member">MakeArray</ref>(indices_data);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" kindref="member">ArrayBuilder::Finish</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Finish(std::shared_ptr&lt;DictionaryArray&gt;*<sp/>out)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinishTyped(out);<sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">return ::arrow::dictionary</ref>(indices_builder_.type(),<sp/>value_type_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>FinishInternal(std::shared_ptr&lt;ArrayData&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(FinishWithDictOffset(</highlight><highlight class="comment">/*offset=*/</highlight><highlight class="normal">0,<sp/>out,<sp/>&amp;dictionary));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>type<sp/>of<sp/>array<sp/>data<sp/>to<sp/>the<sp/>right<sp/>dictionary<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>(*out)-&gt;type<sp/>=<sp/>type();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>(*out)-&gt;dictionary<sp/>=<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>FinishWithDictOffset(int64_t<sp/>dict_offset,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArrayData&gt;*<sp/>out_indices,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;*<sp/>out_dictionary)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finalize<sp/>indices<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(indices_builder_.FinishInternal(out_indices));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>dictionary<sp/>array<sp/>from<sp/>hash<sp/>table<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArrayData&gt;<sp/>dictionary_data;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(memo_table_-&gt;GetArrayData(dict_offset,<sp/>&amp;dictionary_data));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_dictionary<sp/>=<sp/><ref refid="namespacearrow_1a7edcc7f88dec3ddcfcd8ccf1882cb833" kindref="member">MakeArray</ref>(dictionary_data);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>delta_offset_<sp/>=<sp/>memo_table_-&gt;size();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>internals<sp/>for<sp/>further<sp/>uses<sp/>of<sp/>this<sp/>DictionaryBuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" kindref="member">ArrayBuilder::Reset</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;DictionaryMemoTable&gt;<sp/>memo_table_;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>dictionary<sp/>memo<sp/>at<sp/>last<sp/>invocation<sp/>of<sp/>Finish,<sp/>to<sp/>use<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FinishDelta<sp/>for<sp/>computing<sp/>dictionary<sp/>deltas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>int32_t<sp/>delta_offset_;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>used<sp/>for<sp/>FixedSizeBinaryType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>int32_t<sp/>byte_width_;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>BuilderType<sp/>indices_builder_;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/>value_type_;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BuilderType&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryBuilderBase&lt;BuilderType,<sp/>NullType&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArrayBuilder<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>DictionaryBuilderBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>value_type,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),<sp/>indices_builder_(pool)<sp/>{}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>DictionaryBuilderBase(<ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),<sp/>indices_builder_(pool)<sp/>{}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>DictionaryBuilderBase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;&amp;<sp/>dictionary,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ArrayBuilder(pool),<sp/>indices_builder_(pool)<sp/>{}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>AppendNull()<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_builder_.AppendNull();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>AppendNulls(int64_t<sp/>length)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>null_count_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_builder_.AppendNulls(length);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>AppendArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>array.length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(AppendNull());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Resize(int64_t<sp/>capacity)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(CheckCapacity(capacity));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity<sp/>=<sp/>std::max(capacity,<sp/><ref refid="namespacearrow_1a4cd38814abf185253aa1c8f68c9ca5ab" kindref="member">kMinBuilderCapacity</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(indices_builder_.Resize(capacity));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity_<sp/>=<sp/>indices_builder_.capacity();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>FinishInternal(std::shared_ptr&lt;ArrayData&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(indices_builder_.FinishInternal(out));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>(*out)-&gt;type<sp/>=<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>((*out)-&gt;type,<sp/><ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>(*out)-&gt;dictionary.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NullArray(0));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" kindref="member">ArrayBuilder::Finish</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>Finish(std::shared_ptr&lt;DictionaryArray&gt;*<sp/>out)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinishTyped(out);<sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">return ::arrow::dictionary</ref>(indices_builder_.type(),<sp/><ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>BuilderType<sp/>indices_builder_;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="400" refid="classarrow_1_1_dictionary_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_dictionary_builder" kindref="compound">DictionaryBuilder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>internal::DictionaryBuilderBase&lt;AdaptiveIntBuilder,<sp/>T&gt;<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402" refid="classarrow_1_1_dictionary_builder_1af3b5439e574a96b80886e560a61b9fff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_builder_1af3b5439e574a96b80886e560a61b9fff" kindref="member">BASE</ref><sp/>=<sp/>internal::DictionaryBuilderBase&lt;AdaptiveIntBuilder,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BASE::BASE;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classarrow_1_1_dictionary_builder_1a4c6bcc592e1fdea503734e0c90ddd069" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_dictionary_builder_1a4c6bcc592e1fdea503734e0c90ddd069" kindref="member">AppendIndices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>null_count_before<sp/>=<sp/>this-&gt;indices_builder_.null_count();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(this-&gt;indices_builder_.AppendValues(values,<sp/>length,<sp/>valid_bytes));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;capacity_<sp/>=<sp/>this-&gt;indices_builder_.capacity();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;length_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;null_count_<sp/>+=<sp/>this-&gt;indices_builder_.null_count()<sp/>-<sp/>null_count_before;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="423" refid="classarrow_1_1_dictionary32_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">Dictionary32Builder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>internal::DictionaryBuilderBase&lt;Int32Builder,<sp/>T&gt;<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425" refid="classarrow_1_1_dictionary32_builder_1a6effad964d43cc5f525bbda8fc2da05a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder_1a6effad964d43cc5f525bbda8fc2da05a" kindref="member">BASE</ref><sp/>=<sp/>internal::DictionaryBuilderBase&lt;Int32Builder,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BASE::BASE;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="classarrow_1_1_dictionary32_builder_1a82fbab801ea2a213212b8712177d2bd6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_dictionary32_builder_1a82fbab801ea2a213212b8712177d2bd6" kindref="member">AppendIndices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t*<sp/>values,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bytes<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>null_count_before<sp/>=<sp/>this-&gt;indices_builder_.null_count();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(this-&gt;indices_builder_.AppendValues(values,<sp/>length,<sp/>valid_bytes));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;capacity_<sp/>=<sp/>this-&gt;indices_builder_.capacity();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;length_<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;null_count_<sp/>+=<sp/>this-&gt;indices_builder_.null_count()<sp/>-<sp/>null_count_before;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal">};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary<sp/>/<sp/>Unicode<sp/>builders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(compatibility<sp/>aliases;<sp/>those<sp/>used<sp/>to<sp/>be<sp/>derived<sp/>classes<sp/>with<sp/>additional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Append()<sp/>overloads,<sp/>but<sp/>they<sp/>have<sp/>been<sp/>folded<sp/>into<sp/>DictionaryBuilderBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="namespacearrow_1a5f8131cc0c59201919057baede1e1915" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_builder" kindref="compound">BinaryDictionaryBuilder</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary_builder" kindref="compound">DictionaryBuilder&lt;BinaryType&gt;</ref>;</highlight></codeline>
<codeline lineno="448" refid="namespacearrow_1abaee05f9db0635d18089f51fedb2ea18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_builder" kindref="compound">StringDictionaryBuilder</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary_builder" kindref="compound">DictionaryBuilder&lt;StringType&gt;</ref>;</highlight></codeline>
<codeline lineno="449" refid="namespacearrow_1adcb8bc3a11dc7a68ca1eee6f9235ae47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">BinaryDictionary32Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">Dictionary32Builder&lt;BinaryType&gt;</ref>;</highlight></codeline>
<codeline lineno="450" refid="namespacearrow_1aaa212e571198e5d0102195c2202d462a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">StringDictionary32Builder</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">Dictionary32Builder&lt;StringType&gt;</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/array/builder_dict.h"/>
  </compounddef>
</doxygen>
