<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1_dictionary_memo" kind="class" language="C++" prot="public">
    <compoundname>arrow::ipc::DictionaryMemo</compoundname>
    <includes refid="dictionary_8h" local="no">arrow/ipc/dictionary.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1_dictionary_memo_1a8f7bf1e84c5450e3aed1428e928a4bfe" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; const <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> *, int64_t &gt;</type>
        <definition>std::unordered_map&lt;const Field*, int64_t&gt; arrow::ipc::DictionaryMemo::field_to_id_</definition>
        <argsstring></argsstring>
        <name>field_to_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="90" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1_dictionary_memo_1a7152b332468ab697f076b7767c19e00d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacearrow_1_1ipc_1ac4462a1d18d35a0a17f3f6333d83cb3f" kindref="member">DictionaryMap</ref></type>
        <definition>DictionaryMap arrow::ipc::DictionaryMemo::id_to_dictionary_</definition>
        <argsstring></argsstring>
        <name>id_to_dictionary_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="93" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1_dictionary_memo_1ace06305305551ced11aa22599ce9cffc" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int64_t, std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;int64_t, std::shared_ptr&lt;DataType&gt; &gt; arrow::ipc::DictionaryMemo::id_to_type_</definition>
        <argsstring></argsstring>
        <name>id_to_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="94" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a34df1f797134f38e133d339149063660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::DictionaryMemo::DictionaryMemo</definition>
        <argsstring>()</argsstring>
        <name>DictionaryMemo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a769463970e6ef8cef687b3f617e117ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::DictionaryMemo::DictionaryMemo</definition>
        <argsstring>(DictionaryMemo &amp;&amp;)=default</argsstring>
        <name>DictionaryMemo</name>
        <param>
          <type><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1acb438d918ff23a8c8197d30de457bf55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref> &amp;</type>
        <definition>DictionaryMemo&amp; arrow::ipc::DictionaryMemo::operator=</definition>
        <argsstring>(DictionaryMemo &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1afd23dd4f43af7950aa0f2ad7a200282c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::GetDictionary</definition>
        <argsstring>(int64_t id, std::shared_ptr&lt; Array &gt; *dictionary) const</argsstring>
        <name>GetDictionary</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
          <declname>dictionary</declname>
        </param>
        <briefdescription>
<para>Return current dictionary corresponding to a particular id. </para>        </briefdescription>
        <detaileddescription>
<para>Returns KeyError if id not found </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a6a16bf28d7e8f73f4ede4cee1a237026" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::GetDictionaryType</definition>
        <argsstring>(int64_t id, std::shared_ptr&lt; DataType &gt; *type) const</argsstring>
        <name>GetDictionaryType</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Return dictionary value type corresponding to a particular dictionary id. </para>        </briefdescription>
        <detaileddescription>
<para>This permits multiple fields to reference the same dictionary in IPC and JSON </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a5034a0f0980de001f20c39d09d41e56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::GetOrAssignId</definition>
        <argsstring>(const std::shared_ptr&lt; Field &gt; &amp;field, int64_t *out)</argsstring>
        <name>GetOrAssignId</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return id for dictionary, computing new id if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a46160173f21f916178bae84c300d5e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::GetId</definition>
        <argsstring>(const Field *type, int64_t *id) const</argsstring>
        <name>GetId</name>
        <param>
          <type>const <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return id for dictionary if it exists, otherwise return KeyError. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a7ff7e2e595e2bb1a64c33401f6984c6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::ipc::DictionaryMemo::HasDictionary</definition>
        <argsstring>(const Field &amp;type) const</argsstring>
        <name>HasDictionary</name>
        <param>
          <type>const <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Return true if dictionary for type is in this memo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1ac77873f41e5411b682689be3ec36fbdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::ipc::DictionaryMemo::HasDictionary</definition>
        <argsstring>(int64_t id) const</argsstring>
        <name>HasDictionary</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return true if we have a dictionary for the input id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a450b48ec35c2ddf818fbcc70af3b48d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::AddField</definition>
        <argsstring>(int64_t id, const std::shared_ptr&lt; Field &gt; &amp;field)</argsstring>
        <name>AddField</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Add field to the memo, return KeyError if already present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a7084b7d6b3a6044a2596baf7649caf58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::AddDictionary</definition>
        <argsstring>(int64_t id, const std::shared_ptr&lt; Array &gt; &amp;dictionary)</argsstring>
        <name>AddDictionary</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>dictionary</declname>
        </param>
        <briefdescription>
<para>Add a dictionary to the memo with a particular id. </para>        </briefdescription>
        <detaileddescription>
<para>Returns KeyError if that dictionary already exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a35fa7e8c3cac8ac1047413241d229fad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacearrow_1_1ipc_1ac4462a1d18d35a0a17f3f6333d83cb3f" kindref="member">DictionaryMap</ref> &amp;</type>
        <definition>const DictionaryMap&amp; arrow::ipc::DictionaryMemo::id_to_dictionary</definition>
        <argsstring>() const</argsstring>
        <name>id_to_dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="79" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1aba0ed78e4689d3ba86be1736a7ef29b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::ipc::DictionaryMemo::num_fields</definition>
        <argsstring>() const</argsstring>
        <name>num_fields</name>
        <briefdescription>
<para>The number of fields tracked in the memo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="82" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1ae7df22f39c2c2bff0b3551b0296869a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::ipc::DictionaryMemo::num_dictionaries</definition>
        <argsstring>() const</argsstring>
        <name>num_dictionaries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="83" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1a0e8f3593ec557b9d61cd24ed6127fd0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::DictionaryMemo::AddFieldInternal</definition>
        <argsstring>(int64_t id, const std::shared_ptr&lt; Field &gt; &amp;field)</argsstring>
        <name>AddFieldInternal</name>
        <param>
          <type>int64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_field" kindref="compound">Field</ref> &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_dictionary_memo_1af7d699dd8752a2c40f5e2a0b7a226669" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::DictionaryMemo::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(DictionaryMemo)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">DictionaryMemo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memoization data structure for assigning id numbers to dictionaries and tracking their current state through possible deltas in an IPC stream. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/ipc/dictionary.h" line="44" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/dictionary.h" bodystart="44" bodyend="97"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a7084b7d6b3a6044a2596baf7649caf58" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>AddDictionary</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a450b48ec35c2ddf818fbcc70af3b48d2" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>AddField</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a0e8f3593ec557b9d61cd24ed6127fd0f" prot="private" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>AddFieldInternal</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1af7d699dd8752a2c40f5e2a0b7a226669" prot="private" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a34df1f797134f38e133d339149063660" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>DictionaryMemo</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a769463970e6ef8cef687b3f617e117ed" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>DictionaryMemo</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a8f7bf1e84c5450e3aed1428e928a4bfe" prot="private" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>field_to_id_</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1afd23dd4f43af7950aa0f2ad7a200282c" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>GetDictionary</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a6a16bf28d7e8f73f4ede4cee1a237026" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>GetDictionaryType</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a46160173f21f916178bae84c300d5e4e" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>GetId</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a5034a0f0980de001f20c39d09d41e56a" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>GetOrAssignId</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a7ff7e2e595e2bb1a64c33401f6984c6e" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>HasDictionary</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1ac77873f41e5411b682689be3ec36fbdb" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>HasDictionary</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a35fa7e8c3cac8ac1047413241d229fad" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>id_to_dictionary</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1a7152b332468ab697f076b7767c19e00d" prot="private" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>id_to_dictionary_</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1ace06305305551ced11aa22599ce9cffc" prot="private" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>id_to_type_</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1ae7df22f39c2c2bff0b3551b0296869a2" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>num_dictionaries</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1aba0ed78e4689d3ba86be1736a7ef29b9" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>num_fields</name></member>
      <member refid="classarrow_1_1ipc_1_1_dictionary_memo_1acb438d918ff23a8c8197d30de457bf55" prot="public" virt="non-virtual"><scope>arrow::ipc::DictionaryMemo</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
