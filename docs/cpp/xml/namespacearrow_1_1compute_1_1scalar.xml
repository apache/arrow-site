<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacearrow_1_1compute_1_1scalar" kind="namespace" language="C++">
    <compoundname>arrow::compute::scalar</compoundname>
    <innerclass refid="classarrow_1_1compute_1_1scalar_1_1_list" prot="public">arrow::compute::scalar::List</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1scalar_1_1_struct" prot="public">arrow::compute::scalar::Struct</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a1d34ddac0997457a19ff1991c572bd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(null)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1gaf642d53dac1a6b6b686fb5984d33bc9a" kindref="member">null</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1aa678c98ac536182058d96569a029a918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(boolean)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga1e585e8f1c25a9751ac9381a274df057" kindref="member">boolean</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a96d83416efc8cc1c37e55c74153af912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(int8)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga9c09bf26bc03f0fb0c84a0277215dd67" kindref="member">int8</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a9eed69fa20e37a5847f6e7daf7ab56cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(int16)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga034c5c703e15039fe76af412d349734d" kindref="member">int16</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a99caeee0d99a2896b638332635ae046c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(int32)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga86f6bfe394347f77befa2143297ad541" kindref="member">int32</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1aeb0f0fe86f3f77560665c5baa314b86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(int64)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga733b16be653069b8d926529662e34e79" kindref="member">int64</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1ae93b5662af46816fb26e71f1958d6bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(uint8)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga4891a423be213550cc24e8ebe830673f" kindref="member">uint8</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a773ef10a0a12606142aceb47b35a001a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(uint16)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga9f1e44bc2ab9b465b6e7b601eb48f0a0" kindref="member">uint16</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1ad127150398ac133d82fe82082f5eaae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(uint32)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1gae80e510cfb2931ac18c73cba0be6d894" kindref="member">uint32</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a1406e1ba63b32e8e328089342c3dba99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(uint64)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1gae548d03275f4afaa97a269774ce6930c" kindref="member">uint64</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1ab55e7b38b6fdc35834922da395c65e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(float16)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga4fac9b6739876df09be8b82d70b26734" kindref="member">float16</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1afc111874843a4735239edf34ee4888e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(float32)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga48fca9d26feda61c8255ec3c44a2078c" kindref="member">float32</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1a9378a5dc02b5442d6779ba39c7f039ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(float64)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1gab6f514320a9b037ab161fa97db73b970" kindref="member">float64</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1abf490092ff24f1eaa325f77861f1aeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(binary)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga66c3979f26a439e78d048bbac84a9232" kindref="member">binary</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1compute_1_1scalar_1ad4d07b83cd2fe1cb63d4f677b3aa742f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::scalar::SIMPLE_EXPR_FACTORY</definition>
        <argsstring>(utf8)</argsstring>
        <name>SIMPLE_EXPR_FACTORY</name>
        <param>
          <type><ref refid="group__type-factories_1ga63178820a26f6ecb894ad35963ca981a" kindref="member">utf8</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/expression.h" line="167" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/compute/expression.h" line="126" column="1"/>
  </compounddef>
</doxygen>
