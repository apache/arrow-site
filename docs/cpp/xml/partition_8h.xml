<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="partition_8h" kind="file" language="C++">
    <compoundname>partition.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="arrow_2dataset_2filter_8h" local="yes">arrow/dataset/filter.h</includes>
    <includes refid="dataset_2type__fwd_8h" local="yes">arrow/dataset/type_fwd.h</includes>
    <includes refid="arrow_2dataset_2visibility_8h" local="yes">arrow/dataset/visibility.h</includes>
    <includes refid="optional_8h" local="yes">arrow/util/optional.h</includes>
    <includedby refid="discovery_8h" local="yes">/arrow/cpp/src/arrow/dataset/discovery.h</includedby>
    <includedby refid="file__base_8h" local="yes">/arrow/cpp/src/arrow/dataset/file_base.h</includedby>
    <incdepgraph>
      <node id="5567">
        <label>arrow/util/memory.h</label>
        <link refid="util_2memory_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
      </node>
      <node id="5522">
        <label>atomic</label>
      </node>
      <node id="5526">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
      </node>
      <node id="5512">
        <label>functional</label>
      </node>
      <node id="5552">
        <label>limits</label>
      </node>
      <node id="5520">
        <label>cstdint</label>
      </node>
      <node id="5553">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5555" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5546">
        <label>endian.h</label>
      </node>
      <node id="5523">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5558">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
      </node>
      <node id="5511">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="5512" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5515" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5518" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
        <childnode refid="5572" relation="include">
        </childnode>
      </node>
      <node id="5572">
        <label>arrow/util/optional.h</label>
        <link refid="optional_8h"/>
        <childnode refid="5573" relation="include">
        </childnode>
      </node>
      <node id="5532">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5551">
        <label>cmath</label>
      </node>
      <node id="5550">
        <label>cassert</label>
      </node>
      <node id="5540">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
      </node>
      <node id="5514">
        <label>string</label>
      </node>
      <node id="5557">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="5535">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5541">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="5542" relation="include">
        </childnode>
      </node>
      <node id="5566">
        <label>arrow/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5536" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5543">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5530">
        <label>ostream</label>
      </node>
      <node id="5531">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="5519">
        <label>arrow/compute/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5521" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5565">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5554">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5555" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5521">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="5522" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5545">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="5546" relation="include">
        </childnode>
        <childnode refid="5547" relation="include">
        </childnode>
        <childnode refid="5548" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5550" relation="include">
        </childnode>
        <childnode refid="5551" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5552" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5558" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5549">
        <label>bitset</label>
      </node>
      <node id="5559">
        <label>tuple</label>
      </node>
      <node id="5517">
        <label>vector</label>
      </node>
      <node id="5539">
        <label>new</label>
      </node>
      <node id="5516">
        <label>utility</label>
      </node>
      <node id="5556">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
      </node>
      <node id="5548">
        <label>array</label>
      </node>
      <node id="5564">
        <label>arrow/util/basic_decimal.h</label>
        <link refid="basic__decimal_8h"/>
        <childnode refid="5548" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5552" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5544">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5545" relation="include">
        </childnode>
      </node>
      <node id="5533">
        <label>arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5534" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5567" relation="include">
        </childnode>
        <childnode refid="5541" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5563">
        <label>arrow/util/decimal.h</label>
        <link refid="util_2decimal_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5552" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
      </node>
      <node id="5561">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5573">
        <label>arrow/vendored/optional.hpp</label>
      </node>
      <node id="5555">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="5525">
        <label>iosfwd</label>
      </node>
      <node id="5569">
        <label>arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5533" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5568">
        <label>arrow/compute/kernels/cast.h</label>
        <link refid="kernels_2cast_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5518">
        <label>arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="5512" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5519" relation="include">
        </childnode>
        <childnode refid="5533" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5569" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5540" relation="include">
        </childnode>
        <childnode refid="5541" relation="include">
        </childnode>
      </node>
      <node id="5570">
        <label>arrow/dataset/type_fwd.h</label>
        <link refid="dataset_2type__fwd_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
      </node>
      <node id="5534">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="5522" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5535" relation="include">
        </childnode>
        <childnode refid="5536" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5544" relation="include">
        </childnode>
        <childnode refid="5545" relation="include">
        </childnode>
        <childnode refid="5540" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5515">
        <label>unordered_map</label>
      </node>
      <node id="5571">
        <label>arrow/dataset/visibility.h</label>
        <link refid="arrow_2dataset_2visibility_8h"/>
      </node>
      <node id="5542">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="5538">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="5539" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
      </node>
      <node id="5537">
        <label>climits</label>
      </node>
      <node id="5562">
        <label>arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5536" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5544" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5536">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="5522" relation="include">
        </childnode>
        <childnode refid="5537" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5540" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5541" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
        <childnode refid="5543" relation="include">
        </childnode>
      </node>
      <node id="5527">
        <label>type_traits</label>
      </node>
      <node id="5547">
        <label>algorithm</label>
      </node>
      <node id="5524">
        <label>cstring</label>
      </node>
      <node id="5529">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
      </node>
      <node id="5513">
        <label>memory</label>
      </node>
      <node id="5528">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="5520" relation="include">
        </childnode>
      </node>
      <node id="5560">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="5527" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5574">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="5575" relation="include">
        </childnode>
        <childnode refid="5577" relation="include">
        </childnode>
      </node>
      <node id="5579">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5577">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5578" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
      </node>
      <node id="5575">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5578">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5576">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1dataset_1_1_partitioning" prot="public">arrow::dataset::Partitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_partitioning_factory" prot="public">arrow::dataset::PartitioningFactory</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_default_partitioning" prot="public">arrow::dataset::DefaultPartitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning" prot="public">arrow::dataset::SegmentDictionaryPartitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_key_value_partitioning" prot="public">arrow::dataset::KeyValuePartitioning</innerclass>
    <innerclass refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" prot="public">arrow::dataset::KeyValuePartitioning::Key</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_directory_partitioning" prot="public">arrow::dataset::DirectoryPartitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_hive_partitioning" prot="public">arrow::dataset::HivePartitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_function_partitioning" prot="public">arrow::dataset::FunctionPartitioning</innerclass>
    <innerclass refid="classarrow_1_1dataset_1_1_partitioning_or_factory" prot="public">arrow::dataset::PartitioningOrFactory</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1dataset">arrow::dataset</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2dataset_2filter_8h" kindref="compound">arrow/dataset/filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataset_2type__fwd_8h" kindref="compound">arrow/dataset/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2dataset_2visibility_8h" kindref="compound">arrow/dataset/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="optional_8h" kindref="compound">arrow/util/optional.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dataset<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partitioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classarrow_1_1dataset_1_1_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>type_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/>Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classarrow_1_1dataset_1_1_partitioning_1a658b4a6e1a29460db595042446f875c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_1a658b4a6e1a29460db595042446f875c7" kindref="member">Format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref>&amp;<sp/>expr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME(bkietz)<sp/>make<sp/>this<sp/>pure<sp/>virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" kindref="member">Status::NotImplemented</ref>(</highlight><highlight class="stringliteral">&quot;formatting<sp/>paths<sp/>from<sp/>&quot;</highlight><highlight class="normal">,<sp/>type_name(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Partitioning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/>Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Partitioning&gt;<sp/>Default();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classarrow_1_1dataset_1_1_partitioning_1ad0d9beac97c3f9703adbaa6c6a434c50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_1ad0d9beac97c3f9703adbaa6c6a434c50" kindref="member">schema</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82" refid="classarrow_1_1dataset_1_1_partitioning_1ae0ffcc236e1ad13f0e5f3da6a1b8770e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_1ae0ffcc236e1ad13f0e5f3da6a1b8770e" kindref="member">Partitioning</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/>:<sp/>schema_(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema))<sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classarrow_1_1dataset_1_1_partitioning_1ab22cd7ff0da98f2fb7d975c9c39ccd81" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_1ab22cd7ff0da98f2fb7d975c9c39ccd81" kindref="member">schema_</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classarrow_1_1dataset_1_1_partitioning_factory" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_factory" kindref="compound">PartitioningFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1dataset_1_1_partitioning_factory" kindref="compound">PartitioningFactory</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>type_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Schema&gt;</ref>&gt;<sp/>Inspect(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;util::string_view&gt;&amp;<sp/>paths)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Partitioning&gt;</ref>&gt;<sp/>Finish(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME(bkietz)<sp/>Make<sp/>these<sp/>pure<sp/>virtual</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;WritePlan&gt;</ref><sp/>MakeWritePlan(<ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>fragments,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;WritePlan&gt;</ref><sp/>MakeWritePlan(<ref refid="classarrow_1_1_iterator" kindref="compound">FragmentIterator</ref><sp/>fragments);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classarrow_1_1dataset_1_1_default_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1dataset_1_1_default_partitioning" kindref="compound">DefaultPartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="classarrow_1_1dataset_1_1_default_partitioning_1a530ed07719d72ecd53cb8043a23d6be1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_default_partitioning_1a530ed07719d72ecd53cb8043a23d6be1" kindref="member">DefaultPartitioning</ref>()<sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref>(::<ref refid="namespacearrow" kindref="compound">arrow</ref>::<ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>({}))<sp/>{}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classarrow_1_1dataset_1_1_default_partitioning_1ac3cedd34cb5e996ccbd4d6b0bbea06ca" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_default_partitioning_1ac3cedd34cb5e996ccbd4d6b0bbea06ca" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classarrow_1_1dataset_1_1_default_partitioning_1ad6ce084ca2897002eb71ea27a15991f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_default_partitioning_1ad6ce084ca2897002eb71ea27a15991f6" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1dataset_1abbc0528fcaf8fe939da7b3784bb120d4" kindref="member">scalar</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning" kindref="compound">SegmentDictionaryPartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1a0ea6505878a28133de644b43cc7df9b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1a0ea6505878a28133de644b43cc7df9b7" kindref="member">SegmentDictionaryPartitioning</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;Expression&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema)),<sp/>dictionaries_(<ref refid="namespacestd" kindref="compound">std</ref>::move(dictionaries))<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1ae611ed9763db01e8728c263b95dad7c0" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1ae611ed9763db01e8728c263b95dad7c0" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;segment_dictionary&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/>Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144" refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1a1d5d2994520eee557e9393b20cf8ad7c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;Expression&gt;&gt;&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_segment_dictionary_partitioning_1a1d5d2994520eee557e9393b20cf8ad7c" kindref="member">dictionaries_</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classarrow_1_1dataset_1_1_key_value_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_key_value_partitioning" kindref="compound">KeyValuePartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153" refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref><sp/>{</highlight></codeline>
<codeline lineno="154" refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key_1aae4ae9cfcb4dc5e7e368c750b29bf6fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name,<sp/><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key_1aae4ae9cfcb4dc5e7e368c750b29bf6fc" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>VisitKeys(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref>&amp;<sp/>expr,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;<ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Scalar&gt;&amp;<sp/>value)&gt;&amp;<sp/>visitor);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SetDefaultValuesFromKeys(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref>&amp;<sp/>expr,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref>*<sp/>projector);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/>ConvertKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref>&amp;<sp/>key,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref>&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">util::optional&lt;Key&gt;</ref><sp/>ParseKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>FormatKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref>&amp;<sp/>expr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/>Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>Format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref>&amp;<sp/>expr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_1ae0ffcc236e1ad13f0e5f3da6a1b8770e" kindref="member">Partitioning::Partitioning</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classarrow_1_1dataset_1_1_directory_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_directory_partitioning" kindref="compound">DirectoryPartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_key_value_partitioning" kindref="compound">KeyValuePartitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192" refid="classarrow_1_1dataset_1_1_directory_partitioning_1a314acfd0db27194c529e5884b2e5c945" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_directory_partitioning_1a314acfd0db27194c529e5884b2e5c945" kindref="member">DirectoryPartitioning</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_key_value_partitioning" kindref="compound">KeyValuePartitioning</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema))<sp/>{}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classarrow_1_1dataset_1_1_directory_partitioning_1ad56559bf0912952469c2f7bab7365a1d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_directory_partitioning_1ad56559bf0912952469c2f7bab7365a1d" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;schema&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">util::optional&lt;Key&gt;</ref><sp/>ParseKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>FormatKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PartitioningFactory&gt;<sp/>MakeFactory(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>field_names);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classarrow_1_1dataset_1_1_hive_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_hive_partitioning" kindref="compound">HivePartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_key_value_partitioning" kindref="compound">KeyValuePartitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216" refid="classarrow_1_1dataset_1_1_hive_partitioning_1acbcf6134a49cd6c59d5c80a5a209cb4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_hive_partitioning_1acbcf6134a49cd6c59d5c80a5a209cb4d" kindref="member">HivePartitioning</ref>(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_key_value_partitioning" kindref="compound">KeyValuePartitioning</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema))<sp/>{}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classarrow_1_1dataset_1_1_hive_partitioning_1ac8729632a9681195f8c01ac58e2909b3" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_hive_partitioning_1ac8729632a9681195f8c01ac58e2909b3" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;hive&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classarrow_1_1dataset_1_1_hive_partitioning_1a2bf2005f3d78879fe75390ffe4fbe650" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">util::optional&lt;Key&gt;</ref><sp/><ref refid="classarrow_1_1dataset_1_1_hive_partitioning_1a2bf2005f3d78879fe75390ffe4fbe650" kindref="member">ParseKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseKey(segment);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>FormatKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">util::optional&lt;Key&gt;</ref><sp/>ParseKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PartitioningFactory&gt;<sp/>MakeFactory();</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classarrow_1_1dataset_1_1_function_partitioning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_function_partitioning" kindref="compound">FunctionPartitioning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235" refid="classarrow_1_1dataset_1_1_function_partitioning_1ae5561c1be974a07f650d7883a4a183ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_function_partitioning_1ae5561c1be974a07f650d7883a4a183ad" kindref="member">FunctionPartitioning</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt;std::shared_ptr&lt;Expression&gt;&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>impl,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning" kindref="compound">Partitioning</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema)),<sp/>impl_(<ref refid="namespacestd" kindref="compound">std</ref>::move(impl)),<sp/>name_(<ref refid="namespacestd" kindref="compound">std</ref>::move(name))<sp/>{}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classarrow_1_1dataset_1_1_function_partitioning_1a392a407e50f8e0d5ead69be21edfa435" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1dataset_1_1_function_partitioning_1a392a407e50f8e0d5ead69be21edfa435" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classarrow_1_1dataset_1_1_function_partitioning_1ae096dd91b48bc7dfe13500f0f063e5e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Expression&gt;</ref>&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_function_partitioning_1ae096dd91b48bc7dfe13500f0f063e5e2" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>segment,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl_(segment,<sp/>i);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>std::function&lt;Result&lt;std::shared_ptr&lt;Expression&gt;&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/>int)&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>std::string<sp/>name_;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(bkietz)<sp/>use<sp/>RE2<sp/>and<sp/>named<sp/>groups<sp/>to<sp/>provide<sp/>RegexpPartitioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classarrow_1_1dataset_1_1_partitioning_or_factory" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2dataset_2visibility_8h_1a8dd8d57cd1ce7b38ce34aa040b68a6b7" kindref="member">ARROW_DS_EXPORT</ref><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory" kindref="compound">PartitioningOrFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a17e7ae8f3ea4602bddceead319c5eb4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a17e7ae8f3ea4602bddceead319c5eb4f" kindref="member">PartitioningOrFactory</ref>(std::shared_ptr&lt;Partitioning&gt;<sp/>partitioning)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>variant_(<ref refid="namespacestd" kindref="compound">std</ref>::move(partitioning))<sp/>{}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1aabe5e086b3dd1fe3436b55625283ea86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1aabe5e086b3dd1fe3436b55625283ea86" kindref="member">PartitioningOrFactory</ref>(std::shared_ptr&lt;PartitioningFactory&gt;<sp/>factory)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>variant_(<ref refid="namespacestd" kindref="compound">std</ref>::move(factory))<sp/>{}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a4bb912933d133f991f560996cbcdc20a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory" kindref="compound">PartitioningOrFactory</ref>&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a4bb912933d133f991f560996cbcdc20a" kindref="member">operator=</ref>(std::shared_ptr&lt;Partitioning&gt;<sp/>partitioning)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>variant_<sp/>=<sp/>std::move(partitioning);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a4a57e3c408ac5049e81e6e35bf22a561" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory" kindref="compound">PartitioningOrFactory</ref>&amp;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a4a57e3c408ac5049e81e6e35bf22a561" kindref="member">operator=</ref>(std::shared_ptr&lt;PartitioningFactory&gt;<sp/>factory)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>variant_<sp/>=<sp/>std::move(factory);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a6b4c1e90272bed91df6106fef554c100" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Partitioning&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a6b4c1e90272bed91df6106fef554c100" kindref="member">partitioning</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util::holds_alternative&lt;std::shared_ptr&lt;Partitioning&gt;&gt;(variant_))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util::get&lt;std::shared_ptr&lt;Partitioning&gt;&gt;(variant_);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a770d1cb64aab3f83563458cd10d6f8b2" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;PartitioningFactory&gt;<sp/><ref refid="classarrow_1_1dataset_1_1_partitioning_or_factory_1a770d1cb64aab3f83563458cd10d6f8b2" kindref="member">factory</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util::holds_alternative&lt;std::shared_ptr&lt;PartitioningFactory&gt;&gt;(variant_))<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util::get&lt;std::shared_ptr&lt;PartitioningFactory&gt;&gt;(variant_);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>util::variant&lt;std::shared_ptr&lt;PartitioningFactory&gt;,<sp/>std::shared_ptr&lt;Partitioning&gt;&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>variant_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/dataset/partition.h"/>
  </compounddef>
</doxygen>
