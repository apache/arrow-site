<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_aggregate_unary_kernel" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::AggregateUnaryKernel</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_unary_kernel" prot="public" virt="non-virtual">arrow::compute::UnaryKernel</basecompoundref>
    <includes refid="aggregate_8h" local="no">arrow/compute/kernels/aggregate.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a6a78b27e0e5ea6163030b4acbd2d7cec" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1compute_1_1_aggregate_function" kindref="compound">AggregateFunction</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AggregateFunction&gt; arrow::compute::AggregateUnaryKernel::aggregate_function_</definition>
        <argsstring></argsstring>
        <name>aggregate_function_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="111" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a8abc17e316e215260c6796ead4bb1da7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::AggregateUnaryKernel::AggregateUnaryKernel</definition>
        <argsstring>(std::shared_ptr&lt; AggregateFunction &gt; &amp;aggregate)</argsstring>
        <name>AggregateUnaryKernel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1compute_1_1_aggregate_function" kindref="compound">AggregateFunction</ref> &gt; &amp;</type>
          <declname>aggregate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="103" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" bodystart="103" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_unary_kernel_1ac3c2944722b872e9f852bca0d6b06966" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::AggregateUnaryKernel::Call</definition>
        <argsstring>(FunctionContext *ctx, const Datum &amp;input, Datum *out) override</argsstring>
        <name>Call</name>
        <reimplements refid="classarrow_1_1compute_1_1_unary_kernel_1af48ca34480cf7b1b2817f06db33dccd7">Call</reimplements>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Executes the kernel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The function context for the kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>The kernel input data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the function. Each implementation of this function might assume different things about the existing contents of out (e.g. which buffers are preallocated). In the future it is expected that there will be a more generic mechanism for understanding the necessary contracts. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a98da7996286bf51c7a90f16c3d5d5a9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::AggregateUnaryKernel::out_type</definition>
        <argsstring>() const override</argsstring>
        <name>out_type</name>
        <reimplements refid="classarrow_1_1compute_1_1_op_kernel_1a7c5f16b7acdba73640c9131e2cd04270">out_type</reimplements>
        <briefdescription>
<para>EXPERIMENTAL The output data type of the kernel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1compute_1_1_unary_kernel" kindref="compound">UnaryKernel</ref> implemented by an AggregateState. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="62">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="60">
        <label>arrow::compute::AggregateUnaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_unary_kernel"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>arrow::compute::UnaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_unary_kernel"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="65">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="63">
        <label>arrow::compute::AggregateUnaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_aggregate_unary_kernel"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>arrow::compute::UnaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_unary_kernel"/>
        <childnode refid="65" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" line="101" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/aggregate.h" bodystart="101" bodyend="112"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a6a78b27e0e5ea6163030b4acbd2d7cec" prot="private" virt="non-virtual"><scope>arrow::compute::AggregateUnaryKernel</scope><name>aggregate_function_</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a8abc17e316e215260c6796ead4bb1da7" prot="public" virt="non-virtual"><scope>arrow::compute::AggregateUnaryKernel</scope><name>AggregateUnaryKernel</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_unary_kernel_1ac3c2944722b872e9f852bca0d6b06966" prot="public" virt="virtual"><scope>arrow::compute::AggregateUnaryKernel</scope><name>Call</name></member>
      <member refid="classarrow_1_1compute_1_1_aggregate_unary_kernel_1a98da7996286bf51c7a90f16c3d5d5a9d" prot="public" virt="virtual"><scope>arrow::compute::AggregateUnaryKernel</scope><name>out_type</name></member>
      <member refid="classarrow_1_1compute_1_1_op_kernel_1a640d7e2c51722436ed428013dabb63d3" prot="public" virt="virtual"><scope>arrow::compute::AggregateUnaryKernel</scope><name>~OpKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
