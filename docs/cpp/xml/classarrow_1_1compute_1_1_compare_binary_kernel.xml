<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_compare_binary_kernel" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::CompareBinaryKernel</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_binary_kernel" prot="public" virt="non-virtual">arrow::compute::BinaryKernel</basecompoundref>
    <includes refid="compute_2kernels_2compare_8h" local="no">arrow/compute/kernels/compare.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_compare_binary_kernel_1a6b73e3be4e0ca90a6ec6e05dbbcd71f6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1compute_1_1_compare_function" kindref="compound">CompareFunction</ref> &gt;</type>
        <definition>std::shared_ptr&lt;CompareFunction&gt; arrow::compute::CompareBinaryKernel::compare_function_</definition>
        <argsstring></argsstring>
        <name>compare_function_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="94" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/compare.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_compare_binary_kernel_1a5b2999a4299e2652fc066456430ca8b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::CompareBinaryKernel::CompareBinaryKernel</definition>
        <argsstring>(std::shared_ptr&lt; CompareFunction &gt; &amp;select)</argsstring>
        <name>CompareBinaryKernel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1compute_1_1_compare_function" kindref="compound">CompareFunction</ref> &gt; &amp;</type>
          <declname>select</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="78" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/compare.h" bodystart="78" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_compare_binary_kernel_1a8626ee1f1f25a2cf465df5c10f8fd687" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::CompareBinaryKernel::Call</definition>
        <argsstring>(FunctionContext *ctx, const Datum &amp;left, const Datum &amp;right, Datum *out) override</argsstring>
        <name>Call</name>
        <reimplements refid="classarrow_1_1compute_1_1_binary_kernel_1a14dc9caa940f7992faa0bac221ac95dd">Call</reimplements>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_compare_binary_kernel_1a3316dab6813588b88d23f6db40c2e3d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::CompareBinaryKernel::out_type</definition>
        <argsstring>() const override</argsstring>
        <name>out_type</name>
        <reimplements refid="classarrow_1_1compute_1_1_op_kernel_1a7c5f16b7acdba73640c9131e2cd04270">out_type</reimplements>
        <briefdescription>
<para>EXPERIMENTAL The output data type of the kernel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_compare_binary_kernel_1a8e64865c29c8decf81e422e24ea9c930" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t arrow::compute::CompareBinaryKernel::out_length</definition>
        <argsstring>(const Datum &amp;left, const Datum &amp;right)</argsstring>
        <name>out_length</name>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="84" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/compare.h" bodystart="84" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1compute_1_1_binary_kernel" kindref="compound">BinaryKernel</ref> bound to a select function. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="686">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="685">
        <label>arrow::compute::BinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_binary_kernel"/>
        <childnode refid="686" relation="public-inheritance">
        </childnode>
      </node>
      <node id="684">
        <label>arrow::compute::CompareBinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_compare_binary_kernel"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="689">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="688">
        <label>arrow::compute::BinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_binary_kernel"/>
        <childnode refid="689" relation="public-inheritance">
        </childnode>
      </node>
      <node id="687">
        <label>arrow::compute::CompareBinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_compare_binary_kernel"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/compare.h" line="76" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/compare.h" bodystart="76" bodyend="95"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_compare_binary_kernel_1a8626ee1f1f25a2cf465df5c10f8fd687" prot="public" virt="virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>Call</name></member>
      <member refid="classarrow_1_1compute_1_1_compare_binary_kernel_1a6b73e3be4e0ca90a6ec6e05dbbcd71f6" prot="private" virt="non-virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>compare_function_</name></member>
      <member refid="classarrow_1_1compute_1_1_compare_binary_kernel_1a5b2999a4299e2652fc066456430ca8b6" prot="public" virt="non-virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>CompareBinaryKernel</name></member>
      <member refid="classarrow_1_1compute_1_1_compare_binary_kernel_1a8e64865c29c8decf81e422e24ea9c930" prot="public" virt="non-virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>out_length</name></member>
      <member refid="classarrow_1_1compute_1_1_compare_binary_kernel_1a3316dab6813588b88d23f6db40c2e3d1" prot="public" virt="virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>out_type</name></member>
      <member refid="classarrow_1_1compute_1_1_op_kernel_1a640d7e2c51722436ed428013dabb63d3" prot="public" virt="virtual"><scope>arrow::compute::CompareBinaryKernel</scope><name>~OpKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
