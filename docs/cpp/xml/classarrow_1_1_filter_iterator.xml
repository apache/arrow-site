<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_filter_iterator" kind="class" language="C++" prot="public">
    <compoundname>arrow::FilterIterator</compoundname>
    <includes refid="iterator_8h" local="no">arrow/util/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename Fn</type>
      </param>
      <param>
        <type>typename I</type>
        <defval>typename std::remove_pointer&lt;internal::call_traits::argument_type&lt;0, Fn&gt;&gt;::type</defval>
      </param>
      <param>
        <type>typename O</type>
        <defval>typename std::remove_pointer&lt;internal::call_traits::argument_type&lt;1, Fn&gt;&gt;::type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_filter_iterator_1acd7013a005f15f54a7f901fe4a579c67" prot="private" static="no" mutable="no">
        <type>Fn</type>
        <definition>Fn arrow::FilterIterator&lt; Fn, I, O &gt;::filter_</definition>
        <argsstring></argsstring>
        <name>filter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="355" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_filter_iterator_1a0501fc0fef94ecc97b66b341ee92e74c" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; I &gt;</type>
        <definition>Iterator&lt;I&gt; arrow::FilterIterator&lt; Fn, I, O &gt;::it_</definition>
        <argsstring></argsstring>
        <name>it_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="356" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_filter_iterator_1a8fe513fc6c90add9f7b071f262c6b61b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::FilterIterator&lt; Fn, I, O &gt;::FilterIterator</definition>
        <argsstring>(Fn filter, Iterator&lt; I &gt; it)</argsstring>
        <name>FilterIterator</name>
        <param>
          <type>Fn</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; I &gt;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="334" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="334" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_filter_iterator_1a4cae82a71c4a481b7311c2cd4173f102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::FilterIterator&lt; Fn, I, O &gt;::Next</definition>
        <argsstring>(O *out)</argsstring>
        <name>Next</name>
        <param>
          <type>O *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="337" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="337" bodyend="352"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Like <ref refid="classarrow_1_1_map_iterator" kindref="compound">MapIterator</ref>, but where the function can fail or reject elements. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/iterator.h" line="332" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="332" bodyend="357"/>
    <listofallmembers>
      <member refid="classarrow_1_1_filter_iterator_1acd7013a005f15f54a7f901fe4a579c67" prot="private" virt="non-virtual"><scope>arrow::FilterIterator</scope><name>filter_</name></member>
      <member refid="classarrow_1_1_filter_iterator_1a8fe513fc6c90add9f7b071f262c6b61b" prot="public" virt="non-virtual"><scope>arrow::FilterIterator</scope><name>FilterIterator</name></member>
      <member refid="classarrow_1_1_filter_iterator_1a0501fc0fef94ecc97b66b341ee92e74c" prot="private" virt="non-virtual"><scope>arrow::FilterIterator</scope><name>it_</name></member>
      <member refid="classarrow_1_1_filter_iterator_1a4cae82a71c4a481b7311c2cd4173f102" prot="public" virt="non-virtual"><scope>arrow::FilterIterator</scope><name>Next</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
