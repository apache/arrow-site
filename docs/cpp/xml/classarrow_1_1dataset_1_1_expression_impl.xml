<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_expression_impl" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::ExpressionImpl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Base</basecompoundref>
    <includes refid="arrow_2dataset_2filter_8h" local="no">arrow/dataset/filter.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Base</declname>
        <defname>Base</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
      <param>
        <type><ref refid="structarrow_1_1dataset_1_1_expression_type_1aa055f8b51338c1fa7f7dda520053b4d5" kindref="member">ExpressionType::type</ref></type>
        <declname>E</declname>
        <defname>E</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_expression_impl_1ac0d20822c852c91a7954643d2046ace9" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structarrow_1_1dataset_1_1_expression_type_1aa055f8b51338c1fa7f7dda520053b4d5" kindref="member">ExpressionType::type</ref></type>
        <definition>constexpr ExpressionType::type arrow::dataset::ExpressionImpl&lt; Base, Derived, E &gt;::expression_type</definition>
        <argsstring></argsstring>
        <name>expression_type</name>
        <initializer>= E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="216" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_expression_impl_1a42fa4e97b34c43391b6babb001c3634c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>arrow::dataset::ExpressionImpl&lt; Base, Derived, E &gt;::ExpressionImpl</definition>
        <argsstring>(A0 &amp;&amp;arg0, A &amp;&amp;... args)</argsstring>
        <name>ExpressionImpl</name>
        <param>
          <type>A0 &amp;&amp;</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>A &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="219" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="219" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_expression_impl_1a6efe2a97203c4253061884774b261fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Expression&gt; arrow::dataset::ExpressionImpl&lt; Base, Derived, E &gt;::Copy</definition>
        <argsstring>() const override</argsstring>
        <name>Copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="222" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class which implements Copy and forwards construction. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1492">
        <label>Base</label>
      </node>
      <node id="1491">
        <label>arrow::dataset::ExpressionImpl&lt; Base, Derived, E &gt;</label>
        <link refid="classarrow_1_1dataset_1_1_expression_impl"/>
        <childnode refid="1492" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1494">
        <label>Base</label>
      </node>
      <node id="1493">
        <label>arrow::dataset::ExpressionImpl&lt; Base, Derived, E &gt;</label>
        <link refid="classarrow_1_1dataset_1_1_expression_impl"/>
        <childnode refid="1494" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="214" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="214" bodyend="225"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_expression_impl_1a6efe2a97203c4253061884774b261fa7" prot="public" virt="non-virtual"><scope>arrow::dataset::ExpressionImpl</scope><name>Copy</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_impl_1ac0d20822c852c91a7954643d2046ace9" prot="public" virt="non-virtual"><scope>arrow::dataset::ExpressionImpl</scope><name>expression_type</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_impl_1a42fa4e97b34c43391b6babb001c3634c" prot="public" virt="non-virtual"><scope>arrow::dataset::ExpressionImpl</scope><name>ExpressionImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
