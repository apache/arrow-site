<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_scanner" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::Scanner</compoundname>
    <derivedcompoundref refid="classparquet_1_1_typed_scanner" prot="public" virt="non-virtual">parquet::TypedScanner&lt; DType &gt;</derivedcompoundref>
    <includes refid="column__scanner_8h" local="no">parquet/column_scanner.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classparquet_1_1_scanner_1a21648d45b89d30755fd87ced6091c86e" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::Scanner::batch_size_</definition>
        <argsstring></argsstring>
        <name>batch_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="73" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1a99d531a9f73c66f0f3f4441c9a80fc35" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int16_t &gt;</type>
        <definition>std::vector&lt;int16_t&gt; parquet::Scanner::def_levels_</definition>
        <argsstring></argsstring>
        <name>def_levels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="75" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1aa37a305b04092e670c921520a82a00b5" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int16_t &gt;</type>
        <definition>std::vector&lt;int16_t&gt; parquet::Scanner::rep_levels_</definition>
        <argsstring></argsstring>
        <name>rep_levels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="76" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1a62d61605383341c6b97ad2e6dfab6f39" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::Scanner::level_offset_</definition>
        <argsstring></argsstring>
        <name>level_offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="77" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1ac30a31477cff1b595b2c89a387895ceb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::Scanner::levels_buffered_</definition>
        <argsstring></argsstring>
        <name>levels_buffered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="78" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1addbc3b8b0e56d4fb48fb457e9a09def6" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="namespaceparquet_1a1c3b994581f3fc6e9842eb902ef7916f" kindref="member">ResizableBuffer</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ResizableBuffer&gt; parquet::Scanner::value_buffer_</definition>
        <argsstring></argsstring>
        <name>value_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="80" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1ae82b669fa5d36806b638f500174e8ba4" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int parquet::Scanner::value_offset_</definition>
        <argsstring></argsstring>
        <name>value_offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="81" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1ac573288280768558be10a3230550f9a3" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::Scanner::values_buffered_</definition>
        <argsstring></argsstring>
        <name>values_buffered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="82" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_scanner_1ad5dff576a1eafc1c6bf5f419871d520b" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ColumnReader&gt; parquet::Scanner::reader_</definition>
        <argsstring></argsstring>
        <name>reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="83" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_scanner_1ab8c41bcaacf2a85c91fec5ce112cd28c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::Scanner::Scanner</definition>
        <argsstring>(std::shared_ptr&lt; ColumnReader &gt; reader, int64_t batch_size=DEFAULT_SCANNER_BATCH_SIZE, ::arrow::MemoryPool *pool=::arrow::default_memory_pool())</argsstring>
        <name>Scanner</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> &gt;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
          <defval>DEFAULT_SCANNER_BATCH_SIZE</defval>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="41" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="41" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1ab5d1a0e88092ac828e90ce0678b127b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::Scanner::~Scanner</definition>
        <argsstring>()</argsstring>
        <name>~Scanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="55" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1a35f46a19982647c9e7cad2528b4d46c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::Scanner::PrintNext</definition>
        <argsstring>(std::ostream &amp;out, int width, bool with_levels=false)=0</argsstring>
        <name>PrintNext</name>
        <reimplementedby refid="classparquet_1_1_typed_scanner_1a3a375e9e675a0183bc8dd4c743466eee">PrintNext</reimplementedby>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_levels</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1afe85dc1bc7859a8e0b5c8cfd79e52083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::Scanner::HasNext</definition>
        <argsstring>()</argsstring>
        <name>HasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="64" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1a78e33590d14008fb407acfad430ce013" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
        <definition>const ColumnDescriptor* parquet::Scanner::descr</definition>
        <argsstring>() const</argsstring>
        <name>descr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="66" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1a7592811a80284998bdc23c043f2995db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::Scanner::batch_size</definition>
        <argsstring>() const</argsstring>
        <name>batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="68" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_scanner_1ac499d6423adc56c56b268044800cb3ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::Scanner::SetBatchSize</definition>
        <argsstring>(int64_t batch_size)</argsstring>
        <name>SetBatchSize</name>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="70" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_scanner_1a3e53c018819d4e00f21c3ab31b881efe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_scanner" kindref="compound">Scanner</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;Scanner&gt; parquet::Scanner::Make</definition>
        <argsstring>(std::shared_ptr&lt; ColumnReader &gt; col_reader, int64_t batch_size=DEFAULT_SCANNER_BATCH_SIZE, ::arrow::MemoryPool *pool=::arrow::default_memory_pool())</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_reader" kindref="compound">ColumnReader</ref> &gt;</type>
          <declname>col_reader</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
          <defval>DEFAULT_SCANNER_BATCH_SIZE</defval>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_scanner.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4050">
        <label>parquet::Scanner</label>
        <link refid="classparquet_1_1_scanner"/>
      </node>
      <node id="4051">
        <label>parquet::TypedScanner&lt; DType &gt;</label>
        <link refid="classparquet_1_1_typed_scanner"/>
        <childnode refid="4050" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/parquet/column_scanner.h" line="39" column="1" bodyfile="/arrow/cpp/src/parquet/column_scanner.h" bodystart="39" bodyend="84"/>
    <listofallmembers>
      <member refid="classparquet_1_1_scanner_1a7592811a80284998bdc23c043f2995db" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>batch_size</name></member>
      <member refid="classparquet_1_1_scanner_1a21648d45b89d30755fd87ced6091c86e" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>batch_size_</name></member>
      <member refid="classparquet_1_1_scanner_1a99d531a9f73c66f0f3f4441c9a80fc35" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>def_levels_</name></member>
      <member refid="classparquet_1_1_scanner_1a78e33590d14008fb407acfad430ce013" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>descr</name></member>
      <member refid="classparquet_1_1_scanner_1afe85dc1bc7859a8e0b5c8cfd79e52083" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>HasNext</name></member>
      <member refid="classparquet_1_1_scanner_1a62d61605383341c6b97ad2e6dfab6f39" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>level_offset_</name></member>
      <member refid="classparquet_1_1_scanner_1ac30a31477cff1b595b2c89a387895ceb" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>levels_buffered_</name></member>
      <member refid="classparquet_1_1_scanner_1a3e53c018819d4e00f21c3ab31b881efe" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>Make</name></member>
      <member refid="classparquet_1_1_scanner_1a35f46a19982647c9e7cad2528b4d46c6" prot="public" virt="pure-virtual"><scope>parquet::Scanner</scope><name>PrintNext</name></member>
      <member refid="classparquet_1_1_scanner_1ad5dff576a1eafc1c6bf5f419871d520b" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>reader_</name></member>
      <member refid="classparquet_1_1_scanner_1aa37a305b04092e670c921520a82a00b5" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>rep_levels_</name></member>
      <member refid="classparquet_1_1_scanner_1ab8c41bcaacf2a85c91fec5ce112cd28c" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>Scanner</name></member>
      <member refid="classparquet_1_1_scanner_1ac499d6423adc56c56b268044800cb3ad" prot="public" virt="non-virtual"><scope>parquet::Scanner</scope><name>SetBatchSize</name></member>
      <member refid="classparquet_1_1_scanner_1addbc3b8b0e56d4fb48fb457e9a09def6" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>value_buffer_</name></member>
      <member refid="classparquet_1_1_scanner_1ae82b669fa5d36806b638f500174e8ba4" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>value_offset_</name></member>
      <member refid="classparquet_1_1_scanner_1ac573288280768558be10a3230550f9a3" prot="protected" virt="non-virtual"><scope>parquet::Scanner</scope><name>values_buffered_</name></member>
      <member refid="classparquet_1_1_scanner_1ab5d1a0e88092ac828e90ce0678b127b2" prot="public" virt="virtual"><scope>parquet::Scanner</scope><name>~Scanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
