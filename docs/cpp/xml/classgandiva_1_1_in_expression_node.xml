<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_in_expression_node" kind="class" language="C++" prot="public">
    <compoundname>gandiva::InExpressionNode</compoundname>
    <basecompoundref refid="classgandiva_1_1_node" prot="public" virt="non-virtual">gandiva::Node</basecompoundref>
    <includes refid="node_8h" local="no">gandiva/node.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Type</declname>
        <defname>Type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_in_expression_node_1a0a77be94b620edfac7eed9a97571053f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref></type>
        <definition>NodePtr gandiva::InExpressionNode&lt; Type &gt;::eval_expr_</definition>
        <argsstring></argsstring>
        <name>eval_expr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="251" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_in_expression_node_1afbc2215cd28c62fb248ceaba6582a7ce" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; Type &gt;</type>
        <definition>std::unordered_set&lt;Type&gt; gandiva::InExpressionNode&lt; Type &gt;::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="252" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_in_expression_node_1a99d94facad207b1bfba01093c86355b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::InExpressionNode&lt; Type &gt;::InExpressionNode</definition>
        <argsstring>(NodePtr eval_expr, const std::unordered_set&lt; Type &gt; &amp;values)</argsstring>
        <name>InExpressionNode</name>
        <param>
          <type><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref></type>
          <declname>eval_expr</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; Type &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="225" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="225" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_in_expression_node_1ab3a444bb2db7d33a981e9bd17d5aeea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref> &amp;</type>
        <definition>const NodePtr&amp; gandiva::InExpressionNode&lt; Type &gt;::eval_expr</definition>
        <argsstring>() const</argsstring>
        <name>eval_expr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="228" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_in_expression_node_1a112c5a04d56d5b008ca6f9a01e727d68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::unordered_set&lt; Type &gt; &amp;</type>
        <definition>const std::unordered_set&lt;Type&gt;&amp; gandiva::InExpressionNode&lt; Type &gt;::values</definition>
        <argsstring>() const</argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="230" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_in_expression_node_1a985fe871e65dfc2cc7dca67a360ad134" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::InExpressionNode&lt; Type &gt;::Accept</definition>
        <argsstring>(NodeVisitor &amp;visitor) const override</argsstring>
        <name>Accept</name>
        <reimplements refid="classgandiva_1_1_node_1a07a1ab1f2c7f363bdd27cbba8387ffa3">Accept</reimplements>
        <param>
          <type><ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Derived classes should simply invoke the Visit api of the visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="232" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_in_expression_node_1a14c1821c4994f69ad7688ccbd6f28a8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string gandiva::InExpressionNode&lt; Type &gt;::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classgandiva_1_1_node_1a7e458c306e2162546c96a9c8eea0eef6">ToString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="234" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="234" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref> in expression tree, representing an in expression. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2264">
        <label>gandiva::InExpressionNode&lt; Type &gt;</label>
        <link refid="classgandiva_1_1_in_expression_node"/>
        <childnode refid="2265" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2265">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2266">
        <label>gandiva::InExpressionNode&lt; Type &gt;</label>
        <link refid="classgandiva_1_1_in_expression_node"/>
        <childnode refid="2267" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2267">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/node.h" line="223" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="223" bodyend="253"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_in_expression_node_1a985fe871e65dfc2cc7dca67a360ad134" prot="public" virt="virtual"><scope>gandiva::InExpressionNode</scope><name>Accept</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1ab3a444bb2db7d33a981e9bd17d5aeea4" prot="public" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>eval_expr</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1a0a77be94b620edfac7eed9a97571053f" prot="private" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>eval_expr_</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1a99d94facad207b1bfba01093c86355b5" prot="public" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>InExpressionNode</name></member>
      <member refid="classgandiva_1_1_node_1abb254ba06af6ededc023d840cb4ae4ca" prot="public" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>Node</name></member>
      <member refid="classgandiva_1_1_node_1ab196d58f5e486a054ff5d49e1d932e83" prot="public" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>return_type</name></member>
      <member refid="classgandiva_1_1_node_1a01cea0ee791882a488f56df5780874df" prot="protected" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>return_type_</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1a14c1821c4994f69ad7688ccbd6f28a8d" prot="public" virt="virtual"><scope>gandiva::InExpressionNode</scope><name>ToString</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1a112c5a04d56d5b008ca6f9a01e727d68" prot="public" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>values</name></member>
      <member refid="classgandiva_1_1_in_expression_node_1afbc2215cd28c62fb248ceaba6582a7ce" prot="private" virt="non-virtual"><scope>gandiva::InExpressionNode</scope><name>values_</name></member>
      <member refid="classgandiva_1_1_node_1a8bddcf2654584db4ea12ac393a87b0d3" prot="public" virt="virtual"><scope>gandiva::InExpressionNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
