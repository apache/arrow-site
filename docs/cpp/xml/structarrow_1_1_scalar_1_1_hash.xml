<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_scalar_1_1_hash" kind="struct" language="C++" prot="public">
    <compoundname>arrow::Scalar::Hash</compoundname>
    <includes refid="scalar_8h" local="no">arrow/scalar.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1_scalar_1_1_hash_1a8f85466ecc49b75380f381a12a788fa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arrow::Scalar::Hash::operator()</definition>
        <argsstring>(const Scalar &amp;scalar) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_scalar_1_1_hash_1af78957b57cd635e770e8be72997e721a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arrow::Scalar::Hash::operator()</definition>
        <argsstring>(const std::shared_ptr&lt; Scalar &gt; &amp;scalar) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="66" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1_scalar_1_1_hash_1ab3dde57b695f50311748f6474b520916" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t arrow::Scalar::Hash::hash</definition>
        <argsstring>(const Scalar &amp;scalar)</argsstring>
        <name>hash</name>
        <param>
          <type>const <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/scalar.h" line="63" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="63" bodyend="71"/>
    <listofallmembers>
      <member refid="structarrow_1_1_scalar_1_1_hash_1ab3dde57b695f50311748f6474b520916" prot="public" virt="non-virtual"><scope>arrow::Scalar::Hash</scope><name>hash</name></member>
      <member refid="structarrow_1_1_scalar_1_1_hash_1a8f85466ecc49b75380f381a12a788fa1" prot="public" virt="non-virtual"><scope>arrow::Scalar::Hash</scope><name>operator()</name></member>
      <member refid="structarrow_1_1_scalar_1_1_hash_1af78957b57cd635e770e8be72997e721a" prot="public" virt="non-virtual"><scope>arrow::Scalar::Hash</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
