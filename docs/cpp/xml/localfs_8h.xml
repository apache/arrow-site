<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="localfs_8h" kind="file" language="C++">
    <compoundname>localfs.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="filesystem_8h" local="yes">arrow/filesystem/filesystem.h</includes>
    <includedby refid="filesystem_2api_8h" local="yes">/arrow/cpp/src/arrow/filesystem/api.h</includedby>
    <incdepgraph>
      <node id="7266">
        <label>arrow/util/windows_fixup.h</label>
        <link refid="windows__fixup_8h"/>
      </node>
      <node id="7264">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="7253" relation="include">
        </childnode>
        <childnode refid="7265" relation="include">
        </childnode>
        <childnode refid="7260" relation="include">
        </childnode>
        <childnode refid="7262" relation="include">
        </childnode>
      </node>
      <node id="7258">
        <label>cstdint</label>
      </node>
      <node id="7252">
        <label>/arrow/cpp/src/arrow/filesystem/localfs.h</label>
        <link refid="localfs_8h"/>
        <childnode refid="7253" relation="include">
        </childnode>
        <childnode refid="7254" relation="include">
        </childnode>
        <childnode refid="7255" relation="include">
        </childnode>
        <childnode refid="7256" relation="include">
        </childnode>
      </node>
      <node id="7261">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="7253" relation="include">
        </childnode>
        <childnode refid="7254" relation="include">
        </childnode>
        <childnode refid="7255" relation="include">
        </childnode>
        <childnode refid="7262" relation="include">
        </childnode>
        <childnode refid="7263" relation="include">
        </childnode>
      </node>
      <node id="7254">
        <label>string</label>
      </node>
      <node id="7263">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="7255">
        <label>vector</label>
      </node>
      <node id="7260">
        <label>utility</label>
      </node>
      <node id="7259">
        <label>iosfwd</label>
      </node>
      <node id="7257">
        <label>chrono</label>
      </node>
      <node id="7265">
        <label>type_traits</label>
      </node>
      <node id="7256">
        <label>arrow/filesystem/filesystem.h</label>
        <link refid="filesystem_8h"/>
        <childnode refid="7257" relation="include">
        </childnode>
        <childnode refid="7258" relation="include">
        </childnode>
        <childnode refid="7259" relation="include">
        </childnode>
        <childnode refid="7253" relation="include">
        </childnode>
        <childnode refid="7254" relation="include">
        </childnode>
        <childnode refid="7260" relation="include">
        </childnode>
        <childnode refid="7255" relation="include">
        </childnode>
        <childnode refid="7261" relation="include">
        </childnode>
        <childnode refid="7264" relation="include">
        </childnode>
        <childnode refid="7262" relation="include">
        </childnode>
        <childnode refid="7263" relation="include">
        </childnode>
        <childnode refid="7266" relation="include">
        </childnode>
      </node>
      <node id="7253">
        <label>memory</label>
      </node>
      <node id="7262">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="7258" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7267">
        <label>/arrow/cpp/src/arrow/filesystem/localfs.h</label>
        <link refid="localfs_8h"/>
        <childnode refid="7268" relation="include">
        </childnode>
      </node>
      <node id="7268">
        <label>/arrow/cpp/src/arrow/filesystem/api.h</label>
        <link refid="filesystem_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structarrow_1_1fs_1_1_local_file_system_options" prot="public">arrow::fs::LocalFileSystemOptions</innerclass>
    <innerclass refid="classarrow_1_1fs_1_1_local_file_system" prot="public">arrow::fs::LocalFileSystem</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1fs">arrow::fs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filesystem_8h" kindref="compound">arrow/filesystem/filesystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Uri;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structarrow_1_1fs_1_1_local_file_system_options" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structarrow_1_1fs_1_1_local_file_system_options_1adf61f0166aa9892516e11e4eaeb24c41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_mmap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref><sp/>Defaults();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;LocalFileSystemOptions&gt;</ref><sp/>FromUri(const<sp/>::arrow::internal::Uri&amp;<sp/>uri,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>out_path);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classarrow_1_1fs_1_1_local_file_system" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1fs_1_1_local_file_system" kindref="compound">LocalFileSystem</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">FileSystem</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1fs_1_1_local_file_system" kindref="compound">LocalFileSystem</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_local_file_system" kindref="compound">LocalFileSystem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref>&amp;);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1fs_1_1_local_file_system" kindref="compound">LocalFileSystem</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classarrow_1_1fs_1_1_local_file_system_1ac69df6e7c6c24408ffd169442691f9ca" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1fs_1_1_local_file_system_1ac69df6e7c6c24408ffd169442691f9ca" kindref="member">type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::string&gt;</ref><sp/>NormalizePath(std::string<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">FileSystem</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classarrow_1_1fs_1_1_local_file_system_1a824035eabb6e27cacf9eb55623ea226d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref><sp/><ref refid="classarrow_1_1fs_1_1_local_file_system_1a824035eabb6e27cacf9eb55623ea226d" kindref="member">options</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options_;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FileSystem::GetFileInfo;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;FileInfo&gt;</ref><sp/>GetFileInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::vector&lt;FileInfo&gt;</ref>&gt;<sp/>GetFileInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1fs_1_1_file_selector" kindref="compound">FileSelector</ref>&amp;<sp/>select)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CreateDir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DeleteDir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DeleteDirContents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DeleteFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Move(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dest)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CopyFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dest)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::InputStream&gt;</ref>&gt;<sp/>OpenInputStream(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::RandomAccessFile&gt;</ref>&gt;<sp/>OpenInputFile(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::OutputStream&gt;</ref>&gt;<sp/>OpenOutputStream(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::OutputStream&gt;</ref>&gt;<sp/>OpenAppendStream(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97" refid="classarrow_1_1fs_1_1_local_file_system_1ace6f2f95a9e5c77d5299b6a76560b541" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1fs_1_1_local_file_system_options" kindref="compound">LocalFileSystemOptions</ref><sp/><ref refid="classarrow_1_1fs_1_1_local_file_system_1ace6f2f95a9e5c77d5299b6a76560b541" kindref="member">options_</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>string<sp/>is<sp/>detected<sp/>as<sp/>a<sp/>local<sp/>absolute<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DetectAbsolutePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/filesystem/localfs.h"/>
  </compounddef>
</doxygen>
