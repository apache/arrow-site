<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_flight_data_stream" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::flight::FlightDataStream</compoundname>
    <derivedcompoundref refid="classarrow_1_1flight_1_1_record_batch_stream" prot="public" virt="non-virtual">arrow::flight::RecordBatchStream</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1py_1_1flight_1_1_py_flight_data_stream" prot="public" virt="non-virtual">arrow::py::flight::PyFlightDataStream</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1py_1_1flight_1_1_py_generator_flight_data_stream" prot="public" virt="non-virtual">arrow::py::flight::PyGeneratorFlightDataStream</derivedcompoundref>
    <includes refid="server_8h" local="no">arrow/flight/server.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_data_stream_1a6a581529349930f3fac82fa1cff7ee44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::flight::FlightDataStream::~FlightDataStream</definition>
        <argsstring>()</argsstring>
        <name>~FlightDataStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_data_stream_1a4f4e89928e508a0405622edbd584a82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Schema&gt; arrow::flight::FlightDataStream::schema</definition>
        <argsstring>()=0</argsstring>
        <name>schema</name>
        <reimplementedby refid="classarrow_1_1flight_1_1_record_batch_stream_1aaeec98eb19aee016775b681306292ac8">schema</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_flight_data_stream_1ad596d78bcfb40efcea3783f2a0139c30">schema</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_generator_flight_data_stream_1ac33a0d0ed663fe83774e6a4d41e2f804">schema</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_data_stream_1ac24218f540e244c11c97449c0bc19978" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::FlightDataStream::GetSchemaPayload</definition>
        <argsstring>(FlightPayload *payload)=0</argsstring>
        <name>GetSchemaPayload</name>
        <reimplementedby refid="classarrow_1_1flight_1_1_record_batch_stream_1aa2f4d76e34bd384d1b8db10a1e0f22df">GetSchemaPayload</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_flight_data_stream_1a2900e1907517c903988cf55e4b9c183e">GetSchemaPayload</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_generator_flight_data_stream_1a1ee5477b979c5c22695abedeb277c453">GetSchemaPayload</reimplementedby>
        <param>
          <type><ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
<para>Compute <ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> containing serialized <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_flight_data_stream_1a445f9c7807ed210a7a1b6f9854763684" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::flight::FlightDataStream::Next</definition>
        <argsstring>(FlightPayload *payload)=0</argsstring>
        <name>Next</name>
        <reimplementedby refid="classarrow_1_1flight_1_1_record_batch_stream_1a732777ec0e59d82b073b3ade484b892d">Next</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_flight_data_stream_1af1eed66c86cff295642a162d2b56386d">Next</reimplementedby>
        <reimplementedby refid="classarrow_1_1py_1_1flight_1_1_py_generator_flight_data_stream_1a1fb5632beb5383d7c62167954392a6a0">Next</reimplementedby>
        <param>
          <type><ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref> *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface that produces a sequence of IPC payloads to be sent in FlightData protobuf messages. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1890">
        <label>arrow::py::flight::PyFlightDataStream</label>
        <link refid="classarrow_1_1py_1_1flight_1_1_py_flight_data_stream"/>
        <childnode refid="1888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1889">
        <label>arrow::flight::RecordBatchStream</label>
        <link refid="classarrow_1_1flight_1_1_record_batch_stream"/>
        <childnode refid="1888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1891">
        <label>arrow::py::flight::PyGeneratorFlightDataStream</label>
        <link refid="classarrow_1_1py_1_1flight_1_1_py_generator_flight_data_stream"/>
        <childnode refid="1888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1888">
        <label>arrow::flight::FlightDataStream</label>
        <link refid="classarrow_1_1flight_1_1_flight_data_stream"/>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/flight/server.h" line="49" column="1" bodyfile="/arrow/cpp/src/arrow/flight/server.h" bodystart="49" bodyend="61"/>
    <listofallmembers>
      <member refid="classarrow_1_1flight_1_1_flight_data_stream_1ac24218f540e244c11c97449c0bc19978" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightDataStream</scope><name>GetSchemaPayload</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_data_stream_1a445f9c7807ed210a7a1b6f9854763684" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightDataStream</scope><name>Next</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_data_stream_1a4f4e89928e508a0405622edbd584a82f" prot="public" virt="pure-virtual"><scope>arrow::flight::FlightDataStream</scope><name>schema</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_data_stream_1a6a581529349930f3fac82fa1cff7ee44" prot="public" virt="virtual"><scope>arrow::flight::FlightDataStream</scope><name>~FlightDataStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
