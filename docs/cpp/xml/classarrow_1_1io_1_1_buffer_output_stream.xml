<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_buffer_output_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::BufferOutputStream</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_output_stream" prot="public" virt="non-virtual">arrow::io::OutputStream</basecompoundref>
    <includes refid="io_2memory_8h" local="no">arrow/io/memory.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffer_output_stream_1a9c8a86a3797d9335b8df1378812b1fe2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ResizableBuffer&gt; arrow::io::BufferOutputStream::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="83" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffer_output_stream_1a58e845069d23f6760d6b16cd7263d727" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::io::BufferOutputStream::is_open_</definition>
        <argsstring></argsstring>
        <name>is_open_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="84" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffer_output_stream_1a49fd07b0e87944d774d83db9585e2826" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::io::BufferOutputStream::capacity_</definition>
        <argsstring></argsstring>
        <name>capacity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="85" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffer_output_stream_1a0e0c39fd79ca80d83b89e5201b0d805e" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::io::BufferOutputStream::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="86" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffer_output_stream_1a6afd7e987c5375b469015ce0993570a1" prot="private" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* arrow::io::BufferOutputStream::mutable_data_</definition>
        <argsstring></argsstring>
        <name>mutable_data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="87" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a5313cf91301ab2f3df3c8f7761e6de60" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::BufferOutputStream::BufferOutputStream</definition>
        <argsstring>(const std::shared_ptr&lt; ResizableBuffer &gt; &amp;buffer)</argsstring>
        <name>BufferOutputStream</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a01b1760a8dd18fb9013eb5cb156ee8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::BufferOutputStream::~BufferOutputStream</definition>
        <argsstring>() override</argsstring>
        <name>~BufferOutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1aae54be3eb7dcb37dabe7618623c52e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferOutputStream::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream, preserving the buffer (retrieve it with <ref refid="classarrow_1_1io_1_1_buffer_output_stream_1a2134ef7ac4fe7913f954e69929a7010a" kindref="member">Finish()</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1ab87ed9577b7ab013e072f98628d3def4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::BufferOutputStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a040dc81f53967d471cb8fad3b53fb088" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::BufferOutputStream::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a8e637f158713cbc254e714d83a5710d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferOutputStream::Write</definition>
        <argsstring>(const void *data, int64_t nbytes) override</argsstring>
        <name>Write</name>
        <reimplements refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d">Write</reimplements>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Write the given data to the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This method always processes the bytes in full. Depending on the semantics of the stream, the data may be written out immediately, held in a buffer, or written asynchronously. In the case where the stream buffers the data, it will be copied. To avoid potentially large copies, use the Write variant that takes an owned <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a2134ef7ac4fe7913f954e69929a7010a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::BufferOutputStream::Finish</definition>
        <argsstring>()</argsstring>
        <name>Finish</name>
        <briefdescription>
<para>Close the stream and return the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1ab091b19b1d87cfcc5586f7d31773a74d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferOutputStream::Reset</definition>
        <argsstring>(int64_t initial_capacity=1024, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Reset</name>
        <param>
          <type>int64_t</type>
          <declname>initial_capacity</declname>
          <defval>1024</defval>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Initialize state of <ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref> with newly allocated memory and set position to 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">initial_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the starting allocated capacity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>the memory pool to use for allocations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1aba8fe40847d143b6f69780db99d00cdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::io::BufferOutputStream::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="75" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a8e587b9472f17f89760aa1ea26c8bd6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_buffer_output_stream" kindref="compound">BufferOutputStream</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;BufferOutputStream&gt; &gt; arrow::io::BufferOutputStream::Create</definition>
        <argsstring>(int64_t initial_capacity=4096, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Create</name>
        <param>
          <type>int64_t</type>
          <declname>initial_capacity</declname>
          <defval>4096</defval>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Create in-memory output stream with indicated capacity using a memory pool. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">initial_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial allocated internal capacity of the <ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1a2e223871e01bf1ef7b3131e5c572fdec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::BufferOutputStream::BufferOutputStream</definition>
        <argsstring>()</argsstring>
        <name>BufferOutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffer_output_stream_1ad5a342b9ac61a12b1ecdb51d5894dea7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferOutputStream::Reserve</definition>
        <argsstring>(int64_t nbytes)</argsstring>
        <name>Reserve</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/memory.h" line="81" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An output stream that writes to a resizable buffer. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="476">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="477" relation="public-inheritance">
        </childnode>
        <childnode refid="478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="478">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="477">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="475">
        <label>arrow::io::BufferOutputStream</label>
        <link refid="classarrow_1_1io_1_1_buffer_output_stream"/>
        <childnode refid="476" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="480">
        <label>arrow::io::OutputStream</label>
        <link refid="classarrow_1_1io_1_1_output_stream"/>
        <childnode refid="481" relation="public-inheritance">
        </childnode>
        <childnode refid="482" relation="public-inheritance">
        </childnode>
      </node>
      <node id="482">
        <label>arrow::io::Writable</label>
        <link refid="classarrow_1_1io_1_1_writable"/>
      </node>
      <node id="481">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="479">
        <label>arrow::io::BufferOutputStream</label>
        <link refid="classarrow_1_1io_1_1_buffer_output_stream"/>
        <childnode refid="480" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/io/memory.h" line="38" column="1" bodyfile="/arrow/cpp/src/arrow/io/memory.h" bodystart="38" bodyend="88"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a9c8a86a3797d9335b8df1378812b1fe2" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>buffer_</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a5313cf91301ab2f3df3c8f7761e6de60" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>BufferOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a2e223871e01bf1ef7b3131e5c572fdec" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>BufferOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1aba8fe40847d143b6f69780db99d00cdd" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>capacity</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a49fd07b0e87944d774d83db9585e2826" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1aae54be3eb7dcb37dabe7618623c52e94" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1ab87ed9577b7ab013e072f98628d3def4" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a8e587b9472f17f89760aa1ea26c8bd6c" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>Create</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a2134ef7ac4fe7913f954e69929a7010a" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>Finish</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a06e513a551f68603013c1586ba8b939f" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>Flush</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a58e845069d23f6760d6b16cd7263d727" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>is_open_</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a6afd7e987c5375b469015ce0993570a1" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>mutable_data_</name></member>
      <member refid="classarrow_1_1io_1_1_output_stream_1a5b1e0adea7ef92368ddc07027995aca1" prot="protected" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>OutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a0e0c39fd79ca80d83b89e5201b0d805e" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>position_</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1ad5a342b9ac61a12b1ecdb51d5894dea7" prot="private" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1ab091b19b1d87cfcc5586f7d31773a74d" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>Reset</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a040dc81f53967d471cb8fad3b53fb088" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a8e637f158713cbc254e714d83a5710d9" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a048bbc5e85b1d739bc49c57553e85069" prot="public" virt="virtual" ambiguityscope="arrow::io::OutputStream::"><scope>arrow::io::BufferOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1a00ee30dff05bda7526c91e594a9607e7" prot="public" virt="non-virtual" ambiguityscope="arrow::io::OutputStream::"><scope>arrow::io::BufferOutputStream</scope><name>Write</name></member>
      <member refid="classarrow_1_1io_1_1_buffer_output_stream_1a01b1760a8dd18fb9013eb5cb156ee8d1" prot="public" virt="non-virtual"><scope>arrow::io::BufferOutputStream</scope><name>~BufferOutputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::BufferOutputStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_writable_1acc17343118544c62f14d62f538fa8592" prot="public" virt="virtual"><scope>arrow::io::BufferOutputStream</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
