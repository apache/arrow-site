<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_month_interval_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::MonthIntervalType</compoundname>
    <basecompoundref refid="classarrow_1_1_interval_type" prot="public" virt="non-virtual">arrow::IntervalType</basecompoundref>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_month_interval_type_1ac221a9de4c51cd6ce5c595ff41e9c125" prot="public" static="no">
        <type>int32_t</type>
        <definition>using arrow::MonthIntervalType::c_type =  int32_t</definition>
        <argsstring></argsstring>
        <name>c_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1240" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1_month_interval_type_1aa2a33eb0551cdc4948ea27a2bc66e33c" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref></type>
        <definition>constexpr Type::type arrow::MonthIntervalType::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44aaa546143f5b445f6478b7e157546ec3f" kindref="member">Type::INTERVAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1239" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1afad94e763adcf31fbf8a2853ca411509" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>static constexpr const char* arrow::MonthIntervalType::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1242" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1242" bodyend="1242"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1ae67aaa1e87c8be7a74045f42e89d3c03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_interval_type_1ae72a8a101c098ebf09ed0af253222ecc" kindref="member">IntervalType::type</ref></type>
        <definition>IntervalType::type arrow::MonthIntervalType::interval_type</definition>
        <argsstring>() const override</argsstring>
        <name>interval_type</name>
        <reimplements refid="classarrow_1_1_interval_type_1a53abb3bb8053105ce20e7999b49b55b6">interval_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1244" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1244" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1a643ee8ee770657cb42406d088215d095" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int arrow::MonthIntervalType::bit_width</definition>
        <argsstring>() const override</argsstring>
        <name>bit_width</name>
        <reimplements refid="classarrow_1_1_fixed_width_type_1ab802f3862719e7a8ff081a7dc679d215">bit_width</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1246" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1246" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1acad947ae1d4c0e82f2b9d5742c6ac7f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::MonthIntervalType::MonthIntervalType</definition>
        <argsstring>()</argsstring>
        <name>MonthIntervalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1248" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1248" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1a9445bb7993a337e558e0101c8784dd87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::MonthIntervalType::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classarrow_1_1_data_type_1a944727354fb11138ebd46368319598f2">ToString</reimplements>
        <briefdescription>
<para>A string representation of the type, including any children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1250" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1250" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_month_interval_type_1a49fe7c14ff4077443815fc88709711be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::MonthIntervalType::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classarrow_1_1_data_type_1a94985d12273f5dd353d6142921299d4d">name</reimplements>
        <briefdescription>
<para>A string name of the type, omitting any child fields. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental API </para></simplesect>
<simplesect kind="since"><para>0.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="1251" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1251" bodyend="1251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a number of months. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="structarrow_1_1_type" kindref="compound">Type</ref> representing a number of months. Corresponds to YearMonth type in Schema.fbs (years are defined as 12 months). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3093">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="3091">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="3092" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3088">
        <label>arrow::IntervalType</label>
        <link refid="classarrow_1_1_interval_type"/>
        <childnode refid="3089" relation="public-inheritance">
        </childnode>
        <childnode refid="3093" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3092">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="3089">
        <label>arrow::TemporalType</label>
        <link refid="classarrow_1_1_temporal_type"/>
        <childnode refid="3090" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3090">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="3091" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3087">
        <label>arrow::MonthIntervalType</label>
        <link refid="classarrow_1_1_month_interval_type"/>
        <childnode refid="3088" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3100">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="3098">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="3099" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3095">
        <label>arrow::IntervalType</label>
        <link refid="classarrow_1_1_interval_type"/>
        <childnode refid="3096" relation="public-inheritance">
        </childnode>
        <childnode refid="3100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3099">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="3096">
        <label>arrow::TemporalType</label>
        <link refid="classarrow_1_1_temporal_type"/>
        <childnode refid="3097" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3097">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="3098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3094">
        <label>arrow::MonthIntervalType</label>
        <link refid="classarrow_1_1_month_interval_type"/>
        <childnode refid="3095" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/type.h" line="1237" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="1237" bodyend="1252"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_month_interval_type_1a643ee8ee770657cb42406d088215d095" prot="public" virt="virtual"><scope>arrow::MonthIntervalType</scope><name>bit_width</name></member>
      <member refid="classarrow_1_1_month_interval_type_1ac221a9de4c51cd6ce5c595ff41e9c125" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>c_type</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>children_</name></member>
      <member refid="classarrow_1_1_interval_type_1a9e5a8ca42252b272027928390eec4a80" prot="protected" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>DataType</name></member>
      <member refid="classarrow_1_1_interval_type_1ae72a8a101c098ebf09ed0af253222ecca5893bc3e913db19b82ce8e6c52b3c02f" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>DAY_TIME</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>id_</name></member>
      <member refid="classarrow_1_1_month_interval_type_1ae67aaa1e87c8be7a74045f42e89d3c03" prot="public" virt="virtual"><scope>arrow::MonthIntervalType</scope><name>interval_type</name></member>
      <member refid="classarrow_1_1_interval_type_1a91824bf640a08e541b84a50dacb26045" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>IntervalType</name></member>
      <member refid="classarrow_1_1_temporal_type_1a3765b88dae2be6093850dd40f785386b" prot="public" virt="virtual"><scope>arrow::MonthIntervalType</scope><name>layout</name></member>
      <member refid="classarrow_1_1_month_interval_type_1acad947ae1d4c0e82f2b9d5742c6ac7f2" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>MonthIntervalType</name></member>
      <member refid="classarrow_1_1_interval_type_1ae72a8a101c098ebf09ed0af253222eccaebf2d56ec2d1e87647e2880577559f3a" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>MONTHS</name></member>
      <member refid="classarrow_1_1_month_interval_type_1a49fe7c14ff4077443815fc88709711be" prot="public" virt="virtual"><scope>arrow::MonthIntervalType</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_month_interval_type_1a9445bb7993a337e558e0101c8784dd87" prot="public" virt="virtual"><scope>arrow::MonthIntervalType</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_interval_type_1ae72a8a101c098ebf09ed0af253222ecc" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>type</name></member>
      <member refid="classarrow_1_1_month_interval_type_1aa2a33eb0551cdc4948ea27a2bc66e33c" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>type_id</name></member>
      <member refid="classarrow_1_1_month_interval_type_1afad94e763adcf31fbf8a2853ca411509" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::MonthIntervalType</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
