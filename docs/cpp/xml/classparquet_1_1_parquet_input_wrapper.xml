<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_input_wrapper" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetInputWrapper</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_random_access_file" prot="public" virt="non-virtual">arrow::io::RandomAccessFile</basecompoundref>
    <includes refid="deprecated__io_8h" local="no">parquet/deprecated_io.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_input_wrapper_1a560a7cd28fb3ccfb32d0a8bed7a62bec" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RandomAccessSource&gt; parquet::ParquetInputWrapper::owned_source_</definition>
        <argsstring></argsstring>
        <name>owned_source_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="96" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_input_wrapper_1a1625cff12599af7a343dbea6e82dcd30" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref> *</type>
        <definition>RandomAccessSource* parquet::ParquetInputWrapper::source_</definition>
        <argsstring></argsstring>
        <name>source_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="97" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_parquet_input_wrapper_1aa72e531e7f26b2e5265d7513cde33923" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::ParquetInputWrapper::closed_</definition>
        <argsstring></argsstring>
        <name>closed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="98" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a6ab9fd892532037147b592f78076e58f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetInputWrapper::ParquetInputWrapper</definition>
        <argsstring>(std::unique_ptr&lt; RandomAccessSource &gt; source)</argsstring>
        <name>ParquetInputWrapper</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref> &gt;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a0016c663d03a3d16d9bca52446476ca3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetInputWrapper::ParquetInputWrapper</definition>
        <argsstring>(RandomAccessSource *source)</argsstring>
        <name>ParquetInputWrapper</name>
        <param>
          <type><ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1ac3c2706299685dc0c9f20fb0a059ee3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetInputWrapper::~ParquetInputWrapper</definition>
        <argsstring>() override</argsstring>
        <name>~ParquetInputWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a9a6e394c3acc11399a91f8fbd745ed90" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::ParquetInputWrapper::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream cleanly. </para>        </briefdescription>
        <detaileddescription>
<para>For writable streams, this will attempt to flush any pending data before releasing the underlying resource.</para><para>After <ref refid="classparquet_1_1_parquet_input_wrapper_1a9a6e394c3acc11399a91f8fbd745ed90" kindref="member">Close()</ref> is called, <ref refid="classparquet_1_1_parquet_input_wrapper_1afd51d816f391f5ba145596486bbd71f2" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a476bb7fa30873f47ab02f8c8deb7df32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; int64_t &gt;</type>
        <definition>::arrow::Result&lt;int64_t&gt; parquet::ParquetInputWrapper::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1afd51d816f391f5ba145596486bbd71f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool parquet::ParquetInputWrapper::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a9e05e3c492f292139655fb8f1f1a6840" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::ParquetInputWrapper::Seek</definition>
        <argsstring>(int64_t position) override</argsstring>
        <name>Seek</name>
        <reimplements refid="classarrow_1_1io_1_1_seekable_1a410ba0e0932dbcb939b570ee3c8c6d25">Seek</reimplements>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a0c80e8bc3d4a9c7b25480cd351922162" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; int64_t &gt;</type>
        <definition>::arrow::Result&lt;int64_t&gt; parquet::ParquetInputWrapper::Read</definition>
        <argsstring>(int64_t nbytes, void *out) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position into <computeroutput>out</computeroutput>. The number of bytes read is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a3e7d43d37e7a29109a9921a9b74ebb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; std::shared_ptr&lt; <ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref> &gt; &gt;</type>
        <definition>::arrow::Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; parquet::ParquetInputWrapper::Read</definition>
        <argsstring>(int64_t nbytes) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1aca2d005299c3af1092bedff34b5b015b">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position. Less bytes may be read if EOF is reached. This method updates the current file position.</para><para>In some cases (e.g. a memory-mapped file), this method may avoid a memory copy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a9724b9ee539f12c489fc61e1c093b097" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; std::shared_ptr&lt; <ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref> &gt; &gt;</type>
        <definition>::arrow::Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; parquet::ParquetInputWrapper::ReadAt</definition>
        <argsstring>(int64_t position, int64_t nbytes) override</argsstring>
        <name>ReadAt</name>
        <reimplements refid="classarrow_1_1io_1_1_random_access_file_1a562433f2be06021acb9abd20bd5a8219">ReadAt</reimplements>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Read data from given file position. </para>        </briefdescription>
        <detaileddescription>
<para>At most <computeroutput>nbytes</computeroutput> bytes are read, but it can be less if EOF is reached.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to read bytes from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A buffer containing the bytes read, or an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_input_wrapper_1a2b0a987ef6a6a39bfb86be55b4e89bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::<ref refid="classarrow_1_1_result" kindref="compound">arrow::Result</ref>&lt; int64_t &gt;</type>
        <definition>::arrow::Result&lt;int64_t&gt; parquet::ParquetInputWrapper::GetSize</definition>
        <argsstring>() override</argsstring>
        <name>GetSize</name>
        <reimplements refid="classarrow_1_1io_1_1_random_access_file_1a2a476c2a6ad474e123d1aab20be289c4">GetSize</reimplements>
        <briefdescription>
<para>Return the total file size in bytes. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not read or move the current file position, so is safe to call concurrently with e.g. <ref refid="classparquet_1_1_parquet_input_wrapper_1a9724b9ee539f12c489fc61e1c093b097" kindref="member">ReadAt()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3480">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="3479">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3481">
        <label>arrow::io::Seekable</label>
        <link refid="classarrow_1_1io_1_1_seekable"/>
      </node>
      <node id="3477">
        <label>std::enable_shared_from_this&lt; RandomAccessFile &gt;</label>
      </node>
      <node id="3478">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="3479" relation="public-inheritance">
        </childnode>
        <childnode refid="3480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3476">
        <label>arrow::io::RandomAccessFile</label>
        <link refid="classarrow_1_1io_1_1_random_access_file"/>
        <childnode refid="3477" relation="public-inheritance">
        </childnode>
        <childnode refid="3478" relation="public-inheritance">
        </childnode>
        <childnode refid="3481" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3475">
        <label>parquet::ParquetInputWrapper</label>
        <link refid="classparquet_1_1_parquet_input_wrapper"/>
        <childnode refid="3476" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3487">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="3486">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3488">
        <label>arrow::io::Seekable</label>
        <link refid="classarrow_1_1io_1_1_seekable"/>
      </node>
      <node id="3484">
        <label>std::enable_shared_from_this&lt; RandomAccessFile &gt;</label>
      </node>
      <node id="3485">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="3486" relation="public-inheritance">
        </childnode>
        <childnode refid="3487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3483">
        <label>arrow::io::RandomAccessFile</label>
        <link refid="classarrow_1_1io_1_1_random_access_file"/>
        <childnode refid="3484" relation="public-inheritance">
        </childnode>
        <childnode refid="3485" relation="public-inheritance">
        </childnode>
        <childnode refid="3488" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3482">
        <label>parquet::ParquetInputWrapper</label>
        <link refid="classparquet_1_1_parquet_input_wrapper"/>
        <childnode refid="3483" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/deprecated_io.h" line="73" column="1" bodyfile="/arrow/cpp/src/parquet/deprecated_io.h" bodystart="73" bodyend="99"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1ab5e2e1bdb05f7847363461bc3b90d386" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>Advance</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a9a6e394c3acc11399a91f8fbd745ed90" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Close</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1afd51d816f391f5ba145596486bbd71f2" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>closed</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1aa72e531e7f26b2e5265d7513cde33923" prot="private" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>closed_</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>FileInterface</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a2b0a987ef6a6a39bfb86be55b4e89bdc" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>GetSize</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a077348c5eb5ad0147582a3e5aa073847" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>GetStream</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aeb778572d0e9bf4902dbfbbc5353d7fd" prot="protected" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>InputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>mode_</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a560a7cd28fb3ccfb32d0a8bed7a62bec" prot="private" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>owned_source_</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a6ab9fd892532037147b592f78076e58f" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>ParquetInputWrapper</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a0016c663d03a3d16d9bca52446476ca3" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>ParquetInputWrapper</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aba80e2518abc166625077bd065ae3721" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Peek</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a32c1cb28aa86db601b68a96615a3161c" prot="protected" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>RandomAccessFile</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a0c80e8bc3d4a9c7b25480cd351922162" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Read</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a3e7d43d37e7a29109a9921a9b74ebb7f" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1ae37e086e71206380188a28fa5b125ac4" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>ReadAsync</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a9724b9ee539f12c489fc61e1c093b097" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>ReadAt</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1adb9d40656e516d6b77ee2bdfc00126f3" prot="public" virt="virtual" ambiguityscope="arrow::io::RandomAccessFile::"><scope>parquet::ParquetInputWrapper</scope><name>ReadAt</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a9e05e3c492f292139655fb8f1f1a6840" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Seek</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>set_mode</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a1625cff12599af7a343dbea6e82dcd30" prot="private" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>source_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1a2b9978739db7fa75ba81e794bfba2a64" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>supports_zero_copy</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1a476bb7fa30873f47ab02f8c8deb7df32" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>parquet::ParquetInputWrapper</scope><name>~FileInterface</name></member>
      <member refid="classparquet_1_1_parquet_input_wrapper_1ac3c2706299685dc0c9f20fb0a059ee3a" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>~ParquetInputWrapper</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a30c6917dfe0b6e508dac2ecc81917187" prot="public" virt="non-virtual"><scope>parquet::ParquetInputWrapper</scope><name>~RandomAccessFile</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1a96a411d4494a9872d7eef4f8bb6396b4" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>~Readable</name></member>
      <member refid="classarrow_1_1io_1_1_seekable_1a7642c30d2f852e0f79fec036a94ca093" prot="public" virt="virtual"><scope>parquet::ParquetInputWrapper</scope><name>~Seekable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
