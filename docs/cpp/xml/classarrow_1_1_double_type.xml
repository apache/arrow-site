<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_double_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::DoubleType</compoundname>
    <basecompoundref prot="public" virt="non-virtual">arrow::detail::CTypeImpl&lt; DoubleType, FloatingPointType, Type::DOUBLE, double &gt;</basecompoundref>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_double_type_1afbb204026f565bd5b2496b7823ab502e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_floating_point_type_1a5b11d7365a95daf044b4d502c1059543" kindref="member">Precision</ref></type>
        <definition>Precision arrow::DoubleType::precision</definition>
        <argsstring>() const override</argsstring>
        <name>precision</name>
        <reimplements refid="classarrow_1_1_floating_point_type_1a98f3257fdc81d64a89d51cbca599afa3">precision</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="635" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_double_type_1a426fdf49241062e92f0409e2a675ba52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>static constexpr const char* arrow::DoubleType::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="636" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="636" bodyend="636"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_double_type_1add963957ec7441054fb6f52e9f95e7a6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::DoubleType::ComputeFingerprint</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeFingerprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="639" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete type class for 64-bit floating-point data (C &quot;double&quot;) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1320">
        <label>arrow::DoubleType</label>
        <link refid="classarrow_1_1_double_type"/>
        <childnode refid="1321" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1326">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1327" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1321">
        <label>arrow::detail::CTypeImpl&lt; DoubleType, FloatingPointType, Type::DOUBLE, double &gt;</label>
        <childnode refid="1322" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1327">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1322">
        <label>arrow::FloatingPointType</label>
        <link refid="classarrow_1_1_floating_point_type"/>
        <childnode refid="1323" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1325">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="1326" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1324">
        <label>arrow::PrimitiveCType</label>
        <link refid="classarrow_1_1_primitive_c_type"/>
        <childnode refid="1325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1323">
        <label>arrow::NumberType</label>
        <link refid="classarrow_1_1_number_type"/>
        <childnode refid="1324" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1328">
        <label>arrow::DoubleType</label>
        <link refid="classarrow_1_1_double_type"/>
        <childnode refid="1329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1334">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1329">
        <label>arrow::detail::CTypeImpl&lt; DoubleType, FloatingPointType, Type::DOUBLE, double &gt;</label>
        <childnode refid="1330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1335">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1330">
        <label>arrow::FloatingPointType</label>
        <link refid="classarrow_1_1_floating_point_type"/>
        <childnode refid="1331" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1333">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="1334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1332">
        <label>arrow::PrimitiveCType</label>
        <link refid="classarrow_1_1_primitive_c_type"/>
        <childnode refid="1333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1331">
        <label>arrow::NumberType</label>
        <link refid="classarrow_1_1_number_type"/>
        <childnode refid="1332" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/type.h" line="633" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="632" bodyend="640"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_fixed_width_type_1ab802f3862719e7a8ff081a7dc679d215" prot="public" virt="pure-virtual"><scope>arrow::DoubleType</scope><name>bit_width</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::DoubleType</scope><name>children_</name></member>
      <member refid="classarrow_1_1_double_type_1add963957ec7441054fb6f52e9f95e7a6" prot="protected" virt="non-virtual"><scope>arrow::DoubleType</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::DoubleType</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>DataType</name></member>
      <member refid="classarrow_1_1_floating_point_type_1a5b11d7365a95daf044b4d502c1059543a33605df87aa384058f58ab1040a5b29b" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>DOUBLE</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_floating_point_type_1a5b11d7365a95daf044b4d502c1059543aa2542160c39d1f47c20dc6f778dc1161" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>HALF</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::DoubleType</scope><name>id_</name></member>
      <member refid="classarrow_1_1_data_type_1a4fe70f6a45eda029ea118c8470ff925e" prot="public" virt="pure-virtual"><scope>arrow::DoubleType</scope><name>layout</name></member>
      <member refid="classarrow_1_1_data_type_1a94985d12273f5dd353d6142921299d4d" prot="public" virt="pure-virtual"><scope>arrow::DoubleType</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_double_type_1afbb204026f565bd5b2496b7823ab502e" prot="public" virt="virtual"><scope>arrow::DoubleType</scope><name>precision</name></member>
      <member refid="classarrow_1_1_floating_point_type_1a5b11d7365a95daf044b4d502c1059543" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>Precision</name></member>
      <member refid="classarrow_1_1_floating_point_type_1a5b11d7365a95daf044b4d502c1059543acc837c43ba78ed44f8f8ad5015839b53" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>SINGLE</name></member>
      <member refid="classarrow_1_1_data_type_1a944727354fb11138ebd46368319598f2" prot="public" virt="pure-virtual"><scope>arrow::DoubleType</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_double_type_1a426fdf49241062e92f0409e2a675ba52" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::DoubleType</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
