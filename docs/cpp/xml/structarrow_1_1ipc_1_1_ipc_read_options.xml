<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1ipc_1_1_ipc_read_options" kind="struct" language="C++" prot="public">
    <compoundname>arrow::ipc::IpcReadOptions</compoundname>
    <includes refid="ipc_2options_8h" local="no">arrow/ipc/options.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_read_options_1afc396ded5cd90ffc0cb8192f92e5f643" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::ipc::IpcReadOptions::max_recursion_depth</definition>
        <argsstring></argsstring>
        <name>max_recursion_depth</name>
        <initializer>= <ref refid="namespacearrow_1_1ipc_1a2dfe6a86ac11df4637223d48d29111a9" kindref="member">kMaxNestingDepth</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="77" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_read_options_1a911b72da5d76473d602889db59a01491" prot="public" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::ipc::IpcReadOptions::memory_pool</definition>
        <argsstring></argsstring>
        <name>memory_pool</name>
        <initializer>= <ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</initializer>
        <briefdescription>
<para>The memory pool to use for allocations made during IPC writing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="80" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_read_options_1a22e99e85e4650c023285a189d299b3a9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; arrow::ipc::IpcReadOptions::included_fields</definition>
        <argsstring></argsstring>
        <name>included_fields</name>
        <briefdescription>
<para>EXPERIMENTAL: Top-level schema fields to include when deserializing <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If empty, return all deserialized fields </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="84" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1ipc_1_1_ipc_read_options_1aa8ce498216e5b49121acd65d34112267" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::ipc::IpcReadOptions::use_threads</definition>
        <argsstring></argsstring>
        <name>use_threads</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Use global CPU thread pool to parallelize any computational tasks like decompression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="88" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structarrow_1_1ipc_1_1_ipc_read_options_1a462535c293a55154c71c6a5666d71e17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1ipc_1_1_ipc_read_options" kindref="compound">IpcReadOptions</ref></type>
        <definition>static IpcReadOptions arrow::ipc::IpcReadOptions::Defaults</definition>
        <argsstring>()</argsstring>
        <name>Defaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/options.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2626">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="2625">
        <label>arrow::ipc::IpcReadOptions</label>
        <link refid="structarrow_1_1ipc_1_1_ipc_read_options"/>
        <childnode refid="2626" relation="usage">
          <edgelabel>memory_pool</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/ipc/options.h" line="75" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/options.h" bodystart="75" bodyend="91"/>
    <listofallmembers>
      <member refid="structarrow_1_1ipc_1_1_ipc_read_options_1a462535c293a55154c71c6a5666d71e17" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcReadOptions</scope><name>Defaults</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_read_options_1a22e99e85e4650c023285a189d299b3a9" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcReadOptions</scope><name>included_fields</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_read_options_1afc396ded5cd90ffc0cb8192f92e5f643" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcReadOptions</scope><name>max_recursion_depth</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_read_options_1a911b72da5d76473d602889db59a01491" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcReadOptions</scope><name>memory_pool</name></member>
      <member refid="structarrow_1_1ipc_1_1_ipc_read_options_1aa8ce498216e5b49121acd65d34112267" prot="public" virt="non-virtual"><scope>arrow::ipc::IpcReadOptions</scope><name>use_threads</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
