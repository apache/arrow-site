<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2util_2logging_8h" kind="file" language="C++">
    <compoundname>logging.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">ostream</includes>
    <includes local="no">string</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="dict__internal_8h" local="yes">/arrow/cpp/src/arrow/array/dict_internal.h</includedby>
    <includedby refid="sum__internal_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</includedby>
    <includedby refid="take__internal_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/take_internal.h</includedby>
    <includedby refid="inference__internal_8h" local="yes">/arrow/cpp/src/arrow/csv/inference_internal.h</includedby>
    <includedby refid="s3__internal_8h" local="yes">/arrow/cpp/src/arrow/filesystem/s3_internal.h</includedby>
    <includedby refid="datetime_8h" local="yes">/arrow/cpp/src/arrow/python/datetime.h</includedby>
    <includedby refid="python_2type__traits_8h" local="yes">/arrow/cpp/src/arrow/python/type_traits.h</includedby>
    <includedby refid="scalar_8h" local="yes">/arrow/cpp/src/arrow/scalar.h</includedby>
    <includedby refid="bit__stream__utils_8h" local="yes">/arrow/cpp/src/arrow/util/bit_stream_utils.h</includedby>
    <includedby refid="bpacking_8h" local="yes">/arrow/cpp/src/arrow/util/bpacking.h</includedby>
    <includedby refid="hash__util_8h" local="yes">/arrow/cpp/src/arrow/util/hash_util.h</includedby>
    <includedby refid="hashing_8h" local="yes">/arrow/cpp/src/arrow/util/hashing.h</includedby>
    <includedby refid="vector_8h" local="yes">/arrow/cpp/src/arrow/util/vector.h</includedby>
    <includedby refid="eval__batch_8h" local="yes">/arrow/cpp/src/gandiva/eval_batch.h</includedby>
    <includedby refid="local__bitmaps__holder_8h" local="no">/arrow/cpp/src/gandiva/local_bitmaps_holder.h</includedby>
    <includedby refid="gandiva_2logging_8h" local="no">/arrow/cpp/src/gandiva/logging.h</includedby>
    <includedby refid="bloom__filter_8h" local="yes">/arrow/cpp/src/parquet/bloom_filter.h</includedby>
    <includedby refid="parquet_2thrift__internal_8h" local="yes">/arrow/cpp/src/parquet/thrift_internal.h</includedby>
    <includedby refid="plasma_8h" local="yes">/arrow/cpp/src/plasma/plasma.h</includedby>
    <incdepgraph>
      <node id="12818">
        <label>cstdint</label>
      </node>
      <node id="12816">
        <label>string</label>
      </node>
      <node id="12815">
        <label>ostream</label>
      </node>
      <node id="12819">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="12813">
        <label>/arrow/cpp/src/arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="12814" relation="include">
        </childnode>
        <childnode refid="12815" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12819" relation="include">
        </childnode>
      </node>
      <node id="12814">
        <label>memory</label>
      </node>
      <node id="12817">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="12818" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12921">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="12821">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="12888">
        <label>/arrow/cpp/src/gandiva/exported_funcs_registry.h</label>
        <link refid="exported__funcs__registry_8h"/>
        <childnode refid="12889" relation="include">
        </childnode>
      </node>
      <node id="12887">
        <label>/arrow/cpp/src/gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="12888" relation="include">
        </childnode>
        <childnode refid="12890" relation="include">
        </childnode>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12863">
        <label>/arrow/cpp/src/arrow/compute/kernels/filter.h</label>
        <link refid="arrow_2compute_2kernels_2filter_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12923">
        <label>/arrow/cpp/src/plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="12924" relation="include">
        </childnode>
        <childnode refid="12927" relation="include">
        </childnode>
        <childnode refid="12925" relation="include">
        </childnode>
        <childnode refid="12926" relation="include">
        </childnode>
      </node>
      <node id="12868">
        <label>/arrow/cpp/src/arrow/compute/kernels/sort_to_indices.h</label>
        <link refid="sort__to__indices_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12853">
        <label>/arrow/cpp/src/arrow/compute/kernels/aggregate.h</label>
        <link refid="aggregate_8h"/>
        <childnode refid="12822" relation="include">
        </childnode>
      </node>
      <node id="12905">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="12910">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="12834">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="12822">
        <label>/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</label>
        <link refid="sum__internal_8h"/>
      </node>
      <node id="12881">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="12842">
        <label>/arrow/cpp/src/arrow/python/numpy_internal.h</label>
        <link refid="numpy__internal_8h"/>
        <childnode refid="12837" relation="include">
        </childnode>
      </node>
      <node id="12830">
        <label>/arrow/cpp/src/arrow/python/benchmark.h</label>
        <link refid="benchmark_8h"/>
      </node>
      <node id="12890">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="12891" relation="include">
        </childnode>
      </node>
      <node id="12869">
        <label>/arrow/cpp/src/arrow/compute/kernels/take.h</label>
        <link refid="take_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12898">
        <label>/arrow/cpp/src/gandiva/function_registry_arithmetic.h</label>
        <link refid="function__registry__arithmetic_8h"/>
      </node>
      <node id="12880">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12927">
        <label>/arrow/cpp/src/plasma/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="12926" relation="include">
        </childnode>
      </node>
      <node id="12857">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="12858" relation="include">
        </childnode>
        <childnode refid="12859" relation="include">
        </childnode>
      </node>
      <node id="12837">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
      </node>
      <node id="12894">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="12895" relation="include">
        </childnode>
      </node>
      <node id="12833">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="12824">
        <label>/arrow/cpp/src/arrow/csv/inference_internal.h</label>
        <link refid="inference__internal_8h"/>
      </node>
      <node id="12917">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="12873">
        <label>/arrow/cpp/src/arrow/util/bit_stream_utils.h</label>
        <link refid="bit__stream__utils_8h"/>
        <childnode refid="12874" relation="include">
        </childnode>
      </node>
      <node id="12861">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="12856" relation="include">
        </childnode>
      </node>
      <node id="12835">
        <label>/arrow/cpp/src/arrow/python/inference.h</label>
        <link refid="inference_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12902">
        <label>/arrow/cpp/src/gandiva/function_registry_string.h</label>
        <link refid="function__registry__string_8h"/>
      </node>
      <node id="12872">
        <label>/arrow/cpp/src/arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="12821" relation="include">
        </childnode>
        <childnode refid="12823" relation="include">
        </childnode>
      </node>
      <node id="12919">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="12829">
        <label>/arrow/cpp/src/arrow/python/arrow_to_pandas.h</label>
        <link refid="arrow__to__pandas_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12915">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12852">
        <label>/arrow/cpp/src/arrow/compute/kernels/add.h</label>
        <link refid="add_8h"/>
      </node>
      <node id="12885">
        <label>/arrow/cpp/src/gandiva/dex_visitor.h</label>
        <link refid="dex__visitor_8h"/>
        <childnode refid="12882" relation="include">
        </childnode>
        <childnode refid="12886" relation="include">
        </childnode>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12924">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="12925" relation="include">
        </childnode>
      </node>
      <node id="12913">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="12910" relation="include">
        </childnode>
      </node>
      <node id="12841">
        <label>/arrow/cpp/src/arrow/python/numpy_convert.h</label>
        <link refid="numpy__convert_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12876">
        <label>/arrow/cpp/src/arrow/util/hash_util.h</label>
        <link refid="hash__util_8h"/>
      </node>
      <node id="12918">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="12919" relation="include">
        </childnode>
      </node>
      <node id="12866">
        <label>/arrow/cpp/src/arrow/compute/kernels/match.h</label>
        <link refid="match_8h"/>
      </node>
      <node id="12877">
        <label>/arrow/cpp/src/arrow/util/hashing.h</label>
        <link refid="hashing_8h"/>
        <childnode refid="12821" relation="include">
        </childnode>
      </node>
      <node id="12847">
        <label>/arrow/cpp/src/arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="12832" relation="include">
        </childnode>
      </node>
      <node id="12846">
        <label>/arrow/cpp/src/arrow/python/pch.h</label>
        <link refid="arrow_2python_2pch_8h"/>
      </node>
      <node id="12820">
        <label>/arrow/cpp/src/arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="12821" relation="include">
        </childnode>
        <childnode refid="12822" relation="include">
        </childnode>
        <childnode refid="12823" relation="include">
        </childnode>
        <childnode refid="12824" relation="include">
        </childnode>
        <childnode refid="12825" relation="include">
        </childnode>
        <childnode refid="12826" relation="include">
        </childnode>
        <childnode refid="12844" relation="include">
        </childnode>
        <childnode refid="12848" relation="include">
        </childnode>
        <childnode refid="12873" relation="include">
        </childnode>
        <childnode refid="12875" relation="include">
        </childnode>
        <childnode refid="12876" relation="include">
        </childnode>
        <childnode refid="12877" relation="include">
        </childnode>
        <childnode refid="12878" relation="include">
        </childnode>
        <childnode refid="12879" relation="include">
        </childnode>
        <childnode refid="12883" relation="include">
        </childnode>
        <childnode refid="12884" relation="include">
        </childnode>
        <childnode refid="12921" relation="include">
        </childnode>
        <childnode refid="12922" relation="include">
        </childnode>
        <childnode refid="12923" relation="include">
        </childnode>
      </node>
      <node id="12827">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="12904">
        <label>/arrow/cpp/src/gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="12887" relation="include">
        </childnode>
        <childnode refid="12896" relation="include">
        </childnode>
        <childnode refid="12890" relation="include">
        </childnode>
        <childnode refid="12881" relation="include">
        </childnode>
        <childnode refid="12905" relation="include">
        </childnode>
      </node>
      <node id="12912">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="12910" relation="include">
        </childnode>
      </node>
      <node id="12867">
        <label>/arrow/cpp/src/arrow/compute/kernels/nth_to_indices.h</label>
        <link refid="nth__to__indices_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12859">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="12856" relation="include">
        </childnode>
        <childnode refid="12860" relation="include">
        </childnode>
        <childnode refid="12861" relation="include">
        </childnode>
      </node>
      <node id="12897">
        <label>/arrow/cpp/src/gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="12886" relation="include">
        </childnode>
        <childnode refid="12895" relation="include">
        </childnode>
        <childnode refid="12898" relation="include">
        </childnode>
        <childnode refid="12894" relation="include">
        </childnode>
        <childnode refid="12899" relation="include">
        </childnode>
        <childnode refid="12900" relation="include">
        </childnode>
        <childnode refid="12901" relation="include">
        </childnode>
        <childnode refid="12902" relation="include">
        </childnode>
        <childnode refid="12903" relation="include">
        </childnode>
      </node>
      <node id="12920">
        <label>/arrow/cpp/src/gandiva/selection_vector_impl.h</label>
        <link refid="selection__vector__impl_8h"/>
      </node>
      <node id="12845">
        <label>/arrow/cpp/src/arrow/python/numpy_to_arrow.h</label>
        <link refid="numpy__to__arrow_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12858">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="12856" relation="include">
        </childnode>
      </node>
      <node id="12907">
        <label>/arrow/cpp/src/gandiva/node_visitor.h</label>
        <link refid="node__visitor_8h"/>
        <childnode refid="12908" relation="include">
        </childnode>
        <childnode refid="12896" relation="include">
        </childnode>
        <childnode refid="12909" relation="include">
        </childnode>
      </node>
      <node id="12839">
        <label>/arrow/cpp/src/arrow/python/helpers.h</label>
        <link refid="python_2helpers_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12893">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="12895">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="12896" relation="include">
        </childnode>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12865">
        <label>/arrow/cpp/src/arrow/compute/kernels/isin.h</label>
        <link refid="isin_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12884">
        <label>/arrow/cpp/src/gandiva/logging.h</label>
        <link refid="gandiva_2logging_8h"/>
        <childnode refid="12880" relation="include">
        </childnode>
        <childnode refid="12885" relation="include">
        </childnode>
        <childnode refid="12887" relation="include">
        </childnode>
        <childnode refid="12892" relation="include">
        </childnode>
        <childnode refid="12904" relation="include">
        </childnode>
        <childnode refid="12906" relation="include">
        </childnode>
        <childnode refid="12907" relation="include">
        </childnode>
        <childnode refid="12914" relation="include">
        </childnode>
        <childnode refid="12920" relation="include">
        </childnode>
      </node>
      <node id="12886">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="12882" relation="include">
        </childnode>
      </node>
      <node id="12922">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="12850">
        <label>/arrow/cpp/src/arrow/compute/api.h</label>
        <link refid="compute_2api_8h"/>
        <childnode refid="12851" relation="include">
        </childnode>
      </node>
      <node id="12891">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="12909">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="12908" relation="include">
        </childnode>
        <childnode refid="12896" relation="include">
        </childnode>
        <childnode refid="12910" relation="include">
        </childnode>
        <childnode refid="12911" relation="include">
        </childnode>
        <childnode refid="12912" relation="include">
        </childnode>
        <childnode refid="12913" relation="include">
        </childnode>
      </node>
      <node id="12926">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="12836">
        <label>/arrow/cpp/src/arrow/python/io.h</label>
        <link refid="arrow_2python_2io_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12900">
        <label>/arrow/cpp/src/gandiva/function_registry_hash.h</label>
        <link refid="function__registry__hash_8h"/>
      </node>
      <node id="12901">
        <label>/arrow/cpp/src/gandiva/function_registry_math_ops.h</label>
        <link refid="function__registry__math__ops_8h"/>
      </node>
      <node id="12882">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="12871">
        <label>/arrow/cpp/src/arrow/dataset/dataset_internal.h</label>
        <link refid="dataset__internal_8h"/>
        <childnode refid="12862" relation="include">
        </childnode>
      </node>
      <node id="12925">
        <label>/arrow/cpp/src/plasma/quota_aware_policy.h</label>
        <link refid="quota__aware__policy_8h"/>
        <childnode refid="12926" relation="include">
        </childnode>
      </node>
      <node id="12862">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="12849">
        <label>/arrow/cpp/src/arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
        <childnode refid="12852" relation="include">
        </childnode>
        <childnode refid="12853" relation="include">
        </childnode>
        <childnode refid="12854" relation="include">
        </childnode>
        <childnode refid="12863" relation="include">
        </childnode>
        <childnode refid="12864" relation="include">
        </childnode>
        <childnode refid="12865" relation="include">
        </childnode>
        <childnode refid="12866" relation="include">
        </childnode>
        <childnode refid="12867" relation="include">
        </childnode>
        <childnode refid="12868" relation="include">
        </childnode>
        <childnode refid="12822" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12870" relation="include">
        </childnode>
        <childnode refid="12855" relation="include">
        </childnode>
      </node>
      <node id="12860">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="12856" relation="include">
        </childnode>
      </node>
      <node id="12870">
        <label>/arrow/cpp/src/arrow/compute/kernels/util_internal.h</label>
        <link refid="compute_2kernels_2util__internal_8h"/>
      </node>
      <node id="12878">
        <label>/arrow/cpp/src/arrow/util/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="12825">
        <label>/arrow/cpp/src/arrow/filesystem/s3_internal.h</label>
        <link refid="s3__internal_8h"/>
      </node>
      <node id="12854">
        <label>/arrow/cpp/src/arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
        <childnode refid="12855" relation="include">
        </childnode>
      </node>
      <node id="12823">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="12899">
        <label>/arrow/cpp/src/gandiva/function_registry_datetime.h</label>
        <link refid="function__registry__datetime_8h"/>
      </node>
      <node id="12826">
        <label>/arrow/cpp/src/arrow/python/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
      </node>
      <node id="12843">
        <label>/arrow/cpp/src/arrow/python/numpy_interop.h</label>
        <link refid="numpy__interop_8h"/>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12839" relation="include">
        </childnode>
        <childnode refid="12842" relation="include">
        </childnode>
        <childnode refid="12844" relation="include">
        </childnode>
      </node>
      <node id="12831">
        <label>/arrow/cpp/src/arrow/python/config.h</label>
        <link refid="arrow_2python_2config_8h"/>
        <childnode refid="12832" relation="include">
        </childnode>
        <childnode refid="12834" relation="include">
        </childnode>
        <childnode refid="12836" relation="include">
        </childnode>
      </node>
      <node id="12855">
        <label>/arrow/cpp/src/arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="12856" relation="include">
        </childnode>
        <childnode refid="12857" relation="include">
        </childnode>
        <childnode refid="12862" relation="include">
        </childnode>
      </node>
      <node id="12903">
        <label>/arrow/cpp/src/gandiva/function_registry_timestamp_arithmetic.h</label>
        <link refid="function__registry__timestamp__arithmetic_8h"/>
      </node>
      <node id="12883">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="12879" relation="include">
        </childnode>
      </node>
      <node id="12864">
        <label>/arrow/cpp/src/arrow/compute/kernels/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="12850" relation="include">
        </childnode>
      </node>
      <node id="12914">
        <label>/arrow/cpp/src/gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="12915" relation="include">
        </childnode>
        <childnode refid="12916" relation="include">
        </childnode>
        <childnode refid="12881" relation="include">
        </childnode>
        <childnode refid="12918" relation="include">
        </childnode>
        <childnode refid="12920" relation="include">
        </childnode>
      </node>
      <node id="12832">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
        <childnode refid="12833" relation="include">
        </childnode>
        <childnode refid="12834" relation="include">
        </childnode>
        <childnode refid="12835" relation="include">
        </childnode>
        <childnode refid="12836" relation="include">
        </childnode>
        <childnode refid="12837" relation="include">
        </childnode>
        <childnode refid="12838" relation="include">
        </childnode>
      </node>
      <node id="12828">
        <label>/arrow/cpp/src/arrow/python/platform.h</label>
        <link refid="arrow_2python_2platform_8h"/>
        <childnode refid="12829" relation="include">
        </childnode>
        <childnode refid="12830" relation="include">
        </childnode>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12826" relation="include">
        </childnode>
        <childnode refid="12839" relation="include">
        </childnode>
        <childnode refid="12835" relation="include">
        </childnode>
        <childnode refid="12840" relation="include">
        </childnode>
        <childnode refid="12841" relation="include">
        </childnode>
        <childnode refid="12842" relation="include">
        </childnode>
        <childnode refid="12843" relation="include">
        </childnode>
        <childnode refid="12845" relation="include">
        </childnode>
        <childnode refid="12846" relation="include">
        </childnode>
        <childnode refid="12847" relation="include">
        </childnode>
        <childnode refid="12838" relation="include">
        </childnode>
        <childnode refid="12844" relation="include">
        </childnode>
      </node>
      <node id="12848">
        <label>/arrow/cpp/src/arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="12849" relation="include">
        </childnode>
        <childnode refid="12871" relation="include">
        </childnode>
        <childnode refid="12855" relation="include">
        </childnode>
        <childnode refid="12872" relation="include">
        </childnode>
      </node>
      <node id="12889">
        <label>/arrow/cpp/src/gandiva/exported_funcs.h</label>
        <link refid="exported__funcs_8h"/>
      </node>
      <node id="12916">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="12917" relation="include">
        </childnode>
      </node>
      <node id="12838">
        <label>/arrow/cpp/src/arrow/python/python_to_arrow.h</label>
        <link refid="python__to__arrow_8h"/>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12911">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="12910" relation="include">
        </childnode>
      </node>
      <node id="12906">
        <label>/arrow/cpp/src/gandiva/lvalue.h</label>
        <link refid="lvalue_8h"/>
        <childnode refid="12881" relation="include">
        </childnode>
      </node>
      <node id="12892">
        <label>/arrow/cpp/src/gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="12893" relation="include">
        </childnode>
        <childnode refid="12894" relation="include">
        </childnode>
        <childnode refid="12897" relation="include">
        </childnode>
      </node>
      <node id="12840">
        <label>/arrow/cpp/src/arrow/python/init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="12879">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="12880" relation="include">
        </childnode>
        <childnode refid="12882" relation="include">
        </childnode>
      </node>
      <node id="12844">
        <label>/arrow/cpp/src/arrow/python/type_traits.h</label>
        <link refid="python_2type__traits_8h"/>
      </node>
      <node id="12908">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="12896">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="12851">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
      <node id="12856">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
      <node id="12875">
        <label>/arrow/cpp/src/arrow/util/bpacking.h</label>
        <link refid="bpacking_8h"/>
        <childnode refid="12873" relation="include">
        </childnode>
      </node>
      <node id="12874">
        <label>/arrow/cpp/src/arrow/util/rle_encoding.h</label>
        <link refid="rle__encoding_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1util_1_1_arrow_log_base" prot="public">arrow::util::ArrowLogBase</innerclass>
    <innerclass refid="classarrow_1_1util_1_1_arrow_log" prot="public">arrow::util::ArrowLog</innerclass>
    <innerclass refid="classarrow_1_1util_1_1_voidify" prot="public">arrow::util::Voidify</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1util">arrow::util</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a89c958b59b86ed5881d703b5cd5866fd" prot="public" static="no">
        <name>ARROW_LOG_INTERNAL</name>
        <param><defname>level</defname></param>
        <initializer>::<ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">arrow::util::ArrowLog</ref>(__FILE__, __LINE__, level)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="56" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a6297ec7b42990f6318ea902765172cf0" prot="public" static="no">
        <name>ARROW_LOG</name>
        <param><defname>level</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a89c958b59b86ed5881d703b5cd5866fd" kindref="member">ARROW_LOG_INTERNAL</ref>(::arrow::util::ArrowLogLevel::ARROW_##level)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="57" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a479d6d97ef10313772bde465cbc73926" prot="public" static="no">
        <name>ARROW_IGNORE_EXPR</name>
        <param><defname>expr</defname></param>
        <initializer>((void)(expr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="59" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" prot="public" static="no">
        <name>ARROW_CHECK</name>
        <param><defname>condition</defname></param>
        <initializer><ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(condition)                                              \
  ? <ref refid="arrow_2util_2logging_8h_1a479d6d97ef10313772bde465cbc73926" kindref="member">ARROW_IGNORE_EXPR</ref>(0)                                                     \
  : ::<ref refid="classarrow_1_1util_1_1_voidify" kindref="compound">arrow::util::Voidify</ref>() &amp;                                               \
          ::<ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">arrow::util::ArrowLog</ref>(__FILE__, __LINE__,                        \
                                  ::<ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343ac9ccec604c7eea73f2278940d586e3e5" kindref="member">arrow::util::ArrowLogLevel::ARROW_FATAL</ref>) \
              &lt;&lt; &quot; Check failed: &quot; #condition &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="61" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a6c575c821b11b43863bf895d390e04f9" prot="public" static="no">
        <name>ARROW_CHECK_OK_PREPEND</name>
        <param><defname>to_call</defname></param>
        <param><defname>msg</defname></param>
        <initializer>do {                                                                               \
    ::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref> _s = (to_call);                                                  \
    <ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>(_s.ok()) &lt;&lt; &quot;Operation failed: &quot; &lt;&lt; ARROW_STRINGIFY(to_call) &lt;&lt; &quot;\n&quot; \
                         &lt;&lt; (msg) &lt;&lt; &quot;: &quot; &lt;&lt; _s.ToString();                          \
  } while (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="71" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1ab1dca026b4840fea1e82df4c176de6b3" prot="public" static="no">
        <name>ARROW_CHECK_OK</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a6c575c821b11b43863bf895d390e04f9" kindref="member">ARROW_CHECK_OK_PREPEND</ref>(s, &quot;Bad status&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="80" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1ab42a22508b4bab6993bf61dea1d75ba0" prot="public" static="no">
        <name>ARROW_CHECK_EQ</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) == (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="82" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1aeef2faf28e7ec5a6983e431dca6d2b6f" prot="public" static="no">
        <name>ARROW_CHECK_NE</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) != (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="83" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a7c5c8f8dea213c5f3991c1f2cff05bab" prot="public" static="no">
        <name>ARROW_CHECK_LE</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) &lt;= (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="84" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1afc881c129d3f56952bea63dd1f3371f2" prot="public" static="no">
        <name>ARROW_CHECK_LT</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) &lt; (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="85" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a922d01656df57976c6d4546427f68535" prot="public" static="no">
        <name>ARROW_CHECK_GE</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) &gt;= (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="86" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a0e0032b967590b21f860d3527d2e1ee7" prot="public" static="no">
        <name>ARROW_CHECK_GT</name>
        <param><defname>val1</defname></param>
        <param><defname>val2</defname></param>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref>((val1) &gt; (val2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="87" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1ad85fba57e0e48e503ae521494e6b361c" prot="public" static="no">
        <name>ARROW_DFATAL</name>
        <initializer>::<ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343ac9ccec604c7eea73f2278940d586e3e5" kindref="member">arrow::util::ArrowLogLevel::ARROW_FATAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="127" column="10" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" prot="public" static="no">
        <name>DCHECK</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" kindref="member">ARROW_CHECK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="129" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a332ecaf51ca276c169643167fd8355e7" prot="public" static="no">
        <name>DCHECK_OK</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1ab1dca026b4840fea1e82df4c176de6b3" kindref="member">ARROW_CHECK_OK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="130" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a41dd12c3206f67dc0b985215522c1013" prot="public" static="no">
        <name>DCHECK_EQ</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1ab42a22508b4bab6993bf61dea1d75ba0" kindref="member">ARROW_CHECK_EQ</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="131" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a6f352950c328ce2f3c531d3ff1966f03" prot="public" static="no">
        <name>DCHECK_NE</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1aeef2faf28e7ec5a6983e431dca6d2b6f" kindref="member">ARROW_CHECK_NE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="132" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1a9fe3823537dcd0e93ddd2410d25de11a" prot="public" static="no">
        <name>DCHECK_LE</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1a7c5c8f8dea213c5f3991c1f2cff05bab" kindref="member">ARROW_CHECK_LE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="133" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1ac38ad2de0753ea2ed31f4930eca0f566" prot="public" static="no">
        <name>DCHECK_LT</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1afc881c129d3f56952bea63dd1f3371f2" kindref="member">ARROW_CHECK_LT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="134" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1aece88ac235225ad03cf77868a931cc83" prot="public" static="no">
        <name>DCHECK_GE</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1a922d01656df57976c6d4546427f68535" kindref="member">ARROW_CHECK_GE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="135" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arrow_2util_2logging_8h_1aea1a4ae4670d96f78121402fb066b571" prot="public" static="no">
        <name>DCHECK_GT</name>
        <initializer><ref refid="arrow_2util_2logging_8h_1a0e0032b967590b21f860d3527d2e1ee7" kindref="member">ARROW_CHECK_GT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/logging.h" line="136" column="9" bodyfile="/arrow/cpp/src/arrow/util/logging.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GANDIVA_IR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>LLVM<sp/>IR<sp/>code<sp/>doesn&apos;t<sp/>have<sp/>an<sp/>NDEBUG<sp/>mode.<sp/>And,<sp/>it<sp/>shouldn&apos;t<sp/>include<sp/>references<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>streams<sp/>or<sp/>stdc++.<sp/>So,<sp/>making<sp/>the<sp/>DCHECK<sp/>calls<sp/>void<sp/>in<sp/>that<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_IGNORE_EXPR(expr)<sp/>((void)(expr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK(condition)<sp/>ARROW_IGNORE_EXPR(condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_OK(status)<sp/>ARROW_IGNORE_EXPR(status)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_EQ(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_NE(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LE(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LT(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GE(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GT(val1,<sp/>val2)<sp/>ARROW_IGNORE_EXPR(val1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>!GANDIVA_IR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref><sp/>:<sp/>int<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343ade6223c04ded375f7f3ab3fefec97af6" kindref="member">ARROW_DEBUG</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343a59aacc91653e3ffb42c555add8409dd9" kindref="member">ARROW_INFO</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343a80e9d720776be880337c96040fb86866" kindref="member">ARROW_WARNING</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343a86f3256350f2f67e5c2e411b91da506c" kindref="member">ARROW_ERROR</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343ac9ccec604c7eea73f2278940d586e3e5" kindref="member">ARROW_FATAL</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="arrow_2util_2logging_8h_1a89c958b59b86ed5881d703b5cd5866fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_LOG_INTERNAL(level)<sp/>::arrow::util::ArrowLog(__FILE__,<sp/>__LINE__,<sp/>level)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="arrow_2util_2logging_8h_1a6297ec7b42990f6318ea902765172cf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_LOG(level)<sp/>ARROW_LOG_INTERNAL(::arrow::util::ArrowLogLevel::ARROW_##level)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="arrow_2util_2logging_8h_1a479d6d97ef10313772bde465cbc73926" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_IGNORE_EXPR(expr)<sp/>((void)(expr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="arrow_2util_2logging_8h_1a389e6c69f3ba2e62c5a9e0372059f1a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK(condition)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/>ARROW_PREDICT_TRUE(condition)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>?<sp/>ARROW_IGNORE_EXPR(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>:<sp/>::arrow::util::Voidify()<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::util::ArrowLog(__FILE__,<sp/>__LINE__,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::util::ArrowLogLevel::ARROW_FATAL)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Check<sp/>failed:<sp/>&quot;<sp/>#condition<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>&apos;to_call&apos;<sp/>returns<sp/>a<sp/>bad<sp/>status,<sp/>CHECK<sp/>immediately<sp/>with<sp/>a<sp/>logged<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>&apos;msg&apos;<sp/>followed<sp/>by<sp/>the<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="arrow_2util_2logging_8h_1a6c575c821b11b43863bf895d390e04f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_OK_PREPEND(to_call,<sp/>msg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::arrow::Status<sp/>_s<sp/>=<sp/>(to_call);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ARROW_CHECK(_s.ok())<sp/>&lt;&lt;<sp/>&quot;Operation<sp/>failed:<sp/>&quot;<sp/>&lt;&lt;<sp/>ARROW_STRINGIFY(to_call)<sp/>&lt;&lt;<sp/>&quot;\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(msg)<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>_s.ToString();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>status<sp/>is<sp/>bad,<sp/>CHECK<sp/>immediately,<sp/>appending<sp/>the<sp/>status<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>logged<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="arrow_2util_2logging_8h_1ab1dca026b4840fea1e82df4c176de6b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_OK(s)<sp/>ARROW_CHECK_OK_PREPEND(s,<sp/>&quot;Bad<sp/>status&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="arrow_2util_2logging_8h_1ab42a22508b4bab6993bf61dea1d75ba0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_EQ(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>==<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="arrow_2util_2logging_8h_1aeef2faf28e7ec5a6983e431dca6d2b6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_NE(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>!=<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="arrow_2util_2logging_8h_1a7c5c8f8dea213c5f3991c1f2cff05bab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_LE(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>&lt;=<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="arrow_2util_2logging_8h_1afc881c129d3f56952bea63dd1f3371f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_LT(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>&lt;<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="arrow_2util_2logging_8h_1a922d01656df57976c6d4546427f68535" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_GE(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>&gt;=<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="arrow_2util_2logging_8h_1a0e0032b967590b21f860d3527d2e1ee7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_CHECK_GT(val1,<sp/>val2)<sp/>ARROW_CHECK((val1)<sp/>&gt;<sp/>(val2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_DFATAL<sp/>::arrow::util::ArrowLogLevel::ARROW_WARNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CAUTION:<sp/>DCHECK_OK()<sp/>always<sp/>evaluates<sp/>its<sp/>argument,<sp/>but<sp/>other<sp/>DCHECK*()<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>do<sp/>so<sp/>in<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK(condition)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(condition);<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_OK(s)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/>ARROW_IGNORE_EXPR(s);<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_EQ(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_NE(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LE(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LT(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GE(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GT(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val1);<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>ARROW_IGNORE_EXPR(val2);<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/>while<sp/>(false)<sp/>::arrow::util::detail::NullLog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="arrow_2util_2logging_8h_1ad85fba57e0e48e503ae521494e6b361c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARROW_DFATAL<sp/>::arrow::util::ArrowLogLevel::ARROW_FATAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK<sp/>ARROW_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="arrow_2util_2logging_8h_1a332ecaf51ca276c169643167fd8355e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_OK<sp/>ARROW_CHECK_OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="arrow_2util_2logging_8h_1a41dd12c3206f67dc0b985215522c1013" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_EQ<sp/>ARROW_CHECK_EQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="arrow_2util_2logging_8h_1a6f352950c328ce2f3c531d3ff1966f03" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_NE<sp/>ARROW_CHECK_NE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="arrow_2util_2logging_8h_1a9fe3823537dcd0e93ddd2410d25de11a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LE<sp/>ARROW_CHECK_LE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="arrow_2util_2logging_8h_1ac38ad2de0753ea2ed31f4930eca0f566" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_LT<sp/>ARROW_CHECK_LT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="arrow_2util_2logging_8h_1aece88ac235225ad03cf77868a931cc83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GE<sp/>ARROW_CHECK_GE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="arrow_2util_2logging_8h_1aea1a4ae4670d96f78121402fb066b571" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DCHECK_GT<sp/>ARROW_CHECK_GT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>adapted<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/ray-project/ray/blob/master/src/ray/util/logging.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>make<sp/>the<sp/>logging<sp/>lib<sp/>pluggable<sp/>with<sp/>other<sp/>logging<sp/>libs<sp/>and<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>implementation<sp/>unawared<sp/>by<sp/>the<sp/>user,<sp/>ArrowLog<sp/>is<sp/>only<sp/>a<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>hide<sp/>the<sp/>implementation<sp/>into<sp/>logging.cc<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>logging.cc,<sp/>we<sp/>can<sp/>choose<sp/>different<sp/>log<sp/>libs<sp/>using<sp/>different<sp/>macros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>also<sp/>a<sp/>null<sp/>log<sp/>which<sp/>does<sp/>not<sp/>output<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classarrow_1_1util_1_1_arrow_log_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base" kindref="compound">ArrowLogBase</ref><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151" refid="classarrow_1_1util_1_1_arrow_log_base_1a08505cfe6c7950c0c821161e74bb3631" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base_1a08505cfe6c7950c0c821161e74bb3631" kindref="member">~ArrowLogBase</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classarrow_1_1util_1_1_arrow_log_base_1a392eb03c5a264213eec410e96b18af63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base_1a392eb03c5a264213eec410e96b18af63" kindref="member">IsEnabled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="156" refid="classarrow_1_1util_1_1_arrow_log_base_1a3f398448d0a9c28072bfa193d5fb9158" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base" kindref="compound">ArrowLogBase</ref>&amp;<sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base_1a3f398448d0a9c28072bfa193d5fb9158" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsEnabled())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Stream()<sp/>&lt;&lt;<sp/>t;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>Stream()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classarrow_1_1util_1_1_arrow_log" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">ArrowLog</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1util_1_1_arrow_log_base" kindref="compound">ArrowLogBase</ref><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">ArrowLog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_number,<sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref><sp/>severity);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">ArrowLog</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEnabled()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartArrowLog(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>appName,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref><sp/>severity_threshold<sp/>=<sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343a59aacc91653e3ffb42c555add8409dd9" kindref="member">ArrowLogLevel::ARROW_INFO</ref>,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>logDir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShutDownArrowLog();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InstallFailureSignalHandler();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UninstallSignalAction();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLevelEnabled(<ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref><sp/>log_level);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1util_1_1_arrow_log" kindref="compound">ArrowLog</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>the<sp/>implementation<sp/>of<sp/>log<sp/>provider<sp/>by<sp/>void<sp/>*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>lib<sp/>user<sp/>may<sp/>define<sp/>the<sp/>same<sp/>macro<sp/>to<sp/>use<sp/>the<sp/>correct<sp/>header<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>logging_provider_;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_enabled_;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1ad921118fae6f84dae836cab22cc54343" kindref="member">ArrowLogLevel</ref><sp/>severity_threshold_;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>std::ostream&amp;<sp/>Stream()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>make<sp/>ARROW_CHECK<sp/>compilation<sp/>pass<sp/>to<sp/>change<sp/>the<sp/>&lt;&lt;<sp/>operator<sp/>to<sp/>void.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>copied<sp/>from<sp/>glog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classarrow_1_1util_1_1_voidify" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1util_1_1_voidify" kindref="compound">Voidify</ref><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221" refid="classarrow_1_1util_1_1_voidify_1a4ba7900c62e12c6fe87eac58ed6a288b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1util_1_1_voidify_1a4ba7900c62e12c6fe87eac58ed6a288b" kindref="member">Voidify</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>has<sp/>to<sp/>be<sp/>an<sp/>operator<sp/>with<sp/>a<sp/>precedence<sp/>lower<sp/>than<sp/>&lt;&lt;<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>higher<sp/>than<sp/>?:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classarrow_1_1util_1_1_voidify_1a052ba96cd2d6990ed5bdab8b9a2da2ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator&amp;(<ref refid="classarrow_1_1util_1_1_arrow_log_base" kindref="compound">ArrowLogBase</ref>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="keyword">class<sp/></highlight><highlight class="normal">NullLog<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>NullLog&amp;<sp/>operator&lt;&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GANDIVA_IR</highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/logging.h"/>
  </compounddef>
</doxygen>
