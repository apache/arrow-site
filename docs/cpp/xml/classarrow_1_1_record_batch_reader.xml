<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_record_batch_reader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::RecordBatchReader</compoundname>
    <derivedcompoundref refid="classarrow_1_1csv_1_1_streaming_reader" prot="public" virt="non-virtual">arrow::csv::StreamingReader</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1ipc_1_1_record_batch_stream_reader" prot="public" virt="non-virtual">arrow::ipc::RecordBatchStreamReader</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_table_batch_reader" prot="public" virt="non-virtual">arrow::TableBatchReader</derivedcompoundref>
    <includes refid="record__batch_8h" local="no">arrow/record_batch.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1a77922fab827a0f039aeb8b8a7c06ae4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::RecordBatchReader::~RecordBatchReader</definition>
        <argsstring>()=default</argsstring>
        <name>~RecordBatchReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1ad2ded865a6720e61e4685cfd34ed377f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Schema&gt; arrow::RecordBatchReader::schema</definition>
        <argsstring>() const =0</argsstring>
        <name>schema</name>
        <reimplementedby refid="group__concat-tables_1ga278674b3b9a78fdbccc3f3d52fc5d470">schema</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the shared schema of the record batches in the stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1aaffe944df9d8a4c3e6592eb2f8f78f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::RecordBatchReader::ReadNext</definition>
        <argsstring>(std::shared_ptr&lt; RecordBatch &gt; *batch)=0</argsstring>
        <name>ReadNext</name>
        <reimplementedby refid="group__concat-tables_1ga31d001eabe7404ee8e3d7a568eae0e93">ReadNext</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
<para>Read the next record batch in the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Return null for batch when reaching end of stream</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the next loaded batch, null at end of stream </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1a81d4b09c025e8ca6576c339fe91f22b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;RecordBatch&gt; &gt; arrow::RecordBatchReader::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
<para><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref> interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="225" column="1" bodyfile="/arrow/cpp/src/arrow/record_batch.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1a8fd184ee67656e5ca4758335fb82737d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchReader::ReadAll</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; RecordBatch &gt;&gt; *batches)</argsstring>
        <name>ReadAll</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt;&gt; *</type>
          <declname>batches</declname>
        </param>
        <briefdescription>
<para>Consume entire stream as a vector of record batches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_record_batch_reader_1a4c4cedba15636348d36be585b7443d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::RecordBatchReader::ReadAll</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *table)</argsstring>
        <name>ReadAll</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Read all batches and concatenate as <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/record_batch.h" line="235" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract interface for reading stream of record batches. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3874">
        <label>arrow::RecordBatchReader</label>
        <link refid="classarrow_1_1_record_batch_reader"/>
      </node>
      <node id="3877">
        <label>arrow::TableBatchReader</label>
        <link refid="classarrow_1_1_table_batch_reader"/>
        <childnode refid="3874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3875">
        <label>arrow::csv::StreamingReader</label>
        <link refid="classarrow_1_1csv_1_1_streaming_reader"/>
        <childnode refid="3874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3876">
        <label>arrow::ipc::RecordBatchStreamReader</label>
        <link refid="classarrow_1_1ipc_1_1_record_batch_stream_reader"/>
        <childnode refid="3874" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/record_batch.h" line="210" column="1" bodyfile="/arrow/cpp/src/arrow/record_batch.h" bodystart="210" bodyend="236"/>
    <listofallmembers>
      <member refid="classarrow_1_1_record_batch_reader_1a81d4b09c025e8ca6576c339fe91f22b3" prot="public" virt="non-virtual"><scope>arrow::RecordBatchReader</scope><name>Next</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a8fd184ee67656e5ca4758335fb82737d" prot="public" virt="non-virtual"><scope>arrow::RecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a4c4cedba15636348d36be585b7443d58" prot="public" virt="non-virtual"><scope>arrow::RecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1aaffe944df9d8a4c3e6592eb2f8f78f9f" prot="public" virt="pure-virtual"><scope>arrow::RecordBatchReader</scope><name>ReadNext</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1ad2ded865a6720e61e4685cfd34ed377f" prot="public" virt="pure-virtual"><scope>arrow::RecordBatchReader</scope><name>schema</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a77922fab827a0f039aeb8b8a7c06ae4c" prot="public" virt="virtual"><scope>arrow::RecordBatchReader</scope><name>~RecordBatchReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
