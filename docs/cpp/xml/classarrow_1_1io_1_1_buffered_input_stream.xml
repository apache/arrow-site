<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_buffered_input_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::BufferedInputStream</compoundname>
    <basecompoundref prot="public" virt="non-virtual">arrow::io::internal::InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</basecompoundref>
    <includes refid="buffered_8h" local="no">arrow/io/buffered.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffered_input_stream_1ad5da4ac4504d8557df64e6c268bcbdd0" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend arrow::io::BufferedInputStream::InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</definition>
        <argsstring></argsstring>
        <name>InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="137" column="1" bodyfile="/arrow/cpp/src/arrow/io/buffered.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffered_input_stream_1a3bf7eb2f73ede43086396b5323c4465c" prot="private" static="no" mutable="no">
        <type>class <ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref></type>
        <definition>class ARROW_NO_EXPORT arrow::io::BufferedInputStream::Impl</definition>
        <argsstring></argsstring>
        <name>Impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="157" column="1" bodyfile="/arrow/cpp/src/arrow/io/buffered.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_buffered_input_stream_1ab2f75ba6783d4f3b34cb65201cf79bf9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; arrow::io::BufferedInputStream::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="160" column="1" bodyfile="/arrow/cpp/src/arrow/io/buffered.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a71c6c6561547793f084cc8b7708a887e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::BufferedInputStream::~BufferedInputStream</definition>
        <argsstring>() override</argsstring>
        <name>~BufferedInputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a3b07e80e7c81f57cc04cc4eeb310aac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferedInputStream::SetBufferSize</definition>
        <argsstring>(int64_t new_buffer_size)</argsstring>
        <name>SetBufferSize</name>
        <param>
          <type>int64_t</type>
          <declname>new_buffer_size</declname>
        </param>
        <briefdescription>
<para>Resize internal read buffer; calls to Read(...) will read at least. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">new_buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the new read buffer size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a7f4072b96ce0f3b1ead0e5392399ba17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::io::BufferedInputStream::bytes_buffered</definition>
        <argsstring>() const</argsstring>
        <name>bytes_buffered</name>
        <briefdescription>
<para>Return the number of remaining bytes in the read buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1ab5ebda44de23a2a8fd3ec0a2e6832aea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::io::BufferedInputStream::buffer_size</definition>
        <argsstring>() const</argsstring>
        <name>buffer_size</name>
        <briefdescription>
<para>Return the current size of the internal buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a089e65582532e9a786aab243b9b113bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> &gt;</type>
        <definition>std::shared_ptr&lt;InputStream&gt; arrow::io::BufferedInputStream::Detach</definition>
        <argsstring>()</argsstring>
        <name>Detach</name>
        <briefdescription>
<para>Release the raw <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Any data buffered will be discarded. Further operations on this object are invalid <simplesect kind="return"><para>raw the underlying <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1ae2d0f3caa78eed05bc39f152deb43e8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> &gt;</type>
        <definition>std::shared_ptr&lt;InputStream&gt; arrow::io::BufferedInputStream::raw</definition>
        <argsstring>() const</argsstring>
        <name>raw</name>
        <briefdescription>
<para>Return the unbuffered <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a5e40d419e1d91264f0535c047243c540" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::BufferedInputStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a8921a8ed2fb2cea91a5943484338723c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_buffered_input_stream" kindref="compound">BufferedInputStream</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;BufferedInputStream&gt; &gt; arrow::io::BufferedInputStream::Create</definition>
        <argsstring>(int64_t buffer_size, MemoryPool *pool, std::shared_ptr&lt; InputStream &gt; raw, int64_t raw_read_bound=-1)</argsstring>
        <name>Create</name>
        <param>
          <type>int64_t</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> &gt;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>raw_read_bound</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1io_1_1_buffered_input_stream" kindref="compound">BufferedInputStream</ref> from a raw <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the temporary read buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for allocations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">raw</parametername>
</parameternamelist>
<parameterdescription>
<para>a raw <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">raw_read_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>a bound on the maximum number of bytes to read from the raw input stream. The default -1 indicates that it is unbounded </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created <ref refid="classarrow_1_1io_1_1_buffered_input_stream" kindref="compound">BufferedInputStream</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1aafd4af03d5dc67de86a61e0101f41224" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::BufferedInputStream::BufferedInputStream</definition>
        <argsstring>(std::shared_ptr&lt; InputStream &gt; raw, MemoryPool *pool, int64_t raw_total_bytes_bound)</argsstring>
        <name>BufferedInputStream</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> &gt;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>raw_total_bytes_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a37874020b71b80a3500e166cfd18201c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferedInputStream::DoClose</definition>
        <argsstring>()</argsstring>
        <name>DoClose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a2d71891a1b2a41029a80ad6098b3155f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::BufferedInputStream::DoAbort</definition>
        <argsstring>() override</argsstring>
        <name>DoAbort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1ad979c807935a998e0d90a168a3ed5894" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::BufferedInputStream::DoTell</definition>
        <argsstring>() const</argsstring>
        <name>DoTell</name>
        <briefdescription>
<para>Returns the position of the buffered stream, though the position of the unbuffered stream may be further advanced. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a330dd2a4000a94106a135b0b8fd55ac2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::BufferedInputStream::DoRead</definition>
        <argsstring>(int64_t nbytes, void *out)</argsstring>
        <name>DoRead</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a8bf9422b6afcece6f02bd5ad0e508930" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::BufferedInputStream::DoRead</definition>
        <argsstring>(int64_t nbytes)</argsstring>
        <name>DoRead</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Read into buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_buffered_input_stream_1a2b1fbc8952e7553b8980080724c84d60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; util::string_view &gt;</type>
        <definition>Result&lt;util::string_view&gt; arrow::io::BufferedInputStream::DoPeek</definition>
        <argsstring>(int64_t nbytes) override</argsstring>
        <name>DoPeek</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Return a zero-copy string view referencing buffered data, but do not advance the position of the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Buffers data and expands the buffer size if necessary </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/buffered.h" line="157" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> that performs buffered reads from an unbuffered <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref>, which can mitigate the overhead of many small reads in some cases. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="461">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="457">
        <label>arrow::io::BufferedInputStream</label>
        <link refid="classarrow_1_1io_1_1_buffered_input_stream"/>
        <childnode refid="458" relation="public-inheritance">
        </childnode>
      </node>
      <node id="458">
        <label>arrow::io::internal::InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</label>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="460">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="459">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="460" relation="public-inheritance">
        </childnode>
        <childnode refid="461" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="466">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="462">
        <label>arrow::io::BufferedInputStream</label>
        <link refid="classarrow_1_1io_1_1_buffered_input_stream"/>
        <childnode refid="463" relation="public-inheritance">
        </childnode>
      </node>
      <node id="463">
        <label>arrow::io::internal::InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</label>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
      </node>
      <node id="465">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="464">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="465" relation="public-inheritance">
        </childnode>
        <childnode refid="466" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/io/buffered.h" line="97" column="1" bodyfile="/arrow/cpp/src/arrow/io/buffered.h" bodystart="96" bodyend="161"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>arrow::io::BufferedInputStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1ab5e2e1bdb05f7847363461bc3b90d386" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Advance</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1ab5ebda44de23a2a8fd3ec0a2e6832aea" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>buffer_size</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1aafd4af03d5dc67de86a61e0101f41224" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>BufferedInputStream</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a7f4072b96ce0f3b1ead0e5392399ba17" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>bytes_buffered</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78" prot="public" virt="pure-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a5e40d419e1d91264f0535c047243c540" prot="public" virt="virtual"><scope>arrow::io::BufferedInputStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a8921a8ed2fb2cea91a5943484338723c" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Create</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a089e65582532e9a786aab243b9b113bc" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Detach</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a2d71891a1b2a41029a80ad6098b3155f" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoAbort</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a37874020b71b80a3500e166cfd18201c" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoClose</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a2b1fbc8952e7553b8980080724c84d60" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoPeek</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a330dd2a4000a94106a135b0b8fd55ac2" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoRead</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a8bf9422b6afcece6f02bd5ad0e508930" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoRead</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1ad979c807935a998e0d90a168a3ed5894" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>DoTell</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a3bf7eb2f73ede43086396b5323c4465c" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Impl</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1ab2f75ba6783d4f3b34cb65201cf79bf9" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>impl_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aeb778572d0e9bf4902dbfbbc5353d7fd" prot="protected" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>InputStream</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1ad5da4ac4504d8557df64e6c268bcbdd0" prot="private" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>InputStreamConcurrencyWrapper&lt; BufferedInputStream &gt;</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aba80e2518abc166625077bd065ae3721" prot="public" virt="virtual"><scope>arrow::io::BufferedInputStream</scope><name>Peek</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1ae2d0f3caa78eed05bc39f152deb43e8d" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>raw</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8" prot="public" virt="pure-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1aca2d005299c3af1092bedff34b5b015b" prot="public" virt="pure-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a3b07e80e7c81f57cc04cc4eeb310aac4" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>SetBufferSize</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1a2b9978739db7fa75ba81e794bfba2a64" prot="public" virt="virtual"><scope>arrow::io::BufferedInputStream</scope><name>supports_zero_copy</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6" prot="public" virt="pure-virtual"><scope>arrow::io::BufferedInputStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_buffered_input_stream_1a71c6c6561547793f084cc8b7708a887e" prot="public" virt="non-virtual"><scope>arrow::io::BufferedInputStream</scope><name>~BufferedInputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::BufferedInputStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1a96a411d4494a9872d7eef4f8bb6396b4" prot="public" virt="virtual"><scope>arrow::io::BufferedInputStream</scope><name>~Readable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
