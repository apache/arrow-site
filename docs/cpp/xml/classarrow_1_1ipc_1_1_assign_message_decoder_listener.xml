<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1_assign_message_decoder_listener" kind="class" language="C++" prot="public">
    <compoundname>arrow::ipc::AssignMessageDecoderListener</compoundname>
    <basecompoundref refid="classarrow_1_1ipc_1_1_message_decoder_listener" prot="public" virt="non-virtual">arrow::ipc::MessageDecoderListener</basecompoundref>
    <includes refid="message_8h" local="no">arrow/ipc/message.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1ae6a6e16cf0e38aeb10093b40ba85cf2a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref> &gt; *</type>
        <definition>std::unique_ptr&lt;Message&gt;* arrow::ipc::AssignMessageDecoderListener::message_</definition>
        <argsstring></argsstring>
        <name>message_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/message.h" line="267" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/message.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a2bef6776103871664ffa2a84dc584728" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::AssignMessageDecoderListener::AssignMessageDecoderListener</definition>
        <argsstring>(std::unique_ptr&lt; Message &gt; *message)</argsstring>
        <name>AssignMessageDecoderListener</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref> &gt; *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Construct a listener that assigns a decoded message to the specified location. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>a location to store the received message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/message.h" line="256" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/message.h" bodystart="256" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a64877b678bf01f4b78a98bf2c7bcd317" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::ipc::AssignMessageDecoderListener::~AssignMessageDecoderListener</definition>
        <argsstring>()=default</argsstring>
        <name>~AssignMessageDecoderListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/message.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1af9c204e1a659852102a0226147ab3f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ipc::AssignMessageDecoderListener::OnMessageDecoded</definition>
        <argsstring>(std::unique_ptr&lt; Message &gt; message) override</argsstring>
        <name>OnMessageDecoded</name>
        <reimplements refid="classarrow_1_1ipc_1_1_message_decoder_listener_1a7239701fd131b1fe8b99ffcb05ba711f">OnMessageDecoded</reimplements>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref> &gt;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Called when a message is decoded. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref> calls this method when it decodes a message. This method is called multiple times when the target stream has multiple messages.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>a decoded message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/message.h" line="261" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/message.h" bodystart="261" bodyend="264"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a8e8110878a6cb2c3b0aad3649b6788a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ipc::AssignMessageDecoderListener::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(AssignMessageDecoderListener)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" kindref="compound">AssignMessageDecoderListener</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/message.h" line="269" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Assign a message decoded by <ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>This API is EXPERIMENTAL.</para><para><simplesect kind="since"><para>0.17.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="189">
        <label>arrow::ipc::MessageDecoderListener</label>
        <link refid="classarrow_1_1ipc_1_1_message_decoder_listener"/>
      </node>
      <node id="188">
        <label>arrow::ipc::AssignMessageDecoderListener</label>
        <link refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener"/>
        <childnode refid="189" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="191">
        <label>arrow::ipc::MessageDecoderListener</label>
        <link refid="classarrow_1_1ipc_1_1_message_decoder_listener"/>
      </node>
      <node id="190">
        <label>arrow::ipc::AssignMessageDecoderListener</label>
        <link refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/ipc/message.h" line="250" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/message.h" bodystart="250" bodyend="270"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a8e8110878a6cb2c3b0aad3649b6788a2" prot="private" virt="non-virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a2bef6776103871664ffa2a84dc584728" prot="public" virt="non-virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>AssignMessageDecoderListener</name></member>
      <member refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1ae6a6e16cf0e38aeb10093b40ba85cf2a" prot="private" virt="non-virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>message_</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1a3a599c17905e652de40ea7f361cb6869" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnBody</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1afd88b9933fa989c813aab7ae2b7075fc" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnEOS</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1acf3018e14f2ce425d8c93f6faed0b46e" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnInitial</name></member>
      <member refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1af9c204e1a659852102a0226147ab3f4b" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnMessageDecoded</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1a64849f8bc352000ba1b86b4a392c1d38" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnMetadata</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1aa09051dd0f21fc8f736f4c98196d3cd6" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>OnMetadataLength</name></member>
      <member refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a64877b678bf01f4b78a98bf2c7bcd317" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>~AssignMessageDecoderListener</name></member>
      <member refid="classarrow_1_1ipc_1_1_message_decoder_listener_1a38a1ecfe30292712a108304f9d90cc2c" prot="public" virt="virtual"><scope>arrow::ipc::AssignMessageDecoderListener</scope><name>~MessageDecoderListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
