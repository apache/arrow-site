<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_readable_file" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::ReadableFile</compoundname>
    <basecompoundref prot="public" virt="non-virtual">arrow::io::internal::RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</basecompoundref>
    <includes refid="file_8h" local="no">arrow/io/file.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1io_1_1_readable_file_1ad6cac72674cc8abf33a77422c0e7f4ed" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend arrow::io::ReadableFile::RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</definition>
        <argsstring></argsstring>
        <name>RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="114" column="1" bodyfile="/arrow/cpp/src/arrow/io/file.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_readable_file_1a516f0b1080adb64adfea00d75e154c12" prot="private" static="no" mutable="no">
        <type>class <ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref></type>
        <definition>class ARROW_NO_EXPORT arrow::io::ReadableFile::ReadableFileImpl</definition>
        <argsstring></argsstring>
        <name>ReadableFileImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="130" column="1" bodyfile="/arrow/cpp/src/arrow/io/file.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1io_1_1_readable_file_1a22d1d3331639da9c949242bbe30ef2b5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; ReadableFileImpl &gt;</type>
        <definition>std::unique_ptr&lt;ReadableFileImpl&gt; arrow::io::ReadableFile::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="133" column="1" bodyfile="/arrow/cpp/src/arrow/io/file.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a77d8563f0ecbee2a89d6be027e48aed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::ReadableFile::~ReadableFile</definition>
        <argsstring>() override</argsstring>
        <name>~ReadableFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1aeb1f2f17a1373e4bd9ae6e38e84d12d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::ReadableFile::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a7f10720e35c4dd6d3517b04319e2a8d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::io::ReadableFile::file_descriptor</definition>
        <argsstring>() const</argsstring>
        <name>file_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="111" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a8ea5d570ce650efc53904dc42819afce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_readable_file" kindref="compound">ReadableFile</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;ReadableFile&gt; &gt; arrow::io::ReadableFile::Open</definition>
        <argsstring>(const std::string &amp;path, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Open</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Open a local file for reading. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>with UTF8 encoding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> for memory allocations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1io_1_1_readable_file" kindref="compound">ReadableFile</ref> instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a4f5392048d135e7df52eb74738136e97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_readable_file" kindref="compound">ReadableFile</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;ReadableFile&gt; &gt; arrow::io::ReadableFile::Open</definition>
        <argsstring>(int fd, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Open</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
<para>Open a local file for reading. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> for memory allocations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1io_1_1_readable_file" kindref="compound">ReadableFile</ref> instance</para></simplesect>
The file descriptor becomes owned by the <ref refid="classarrow_1_1io_1_1_readable_file" kindref="compound">ReadableFile</ref>, and will be closed on <ref refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78" kindref="member">Close()</ref> or destruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1aea11d1e983fdddc724b9f01a4085b3ac" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::ReadableFile::ReadableFile</definition>
        <argsstring>(MemoryPool *pool)</argsstring>
        <name>ReadableFile</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1ac09d191f56180bd5943b6106e42ec130" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::ReadableFile::DoClose</definition>
        <argsstring>()</argsstring>
        <name>DoClose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1ad41303bae5915b64c82c1c45d86a051f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::ReadableFile::DoTell</definition>
        <argsstring>() const</argsstring>
        <name>DoTell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1ae33e4354edd4f385fd0e47e5d79e29e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::ReadableFile::DoRead</definition>
        <argsstring>(int64_t nbytes, void *buffer)</argsstring>
        <name>DoRead</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a0c05001094e8b59ae05943554a759c01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::ReadableFile::DoRead</definition>
        <argsstring>(int64_t nbytes)</argsstring>
        <name>DoRead</name>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1af8f7d8dce91ac823ee768973e33587e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::ReadableFile::DoReadAt</definition>
        <argsstring>(int64_t position, int64_t nbytes, void *out)</argsstring>
        <name>DoReadAt</name>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Thread-safe implementation of ReadAt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a035e0922c217a2b0d3a3cdc0620f7315" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::ReadableFile::DoReadAt</definition>
        <argsstring>(int64_t position, int64_t nbytes)</argsstring>
        <name>DoReadAt</name>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Thread-safe implementation of ReadAt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1a70a4de7997176c9f84b749f7a52bbf7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::ReadableFile::DoGetSize</definition>
        <argsstring>()</argsstring>
        <name>DoGetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_readable_file_1aae94061f9a64d17752ac3ba64b794f02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::ReadableFile::DoSeek</definition>
        <argsstring>(int64_t position)</argsstring>
        <name>DoSeek</name>
        <param>
          <type>int64_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/file.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An operating system file open in read-only mode. </para>    </briefdescription>
    <detaileddescription>
<para>Reads through this implementation are unbuffered. If many small reads need to be issued, it is recommended to use a buffering layer for good performance. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3807">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="3806">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3808">
        <label>arrow::io::Seekable</label>
        <link refid="classarrow_1_1io_1_1_seekable"/>
      </node>
      <node id="3801">
        <label>arrow::io::ReadableFile</label>
        <link refid="classarrow_1_1io_1_1_readable_file"/>
        <childnode refid="3802" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3804">
        <label>std::enable_shared_from_this&lt; RandomAccessFile &gt;</label>
      </node>
      <node id="3805">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="3806" relation="public-inheritance">
        </childnode>
        <childnode refid="3807" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3803">
        <label>arrow::io::RandomAccessFile</label>
        <link refid="classarrow_1_1io_1_1_random_access_file"/>
        <childnode refid="3804" relation="public-inheritance">
        </childnode>
        <childnode refid="3805" relation="public-inheritance">
        </childnode>
        <childnode refid="3808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3802">
        <label>arrow::io::internal::RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</label>
        <childnode refid="3803" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3815">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="3814">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="3816">
        <label>arrow::io::Seekable</label>
        <link refid="classarrow_1_1io_1_1_seekable"/>
      </node>
      <node id="3809">
        <label>arrow::io::ReadableFile</label>
        <link refid="classarrow_1_1io_1_1_readable_file"/>
        <childnode refid="3810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3812">
        <label>std::enable_shared_from_this&lt; RandomAccessFile &gt;</label>
      </node>
      <node id="3813">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="3814" relation="public-inheritance">
        </childnode>
        <childnode refid="3815" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3811">
        <label>arrow::io::RandomAccessFile</label>
        <link refid="classarrow_1_1io_1_1_random_access_file"/>
        <childnode refid="3812" relation="public-inheritance">
        </childnode>
        <childnode refid="3813" relation="public-inheritance">
        </childnode>
        <childnode refid="3816" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3810">
        <label>arrow::io::internal::RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</label>
        <childnode refid="3811" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/io/file.h" line="88" column="1" bodyfile="/arrow/cpp/src/arrow/io/file.h" bodystart="87" bodyend="134"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1ab5e2e1bdb05f7847363461bc3b90d386" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>Advance</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1aeb1f2f17a1373e4bd9ae6e38e84d12d2" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1ac09d191f56180bd5943b6106e42ec130" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoClose</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a70a4de7997176c9f84b749f7a52bbf7e" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoGetSize</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1ae33e4354edd4f385fd0e47e5d79e29e1" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoRead</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a0c05001094e8b59ae05943554a759c01" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoRead</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1af8f7d8dce91ac823ee768973e33587e9" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoReadAt</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a035e0922c217a2b0d3a3cdc0620f7315" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoReadAt</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1aae94061f9a64d17752ac3ba64b794f02" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoSeek</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1ad41303bae5915b64c82c1c45d86a051f" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>DoTell</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a7f10720e35c4dd6d3517b04319e2a8d1" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>file_descriptor</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a2a476c2a6ad474e123d1aab20be289c4" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>GetSize</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a077348c5eb5ad0147582a3e5aa073847" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>GetStream</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a22d1d3331639da9c949242bbe30ef2b5" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>impl_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aeb778572d0e9bf4902dbfbbc5353d7fd" prot="protected" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>InputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a8ea5d570ce650efc53904dc42819afce" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>Open</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a4f5392048d135e7df52eb74738136e97" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>Open</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aba80e2518abc166625077bd065ae3721" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>Peek</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a32c1cb28aa86db601b68a96615a3161c" prot="protected" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>RandomAccessFile</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1ad6cac72674cc8abf33a77422c0e7f4ed" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>RandomAccessFileConcurrencyWrapper&lt; ReadableFile &gt;</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1aca2d005299c3af1092bedff34b5b015b" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1aea11d1e983fdddc724b9f01a4085b3ac" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>ReadableFile</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a516f0b1080adb64adfea00d75e154c12" prot="private" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>ReadableFileImpl</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1ae37e086e71206380188a28fa5b125ac4" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>ReadAsync</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1adb9d40656e516d6b77ee2bdfc00126f3" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>ReadAt</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a562433f2be06021acb9abd20bd5a8219" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>ReadAt</name></member>
      <member refid="classarrow_1_1io_1_1_seekable_1a410ba0e0932dbcb939b570ee3c8c6d25" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>Seek</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1a2b9978739db7fa75ba81e794bfba2a64" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>supports_zero_copy</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::ReadableFile</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_random_access_file_1a30c6917dfe0b6e508dac2ecc81917187" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>~RandomAccessFile</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1a96a411d4494a9872d7eef4f8bb6396b4" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>~Readable</name></member>
      <member refid="classarrow_1_1io_1_1_readable_file_1a77d8563f0ecbee2a89d6be027e48aed4" prot="public" virt="non-virtual"><scope>arrow::io::ReadableFile</scope><name>~ReadableFile</name></member>
      <member refid="classarrow_1_1io_1_1_seekable_1a7642c30d2f852e0f79fec036a94ca093" prot="public" virt="virtual"><scope>arrow::io::ReadableFile</scope><name>~Seekable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
