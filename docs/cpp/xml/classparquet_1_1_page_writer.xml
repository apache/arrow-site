<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_page_writer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::PageWriter</compoundname>
    <includes refid="column__writer_8h" local="no">parquet/column_writer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_page_writer_1a2223c7461a013d75f63b2e24afdadca5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual parquet::PageWriter::~PageWriter</definition>
        <argsstring>()</argsstring>
        <name>~PageWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="84" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_writer_1a471c137208bb7954cf47fd74f3359b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::PageWriter::Close</definition>
        <argsstring>(bool has_dictionary, bool fallback)=0</argsstring>
        <name>Close</name>
        <param>
          <type>bool</type>
          <declname>has_dictionary</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_writer_1aa5b1b43f1809ac64abb737f85aab1fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::PageWriter::WriteDataPage</definition>
        <argsstring>(const DataPage &amp;page)=0</argsstring>
        <name>WriteDataPage</name>
        <param>
          <type>const <ref refid="classparquet_1_1_data_page" kindref="compound">DataPage</ref> &amp;</type>
          <declname>page</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_writer_1af9f01b35fd3890e1109b08af165e4e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int64_t</type>
        <definition>virtual int64_t parquet::PageWriter::WriteDictionaryPage</definition>
        <argsstring>(const DictionaryPage &amp;page)=0</argsstring>
        <name>WriteDictionaryPage</name>
        <param>
          <type>const <ref refid="classparquet_1_1_dictionary_page" kindref="compound">DictionaryPage</ref> &amp;</type>
          <declname>page</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_writer_1abff847eb1d81a9531c1083965552804f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool parquet::PageWriter::has_compressor</definition>
        <argsstring>()=0</argsstring>
        <name>has_compressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_writer_1a28dc85d16c2c6b48da13a0692fb3a5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::PageWriter::Compress</definition>
        <argsstring>(const Buffer &amp;src_buffer, ResizableBuffer *dest_buffer)=0</argsstring>
        <name>Compress</name>
        <param>
          <type>const <ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref> &amp;</type>
          <declname>src_buffer</declname>
        </param>
        <param>
          <type><ref refid="namespaceparquet_1a1c3b994581f3fc6e9842eb902ef7916f" kindref="member">ResizableBuffer</ref> *</type>
          <declname>dest_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_page_writer_1a9cea24bede0434a77997148da845291f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_page_writer" kindref="compound">PageWriter</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;PageWriter&gt; parquet::PageWriter::Open</definition>
        <argsstring>(std::shared_ptr&lt; ArrowOutputStream &gt; sink, Compression::type codec, int compression_level, ColumnChunkMetaDataBuilder *metadata, int16_t row_group_ordinal=-1, int16_t column_chunk_ordinal=-1, ::arrow::MemoryPool *pool=::arrow::default_memory_pool(), bool buffered_row_group=false, std::shared_ptr&lt; Encryptor &gt; header_encryptor=NULLPTR, std::shared_ptr&lt; Encryptor &gt; data_encryptor=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="namespaceparquet_1ad02e9bf40eaac38e07be6cc973d8884e" kindref="member">ArrowOutputStream</ref> &gt;</type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
          <declname>codec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compression_level</declname>
        </param>
        <param>
          <type><ref refid="classparquet_1_1_column_chunk_meta_data_builder" kindref="compound">ColumnChunkMetaDataBuilder</ref> *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>row_group_ordinal</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int16_t</type>
          <declname>column_chunk_ordinal</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>buffered_row_group</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_encryptor" kindref="compound">Encryptor</ref> &gt;</type>
          <declname>header_encryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_encryptor" kindref="compound">Encryptor</ref> &gt;</type>
          <declname>data_encryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_writer.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/column_writer.h" line="82" column="1" bodyfile="/arrow/cpp/src/parquet/column_writer.h" bodystart="82" bodyend="107"/>
    <listofallmembers>
      <member refid="classparquet_1_1_page_writer_1a471c137208bb7954cf47fd74f3359b53" prot="public" virt="pure-virtual"><scope>parquet::PageWriter</scope><name>Close</name></member>
      <member refid="classparquet_1_1_page_writer_1a28dc85d16c2c6b48da13a0692fb3a5e2" prot="public" virt="pure-virtual"><scope>parquet::PageWriter</scope><name>Compress</name></member>
      <member refid="classparquet_1_1_page_writer_1abff847eb1d81a9531c1083965552804f" prot="public" virt="pure-virtual"><scope>parquet::PageWriter</scope><name>has_compressor</name></member>
      <member refid="classparquet_1_1_page_writer_1a9cea24bede0434a77997148da845291f" prot="public" virt="non-virtual"><scope>parquet::PageWriter</scope><name>Open</name></member>
      <member refid="classparquet_1_1_page_writer_1aa5b1b43f1809ac64abb737f85aab1fb8" prot="public" virt="pure-virtual"><scope>parquet::PageWriter</scope><name>WriteDataPage</name></member>
      <member refid="classparquet_1_1_page_writer_1af9f01b35fd3890e1109b08af165e4e90" prot="public" virt="pure-virtual"><scope>parquet::PageWriter</scope><name>WriteDictionaryPage</name></member>
      <member refid="classparquet_1_1_page_writer_1a2223c7461a013d75f63b2e24afdadca5" prot="public" virt="virtual"><scope>parquet::PageWriter</scope><name>~PageWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
