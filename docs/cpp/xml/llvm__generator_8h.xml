<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="llvm__generator_8h" kind="file" language="C++">
    <compoundname>llvm_generator.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="annotator_8h" local="yes">gandiva/annotator.h</includes>
    <includes refid="compiled__expr_8h" local="yes">gandiva/compiled_expr.h</includes>
    <includes refid="configuration_8h" local="yes">gandiva/configuration.h</includes>
    <includes refid="dex__visitor_8h" local="yes">gandiva/dex_visitor.h</includes>
    <includes refid="engine_8h" local="yes">gandiva/engine.h</includes>
    <includes refid="execution__context_8h" local="yes">gandiva/execution_context.h</includes>
    <includes refid="function__registry_8h" local="yes">gandiva/function_registry.h</includes>
    <includes refid="gandiva__aliases_8h" local="yes">gandiva/gandiva_aliases.h</includes>
    <includes refid="llvm__types_8h" local="yes">gandiva/llvm_types.h</includes>
    <includes refid="lvalue_8h" local="yes">gandiva/lvalue.h</includes>
    <includes refid="selection__vector_8h" local="yes">gandiva/selection_vector.h</includes>
    <includes refid="value__validity__pair_8h" local="yes">gandiva/value_validity_pair.h</includes>
    <includes refid="gandiva_2visibility_8h" local="yes">gandiva/visibility.h</includes>
    <incdepgraph>
      <node id="17368">
        <label>list</label>
      </node>
      <node id="17372">
        <label>atomic</label>
      </node>
      <node id="17384">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
      </node>
      <node id="17439">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="17444">
        <label>gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17445" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17442" relation="include">
        </childnode>
        <childnode refid="17435" relation="include">
        </childnode>
        <childnode refid="17446" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17437">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="17400">
        <label>limits</label>
      </node>
      <node id="17412">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17401" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17393" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17413" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17438">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="17362">
        <label>cstdint</label>
      </node>
      <node id="17414">
        <label>arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17400" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17415" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17412" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17392" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17404" relation="include">
        </childnode>
      </node>
      <node id="17401">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17402" relation="include">
        </childnode>
        <childnode refid="17403" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17404" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17394">
        <label>endian.h</label>
      </node>
      <node id="17418">
        <label>arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
      </node>
      <node id="17361">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17367" relation="include">
        </childnode>
        <childnode refid="17434" relation="include">
        </childnode>
        <childnode refid="17442" relation="include">
        </childnode>
        <childnode refid="17443" relation="include">
        </childnode>
        <childnode refid="17444" relation="include">
        </childnode>
        <childnode refid="17426" relation="include">
        </childnode>
        <childnode refid="17448" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17446" relation="include">
        </childnode>
        <childnode refid="17453" relation="include">
        </childnode>
        <childnode refid="17440" relation="include">
        </childnode>
        <childnode refid="17441" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17436">
        <label>llvm/ExecutionEngine/ExecutionEngine.h</label>
      </node>
      <node id="17382">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17384" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17385" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17367">
        <label>gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="17368" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17369" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17424" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17406">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="17407" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
      </node>
      <node id="17426">
        <label>gandiva/execution_context.h</label>
        <link refid="execution__context_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17427" relation="include">
        </childnode>
      </node>
      <node id="17387">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17399">
        <label>cmath</label>
      </node>
      <node id="17398">
        <label>cassert</label>
      </node>
      <node id="17388">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
      </node>
      <node id="17420">
        <label>arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
      </node>
      <node id="17415">
        <label>numeric</label>
      </node>
      <node id="17449">
        <label>gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17369" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17450" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17452" relation="include">
        </childnode>
      </node>
      <node id="17364">
        <label>string</label>
      </node>
      <node id="17405">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="17376">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17389">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="17390" relation="include">
        </childnode>
      </node>
      <node id="17447">
        <label>map</label>
      </node>
      <node id="17435">
        <label>gandiva/llvm_includes.h</label>
        <link refid="llvm__includes_8h"/>
        <childnode refid="17436" relation="include">
        </childnode>
        <childnode refid="17437" relation="include">
        </childnode>
        <childnode refid="17438" relation="include">
        </childnode>
        <childnode refid="17439" relation="include">
        </childnode>
      </node>
      <node id="17430">
        <label>unordered_set</label>
      </node>
      <node id="17434">
        <label>gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17435" relation="include">
        </childnode>
        <childnode refid="17440" relation="include">
        </childnode>
        <childnode refid="17441" relation="include">
        </childnode>
      </node>
      <node id="17443">
        <label>gandiva/dex_visitor.h</label>
        <link refid="dex__visitor_8h"/>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17391">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17386">
        <label>ostream</label>
      </node>
      <node id="17419">
        <label>arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="17400" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17412" relation="include">
        </childnode>
      </node>
      <node id="17442">
        <label>gandiva/configuration.h</label>
        <link refid="configuration_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17377">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="17409">
        <label>arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17410" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17414" relation="include">
        </childnode>
        <childnode refid="17416" relation="include">
        </childnode>
        <childnode refid="17417" relation="include">
        </childnode>
        <childnode refid="17419" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17420" relation="include">
        </childnode>
        <childnode refid="17421" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17425">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17386" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17446">
        <label>gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="17447" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17435" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17402">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17403" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17384" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17422">
        <label>arrow/pretty_print.h</label>
        <link refid="pretty__print_8h"/>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17452">
        <label>gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17450" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17428">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="17372" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17393">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="17394" relation="include">
        </childnode>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17396" relation="include">
        </childnode>
        <childnode refid="17397" relation="include">
        </childnode>
        <childnode refid="17398" relation="include">
        </childnode>
        <childnode refid="17399" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17400" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17401" relation="include">
        </childnode>
        <childnode refid="17380" relation="include">
        </childnode>
        <childnode refid="17384" relation="include">
        </childnode>
        <childnode refid="17406" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17385" relation="include">
        </childnode>
        <childnode refid="17404" relation="include">
        </childnode>
        <childnode refid="17408" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17417">
        <label>arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17410" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
      </node>
      <node id="17427">
        <label>gandiva/simple_arena.h</label>
        <link refid="simple__arena_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17428" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
      </node>
      <node id="17397">
        <label>bitset</label>
      </node>
      <node id="17407">
        <label>tuple</label>
      </node>
      <node id="17448">
        <label>gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17449" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17452" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17370">
        <label>gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17409" relation="include">
        </childnode>
        <childnode refid="17422" relation="include">
        </childnode>
        <childnode refid="17423" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
      </node>
      <node id="17432">
        <label>gandiva/logging.h</label>
        <link refid="gandiva_2logging_8h"/>
        <childnode refid="17425" relation="include">
        </childnode>
      </node>
      <node id="17410">
        <label>arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
      </node>
      <node id="17365">
        <label>vector</label>
      </node>
      <node id="17411">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="17395" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17400" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17412" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
        <childnode refid="17392" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17408" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17416">
        <label>arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17414" relation="include">
        </childnode>
      </node>
      <node id="17381">
        <label>new</label>
      </node>
      <node id="17375">
        <label>utility</label>
      </node>
      <node id="17404">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17405" relation="include">
        </childnode>
      </node>
      <node id="17396">
        <label>array</label>
      </node>
      <node id="17451">
        <label>sstream</label>
      </node>
      <node id="17392">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17393" relation="include">
        </childnode>
      </node>
      <node id="17423">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17380" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17403">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="17441">
        <label>gandiva/value_validity_pair.h</label>
        <link refid="value__validity__pair_8h"/>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17373">
        <label>iosfwd</label>
      </node>
      <node id="17431">
        <label>gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17425" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
      </node>
      <node id="17371">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="17372" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17376" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17392" relation="include">
        </childnode>
        <childnode refid="17393" relation="include">
        </childnode>
        <childnode refid="17388" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17404" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17369">
        <label>unordered_map</label>
      </node>
      <node id="17390">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="17380">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="17381" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17384" relation="include">
        </childnode>
      </node>
      <node id="17440">
        <label>gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17382" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17379">
        <label>climits</label>
      </node>
      <node id="17413">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="17383" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
      </node>
      <node id="17433">
        <label>gandiva/visibility.h</label>
        <link refid="gandiva_2visibility_8h"/>
      </node>
      <node id="17378">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="17372" relation="include">
        </childnode>
        <childnode refid="17379" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17380" relation="include">
        </childnode>
        <childnode refid="17387" relation="include">
        </childnode>
        <childnode refid="17388" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17389" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
        <childnode refid="17391" relation="include">
        </childnode>
      </node>
      <node id="17453">
        <label>gandiva/lvalue.h</label>
        <link refid="lvalue_8h"/>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17435" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
      </node>
      <node id="17450">
        <label>gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="17451" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17432" relation="include">
        </childnode>
        <childnode refid="17433" relation="include">
        </childnode>
      </node>
      <node id="17374">
        <label>type_traits</label>
      </node>
      <node id="17445">
        <label>set</label>
      </node>
      <node id="17429">
        <label>gandiva/gandiva_aliases.h</label>
        <link refid="gandiva__aliases_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17430" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
      </node>
      <node id="17395">
        <label>algorithm</label>
      </node>
      <node id="17424">
        <label>gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17425" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17426" relation="include">
        </childnode>
        <childnode refid="17429" relation="include">
        </childnode>
        <childnode refid="17431" relation="include">
        </childnode>
      </node>
      <node id="17383">
        <label>cstring</label>
      </node>
      <node id="17385">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17386" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17377" relation="include">
        </childnode>
      </node>
      <node id="17363">
        <label>memory</label>
      </node>
      <node id="17421">
        <label>arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17411" relation="include">
        </childnode>
        <childnode refid="17412" relation="include">
        </childnode>
      </node>
      <node id="17366">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="17362" relation="include">
        </childnode>
      </node>
      <node id="17408">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="17374" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classgandiva_1_1_l_l_v_m_generator" prot="public">gandiva::LLVMGenerator</innerclass>
    <innerclass refid="classgandiva_1_1_l_l_v_m_generator_1_1_visitor" prot="private">gandiva::LLVMGenerator::Visitor</innerclass>
    <innernamespace refid="namespacegandiva">gandiva</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="annotator_8h" kindref="compound">gandiva/annotator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compiled__expr_8h" kindref="compound">gandiva/compiled_expr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="configuration_8h" kindref="compound">gandiva/configuration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dex__visitor_8h" kindref="compound">gandiva/dex_visitor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="engine_8h" kindref="compound">gandiva/engine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="execution__context_8h" kindref="compound">gandiva/execution_context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="function__registry_8h" kindref="compound">gandiva/function_registry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva__aliases_8h" kindref="compound">gandiva/gandiva_aliases.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="llvm__types_8h" kindref="compound">gandiva/llvm_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lvalue_8h" kindref="compound">gandiva/lvalue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="selection__vector_8h" kindref="compound">gandiva/selection_vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="value__validity__pair_8h" kindref="compound">gandiva/value_validity_pair.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva_2visibility_8h" kindref="compound">gandiva/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva" kindref="compound">gandiva</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctionHolder;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classgandiva_1_1_l_l_v_m_generator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Make(std::shared_ptr&lt;Configuration&gt;<sp/>config,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;LLVMGenerator&gt;*<sp/>llvm_generator);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Build(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aad814820a6a80cb656b0f09decdc4cb9" kindref="member">ExpressionVector</ref>&amp;<sp/>exprs,<sp/><ref refid="classgandiva_1_1_selection_vector_1a6b95945ed4cd8c0a38f643d25e3a8fa0" kindref="member">SelectionVector::Mode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classgandiva_1_1_l_l_v_m_generator_1a4939c905f0948c6e2f0589f18f9f721d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_l_l_v_m_generator_1a4939c905f0948c6e2f0589f18f9f721d" kindref="member">Build</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aad814820a6a80cb656b0f09decdc4cb9" kindref="member">ExpressionVector</ref>&amp;<sp/>exprs)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Build(exprs,<sp/>SelectionVector::Mode::MODE_NONE);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Execute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_record_batch" kindref="compound">arrow::RecordBatch</ref>&amp;<sp/>record_batch,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a0fbce3498a8553897e2ff8371059c8bd" kindref="member">ArrayDataVector</ref>&amp;<sp/>output_vector);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Execute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_record_batch" kindref="compound">arrow::RecordBatch</ref>&amp;<sp/>record_batch,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_selection_vector" kindref="compound">SelectionVector</ref>*<sp/>selection_vector,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a0fbce3498a8553897e2ff8371059c8bd" kindref="member">ArrayDataVector</ref>&amp;<sp/>output_vector);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classgandiva_1_1_l_l_v_m_generator_1a2696f98b03b882f6c8ac55596bdcef9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_selection_vector_1a6b95945ed4cd8c0a38f643d25e3a8fa0" kindref="member">SelectionVector::Mode</ref><sp/><ref refid="classgandiva_1_1_l_l_v_m_generator_1a2696f98b03b882f6c8ac55596bdcef9d" kindref="member">selection_vector_mode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>selection_vector_mode_;<sp/>}</highlight></codeline>
<codeline lineno="74" refid="classgandiva_1_1_l_l_v_m_generator_1a91d0e807407f387167aa70d5328ce6c3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_l_l_v_m_types" kindref="compound">LLVMTypes</ref>*<sp/><ref refid="classgandiva_1_1_l_l_v_m_generator_1a91d0e807407f387167aa70d5328ce6c3" kindref="member">types</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>engine_-&gt;types();<sp/>}</highlight></codeline>
<codeline lineno="75" refid="classgandiva_1_1_l_l_v_m_generator_1adb6dac4e70e9c952e4325cdaf4574e95" refkind="member"><highlight class="normal"><sp/><sp/>llvm::Module*<sp/><ref refid="classgandiva_1_1_l_l_v_m_generator_1adb6dac4e70e9c952e4325cdaf4574e95" kindref="member">module</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>engine_-&gt;module();<sp/>}</highlight></codeline>
<codeline lineno="76" refid="classgandiva_1_1_l_l_v_m_generator_1a4055cf80af0cf7f1f26fb578ec46e562" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_l_l_v_m_generator_1a4055cf80af0cf7f1f26fb578ec46e562" kindref="member">DumpIR</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>engine_-&gt;DumpIR();<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestLLVMGenerator,<sp/>VerifyPCFunctions);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestLLVMGenerator,<sp/>TestAdd);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a8d443b4cc1d87a7a17943b8fbdbf3910" kindref="member">FRIEND_TEST</ref>(TestLLVMGenerator,<sp/>TestNullInternal);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>llvm::LLVMContext*<sp/>context()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>engine_-&gt;context();<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>llvm::IRBuilder&lt;&gt;*<sp/>ir_builder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>engine_-&gt;ir_builder();<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Visitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_dex_visitor" kindref="compound">DexVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Visitor(<ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref>*<sp/>generator,<sp/>llvm::Function*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::BasicBlock*<sp/>entry_block,<sp/>llvm::Value*<sp/>arg_addrs,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Value*<sp/>arg_local_bitmaps,<sp/>std::vector&lt;llvm::Value*&gt;<sp/>slice_offsets,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Value*<sp/>arg_context_ptr,<sp/>llvm::Value*<sp/>loop_var);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_validity_dex" kindref="compound">VectorReadValidityDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_fixed_len_value_dex" kindref="compound">VectorReadFixedLenValueDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_vector_read_var_len_value_dex" kindref="compound">VectorReadVarLenValueDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_local_bit_map_validity_dex" kindref="compound">LocalBitMapValidityDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_true_dex" kindref="compound">TrueDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_false_dex" kindref="compound">FalseDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_literal_dex" kindref="compound">LiteralDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_non_nullable_func_dex" kindref="compound">NonNullableFuncDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_nullable_never_func_dex" kindref="compound">NullableNeverFuncDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_nullable_internal_func_dex" kindref="compound">NullableInternalFuncDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_if_dex" kindref="compound">IfDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_boolean_and_dex" kindref="compound">BooleanAndDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_boolean_or_dex" kindref="compound">BooleanOrDex</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int32_t&gt;</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;int64_t&gt;</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;std::string&gt;</ref>&amp;<sp/>dex)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitInExpression(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_in_expr_dex_base" kindref="compound">InExprDexBase&lt;Type&gt;</ref>&amp;<sp/>dex);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>result()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_arena_allocs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_arena_allocs_;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>BufferType<sp/>{<sp/>kBufferTypeValidity<sp/>=<sp/>0,<sp/>kBufferTypeData,<sp/>kBufferTypeOffsets<sp/>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::IRBuilder&lt;&gt;*<sp/>ir_builder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>generator_-&gt;ir_builder();<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Module*<sp/>module()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>generator_-&gt;module();<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>code<sp/>to<sp/>build<sp/>the<sp/>combined<sp/>validity<sp/>(bitwise<sp/>and)<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>validities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>BuildCombinedValidity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1acd54f0b5f98b8202b0cb8b6658dd368b" kindref="member">DexVector</ref>&amp;<sp/>validities);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>code<sp/>to<sp/>build<sp/>the<sp/>validity<sp/>and<sp/>the<sp/>value<sp/>for<sp/>the<sp/>given<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>BuildValueAndValidity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_value_validity_pair" kindref="compound">ValueValidityPair</ref>&amp;<sp/>pair);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>code<sp/>to<sp/>build<sp/>the<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;llvm::Value*&gt;<sp/>BuildParams(<ref refid="classgandiva_1_1_function_holder" kindref="compound">FunctionHolder</ref>*<sp/>holder,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab203e6bb3e1b7be4bcb869e3ff847396" kindref="member">ValueValidityPairVector</ref>&amp;<sp/>args,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_validity,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_context);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>code<sp/>to<sp/>onvoke<sp/>a<sp/>function<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>BuildFunctionCall(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_native_function" kindref="compound">NativeFunction</ref>*<sp/>func,<sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>arrow_return_type,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;llvm::Value*&gt;*<sp/>params);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>code<sp/>for<sp/>an<sp/>if-else<sp/>condition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>BuildIfElse(llvm::Value*<sp/>condition,<sp/>std::function&lt;<ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref>()&gt;<sp/>then_func,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref>()&gt;<sp/>else_func,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>arrow_return_type);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>the<sp/>entry_block<sp/>and<sp/>get<sp/>reference<sp/>of<sp/>the<sp/>validity/value/offsets<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>GetBufferReference(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/>BufferType<sp/>buffer_type,<sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>slice<sp/>offset<sp/>of<sp/>the<sp/>validity/value/offsets<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>GetSliceOffset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>the<sp/>entry_block<sp/>and<sp/>get<sp/>reference<sp/>to<sp/>the<sp/>local<sp/>bitmap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>GetLocalBitMapReference(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>bit<sp/>in<sp/>the<sp/>local<sp/>bitmap,<sp/>if<sp/>is_valid<sp/>is<sp/>&apos;false&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearLocalBitMapIfNotValid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_bitmap_idx,<sp/>llvm::Value*<sp/>is_valid);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgandiva_1_1_l_l_v_m_generator" kindref="compound">LLVMGenerator</ref>*<sp/>generator_;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>result_;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Function*<sp/>function_;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::BasicBlock*<sp/>entry_block_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>arg_addrs_;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>arg_local_bitmaps_;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;llvm::Value*&gt;<sp/>slice_offsets_;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>arg_context_ptr_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::Value*<sp/>loop_var_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_arena_allocs_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>code<sp/>for<sp/>one<sp/>expression<sp/>for<sp/>default<sp/>mode,<sp/>with<sp/>the<sp/>output<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>expression<sp/>going<sp/>to<sp/>&apos;output&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1a24a49ecaa4199b437adbddfe1481f52e" kindref="member">Add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a6735ddd686b37cdc7cda5f33008497c9" kindref="member">ExpressionPtr</ref><sp/>expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a35aabfbc0202ae826625ee230e45e40c" kindref="member">FieldDescriptorPtr</ref><sp/>output);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>LoadVectorAtIndex(llvm::Value*<sp/>arg_addrs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetValidityReference(llvm::Value*<sp/>arg_addrs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetDataReference(llvm::Value*<sp/>arg_addrs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/>field);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetOffsetsReference(llvm::Value*<sp/>arg_addrs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/>field);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetDataBufferPtrReference(llvm::Value*<sp/>arg_addrs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/>field);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CodeGenExprValue(<ref refid="namespacegandiva_1a90061130771aa24c22b3875b23b473f5" kindref="member">DexPtr</ref><sp/>value_expr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_buffers,<sp/><ref refid="namespacegandiva_1a35aabfbc0202ae826625ee230e45e40c" kindref="member">FieldDescriptorPtr</ref><sp/>output,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>suffix_idx,<sp/>llvm::Function**<sp/>fn,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgandiva_1_1_selection_vector_1a6b95945ed4cd8c0a38f643d25e3a8fa0" kindref="member">SelectionVector::Mode</ref><sp/>selection_vector_mode);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetLocalBitMapReference(llvm::Value*<sp/>arg_bitmaps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetPackedBitValue(llvm::Value*<sp/>bitmap,<sp/>llvm::Value*<sp/>position);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>GetPackedValidityBitValue(llvm::Value*<sp/>bitmap,<sp/>llvm::Value*<sp/>position);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPackedBitValue(llvm::Value*<sp/>bitmap,<sp/>llvm::Value*<sp/>position,<sp/>llvm::Value*<sp/>value);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearPackedBitValueIfFalse(llvm::Value*<sp/>bitmap,<sp/>llvm::Value*<sp/>position,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Value*<sp/>value);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>code<sp/>to<sp/>build<sp/>a<sp/>DecimalLValue<sp/>with<sp/>specified<sp/>value/precision/scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DecimalLValue&gt;<sp/>BuildDecimalLValue(llvm::Value*<sp/>value,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>arrow_type);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>llvm::Value*<sp/>AddFunctionCall(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>full_name,<sp/>llvm::Type*<sp/>ret_type,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;llvm::Value*&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeBitMapsForExpr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_compiled_expr" kindref="compound">CompiledExpr</ref>&amp;<sp/>compiled_expr,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_eval_batch" kindref="compound">EvalBatch</ref>&amp;<sp/>eval_batch,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_selection_vector" kindref="compound">SelectionVector</ref>*<sp/>selection_vector);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>std::string<sp/>ReplaceFormatInTrace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/>llvm::Value*<sp/>value,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>print_fn);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddTrace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/>llvm::Value*<sp/>value<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Engine&gt;<sp/>engine_;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;CompiledExpr&gt;&gt;<sp/>compiled_exprs_;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_function_registry" kindref="compound">FunctionRegistry</ref><sp/>function_registry_;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_annotator" kindref="compound">Annotator</ref><sp/>annotator_;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_selection_vector_1a6b95945ed4cd8c0a38f643d25e3a8fa0" kindref="member">SelectionVector::Mode</ref><sp/>selection_vector_mode_;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_ir_traces_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>trace_strings_;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gandiva</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/llvm_generator.h"/>
  </compounddef>
</doxygen>
