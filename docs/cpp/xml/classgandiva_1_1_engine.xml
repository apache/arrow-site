<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_engine" kind="class" language="C++" prot="public">
    <compoundname>gandiva::Engine</compoundname>
    <includes refid="engine_8h" local="no">gandiva/engine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_engine_1adad093a515460901f211da04a95bac66" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; llvm::LLVMContext &gt;</type>
        <definition>std::unique_ptr&lt;llvm::LLVMContext&gt; gandiva::Engine::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="92" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1accafc8177ee08c1585d4e3b00507f1a1" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; llvm::ExecutionEngine &gt;</type>
        <definition>std::unique_ptr&lt;llvm::ExecutionEngine&gt; gandiva::Engine::execution_engine_</definition>
        <argsstring></argsstring>
        <name>execution_engine_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="93" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1a6463788caaf542d3403de4223cd1452b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; llvm::IRBuilder&lt;&gt; &gt;</type>
        <definition>std::unique_ptr&lt;llvm::IRBuilder&lt;&gt; &gt; gandiva::Engine::ir_builder_</definition>
        <argsstring></argsstring>
        <name>ir_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="94" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1aa03c94a6ea71a2daa1f6c0eed50b6f74" prot="private" static="no" mutable="no">
        <type>llvm::Module *</type>
        <definition>llvm::Module* gandiva::Engine::module_</definition>
        <argsstring></argsstring>
        <name>module_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="95" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1a9562e19311aca7131e5ba3526bedcf73" prot="private" static="no" mutable="no">
        <type><ref refid="classgandiva_1_1_l_l_v_m_types" kindref="compound">LLVMTypes</ref></type>
        <definition>LLVMTypes gandiva::Engine::types_</definition>
        <argsstring></argsstring>
        <name>types_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="96" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1a6e0978dff6698ce652a0aeb5a84e6876" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; gandiva::Engine::functions_to_compile_</definition>
        <argsstring></argsstring>
        <name>functions_to_compile_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="98" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1af2efb1a9eb437ca38b5a14f7f69715c0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gandiva::Engine::optimize_</definition>
        <argsstring></argsstring>
        <name>optimize_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="100" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_engine_1a9d9bfbd14927819b630e64719c120bc0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gandiva::Engine::module_finalized_</definition>
        <argsstring></argsstring>
        <name>module_finalized_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="101" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_engine_1aadf2a5811f528c2fcc4efbdcbb88d17e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::LLVMContext *</type>
        <definition>llvm::LLVMContext* gandiva::Engine::context</definition>
        <argsstring>()</argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="38" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1a92be6168e4f74b0f8762fcc31a286649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::IRBuilder *</type>
        <definition>llvm::IRBuilder* gandiva::Engine::ir_builder</definition>
        <argsstring>()</argsstring>
        <name>ir_builder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="39" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1aea1ec810c43a11c10a93dd681a7e9f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgandiva_1_1_l_l_v_m_types" kindref="compound">LLVMTypes</ref> *</type>
        <definition>LLVMTypes* gandiva::Engine::types</definition>
        <argsstring>()</argsstring>
        <name>types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="40" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1ab5b7ad2bf03a70ab97226566b6e0ba1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::Module *</type>
        <definition>llvm::Module* gandiva::Engine::module</definition>
        <argsstring>()</argsstring>
        <name>module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="41" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1ae99cede41e11ce490280f303d6669432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::Engine::AddFunctionToCompile</definition>
        <argsstring>(const std::string &amp;fname)</argsstring>
        <name>AddFunctionToCompile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Add the function to the list of IR functions that need to be compiled. </para>        </briefdescription>
        <detaileddescription>
<para>Compiling only the functions that are used by the module saves time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="52" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1aa4bf25a36865ee92fa4ed7c69998b0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::Engine::FinalizeModule</definition>
        <argsstring>()</argsstring>
        <name>FinalizeModule</name>
        <briefdescription>
<para>Optimise and compile the module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1a45c11d2734c4db9c65d06f1436b1549d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* gandiva::Engine::CompiledFunction</definition>
        <argsstring>(llvm::Function *irFunction)</argsstring>
        <name>CompiledFunction</name>
        <param>
          <type>llvm::Function *</type>
          <declname>irFunction</declname>
        </param>
        <briefdescription>
<para>Get the compiled function corresponding to the irfunction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1ab333b1b5f0968401e1012c4b56c346a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::Engine::AddGlobalMappingForFunc</definition>
        <argsstring>(const std::string &amp;name, llvm::Type *ret_type, const std::vector&lt; llvm::Type *&gt; &amp;args, void *func)</argsstring>
        <name>AddGlobalMappingForFunc</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>llvm::Type *</type>
          <declname>ret_type</declname>
        </param>
        <param>
          <type>const std::vector&lt; llvm::Type *&gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1a8d5b5cc2124239be24c5596f6254cac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gandiva::Engine::DumpIR</definition>
        <argsstring>()</argsstring>
        <name>DumpIR</name>
        <briefdescription>
<para>Return the generated IR for the module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_engine_1a672f4a45f9f419b5142508b416e12727" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>static Status gandiva::Engine::Make</definition>
        <argsstring>(const std::shared_ptr&lt; Configuration &gt; &amp;config, std::unique_ptr&lt; Engine &gt; *engine)</argsstring>
        <name>Make</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classgandiva_1_1_configuration" kindref="compound">Configuration</ref> &gt; &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref> &gt; *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
<para>Factory method to create and initialize the engine object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>the engine configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the created engine </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgandiva_1_1_engine_1a5157021cfd178823b31ce4e388a489b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::Engine::Engine</definition>
        <argsstring>(const std::shared_ptr&lt; Configuration &gt; &amp;conf, std::unique_ptr&lt; llvm::LLVMContext &gt; ctx, std::unique_ptr&lt; llvm::ExecutionEngine &gt; engine, llvm::Module *module)</argsstring>
        <name>Engine</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classgandiva_1_1_configuration" kindref="compound">Configuration</ref> &gt; &amp;</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; llvm::LLVMContext &gt;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; llvm::ExecutionEngine &gt;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>llvm::Module *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1a1e22883f825d1638aeb2c67930c424cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::Engine::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1acaf885a69196888f95151124892460e4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>llvm::ExecutionEngine &amp;</type>
        <definition>llvm::ExecutionEngine&amp; gandiva::Engine::execution_engine</definition>
        <argsstring>()</argsstring>
        <name>execution_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="80" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1a38b177d803c4d09cf533ea46bb22a583" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::Engine::LoadPreCompiledIR</definition>
        <argsstring>()</argsstring>
        <name>LoadPreCompiledIR</name>
        <briefdescription>
<para>load pre-compiled IR modules from precompiled_bitcode.cc and merge them into the main module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1abb6be1fb128f136cba0bc67d1d13b8be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gandiva::Engine::AddGlobalMappings</definition>
        <argsstring>()</argsstring>
        <name>AddGlobalMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_engine_1adc6fa0f6546734105daf8a7e6b78bfe9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::Engine::RemoveUnusedFunctions</definition>
        <argsstring>()</argsstring>
        <name>RemoveUnusedFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classgandiva_1_1_engine_1ae0def5df28d577168833938dace29f4a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gandiva::Engine::InitOnce</definition>
        <argsstring>()</argsstring>
        <name>InitOnce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/engine.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LLVM Execution engine wrapper. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/engine.h" line="36" column="1" bodyfile="/arrow/cpp/src/gandiva/engine.h" bodystart="36" bodyend="102"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_engine_1ae99cede41e11ce490280f303d6669432" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>AddFunctionToCompile</name></member>
      <member refid="classgandiva_1_1_engine_1ab333b1b5f0968401e1012c4b56c346a4" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>AddGlobalMappingForFunc</name></member>
      <member refid="classgandiva_1_1_engine_1abb6be1fb128f136cba0bc67d1d13b8be" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>AddGlobalMappings</name></member>
      <member refid="classgandiva_1_1_engine_1a45c11d2734c4db9c65d06f1436b1549d" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>CompiledFunction</name></member>
      <member refid="classgandiva_1_1_engine_1aadf2a5811f528c2fcc4efbdcbb88d17e" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>context</name></member>
      <member refid="classgandiva_1_1_engine_1adad093a515460901f211da04a95bac66" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>context_</name></member>
      <member refid="classgandiva_1_1_engine_1a8d5b5cc2124239be24c5596f6254cac5" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>DumpIR</name></member>
      <member refid="classgandiva_1_1_engine_1a5157021cfd178823b31ce4e388a489b8" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>Engine</name></member>
      <member refid="classgandiva_1_1_engine_1acaf885a69196888f95151124892460e4" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>execution_engine</name></member>
      <member refid="classgandiva_1_1_engine_1accafc8177ee08c1585d4e3b00507f1a1" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>execution_engine_</name></member>
      <member refid="classgandiva_1_1_engine_1aa4bf25a36865ee92fa4ed7c69998b0f6" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>FinalizeModule</name></member>
      <member refid="classgandiva_1_1_engine_1a6e0978dff6698ce652a0aeb5a84e6876" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>functions_to_compile_</name></member>
      <member refid="classgandiva_1_1_engine_1a1e22883f825d1638aeb2c67930c424cf" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>Init</name></member>
      <member refid="classgandiva_1_1_engine_1ae0def5df28d577168833938dace29f4a" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>InitOnce</name></member>
      <member refid="classgandiva_1_1_engine_1a92be6168e4f74b0f8762fcc31a286649" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>ir_builder</name></member>
      <member refid="classgandiva_1_1_engine_1a6463788caaf542d3403de4223cd1452b" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>ir_builder_</name></member>
      <member refid="classgandiva_1_1_engine_1a38b177d803c4d09cf533ea46bb22a583" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>LoadPreCompiledIR</name></member>
      <member refid="classgandiva_1_1_engine_1a672f4a45f9f419b5142508b416e12727" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>Make</name></member>
      <member refid="classgandiva_1_1_engine_1ab5b7ad2bf03a70ab97226566b6e0ba1c" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>module</name></member>
      <member refid="classgandiva_1_1_engine_1aa03c94a6ea71a2daa1f6c0eed50b6f74" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>module_</name></member>
      <member refid="classgandiva_1_1_engine_1a9d9bfbd14927819b630e64719c120bc0" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>module_finalized_</name></member>
      <member refid="classgandiva_1_1_engine_1af2efb1a9eb437ca38b5a14f7f69715c0" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>optimize_</name></member>
      <member refid="classgandiva_1_1_engine_1adc6fa0f6546734105daf8a7e6b78bfe9" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>RemoveUnusedFunctions</name></member>
      <member refid="classgandiva_1_1_engine_1aea1ec810c43a11c10a93dd681a7e9f74" prot="public" virt="non-virtual"><scope>gandiva::Engine</scope><name>types</name></member>
      <member refid="classgandiva_1_1_engine_1a9562e19311aca7131e5ba3526bedcf73" prot="private" virt="non-virtual"><scope>gandiva::Engine</scope><name>types_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
