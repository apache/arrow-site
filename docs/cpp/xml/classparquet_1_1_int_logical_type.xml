<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_int_logical_type" kind="class" language="C++" prot="public">
    <compoundname>parquet::IntLogicalType</compoundname>
    <basecompoundref refid="classparquet_1_1_logical_type" prot="public" virt="non-virtual">parquet::LogicalType</basecompoundref>
    <includes refid="parquet_2types_8h" local="no">parquet/types.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_int_logical_type_1a7df45c69c6e2c1077f30307d6df61c00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;const LogicalType&gt; parquet::IntLogicalType::Make</definition>
        <argsstring>(int bit_width, bool is_signed)</argsstring>
        <name>Make</name>
        <param>
          <type>int</type>
          <declname>bit_width</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_signed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/types.h" line="383" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_int_logical_type_1ae40856f7bbd35456422f192c8ca364b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::IntLogicalType::bit_width</definition>
        <argsstring>() const</argsstring>
        <name>bit_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/types.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_int_logical_type_1aa4359172f6e3c1453f25afbc22ee073d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::IntLogicalType::is_signed</definition>
        <argsstring>() const</argsstring>
        <name>is_signed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/types.h" line="385" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_int_logical_type_1a1ae61c889c5c9e9b81dc025e5bfbcb12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::IntLogicalType::IntLogicalType</definition>
        <argsstring>()=default</argsstring>
        <name>IntLogicalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/types.h" line="388" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allowed for physical type INT32 (for bit widths 8, 16, and 32) and INT64 (for bit width 64). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2614">
        <label>parquet::IntLogicalType</label>
        <link refid="classparquet_1_1_int_logical_type"/>
        <childnode refid="2615" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2615">
        <label>parquet::LogicalType</label>
        <link refid="classparquet_1_1_logical_type"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2616">
        <label>parquet::IntLogicalType</label>
        <link refid="classparquet_1_1_int_logical_type"/>
        <childnode refid="2617" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2617">
        <label>parquet::LogicalType</label>
        <link refid="classparquet_1_1_logical_type"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/parquet/types.h" line="381" column="1" bodyfile="/arrow/cpp/src/parquet/types.h" bodystart="381" bodyend="389"/>
    <listofallmembers>
      <member refid="classparquet_1_1_int_logical_type_1ae40856f7bbd35456422f192c8ca364b8" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>bit_width</name></member>
      <member refid="classparquet_1_1_logical_type_1aa3135f90a6a99e92d33766057c6ddae9" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>BSON</name></member>
      <member refid="classparquet_1_1_logical_type_1a2331d81d15abaca58f3bfe5815d5f43d" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Date</name></member>
      <member refid="classparquet_1_1_logical_type_1aa3c5ce22ec5c5c2b8cf5b0545b66b52d" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Decimal</name></member>
      <member refid="classparquet_1_1_logical_type_1a6bef80cde3d20858dfcc1b482e6b1912" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Enum</name></member>
      <member refid="classparquet_1_1_logical_type_1aab6d3ab0e1f344d38a867aabbacc8091" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Equals</name></member>
      <member refid="classparquet_1_1_logical_type_1a511bca411bcfb9bf6389392257b218af" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>FromConvertedType</name></member>
      <member refid="classparquet_1_1_logical_type_1afb8c25d39fcbb5dfb80564be035bfc45" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>FromThrift</name></member>
      <member refid="classparquet_1_1_logical_type_1acbbf4fd554337b1d390fbbc2e8d1b512" prot="protected" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>impl_</name></member>
      <member refid="classparquet_1_1_logical_type_1ab27f176c5bf6c1e7227216cf5b590628" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Int</name></member>
      <member refid="classparquet_1_1_logical_type_1afe494daf5ac6d58d1455de2c0554aa50" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Interval</name></member>
      <member refid="classparquet_1_1_int_logical_type_1a1ae61c889c5c9e9b81dc025e5bfbcb12" prot="private" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>IntLogicalType</name></member>
      <member refid="classparquet_1_1_logical_type_1ad0f5165900a9b6be79e479e8ba87fd3c" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_applicable</name></member>
      <member refid="classparquet_1_1_logical_type_1a8a5f336d3c94c613eb581d1d690367fb" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_BSON</name></member>
      <member refid="classparquet_1_1_logical_type_1a5b82b7164d118630ef7aabe19db9efc1" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_compatible</name></member>
      <member refid="classparquet_1_1_logical_type_1af354ee00e3fb12ded2f386e3ae001bf2" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_date</name></member>
      <member refid="classparquet_1_1_logical_type_1ae2ea1717b2b94236d53ee9a3f4bd297c" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_decimal</name></member>
      <member refid="classparquet_1_1_logical_type_1aac6b204740854b2771d20d40259717e7" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_enum</name></member>
      <member refid="classparquet_1_1_logical_type_1adcd642efb27feeef88885e23c9d179c6" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_int</name></member>
      <member refid="classparquet_1_1_logical_type_1a78b986a5d720d79e38087aeffa2433d6" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_interval</name></member>
      <member refid="classparquet_1_1_logical_type_1a7b825b43b6907d552d17d420420cf302" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_invalid</name></member>
      <member refid="classparquet_1_1_logical_type_1a76ab070a3b6b122f13f561a617ad75fc" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_JSON</name></member>
      <member refid="classparquet_1_1_logical_type_1a5812d4336d8d7bd704bf469ca0c183df" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_list</name></member>
      <member refid="classparquet_1_1_logical_type_1ac878a386e3adb6d15e6547751d2634d3" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_map</name></member>
      <member refid="classparquet_1_1_logical_type_1aa128e5255180e002cd0f20b7811e9109" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_nested</name></member>
      <member refid="classparquet_1_1_logical_type_1a0137761c9b90c064358e1fad754b59cd" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_none</name></member>
      <member refid="classparquet_1_1_logical_type_1a237dbc719a02c2523714b84530dc06ad" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_nonnested</name></member>
      <member refid="classparquet_1_1_logical_type_1ab8d9e9c92686a0762faa9e8fcee4cdaa" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_null</name></member>
      <member refid="classparquet_1_1_logical_type_1aa900ddeb5a817e918d16d54df8eb4451" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_serialized</name></member>
      <member refid="classparquet_1_1_int_logical_type_1aa4359172f6e3c1453f25afbc22ee073d" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_signed</name></member>
      <member refid="classparquet_1_1_logical_type_1a92642d7cba93b61ac51681b908bf29f2" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_string</name></member>
      <member refid="classparquet_1_1_logical_type_1a9ce7e9a3140480c0199ee27f2e2837ec" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_time</name></member>
      <member refid="classparquet_1_1_logical_type_1a64e648c9ba389e2b59bfbb850b6a1877" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_timestamp</name></member>
      <member refid="classparquet_1_1_logical_type_1a33856cf7c2b4a3acfc73f6d7afa24c9a" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_UUID</name></member>
      <member refid="classparquet_1_1_logical_type_1aaf92bf46add07e844251a61ec0b65acc" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>is_valid</name></member>
      <member refid="classparquet_1_1_logical_type_1ae67294dde8fc4a072d55d10c6181afbc" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>JSON</name></member>
      <member refid="classparquet_1_1_logical_type_1a480a602a3e4a9bbbb7a0e4071a4612b3" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>List</name></member>
      <member refid="classparquet_1_1_logical_type_1a5ffd1590547d8c6ceaeccec94ca03455" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>LogicalType</name></member>
      <member refid="classparquet_1_1_logical_type_1a53bcd53ed17dbb9cac560bc1d8daf335" prot="protected" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>LogicalType</name></member>
      <member refid="classparquet_1_1_int_logical_type_1a7df45c69c6e2c1077f30307d6df61c00" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Make</name></member>
      <member refid="classparquet_1_1_logical_type_1a0883941e0bb3a3c93e3a0c28900d7e7f" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Map</name></member>
      <member refid="classparquet_1_1_logical_type_1a23638949340206c75218c7d310a53210" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>None</name></member>
      <member refid="classparquet_1_1_logical_type_1aa04f3950a7dbc4b5d70da0aa8bcde8da" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Null</name></member>
      <member refid="classparquet_1_1_logical_type_1aeda03f9461b9a429632b6630d2d157e4" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>operator=</name></member>
      <member refid="classparquet_1_1_logical_type_1a8983b31e9fa04698155d4a6ec92209d2" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>sort_order</name></member>
      <member refid="classparquet_1_1_logical_type_1acd390b472433cd52d63f4239cf39e01e" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>String</name></member>
      <member refid="classparquet_1_1_logical_type_1a81e6cf4bfbb3facde926af2376639e65" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Time</name></member>
      <member refid="classparquet_1_1_logical_type_1a4c4c1456e28155b1decc9063facd8b5b" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Timestamp</name></member>
      <member refid="classparquet_1_1_logical_type_1ae2d08d05495ca7c2ec5c5dcae5f53f65" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>ToConvertedType</name></member>
      <member refid="classparquet_1_1_logical_type_1a00783186d7cca3178b9e62b4ab8c46ab" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>ToJSON</name></member>
      <member refid="classparquet_1_1_logical_type_1ad0fee7f5a899857abcdc66abd0a9c1d9" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>ToString</name></member>
      <member refid="classparquet_1_1_logical_type_1afe9dd7b5f2be480774b329518f737aa9" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>ToThrift</name></member>
      <member refid="classparquet_1_1_logical_type_1ad581be786934cec3a23b0d0f61ad697d" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>type</name></member>
      <member refid="classparquet_1_1_logical_type_1adee7c63e888e55b023f5bf965ac3b177" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>Unknown</name></member>
      <member refid="classparquet_1_1_logical_type_1a28faeae5e8bf49d30ab2a3e6f8e5ded4" prot="public" virt="non-virtual"><scope>parquet::IntLogicalType</scope><name>UUID</name></member>
      <member refid="classparquet_1_1_logical_type_1a7d75d23282731107e70d5d3c9b3f8156" prot="public" virt="virtual"><scope>parquet::IntLogicalType</scope><name>~LogicalType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
