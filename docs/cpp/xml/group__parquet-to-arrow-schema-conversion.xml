<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__parquet-to-arrow-schema-conversion" kind="group">
    <compoundname>parquet-to-arrow-schema-conversion</compoundname>
    <title>Functions to convert a Parquet</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__parquet-to-arrow-schema-conversion_1ga4fb75963cbac0e6251e5d6d4efc0c3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FromParquetSchema</definition>
        <argsstring>(const SchemaDescriptor *parquet_schema, const ArrowReaderProperties &amp;properties, const std::shared_ptr&lt; const ::arrow::KeyValueMetadata &gt; &amp;key_value_metadata, std::shared_ptr&lt;::arrow::Schema &gt; *out)</argsstring>
        <name>FromParquetSchema</name>
        <param>
          <type>const SchemaDescriptor *</type>
          <declname>parquet_schema</declname>
        </param>
        <param>
          <type>const ArrowReaderProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const ::<ref refid="classarrow_1_1_key_value_metadata" kindref="compound">arrow::KeyValueMetadata</ref> &gt; &amp;</type>
          <declname>key_value_metadata</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1_schema" kindref="compound">arrow::Schema</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parquet-to-arrow-schema-conversion_1ga52853e89c6477c07e2a5638aaa2d3dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FromParquetSchema</definition>
        <argsstring>(const SchemaDescriptor *parquet_schema, const ArrowReaderProperties &amp;properties, std::shared_ptr&lt;::arrow::Schema &gt; *out)</argsstring>
        <name>FromParquetSchema</name>
        <param>
          <type>const SchemaDescriptor *</type>
          <declname>parquet_schema</declname>
        </param>
        <param>
          <type>const ArrowReaderProperties &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1_schema" kindref="compound">arrow::Schema</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parquet-to-arrow-schema-conversion_1gac3a99e5eb4656861600c33e7d2bd03e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FromParquetSchema</definition>
        <argsstring>(const SchemaDescriptor *parquet_schema, std::shared_ptr&lt;::arrow::Schema &gt; *out)</argsstring>
        <name>FromParquetSchema</name>
        <param>
          <type>const SchemaDescriptor *</type>
          <declname>parquet_schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1_schema" kindref="compound">arrow::Schema</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/schema.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>schema into an Arrow schema. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
