<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_descriptor" kind="class" language="C++" prot="public">
    <compoundname>parquet::ColumnDescriptor</compoundname>
    <includes refid="schema_8h" local="no">parquet/schema.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_column_descriptor_1a1ea469dbf46d5c4bb199d1928ddad7c2" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" kindref="member">schema::NodePtr</ref></type>
        <definition>schema::NodePtr parquet::ColumnDescriptor::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="403" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_descriptor_1aa30a353749a7673684ac20bcdac402d8" prot="private" static="no" mutable="no">
        <type>const <ref refid="classparquet_1_1schema_1_1_primitive_node" kindref="compound">schema::PrimitiveNode</ref> *</type>
        <definition>const schema::PrimitiveNode* parquet::ColumnDescriptor::primitive_node_</definition>
        <argsstring></argsstring>
        <name>primitive_node_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="404" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_descriptor_1a45ce357bcd24502ef6dded5559797d7e" prot="private" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t parquet::ColumnDescriptor::max_definition_level_</definition>
        <argsstring></argsstring>
        <name>max_definition_level_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="406" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_column_descriptor_1a8d052be9435ae38ff0f52fc162353111" prot="private" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t parquet::ColumnDescriptor::max_repetition_level_</definition>
        <argsstring></argsstring>
        <name>max_repetition_level_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="407" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1aec4a7e6a1e25b01270919a21a6de0e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnDescriptor::ColumnDescriptor</definition>
        <argsstring>(schema::NodePtr node, int16_t max_definition_level, int16_t max_repetition_level, const SchemaDescriptor *schema_descr=NULLPTR)</argsstring>
        <name>ColumnDescriptor</name>
        <param>
          <type><ref refid="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" kindref="member">schema::NodePtr</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>max_definition_level</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>max_repetition_level</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref> *</type>
          <declname>schema_descr</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a4338b491ac753452c0aa6c1682acbc3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnDescriptor::Equals</definition>
        <argsstring>(const ColumnDescriptor &amp;other) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a0a2d3d16664258ee42a947e2d49bcdb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t parquet::ColumnDescriptor::max_definition_level</definition>
        <argsstring>() const</argsstring>
        <name>max_definition_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="368" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1af79cba7faa8b0dd1ca9cca098dad1b8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t parquet::ColumnDescriptor::max_repetition_level</definition>
        <argsstring>() const</argsstring>
        <name>max_repetition_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="370" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1af045ed326bea5afa15ad5783beece69f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
        <definition>Type::type parquet::ColumnDescriptor::physical_type</definition>
        <argsstring>() const</argsstring>
        <name>physical_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="372" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1acd8a1ac9cdb9bf5f1d1c0bb7cc34a0fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref></type>
        <definition>ConvertedType::type parquet::ColumnDescriptor::converted_type</definition>
        <argsstring>() const</argsstring>
        <name>converted_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="374" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="374" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a7770f4cdedef15e640d5a053836ce990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; const <ref refid="classparquet_1_1_logical_type" kindref="compound">LogicalType</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;const LogicalType&gt;&amp; parquet::ColumnDescriptor::logical_type</definition>
        <argsstring>() const</argsstring>
        <name>logical_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="376" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="376" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a557b15f2c0ccba13accf18c5563c1e15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_column_order" kindref="compound">ColumnOrder</ref></type>
        <definition>ColumnOrder parquet::ColumnDescriptor::column_order</definition>
        <argsstring>() const</argsstring>
        <name>column_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="380" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1addce92c48ac69298c264321eb4645cf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_sort_order_1a7aa8892393c3e16bd25f11595281eee8" kindref="member">SortOrder::type</ref></type>
        <definition>SortOrder::type parquet::ColumnDescriptor::sort_order</definition>
        <argsstring>() const</argsstring>
        <name>sort_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="382" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="382" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a05efb939de7b7660119e8bb0130c2d5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; parquet::ColumnDescriptor::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="388" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1ab4329e07c15f49b50d58c06d99155284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;schema::ColumnPath&gt; parquet::ColumnDescriptor::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a4819404f05de143569013f993e831c93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" kindref="member">schema::NodePtr</ref> &amp;</type>
        <definition>const schema::NodePtr&amp; parquet::ColumnDescriptor::schema_node</definition>
        <argsstring>() const</argsstring>
        <name>schema_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="392" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a439dfe37471fc73b870f2855fe5689ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::ColumnDescriptor::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a88c034819f5fd0773d680cd1dd058159" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::ColumnDescriptor::type_length</definition>
        <argsstring>() const</argsstring>
        <name>type_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a9c493156850ef9c2910fe5c5c9e35f82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::ColumnDescriptor::type_precision</definition>
        <argsstring>() const</argsstring>
        <name>type_precision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_descriptor_1a57bfdd2047b7b9cd38d0946dbd3f3fa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parquet::ColumnDescriptor::type_scale</definition>
        <argsstring>() const</argsstring>
        <name>type_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="400" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/schema.h" line="360" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="360" bodyend="408"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_descriptor_1a557b15f2c0ccba13accf18c5563c1e15" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>column_order</name></member>
      <member refid="classparquet_1_1_column_descriptor_1aec4a7e6a1e25b01270919a21a6de0e1b" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>ColumnDescriptor</name></member>
      <member refid="classparquet_1_1_column_descriptor_1acd8a1ac9cdb9bf5f1d1c0bb7cc34a0fc" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>converted_type</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a4338b491ac753452c0aa6c1682acbc3d" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>Equals</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a7770f4cdedef15e640d5a053836ce990" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>logical_type</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a0a2d3d16664258ee42a947e2d49bcdb5" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>max_definition_level</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a45ce357bcd24502ef6dded5559797d7e" prot="private" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>max_definition_level_</name></member>
      <member refid="classparquet_1_1_column_descriptor_1af79cba7faa8b0dd1ca9cca098dad1b8c" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>max_repetition_level</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a8d052be9435ae38ff0f52fc162353111" prot="private" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>max_repetition_level_</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a05efb939de7b7660119e8bb0130c2d5f" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>name</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a1ea469dbf46d5c4bb199d1928ddad7c2" prot="private" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>node_</name></member>
      <member refid="classparquet_1_1_column_descriptor_1ab4329e07c15f49b50d58c06d99155284" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>path</name></member>
      <member refid="classparquet_1_1_column_descriptor_1af045ed326bea5afa15ad5783beece69f" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>physical_type</name></member>
      <member refid="classparquet_1_1_column_descriptor_1aa30a353749a7673684ac20bcdac402d8" prot="private" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>primitive_node_</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a4819404f05de143569013f993e831c93" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>schema_node</name></member>
      <member refid="classparquet_1_1_column_descriptor_1addce92c48ac69298c264321eb4645cf3" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>sort_order</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a439dfe37471fc73b870f2855fe5689ad" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>ToString</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a88c034819f5fd0773d680cd1dd058159" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>type_length</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a9c493156850ef9c2910fe5c5c9e35f82" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>type_precision</name></member>
      <member refid="classparquet_1_1_column_descriptor_1a57bfdd2047b7b9cd38d0946dbd3f3fa5" prot="public" virt="non-virtual"><scope>parquet::ColumnDescriptor</scope><name>type_scale</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
