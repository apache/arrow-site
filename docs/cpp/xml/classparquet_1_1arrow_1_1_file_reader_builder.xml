<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1arrow_1_1_file_reader_builder" kind="class" language="C++" prot="public">
    <compoundname>parquet::arrow::FileReaderBuilder</compoundname>
    <includes refid="parquet_2arrow_2reader_8h" local="no">parquet/arrow/reader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1arrow_1_1_file_reader_builder_1a1ab10cf807fe72fe833fca144ad08844" prot="private" static="no" mutable="no">
        <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
        <definition>::arrow::MemoryPool* parquet::arrow::FileReaderBuilder::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="279" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/reader.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1arrow_1_1_file_reader_builder_1adff469af34a41f4d9ee0e72dd4fcd5fe" prot="private" static="no" mutable="no">
        <type><ref refid="classparquet_1_1_arrow_reader_properties" kindref="compound">ArrowReaderProperties</ref></type>
        <definition>ArrowReaderProperties parquet::arrow::FileReaderBuilder::properties_</definition>
        <argsstring></argsstring>
        <name>properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="280" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/reader.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1arrow_1_1_file_reader_builder_1ae1964619ae5d3d54c0a988c9abdc05e2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ParquetFileReader&gt; parquet::arrow::FileReaderBuilder::raw_reader_</definition>
        <argsstring></argsstring>
        <name>raw_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="281" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/reader.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1a5571eeced9b4b89d3c9664b8a84dcf81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::arrow::FileReaderBuilder::FileReaderBuilder</definition>
        <argsstring>()</argsstring>
        <name>FileReaderBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1ade44880ec4cd96c5e0f9ca2bbe0adba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FileReaderBuilder::Open</definition>
        <argsstring>(std::shared_ptr&lt;::arrow::io::RandomAccessFile &gt; file, const ReaderProperties &amp;properties=default_reader_properties(), std::shared_ptr&lt; FileMetaData &gt; metadata=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">arrow::io::RandomAccessFile</ref> &gt;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_reader_properties" kindref="compound">ReaderProperties</ref> &amp;</type>
          <declname>properties</declname>
          <defval><ref refid="namespaceparquet_1a0a384c637ba6393d21075504a44e233e" kindref="member">default_reader_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
          <declname>metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
<para>Create <ref refid="classparquet_1_1arrow_1_1_file_reader_builder" kindref="compound">FileReaderBuilder</ref> from Arrow file and optional properties / metadata. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1a9f5e5a96054600ae693b1cbddd540566" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> *</type>
        <definition>ParquetFileReader* parquet::arrow::FileReaderBuilder::raw_reader</definition>
        <argsstring>()</argsstring>
        <name>raw_reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="269" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/reader.h" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1a13874744823c5a62d7513686b60f4dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1arrow_1_1_file_reader_builder" kindref="compound">FileReaderBuilder</ref> *</type>
        <definition>FileReaderBuilder* parquet::arrow::FileReaderBuilder::memory_pool</definition>
        <argsstring>(::arrow::MemoryPool *pool)</argsstring>
        <name>memory_pool</name>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
<para>Set Arrow MemoryPool for memory allocation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1a9a992492e0b9adcaeb179613bfc647ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classparquet_1_1arrow_1_1_file_reader_builder" kindref="compound">FileReaderBuilder</ref> *</type>
        <definition>FileReaderBuilder* parquet::arrow::FileReaderBuilder::properties</definition>
        <argsstring>(const ArrowReaderProperties &amp;arg_properties)</argsstring>
        <name>properties</name>
        <param>
          <type>const <ref refid="classparquet_1_1_arrow_reader_properties" kindref="compound">ArrowReaderProperties</ref> &amp;</type>
          <declname>arg_properties</declname>
        </param>
        <briefdescription>
<para>Set Arrow reader properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1arrow_1_1_file_reader_builder_1adbf16da297a05702a159acd2205171df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref></type>
        <definition>::arrow::Status parquet::arrow::FileReaderBuilder::Build</definition>
        <argsstring>(std::unique_ptr&lt; FileReader &gt; *out)</argsstring>
        <name>Build</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classparquet_1_1arrow_1_1_file_reader" kindref="compound">FileReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Build <ref refid="classparquet_1_1arrow_1_1_file_reader" kindref="compound">FileReader</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="276" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Experimental helper class for bindings (like Python) that struggle either with std::move or C++ exceptions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/arrow/reader.h" line="260" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/reader.h" bodystart="260" bodyend="282"/>
    <listofallmembers>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1adbf16da297a05702a159acd2205171df" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>Build</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1a5571eeced9b4b89d3c9664b8a84dcf81" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>FileReaderBuilder</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1a13874744823c5a62d7513686b60f4dba" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>memory_pool</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1ade44880ec4cd96c5e0f9ca2bbe0adba9" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>Open</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1a1ab10cf807fe72fe833fca144ad08844" prot="private" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>pool_</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1a9a992492e0b9adcaeb179613bfc647ad" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>properties</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1adff469af34a41f4d9ee0e72dd4fcd5fe" prot="private" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>properties_</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1a9f5e5a96054600ae693b1cbddd540566" prot="public" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>raw_reader</name></member>
      <member refid="classparquet_1_1arrow_1_1_file_reader_builder_1ae1964619ae5d3d54c0a988c9abdc05e2" prot="private" virt="non-virtual"><scope>parquet::arrow::FileReaderBuilder</scope><name>raw_reader_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
