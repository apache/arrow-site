<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="json__internal_8h" kind="file" language="C++">
    <compoundname>json_internal.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="rapidjson__defs_8h" local="yes">arrow/json/rapidjson_defs.h</includes>
    <includes local="no">rapidjson/document.h</includes>
    <includes local="no">rapidjson/encodings.h</includes>
    <includes local="no">rapidjson/error/en.h</includes>
    <includes local="no">rapidjson/rapidjson.h</includes>
    <includes local="no">rapidjson/stringbuffer.h</includes>
    <includes local="no">rapidjson/writer.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <incdepgraph>
      <node id="8439">
        <label>rapidjson/writer.h</label>
      </node>
      <node id="8444">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8445" relation="include">
        </childnode>
        <childnode refid="8443" relation="include">
        </childnode>
        <childnode refid="8433" relation="include">
        </childnode>
      </node>
      <node id="8427">
        <label>cstdint</label>
      </node>
      <node id="8440">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8441" relation="include">
        </childnode>
        <childnode refid="8442" relation="include">
        </childnode>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8429" relation="include">
        </childnode>
        <childnode refid="8443" relation="include">
        </childnode>
        <childnode refid="8444" relation="include">
        </childnode>
        <childnode refid="8433" relation="include">
        </childnode>
        <childnode refid="8446" relation="include">
        </childnode>
        <childnode refid="8448" relation="include">
        </childnode>
      </node>
      <node id="8449">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8429" relation="include">
        </childnode>
        <childnode refid="8450" relation="include">
        </childnode>
        <childnode refid="8433" relation="include">
        </childnode>
        <childnode refid="8448" relation="include">
        </childnode>
      </node>
      <node id="8437">
        <label>rapidjson/rapidjson.h</label>
      </node>
      <node id="8429">
        <label>string</label>
      </node>
      <node id="8430">
        <label>arrow/json/rapidjson_defs.h</label>
        <link refid="rapidjson__defs_8h"/>
        <childnode refid="8431" relation="include">
        </childnode>
        <childnode refid="8432" relation="include">
        </childnode>
      </node>
      <node id="8434">
        <label>rapidjson/document.h</label>
      </node>
      <node id="8447">
        <label>ostream</label>
      </node>
      <node id="8438">
        <label>rapidjson/stringbuffer.h</label>
      </node>
      <node id="8448">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8450">
        <label>vector</label>
      </node>
      <node id="8443">
        <label>utility</label>
      </node>
      <node id="8432">
        <label>arrow/util/sse_util.h</label>
        <link refid="sse__util_8h"/>
        <childnode refid="8433" relation="include">
        </childnode>
      </node>
      <node id="8442">
        <label>iosfwd</label>
      </node>
      <node id="8436">
        <label>rapidjson/error/en.h</label>
      </node>
      <node id="8426">
        <label>/arrow/cpp/src/arrow/ipc/json_internal.h</label>
        <link refid="json__internal_8h"/>
        <childnode refid="8427" relation="include">
        </childnode>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8429" relation="include">
        </childnode>
        <childnode refid="8430" relation="include">
        </childnode>
        <childnode refid="8434" relation="include">
        </childnode>
        <childnode refid="8435" relation="include">
        </childnode>
        <childnode refid="8436" relation="include">
        </childnode>
        <childnode refid="8437" relation="include">
        </childnode>
        <childnode refid="8438" relation="include">
        </childnode>
        <childnode refid="8439" relation="include">
        </childnode>
        <childnode refid="8440" relation="include">
        </childnode>
        <childnode refid="8449" relation="include">
        </childnode>
        <childnode refid="8448" relation="include">
        </childnode>
      </node>
      <node id="8445">
        <label>type_traits</label>
      </node>
      <node id="8441">
        <label>cstring</label>
      </node>
      <node id="8446">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8447" relation="include">
        </childnode>
        <childnode refid="8429" relation="include">
        </childnode>
        <childnode refid="8443" relation="include">
        </childnode>
        <childnode refid="8448" relation="include">
        </childnode>
      </node>
      <node id="8431">
        <label>arrow/util/neon_util.h</label>
        <link refid="neon__util_8h"/>
      </node>
      <node id="8428">
        <label>memory</label>
      </node>
      <node id="8435">
        <label>rapidjson/encodings.h</label>
      </node>
      <node id="8433">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8427" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1ipc">arrow::ipc</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" prot="public" static="no">
        <name>RETURN_NOT_FOUND</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer>if (NAME == (PARENT).MemberEnd()) {                    \
    return Status::Invalid(&quot;field &quot;, TOK, &quot; not found&quot;); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="42" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json__internal_8h_1acdc910edd95396438c1fa130edc8f98e" prot="public" static="no">
        <name>RETURN_NOT_STRING</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer><ref refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" kindref="member">RETURN_NOT_FOUND</ref>(TOK, NAME, PARENT);                                \
  if (!NAME-&gt;value.IsString()) {                                      \
    return Status::Invalid(&quot;field was not a string line &quot;, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="47" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json__internal_8h_1a7ed253e018297e6c93a5735ea49890db" prot="public" static="no">
        <name>RETURN_NOT_BOOL</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer><ref refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" kindref="member">RETURN_NOT_FOUND</ref>(TOK, NAME, PARENT);                                 \
  if (!NAME-&gt;value.IsBool()) {                                         \
    return Status::Invalid(&quot;field was not a boolean line &quot;, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="53" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json__internal_8h_1a6cd28762bdfeed74d84cf9b434ea4048" prot="public" static="no">
        <name>RETURN_NOT_INT</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer><ref refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" kindref="member">RETURN_NOT_FOUND</ref>(TOK, NAME, PARENT);                              \
  if (!NAME-&gt;value.IsInt()) {                                       \
    return Status::Invalid(&quot;field was not an int line &quot;, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="59" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json__internal_8h_1afcc19e881e037dfe90578983bfde7db3" prot="public" static="no">
        <name>RETURN_NOT_ARRAY</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer><ref refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" kindref="member">RETURN_NOT_FOUND</ref>(TOK, NAME, PARENT);                                \
  if (!NAME-&gt;value.IsArray()) {                                       \
    return Status::Invalid(&quot;field was not an array line &quot;, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="65" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json__internal_8h_1a1aa1f7d87fbccb5a8dd0b8652fb9e9f0" prot="public" static="no">
        <name>RETURN_NOT_OBJECT</name>
        <param><defname>TOK</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>PARENT</defname></param>
        <initializer><ref refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" kindref="member">RETURN_NOT_FOUND</ref>(TOK, NAME, PARENT);                                 \
  if (!NAME-&gt;value.IsObject()) {                                       \
    return Status::Invalid(&quot;field was not an object line &quot;, __LINE__); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="71" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" prot="public" static="no">
        <type>rj::Writer&lt; rj::StringBuffer &gt;</type>
        <definition>using RjWriter =  rj::Writer&lt;rj::StringBuffer&gt;</definition>
        <argsstring></argsstring>
        <name>RjWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="38" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="json__internal_8h_1a91dbab91b93ab584c10bb095524fc63d" prot="public" static="no">
        <type>rj::Value::ConstArray</type>
        <definition>using RjArray =  rj::Value::ConstArray</definition>
        <argsstring></argsstring>
        <name>RjArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="39" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="json__internal_8h_1aa196fe0a0797c31d6e229fe15dca9e9d" prot="public" static="no">
        <type>rj::Value::ConstObject</type>
        <definition>using RjObject =  rj::Value::ConstObject</definition>
        <argsstring></argsstring>
        <name>RjObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/json_internal.h" line="40" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/json_internal.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rapidjson__defs_8h" kindref="compound">arrow/json/rapidjson_defs.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/document.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/encodings.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/error/en.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/rapidjson.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/stringbuffer.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson/writer.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rj<sp/>=<sp/>arrow::rapidjson;</highlight></codeline>
<codeline lineno="38" refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" kindref="member">RjWriter</ref><sp/>=<sp/>rj::Writer&lt;rj::StringBuffer&gt;;</highlight></codeline>
<codeline lineno="39" refid="json__internal_8h_1a91dbab91b93ab584c10bb095524fc63d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="json__internal_8h_1a91dbab91b93ab584c10bb095524fc63d" kindref="member">RjArray</ref><sp/>=<sp/>rj::Value::ConstArray;</highlight></codeline>
<codeline lineno="40" refid="json__internal_8h_1aa196fe0a0797c31d6e229fe15dca9e9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="json__internal_8h_1aa196fe0a0797c31d6e229fe15dca9e9d" kindref="member">RjObject</ref><sp/>=<sp/>rj::Value::ConstObject;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="json__internal_8h_1a3b5f6cc8c1b947bed0d1d83cc9dab0d7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/>if<sp/>(NAME<sp/>==<sp/>(PARENT).MemberEnd())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>&quot;,<sp/>TOK,<sp/>&quot;<sp/>not<sp/>found&quot;);<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="json__internal_8h_1acdc910edd95396438c1fa130edc8f98e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_STRING(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!NAME-&gt;value.IsString())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>was<sp/>not<sp/>a<sp/>string<sp/>line<sp/>&quot;,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="json__internal_8h_1a7ed253e018297e6c93a5735ea49890db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_BOOL(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!NAME-&gt;value.IsBool())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>was<sp/>not<sp/>a<sp/>boolean<sp/>line<sp/>&quot;,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="json__internal_8h_1a6cd28762bdfeed74d84cf9b434ea4048" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_INT(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!NAME-&gt;value.IsInt())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>was<sp/>not<sp/>an<sp/>int<sp/>line<sp/>&quot;,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="json__internal_8h_1afcc19e881e037dfe90578983bfde7db3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_ARRAY(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!NAME-&gt;value.IsArray())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>was<sp/>not<sp/>an<sp/>array<sp/>line<sp/>&quot;,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="json__internal_8h_1a1aa1f7d87fbccb5a8dd0b8652fb9e9f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_NOT_OBJECT(TOK,<sp/>NAME,<sp/>PARENT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>RETURN_NOT_FOUND(TOK,<sp/>NAME,<sp/>PARENT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!NAME-&gt;value.IsObject())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::Invalid(&quot;field<sp/>was<sp/>not<sp/>an<sp/>object<sp/>line<sp/>&quot;,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Array;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Field;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RecordBatch;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Schema;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryMemo;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">json<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,<sp/>DictionaryMemo*<sp/>dict_memo,<sp/><ref refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" kindref="member">RjWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteDictionary(int64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;&amp;<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" kindref="member">RjWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a92f5eaf2876a5a90a6194729eefa8d89" kindref="member">WriteRecordBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RecordBatch&amp;<sp/>batch,<sp/><ref refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" kindref="member">RjWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&amp;<sp/>array,<sp/><ref refid="json__internal_8h_1ad06466e3878bb7a0eed1ff7f7f47a5a1" kindref="member">RjWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a8106077c9356a5a653197573cac756d3" kindref="member">ReadSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value&amp;<sp/>json_obj,<sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryMemo*<sp/>dictionary_memo,<sp/>std::shared_ptr&lt;Schema&gt;*<sp/>schema);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1ab93f4e08e34a00a3961ff5a5fd6b323d" kindref="member">ReadRecordBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value&amp;<sp/>json_obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryMemo*<sp/>dict_memo,<sp/><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordBatch&gt;*<sp/>batch);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ReadArray(<ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value&amp;<sp/>json_obj,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Field&gt;&amp;<sp/>type,<sp/>DictionaryMemo*<sp/>dict_memo,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;*<sp/>array);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>ReadArray(<ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value&amp;<sp/>json_obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/>schema,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryMemo*<sp/>dict_memo,<sp/>std::shared_ptr&lt;Array&gt;*<sp/>array);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ipc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/ipc/json_internal.h"/>
  </compounddef>
</doxygen>
