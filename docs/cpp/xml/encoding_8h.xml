<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="encoding_8h" kind="file" language="C++">
    <compoundname>encoding.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="exception_8h" local="yes">parquet/exception.h</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includedby refid="parquet_2pch_8h" local="yes">/arrow/cpp/src/parquet/pch.h</includedby>
    <incdepgraph>
      <node id="19071">
        <label>atomic</label>
      </node>
      <node id="19057">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
      </node>
      <node id="19079">
        <label>limits</label>
      </node>
      <node id="19040">
        <label>cstdint</label>
      </node>
      <node id="19053">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19055" relation="include">
        </childnode>
        <childnode refid="19056" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19073">
        <label>endian.h</label>
      </node>
      <node id="19058">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19059" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19060" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19080">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19081" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
      </node>
      <node id="19052">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19064" relation="include">
        </childnode>
        <childnode refid="19065" relation="include">
        </childnode>
        <childnode refid="19070" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19072" relation="include">
        </childnode>
        <childnode refid="19083" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
      </node>
      <node id="19049">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19064">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19056" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19078">
        <label>cmath</label>
      </node>
      <node id="19077">
        <label>cassert</label>
      </node>
      <node id="19069">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
      </node>
      <node id="19047">
        <label>string</label>
      </node>
      <node id="19063">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19044">
        <label>parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="19045" relation="include">
        </childnode>
        <childnode refid="19046" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19052" relation="include">
        </childnode>
      </node>
      <node id="19045">
        <label>exception</label>
      </node>
      <node id="19061">
        <label>ostream</label>
      </node>
      <node id="19051">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19055">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19056" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19070">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19071" relation="include">
        </childnode>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19072">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19073" relation="include">
        </childnode>
        <childnode refid="19074" relation="include">
        </childnode>
        <childnode refid="19075" relation="include">
        </childnode>
        <childnode refid="19076" relation="include">
        </childnode>
        <childnode refid="19077" relation="include">
        </childnode>
        <childnode refid="19078" relation="include">
        </childnode>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19079" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
        <childnode refid="19080" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19060" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19082" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19076">
        <label>bitset</label>
      </node>
      <node id="19081">
        <label>tuple</label>
      </node>
      <node id="19043">
        <label>vector</label>
      </node>
      <node id="19068">
        <label>new</label>
      </node>
      <node id="19048">
        <label>utility</label>
      </node>
      <node id="19062">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19063" relation="include">
        </childnode>
      </node>
      <node id="19075">
        <label>array</label>
      </node>
      <node id="19046">
        <label>sstream</label>
      </node>
      <node id="19065">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19066" relation="include">
        </childnode>
        <childnode refid="19064" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19056">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19059">
        <label>iosfwd</label>
      </node>
      <node id="19066">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19064" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19069" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19039">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19044" relation="include">
        </childnode>
        <childnode refid="19052" relation="include">
        </childnode>
        <childnode refid="19084" relation="include">
        </childnode>
      </node>
      <node id="19067">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19068" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
      </node>
      <node id="19054">
        <label>type_traits</label>
      </node>
      <node id="19083">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19079" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19074">
        <label>algorithm</label>
      </node>
      <node id="19085">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19079" relation="include">
        </childnode>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19041">
        <label>cstring</label>
      </node>
      <node id="19084">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="19074" relation="include">
        </childnode>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19046" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19085" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19052" relation="include">
        </childnode>
      </node>
      <node id="19060">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19061" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
      </node>
      <node id="19042">
        <label>memory</label>
      </node>
      <node id="19050">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="19040" relation="include">
        </childnode>
      </node>
      <node id="19082">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19054" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19086">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="19087" relation="include">
        </childnode>
      </node>
      <node id="19087">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_numeric_builder" prot="public">arrow::NumericBuilder</innerclass>
    <innerclass refid="classarrow_1_1_dictionary32_builder" prot="public">arrow::Dictionary32Builder</innerclass>
    <innerclass refid="classparquet_1_1_typed_encoder" prot="public">parquet::TypedEncoder</innerclass>
    <innerclass refid="classparquet_1_1_typed_decoder" prot="public">parquet::TypedDecoder</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits" prot="public">parquet::EncodingTraits</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4" prot="public">parquet::EncodingTraits&lt; BooleanType &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1_1_dict_accumulator" prot="public">parquet::EncodingTraits&lt; BooleanType &gt;::DictAccumulator</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4" prot="public">parquet::EncodingTraits&lt; Int32Type &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4" prot="public">parquet::EncodingTraits&lt; Int64Type &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4" prot="public">parquet::EncodingTraits&lt; Int96Type &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1_1_accumulator" prot="public">parquet::EncodingTraits&lt; Int96Type &gt;::Accumulator</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1_1_dict_accumulator" prot="public">parquet::EncodingTraits&lt; Int96Type &gt;::DictAccumulator</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4" prot="public">parquet::EncodingTraits&lt; FloatType &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4" prot="public">parquet::EncodingTraits&lt; DoubleType &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4" prot="public">parquet::EncodingTraits&lt; ByteArrayType &gt;</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator" prot="public">parquet::EncodingTraits&lt; ByteArrayType &gt;::Accumulator</innerclass>
    <innerclass refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4" prot="public">parquet::EncodingTraits&lt; FLBAType &gt;</innerclass>
    <innerclass refid="classparquet_1_1_encoder" prot="public">parquet::Encoder</innerclass>
    <innerclass refid="classparquet_1_1_typed_encoder" prot="public">parquet::TypedEncoder</innerclass>
    <innerclass refid="classparquet_1_1_dict_encoder" prot="public">parquet::DictEncoder</innerclass>
    <innerclass refid="classparquet_1_1_decoder" prot="public">parquet::Decoder</innerclass>
    <innerclass refid="classparquet_1_1_typed_decoder" prot="public">parquet::TypedDecoder</innerclass>
    <innerclass refid="classparquet_1_1_dict_decoder" prot="public">parquet::DictDecoder</innerclass>
    <innerclass refid="classparquet_1_1_boolean_decoder" prot="public">parquet::BooleanDecoder</innerclass>
    <innerclass refid="classparquet_1_1_f_l_b_a_decoder" prot="public">parquet::FLBADecoder</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8h" kindref="compound">parquet/exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Array;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ArrayBuilder;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BinaryArray;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BinaryBuilder;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BooleanBuilder;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" kindref="member">Int32Type</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1aebf28a7ea170ee7e771b13b12d06f3cf" kindref="member">Int64Type</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a0ed420ee4d70b4f7e8c71a3b53beefe5" kindref="member">FloatType</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1ab8b1ae52fb8af689994a86814212a9cc" kindref="member">DoubleType</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FixedSizeBinaryType;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NumericBuilder;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FixedSizeBinaryBuilder;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Dictionary32Builder;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="52" refid="classparquet_1_1_typed_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespaceparquet_1a5e0604359b553b8d9479a4b03b47fce9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">BooleanEncoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;BooleanType&gt;</ref>;</highlight></codeline>
<codeline lineno="55" refid="namespaceparquet_1a8de040dab48ce513cf7a1945ad39780a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Int32Encoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="56" refid="namespaceparquet_1abfbfef47ea1c4df255603fb54b59e89b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Int64Encoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="57" refid="namespaceparquet_1ab7c84bd42cb571ef12eec8f30d1f3c43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Int96Encoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;Int96Type&gt;</ref>;</highlight></codeline>
<codeline lineno="58" refid="namespaceparquet_1a6953d58d6bb6fe72ad503e5338d9aa7d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">FloatEncoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="59" refid="namespaceparquet_1a0899b0e10fabb03d9021868796649b46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">DoubleEncoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="60" refid="namespaceparquet_1a528c47176363fb42aff607f291d9d4d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">ByteArrayEncoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;ByteArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="61" refid="namespaceparquet_1aa3aa1ddf2e08ace7ebd74f2865d0c690" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">FLBAEncoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;FLBAType&gt;</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="64" refid="classparquet_1_1_typed_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_boolean_decoder" kindref="compound">BooleanDecoder</ref>;</highlight></codeline>
<codeline lineno="67" refid="namespaceparquet_1ae13987d76b7b2ef689ae025d0062ae86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Int32Decoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="68" refid="namespaceparquet_1ab64284404eb635fdc5116a35d26958c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Int64Decoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="69" refid="namespaceparquet_1a317fa2986055e2f47b6814b1bf3a1227" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Int96Decoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;Int96Type&gt;</ref>;</highlight></codeline>
<codeline lineno="70" refid="namespaceparquet_1a19de3b79c489d055c8134207e863adbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">FloatDecoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="71" refid="namespaceparquet_1a71384666b201cb1e3e73706a262794be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">DoubleDecoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="72" refid="namespaceparquet_1a45ea04e975707d7da9a3766c79c74eae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">ByteArrayDecoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;ByteArrayType&gt;</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_f_l_b_a_decoder" kindref="compound">FLBADecoder</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="76" refid="structparquet_1_1_encoding_traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="79" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">BooleanType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="80" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1ab2f0370ada8c421cc6c53a216bf52880" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a5e0604359b553b8d9479a4b03b47fce9" kindref="member">BooleanEncoder</ref>;</highlight></codeline>
<codeline lineno="81" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1afbc9b1a12230f19446151e85a62c8f73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_boolean_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_boolean_decoder" kindref="compound">BooleanDecoder</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1a2122388d50bc287793a98f9c1fa5f58b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a60f6c016c8d8b612f78974bc516006b0" kindref="member">::arrow::BooleanType</ref>;</highlight></codeline>
<codeline lineno="84" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1abb5b1c1fafdf7359799806e26319924d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_boolean_builder" kindref="compound">::arrow::BooleanBuilder</ref>;</highlight></codeline>
<codeline lineno="85" refid="structparquet_1_1_encoding_traits_3_01_boolean_type_01_4_1_1_dict_accumulator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictAccumulator<sp/>{};</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="89" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">Int32Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="90" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4_1a7f0f269768f2772e8d1b6fcedb8853f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a8de040dab48ce513cf7a1945ad39780a" kindref="member">Int32Encoder</ref>;</highlight></codeline>
<codeline lineno="91" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4_1a2cbc428ec2d00c41d07cc58a68dd8919" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1ae13987d76b7b2ef689ae025d0062ae86" kindref="member">Int32Decoder</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4_1a1555fdefb6a8a982da8eabf6042b4f8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_int32_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" kindref="member">::arrow::Int32Type</ref>;</highlight></codeline>
<codeline lineno="94" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4_1af2c1cf3e1bd794a6d8020b5311eead38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">::arrow::NumericBuilder&lt;::arrow::Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="95" refid="structparquet_1_1_encoding_traits_3_01_int32_type_01_4_1aa7988cd588c69dd5be98094d2ac30b47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::Int32Type&gt;</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="99" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">Int64Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="100" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4_1aed6004b645ca6600230d9b30278b7bb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1abfbfef47ea1c4df255603fb54b59e89b" kindref="member">Int64Encoder</ref>;</highlight></codeline>
<codeline lineno="101" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4_1a7b6c3d926f990ae341b02422a6d1c6ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1ab64284404eb635fdc5116a35d26958c3" kindref="member">Int64Decoder</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4_1af7ede4f9181c4997bb0b0d32c555dda2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_int64_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1aebf28a7ea170ee7e771b13b12d06f3cf" kindref="member">::arrow::Int64Type</ref>;</highlight></codeline>
<codeline lineno="104" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4_1a0a389735b240ba508a93cf6be4953411" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">::arrow::NumericBuilder&lt;::arrow::Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="105" refid="structparquet_1_1_encoding_traits_3_01_int64_type_01_4_1a7709ae6dda2584aa06c3864c545ce033" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::Int64Type&gt;</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="109" refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">Int96Type</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="110" refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1adc115926afb5764fcc837ad610ef0198" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1ab7c84bd42cb571ef12eec8f30d1f3c43" kindref="member">Int96Encoder</ref>;</highlight></codeline>
<codeline lineno="111" refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1a1e95d3c0289bf50e26d7e38a2acb4855" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a317fa2986055e2f47b6814b1bf3a1227" kindref="member">Int96Decoder</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1_1_accumulator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Accumulator<sp/>{};</highlight></codeline>
<codeline lineno="114" refid="structparquet_1_1_encoding_traits_3_01_int96_type_01_4_1_1_dict_accumulator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DictAccumulator<sp/>{};</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="118" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">FloatType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="119" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4_1a8eb0f59628c2e531efee201d484609cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a6953d58d6bb6fe72ad503e5338d9aa7d" kindref="member">FloatEncoder</ref>;</highlight></codeline>
<codeline lineno="120" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4_1ab2668195038e16ac78cbba6d399d50ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a19de3b79c489d055c8134207e863adbb" kindref="member">FloatDecoder</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4_1a27ee5da0c0da9fe75e287e8cd7f73d49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_float_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1a0ed420ee4d70b4f7e8c71a3b53beefe5" kindref="member">::arrow::FloatType</ref>;</highlight></codeline>
<codeline lineno="123" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4_1a217bae3ec5bce44738a503ddb1aa87d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">::arrow::NumericBuilder&lt;::arrow::FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="124" refid="structparquet_1_1_encoding_traits_3_01_float_type_01_4_1a561b13ce8f2b544b58aa507f326fa81e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::FloatType&gt;</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="128" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">DoubleType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="129" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4_1ad23fd54bb49b05ae63f17061ff3bcc32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a0899b0e10fabb03d9021868796649b46" kindref="member">DoubleEncoder</ref>;</highlight></codeline>
<codeline lineno="130" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4_1a2be9caa9b093f0fca1242db7571d005d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a71384666b201cb1e3e73706a262794be" kindref="member">DoubleDecoder</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4_1ad0f4c2d11da4a12afe35139209c643f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_double_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="namespaceparquet_1ab8b1ae52fb8af689994a86814212a9cc" kindref="member">::arrow::DoubleType</ref>;</highlight></codeline>
<codeline lineno="133" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4_1a18d6de76b8be7620b29619cdbdb27869" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_numeric_builder" kindref="compound">::arrow::NumericBuilder&lt;::arrow::DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="134" refid="structparquet_1_1_encoding_traits_3_01_double_type_01_4_1a6e883da12a14a8dc431cd13491114fb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::DoubleType&gt;</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="138" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">ByteArrayType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="139" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1af441feadf7192801b3d91d935dd70f56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a528c47176363fb42aff607f291d9d4d9" kindref="member">ByteArrayEncoder</ref>;</highlight></codeline>
<codeline lineno="140" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1a99876dfb95d7ce8a7596f68b619ff3cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1a45ea04e975707d7da9a3766c79c74eae" kindref="member">ByteArrayDecoder</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Accumulator<sp/>{</highlight></codeline>
<codeline lineno="145" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator_1a90f8d60f733ecee7e59b0e94d0322b17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;::arrow::BinaryBuilder&gt;<sp/><ref refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator_1a90f8d60f733ecee7e59b0e94d0322b17" kindref="member">builder</ref>;</highlight></codeline>
<codeline lineno="146" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator_1a487423614a3eb3fdd3cf5dfcd3273736" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;::arrow::Array&gt;&gt;<sp/><ref refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1_1_accumulator_1a487423614a3eb3fdd3cf5dfcd3273736" kindref="member">chunks</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="148" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1a34f31585777aee48c31b32d047cee50b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_binary_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="classarrow_1_1_binary_type" kindref="compound">::arrow::BinaryType</ref>;</highlight></codeline>
<codeline lineno="149" refid="structparquet_1_1_encoding_traits_3_01_byte_array_type_01_4_1a2f3cf4197b1b5fbde7266178f40b88d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::BinaryType&gt;</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="153" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits</ref>&lt;<ref refid="structparquet_1_1_physical_type" kindref="compound">FLBAType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="154" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4_1a2b3636a9c3a029c8c18d19800d93040a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">Encoder</ref><sp/>=<sp/><ref refid="namespaceparquet_1aa3aa1ddf2e08ace7ebd74f2865d0c690" kindref="member">FLBAEncoder</ref>;</highlight></codeline>
<codeline lineno="155" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4_1a93f7f404cf23a9fc46c7a879c8e9f958" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_f_l_b_a_decoder" kindref="compound">Decoder</ref><sp/>=<sp/><ref refid="classparquet_1_1_f_l_b_a_decoder" kindref="compound">FLBADecoder</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4_1a34781ec20204c0d579900acd5ee4126c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_binary_type" kindref="compound">ArrowType</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_binary_type" kindref="compound">::arrow::FixedSizeBinaryType</ref>;</highlight></codeline>
<codeline lineno="158" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4_1a3b4fcef9c4bf9cfd7e3cbd8c22131a35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_binary_builder" kindref="compound">Accumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_fixed_size_binary_builder" kindref="compound">::arrow::FixedSizeBinaryBuilder</ref>;</highlight></codeline>
<codeline lineno="159" refid="structparquet_1_1_encoding_traits_3_01_f_l_b_a_type_01_4_1a1eaaf773d538767f38fe1f7d7cde534d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">DictAccumulator</ref><sp/>=<sp/><ref refid="classarrow_1_1_dictionary32_builder" kindref="compound">::arrow::Dictionary32Builder&lt;::arrow::FixedSizeBinaryType&gt;</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Untyped<sp/>base<sp/>for<sp/>all<sp/>encoders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classparquet_1_1_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_encoder" kindref="compound">Encoder</ref><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_encoder" kindref="compound">Encoder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>EstimatedDataEncodedSize()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>FlushValues()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Put(const<sp/>::arrow::Array&amp;<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>memory_pool()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>class<sp/>for<sp/>value<sp/>encoders.<sp/>Since<sp/>encoders<sp/>may<sp/>or<sp/>not<sp/>have<sp/>state<sp/>(e.g.,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dictionary<sp/>encoding)<sp/>we<sp/>use<sp/>a<sp/>class<sp/>instance<sp/>to<sp/>maintain<sp/>any<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encode<sp/>interfaces<sp/>are<sp/>internal,<sp/>subject<sp/>to<sp/>change<sp/>without<sp/>deprecation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoder" kindref="compound">Encoder</ref><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185" refid="classparquet_1_1_typed_encoder_1a2ce5ac25cb3826647eb6c07151bae03a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type<sp/><ref refid="classparquet_1_1_typed_encoder_1a2ce5ac25cb3826647eb6c07151bae03a" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Encoder::Put;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutSpaced(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="198" refid="classparquet_1_1_typed_encoder_1abe09ce308aeb879ac32b2ade2d1fbae0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;DType&gt;::Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_values<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>num_values<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(src.size());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Put(src.data(),<sp/>num_values);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="206" refid="classparquet_1_1_typed_encoder_1a363e67032f00e157fb67d57139c637a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder&lt;BooleanType&gt;::Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE(wesm):<sp/>This<sp/>stub<sp/>is<sp/>here<sp/>only<sp/>to<sp/>satisfy<sp/>the<sp/>compiler;<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>overridden<sp/>later<sp/>with<sp/>the<sp/>actual<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>class<sp/>for<sp/>dictionary<sp/>encoders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="213" refid="classparquet_1_1_dict_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_dict_encoder" kindref="compound">DictEncoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_encoder" kindref="compound">TypedEncoder</ref>&lt;DType&gt;<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WriteIndices(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_len)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dict_encoded_size()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>int<sp/>dict_encoded_size()<sp/>{<sp/>return<sp/>dict_encoded_size_;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_width()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteDict(uint8_t*<sp/>buffer)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_entries()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutIndices(const<sp/>::arrow::Array&amp;<sp/>indices)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutDictionary(const<sp/>::arrow::Array&amp;<sp/>values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Value<sp/>decoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classparquet_1_1_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_decoder" kindref="compound">Decoder</ref><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classparquet_1_1_decoder" kindref="compound">Decoder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>data<sp/>for<sp/>a<sp/>new<sp/>page.<sp/>This<sp/>will<sp/>be<sp/>called<sp/>multiple<sp/>times<sp/>on<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decoder<sp/>and<sp/>should<sp/>reset<sp/>all<sp/>internal<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetData(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>values<sp/>left<sp/>(for<sp/>the<sp/>last<sp/>call<sp/>to<sp/>SetData()).<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>values<sp/>left<sp/>in<sp/>this<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_left()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_decoder" kindref="compound">Decoder</ref><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268" refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType::c_type;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Decode(<ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref>*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classparquet_1_1_typed_decoder_1a00334818db6f9e469ad5e2c981061a50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder_1a00334818db6f9e469ad5e2c981061a50" kindref="member">DecodeSpaced</ref>(<ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref>*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>null_count,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,<sp/>int64_t<sp/>valid_bits_offset)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_to_read<sp/>=<sp/>num_values<sp/>-<sp/>null_count;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_read<sp/>=<sp/>Decode(buffer,<sp/>values_to_read);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values_read<sp/>!=<sp/>values_to_read)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>values<sp/>/<sp/>definition_levels<sp/>read<sp/>did<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Depending<sp/>on<sp/>the<sp/>number<sp/>of<sp/>nulls,<sp/>some<sp/>of<sp/>the<sp/>value<sp/>slots<sp/>in<sp/>buffer<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>uninitialized,<sp/>and<sp/>this<sp/>will<sp/>cause<sp/>valgrind<sp/>warnings<sp/>/<sp/>potentially<sp/>UB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(static_cast&lt;void*&gt;(buffer<sp/>+<sp/>values_read),<sp/>0,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num_values<sp/>-<sp/>values_read)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classparquet_1_1_typed_decoder_1aa8529abfc7e2b32e96bf416fd539d62a" kindref="member">T</ref>));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>spacing<sp/>for<sp/>null<sp/>entries.<sp/>As<sp/>we<sp/>have<sp/>filled<sp/>the<sp/>buffer<sp/>from<sp/>the<sp/>front,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>add<sp/>the<sp/>spacing<sp/>from<sp/>the<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_to_move<sp/>=<sp/>values_read<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>stop<sp/>early<sp/>on<sp/>one<sp/>of<sp/>two<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>There<sp/>are<sp/>no<sp/>more<sp/>null<sp/>values<sp/>that<sp/>need<sp/>spacing.<sp/><sp/>Note<sp/>we<sp/>infer<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>backwards,<sp/>when<sp/>&apos;i&apos;<sp/>is<sp/>equal<sp/>to<sp/>&apos;values_to_move&apos;<sp/>it<sp/>indicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>all<sp/>nulls<sp/>have<sp/>been<sp/>consumed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>There<sp/>are<sp/>no<sp/>more<sp/>non-null<sp/>values<sp/>that<sp/>need<sp/>to<sp/>move<sp/>which<sp/>indicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>all<sp/>remaining<sp/>slots<sp/>are<sp/>null,<sp/>so<sp/>their<sp/>exact<sp/>value<sp/>doesn&apos;t<sp/>matter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>num_values<sp/>-<sp/>1;<sp/>(i<sp/>&gt;<sp/>values_to_move)<sp/>&amp;&amp;<sp/>(values_to_move<sp/>&gt;=<sp/>0);<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BitUtil::GetBit(valid_bits,<sp/>valid_bits_offset<sp/>+<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>buffer[values_to_move];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values_to_move--;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_values;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DecodeArrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>null_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::Accumulator</ref>*<sp/>out)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classparquet_1_1_typed_decoder_1abc930b21f0dd3a2ac0dec7aeedef8331" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder_1abc930b21f0dd3a2ac0dec7aeedef8331" kindref="member">DecodeArrowNonNull</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::Accumulator</ref>*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DecodeArrow(num_values,<sp/>0,<sp/></highlight><highlight class="comment">/*valid_bits=*/</highlight><highlight class="normal"><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,<sp/>0,<sp/>out);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DecodeArrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>null_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>valid_bits_offset,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::DictAccumulator</ref>*<sp/>builder)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classparquet_1_1_typed_decoder_1ae8a084565688d79fa86e177a558c16bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder_1ae8a084565688d79fa86e177a558c16bc" kindref="member">DecodeArrowNonNull</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::DictAccumulator</ref>*<sp/>builder)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DecodeArrow(num_values,<sp/>0,<sp/></highlight><highlight class="comment">/*valid_bits=*/</highlight><highlight class="normal"><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,<sp/>0,<sp/>builder);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="364" refid="classparquet_1_1_dict_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_dict_decoder" kindref="compound">DictDecoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder</ref>&lt;DType&gt;<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDict(<ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;DType&gt;</ref>*<sp/><ref refid="group__type-factories_1ga36f61c68b2a04a9d179cb56ff1186c59" kindref="member">dictionary</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertDictionary(::<ref refid="classarrow_1_1_array_builder" kindref="compound">arrow::ArrayBuilder</ref>*<sp/>builder)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DecodeIndicesSpaced(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>null_count,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>valid_bits,<sp/>int64_t<sp/>valid_bits_offset,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_array_builder" kindref="compound">arrow::ArrayBuilder</ref>*<sp/>builder)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DecodeIndices(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values,<sp/>::<ref refid="classarrow_1_1_array_builder" kindref="compound">arrow::ArrayBuilder</ref>*<sp/>builder)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TypedEncoder<sp/>specializations,<sp/>traits,<sp/>and<sp/>factory<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="classparquet_1_1_boolean_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_boolean_decoder" kindref="compound">BooleanDecoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder</ref>&lt;BooleanType&gt;<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;BooleanType&gt;::Decode</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Decode(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_values)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classparquet_1_1_f_l_b_a_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_f_l_b_a_decoder" kindref="compound">FLBADecoder</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder</ref>&lt;FLBAType&gt;<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_typed_decoder" kindref="compound">TypedDecoder&lt;FLBAType&gt;::DecodeSpaced</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(wesm):<sp/>As<sp/>possible<sp/>follow-up<sp/>to<sp/>PARQUET-1508,<sp/>we<sp/>should<sp/>examine<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>value<sp/>in<sp/>adding<sp/>specialized<sp/>read<sp/>methods<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXED_LEN_BYTE_ARRAY.<sp/>If<sp/>only<sp/>Decimal<sp/>data<sp/>can<sp/>occur<sp/>with<sp/>this<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>perhaps<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="409"><highlight class="normal">std::unique_ptr&lt;Encoder&gt;<sp/><ref refid="namespaceparquet_1ac80523bc55f27d6cebf30524c65b947d" kindref="member">MakeEncoder</ref>(</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type_num,<sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_dictionary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="415" refid="namespaceparquet_1aba723e6ed9fb8b554755c78ae100b818" refkind="member"><highlight class="normal">std::unique_ptr&lt;typename<sp/>EncodingTraits&lt;DType&gt;::Encoder&gt;<sp/><ref refid="namespaceparquet_1aba723e6ed9fb8b554755c78ae100b818" kindref="member">MakeTypedEncoder</ref>(</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_dictionary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>())<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>OutType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::Encoder</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Encoder&gt;<sp/>base<sp/>=</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1ac80523bc55f27d6cebf30524c65b947d" kindref="member">MakeEncoder</ref>(DType::type_num,<sp/>encoding,<sp/>use_dictionary,<sp/>descr,<sp/>pool);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;OutType&gt;(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">OutType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base.release()));</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="426"><highlight class="normal">std::unique_ptr&lt;Decoder&gt;<sp/><ref refid="namespaceparquet_1a687cb786ecba50e5a43504731bd4b039" kindref="member">MakeDecoder</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type_num,<sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">PARQUET_EXPORT</highlight></codeline>
<codeline lineno="432"><highlight class="normal">std::unique_ptr&lt;Decoder&gt;<sp/><ref refid="namespaceparquet_1a4eab5d98061ee1636de7bfd5f9ee4657" kindref="member">MakeDictDecoder</ref>(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type_num,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="439" refid="namespaceparquet_1a4eab5d98061ee1636de7bfd5f9ee4657" refkind="member"><highlight class="normal">std::unique_ptr&lt;DictDecoder&lt;DType&gt;&gt;<sp/><ref refid="namespaceparquet_1a4eab5d98061ee1636de7bfd5f9ee4657" kindref="member">MakeDictDecoder</ref>(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref>*<sp/>pool<sp/>=<sp/>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>())<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>OutType<sp/>=<sp/><ref refid="classparquet_1_1_dict_decoder" kindref="compound">DictDecoder&lt;DType&gt;</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoder<sp/>=<sp/><ref refid="namespaceparquet_1a4eab5d98061ee1636de7bfd5f9ee4657" kindref="member">detail::MakeDictDecoder</ref>(DType::type_num,<sp/>descr,<sp/>pool);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;OutType&gt;(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">OutType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(decoder.release()));</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="448" refid="namespaceparquet_1ac251694ef36decff224c5f8610de1f62" refkind="member"><highlight class="normal">std::unique_ptr&lt;typename<sp/>EncodingTraits&lt;DType&gt;::Decoder&gt;<sp/><ref refid="namespaceparquet_1ac251694ef36decff224c5f8610de1f62" kindref="member">MakeTypedDecoder</ref>(</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>encoding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref>*<sp/>descr<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>OutType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_traits" kindref="compound">EncodingTraits&lt;DType&gt;::Decoder</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Decoder&gt;<sp/>base<sp/>=<sp/><ref refid="namespaceparquet_1a687cb786ecba50e5a43504731bd4b039" kindref="member">MakeDecoder</ref>(DType::type_num,<sp/>encoding,<sp/>descr);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;OutType&gt;(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">OutType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base.release()));</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/encoding.h"/>
  </compounddef>
</doxygen>
