<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_record_batch_projector" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::RecordBatchProjector</compoundname>
    <includes refid="arrow_2dataset_2projector_8h" local="no">arrow/dataset/projector.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1a7ee1ac3f3afa70dcaad51f2c4b29f333" prot="public" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int arrow::dataset::RecordBatchProjector::kNoMatch</definition>
        <argsstring></argsstring>
        <name>kNoMatch</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="43" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1abce8c9383b8b84d6a8eb4a6eba57691c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::dataset::RecordBatchProjector::from_</definition>
        <argsstring></argsstring>
        <name>from_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1ac72c943382c8548f45d0a76a3839539a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::dataset::RecordBatchProjector::to_</definition>
        <argsstring></argsstring>
        <name>to_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1a4b372805d14fb2446d0a2f740d194bc8" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::dataset::RecordBatchProjector::missing_columns_length_</definition>
        <argsstring></argsstring>
        <name>missing_columns_length_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="65" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1aaf010375a378a41cf3405b760bdcaca6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Array&gt; &gt; arrow::dataset::RecordBatchProjector::missing_columns_</definition>
        <argsstring></argsstring>
        <name>missing_columns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="67" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1a63f6e06836e50c5050ebf9265d674524" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; arrow::dataset::RecordBatchProjector::column_indices_</definition>
        <argsstring></argsstring>
        <name>column_indices_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="68" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_record_batch_projector_1a13b0a45e325aa9bdd57159563427086d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Scalar&gt; &gt; arrow::dataset::RecordBatchProjector::scalars_</definition>
        <argsstring></argsstring>
        <name>scalars_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="69" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1ae89d515095ff2e6e46763e89a87593c7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::RecordBatchProjector::RecordBatchProjector</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; to)</argsstring>
        <name>RecordBatchProjector</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>A column required by the given schema but absent from a record batch will be added to the projected record batch with all its slots null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1a16c9ba8eff3d4a4edad664c62f29a43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::RecordBatchProjector::SetDefaultValue</definition>
        <argsstring>(FieldRef ref, std::shared_ptr&lt; Scalar &gt; scalar)</argsstring>
        <name>SetDefaultValue</name>
        <param>
          <type><ref refid="classarrow_1_1_field_ref" kindref="compound">FieldRef</ref></type>
          <declname>ref</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>If the indexed field is absent from a record batch it will be added to the projected record batch with all its slots equal to the provided scalar (instead of null). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1a096420ee87fc80f7c2486c2b148d49f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;RecordBatch&gt; &gt; arrow::dataset::RecordBatchProjector::Project</definition>
        <argsstring>(const RecordBatch &amp;batch, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>Project</name>
        <param>
          <type>const <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &amp;</type>
          <declname>batch</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1af1f5b0d3d91192ed9c1c139e9e14ff22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;Schema&gt;&amp; arrow::dataset::RecordBatchProjector::schema</definition>
        <argsstring>() const</argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1a718122683d6d2fabe904397635d01230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::RecordBatchProjector::SetInputSchema</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; from, MemoryPool *pool=default_memory_pool())</argsstring>
        <name>SetInputSchema</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="58" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_record_batch_projector_1a1df22fb7fbe575121caa2413cecca198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::RecordBatchProjector::ResizeMissingColumns</definition>
        <argsstring>(int64_t new_length, MemoryPool *pool)</argsstring>
        <name>ResizeMissingColumns</name>
        <param>
          <type>int64_t</type>
          <declname>new_length</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Project a <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> to a given schema. </para>    </briefdescription>
    <detaileddescription>
<para>Projected record batches will reorder columns from input record batches when possible, otherwise the given schema will be satisfied by augmenting with null or constant columns.</para><para><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref> is most efficient when projecting record batches with a consistent schema (for example batches from a table), but it can project record batches having any schema. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/dataset/projector.h" line="41" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/projector.h" bodystart="41" bodyend="70"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a63f6e06836e50c5050ebf9265d674524" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>column_indices_</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1abce8c9383b8b84d6a8eb4a6eba57691c" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>from_</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a7ee1ac3f3afa70dcaad51f2c4b29f333" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>kNoMatch</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1aaf010375a378a41cf3405b760bdcaca6" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>missing_columns_</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a4b372805d14fb2446d0a2f740d194bc8" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>missing_columns_length_</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a096420ee87fc80f7c2486c2b148d49f0" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>Project</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1ae89d515095ff2e6e46763e89a87593c7" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>RecordBatchProjector</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a1df22fb7fbe575121caa2413cecca198" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>ResizeMissingColumns</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a13b0a45e325aa9bdd57159563427086d" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>scalars_</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1af1f5b0d3d91192ed9c1c139e9e14ff22" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a16c9ba8eff3d4a4edad664c62f29a43f" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>SetDefaultValue</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1a718122683d6d2fabe904397635d01230" prot="public" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>SetInputSchema</name></member>
      <member refid="classarrow_1_1dataset_1_1_record_batch_projector_1ac72c943382c8548f45d0a76a3839539a" prot="private" virt="non-virtual"><scope>arrow::dataset::RecordBatchProjector</scope><name>to_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
