<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_expression" kind="class" language="C++" prot="public">
    <compoundname>gandiva::Expression</compoundname>
    <derivedcompoundref refid="classgandiva_1_1_condition" prot="public" virt="non-virtual">gandiva::Condition</derivedcompoundref>
    <includes refid="gandiva_2expression_8h" local="no">gandiva/expression.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_expression_1a2a664577963d18af300a24f8deb3c5ed" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref></type>
        <definition>const NodePtr gandiva::Expression::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="42" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgandiva_1_1_expression_1a946af4b6ecb218ec0905dccd3289dbf9" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref></type>
        <definition>const FieldPtr gandiva::Expression::result_</definition>
        <argsstring></argsstring>
        <name>result_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="43" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_expression_1a9c73211bedf9fe64a2a23b0949909b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::Expression::Expression</definition>
        <argsstring>(const NodePtr root, const FieldPtr result)</argsstring>
        <name>Expression</name>
        <param>
          <type>const <ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="31" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_1ab251f16da6d2aceed0811807e9c584e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual gandiva::Expression::~Expression</definition>
        <argsstring>()=default</argsstring>
        <name>~Expression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_1aa7f249d1822930f6a3d33b1ede3750ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref> &amp;</type>
        <definition>const NodePtr&amp; gandiva::Expression::root</definition>
        <argsstring>() const</argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="35" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_1a9545c4745e4836da38a5b2ef82ab6810" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref> &amp;</type>
        <definition>const FieldPtr&amp; gandiva::Expression::result</definition>
        <argsstring>() const</argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="37" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_1afa8304d5f57632676b5aaf71cd7a823a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gandiva::Expression::ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An expression tree with a root node, and a result field. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1485">
        <label>gandiva::Expression</label>
        <link refid="classgandiva_1_1_expression"/>
      </node>
      <node id="1486">
        <label>gandiva::Condition</label>
        <link refid="classgandiva_1_1_condition"/>
        <childnode refid="1485" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/gandiva/expression.h" line="29" column="1" bodyfile="/arrow/cpp/src/gandiva/expression.h" bodystart="29" bodyend="44"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_expression_1a9c73211bedf9fe64a2a23b0949909b86" prot="public" virt="non-virtual"><scope>gandiva::Expression</scope><name>Expression</name></member>
      <member refid="classgandiva_1_1_expression_1a9545c4745e4836da38a5b2ef82ab6810" prot="public" virt="non-virtual"><scope>gandiva::Expression</scope><name>result</name></member>
      <member refid="classgandiva_1_1_expression_1a946af4b6ecb218ec0905dccd3289dbf9" prot="private" virt="non-virtual"><scope>gandiva::Expression</scope><name>result_</name></member>
      <member refid="classgandiva_1_1_expression_1aa7f249d1822930f6a3d33b1ede3750ff" prot="public" virt="non-virtual"><scope>gandiva::Expression</scope><name>root</name></member>
      <member refid="classgandiva_1_1_expression_1a2a664577963d18af300a24f8deb3c5ed" prot="private" virt="non-virtual"><scope>gandiva::Expression</scope><name>root_</name></member>
      <member refid="classgandiva_1_1_expression_1afa8304d5f57632676b5aaf71cd7a823a" prot="public" virt="non-virtual"><scope>gandiva::Expression</scope><name>ToString</name></member>
      <member refid="classgandiva_1_1_expression_1ab251f16da6d2aceed0811807e9c584e1" prot="public" virt="virtual"><scope>gandiva::Expression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
