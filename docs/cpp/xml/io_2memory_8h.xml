<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="io_2memory_8h" kind="file" language="C++">
    <compoundname>memory.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes refid="concurrency_8h" local="yes">arrow/io/concurrency.h</includes>
    <includes refid="interfaces_8h" local="yes">arrow/io/interfaces.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="string__view_8h" local="yes">arrow/util/string_view.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="io_2api_8h" local="yes">/arrow/cpp/src/arrow/io/api.h</includedby>
    <includedby refid="parquet_2platform_8h" local="yes">/arrow/cpp/src/parquet/platform.h</includedby>
    <incdepgraph>
      <node id="8272">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8267" relation="include">
        </childnode>
        <childnode refid="8268" relation="include">
        </childnode>
        <childnode refid="8261" relation="include">
        </childnode>
      </node>
      <node id="8253">
        <label>cstdint</label>
      </node>
      <node id="8269">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8270" relation="include">
        </childnode>
        <childnode refid="8271" relation="include">
        </childnode>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8268" relation="include">
        </childnode>
        <childnode refid="8272" relation="include">
        </childnode>
        <childnode refid="8261" relation="include">
        </childnode>
        <childnode refid="8273" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8260">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8258" relation="include">
        </childnode>
        <childnode refid="8261" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8256">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="8253" relation="include">
        </childnode>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8258" relation="include">
        </childnode>
        <childnode refid="8259" relation="include">
        </childnode>
        <childnode refid="8260" relation="include">
        </childnode>
        <childnode refid="8261" relation="include">
        </childnode>
        <childnode refid="8263" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8275">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8267" relation="include">
        </childnode>
      </node>
      <node id="8257">
        <label>string</label>
      </node>
      <node id="8264">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="8274">
        <label>ostream</label>
      </node>
      <node id="8262">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8258">
        <label>vector</label>
      </node>
      <node id="8266">
        <label>new</label>
      </node>
      <node id="8268">
        <label>utility</label>
      </node>
      <node id="8263">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="8253" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8264" relation="include">
        </childnode>
      </node>
      <node id="8252">
        <label>/arrow/cpp/src/arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="8253" relation="include">
        </childnode>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8255" relation="include">
        </childnode>
        <childnode refid="8256" relation="include">
        </childnode>
        <childnode refid="8260" relation="include">
        </childnode>
        <childnode refid="8263" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8259">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="8271">
        <label>iosfwd</label>
      </node>
      <node id="8255">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8256" relation="include">
        </childnode>
        <childnode refid="8265" relation="include">
        </childnode>
        <childnode refid="8269" relation="include">
        </childnode>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8261" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8265">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8266" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8267" relation="include">
        </childnode>
        <childnode refid="8268" relation="include">
        </childnode>
        <childnode refid="8269" relation="include">
        </childnode>
        <childnode refid="8272" relation="include">
        </childnode>
      </node>
      <node id="8267">
        <label>type_traits</label>
      </node>
      <node id="8270">
        <label>cstring</label>
      </node>
      <node id="8273">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8254" relation="include">
        </childnode>
        <childnode refid="8274" relation="include">
        </childnode>
        <childnode refid="8257" relation="include">
        </childnode>
        <childnode refid="8268" relation="include">
        </childnode>
        <childnode refid="8262" relation="include">
        </childnode>
      </node>
      <node id="8254">
        <label>memory</label>
      </node>
      <node id="8261">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8253" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8285">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="8290">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="8277">
        <label>/arrow/cpp/src/arrow/io/api.h</label>
        <link refid="io_2api_8h"/>
      </node>
      <node id="8289">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
      </node>
      <node id="8309">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="8299" relation="include">
        </childnode>
      </node>
      <node id="8305">
        <label>/arrow/cpp/src/parquet/murmur3.h</label>
        <link refid="murmur3_8h"/>
      </node>
      <node id="8301">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="8288">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="8284">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="8312">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="8278">
        <label>/arrow/cpp/src/parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8280" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8283" relation="include">
        </childnode>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8289" relation="include">
        </childnode>
        <childnode refid="8292" relation="include">
        </childnode>
        <childnode refid="8294" relation="include">
        </childnode>
        <childnode refid="8296" relation="include">
        </childnode>
        <childnode refid="8302" relation="include">
        </childnode>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8306" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8307" relation="include">
        </childnode>
        <childnode refid="8310" relation="include">
        </childnode>
        <childnode refid="8311" relation="include">
        </childnode>
        <childnode refid="8299" relation="include">
        </childnode>
        <childnode refid="8313" relation="include">
        </childnode>
      </node>
      <node id="8302">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8288" relation="include">
        </childnode>
      </node>
      <node id="8304">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8302" relation="include">
        </childnode>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
      </node>
      <node id="8310">
        <label>/arrow/cpp/src/parquet/schema_internal.h</label>
        <link refid="schema__internal_8h"/>
      </node>
      <node id="8296">
        <label>/arrow/cpp/src/parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="8293" relation="include">
        </childnode>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8289" relation="include">
        </childnode>
        <childnode refid="8294" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8299" relation="include">
        </childnode>
      </node>
      <node id="8298">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="8299" relation="include">
        </childnode>
      </node>
      <node id="8287">
        <label>/arrow/cpp/src/parquet/column_scanner.h</label>
        <link refid="column__scanner_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
      </node>
      <node id="8300">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
        <childnode refid="8302" relation="include">
        </childnode>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
      </node>
      <node id="8279">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="8292">
        <label>/arrow/cpp/src/parquet/deprecated_io.h</label>
        <link refid="deprecated__io_8h"/>
        <childnode refid="8293" relation="include">
        </childnode>
      </node>
      <node id="8299">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="8286">
        <label>/arrow/cpp/src/parquet/column_reader.h</label>
        <link refid="column__reader_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8288" relation="include">
        </childnode>
      </node>
      <node id="8306">
        <label>/arrow/cpp/src/parquet/printer.h</label>
        <link refid="printer_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
      </node>
      <node id="8282">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="8276">
        <label>/arrow/cpp/src/arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="8277" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
      </node>
      <node id="8307">
        <label>/arrow/cpp/src/parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="8308" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8283" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8309" relation="include">
        </childnode>
        <childnode refid="8298" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8310" relation="include">
        </childnode>
      </node>
      <node id="8303">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
      </node>
      <node id="8294">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="8295" relation="include">
        </childnode>
      </node>
      <node id="8311">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8312" relation="include">
        </childnode>
        <childnode refid="8299" relation="include">
        </childnode>
      </node>
      <node id="8283">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="8282" relation="include">
        </childnode>
      </node>
      <node id="8308">
        <label>/arrow/cpp/src/parquet/api/schema.h</label>
        <link refid="api_2schema_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
      </node>
      <node id="8295">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="8291">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="8288" relation="include">
        </childnode>
      </node>
      <node id="8293">
        <label>/arrow/cpp/src/parquet/api/io.h</label>
        <link refid="parquet_2api_2io_8h"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
      </node>
      <node id="8314">
        <label>/arrow/cpp/src/parquet/hasher.h</label>
        <link refid="hasher_8h"/>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
      </node>
      <node id="8297">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="8298" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
      </node>
      <node id="8313">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8312" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8289" relation="include">
        </childnode>
        <childnode refid="8294" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
        <childnode refid="8314" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8307" relation="include">
        </childnode>
        <childnode refid="8310" relation="include">
        </childnode>
        <childnode refid="8311" relation="include">
        </childnode>
        <childnode refid="8299" relation="include">
        </childnode>
      </node>
      <node id="8280">
        <label>/arrow/cpp/src/parquet/arrow/path_internal.h</label>
        <link refid="path__internal_8h"/>
      </node>
      <node id="8281">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1io_1_1_buffer_output_stream" prot="public">arrow::io::BufferOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_mock_output_stream" prot="public">arrow::io::MockOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" prot="public">arrow::io::FixedSizeBufferWriter</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_buffer_reader" prot="public">arrow::io::BufferReader</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>API<sp/>for<sp/>different<sp/>memory<sp/>sharing<sp/>/<sp/>IO<sp/>mechanisms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="concurrency_8h" kindref="compound">arrow/io/concurrency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interfaces_8h" kindref="compound">arrow/io/interfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__view_8h" kindref="compound">arrow/util/string_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classarrow_1_1io_1_1_buffer_output_stream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_buffer_output_stream" kindref="compound">BufferOutputStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_buffer_output_stream" kindref="compound">BufferOutputStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ResizableBuffer&gt;&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;BufferOutputStream&gt;</ref>&gt;<sp/>Create(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>initial_capacity<sp/>=<sp/>4096,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_buffer_output_stream" kindref="compound">BufferOutputStream</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>the<sp/>OutputStream<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">OutputStream::Write</ref>;</highlight></codeline>
<codeline lineno="64"></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>Finish();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Reset(int64_t<sp/>initial_capacity<sp/>=<sp/>1024,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classarrow_1_1io_1_1_buffer_output_stream_1aba8fe40847d143b6f69780db99d00cdd" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1io_1_1_buffer_output_stream_1aba8fe40847d143b6f69780db99d00cdd" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>capacity_;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_buffer_output_stream" kindref="compound">BufferOutputStream</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensures<sp/>there<sp/>is<sp/>sufficient<sp/>space<sp/>available<sp/>to<sp/>write<sp/>nbytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Reserve(int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ResizableBuffer&gt;<sp/>buffer_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>int64_t<sp/>capacity_;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>int64_t<sp/>position_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>mutable_data_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classarrow_1_1io_1_1_mock_output_stream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_mock_output_stream" kindref="compound">MockOutputStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97" refid="classarrow_1_1io_1_1_mock_output_stream_1aeffcb55e9b83be6037d8596d116f183b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_mock_output_stream_1aeffcb55e9b83be6037d8596d116f183b" kindref="member">MockOutputStream</ref>()<sp/>:<sp/>extent_bytes_written_(0),<sp/>is_open_(true)<sp/>{}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>the<sp/>OutputStream<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">Writable::Write</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classarrow_1_1io_1_1_mock_output_stream_1a38536d0cd4808fd6af4f23326145cffe" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1io_1_1_mock_output_stream_1a38536d0cd4808fd6af4f23326145cffe" kindref="member">GetExtentBytesWritten</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extent_bytes_written_;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>int64_t<sp/>extent_bytes_written_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" kindref="compound">FixedSizeBufferWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_writable_file" kindref="compound">WritableFile</ref><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" kindref="compound">FixedSizeBufferWriter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" kindref="compound">FixedSizeBufferWriter</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Seek(int64_t<sp/>position)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">Writable::Write</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>WriteAt(int64_t<sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_memcopy_threads(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_threads);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_memcopy_blocksize(int64_t<sp/>blocksize);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_memcopy_threshold(int64_t<sp/>threshold);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138" refid="classarrow_1_1io_1_1_fixed_size_buffer_writer_1a03fe73b61469276c535aa3fef56db5c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FixedSizeBufferWriterImpl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FixedSizeBufferWriterImpl&gt;<sp/><ref refid="classarrow_1_1io_1_1_fixed_size_buffer_writer_1a03fe73b61469276c535aa3fef56db5c3" kindref="member">impl_</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classarrow_1_1io_1_1_buffer_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader" kindref="compound">BufferReader</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>internal::RandomAccessFileConcurrencyWrapper&lt;BufferReader&gt;<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader" kindref="compound">BufferReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader" kindref="compound">BufferReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader" kindref="compound">BufferReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader" kindref="compound">BufferReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>&amp;<sp/>data);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supports_zero_copy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classarrow_1_1io_1_1_buffer_reader_1aa1491beffa2e6b2bc025e25c67886492" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1aa1491beffa2e6b2bc025e25c67886492" kindref="member">buffer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer_;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Synchronous<sp/>ReadAsync<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_future" kindref="compound">Future&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>ReadAsync(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="classarrow_1_1io_1_1_buffer_reader_1a142e5babbf130490d237dd7969dc8938" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>RandomAccessFileConcurrencyWrapper&lt;BufferReader&gt;;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DoClose();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoRead(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>DoRead(int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>DoReadAt(int64_t<sp/>position,<sp/>int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;util::string_view&gt;</ref><sp/>DoPeek(int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoTell()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DoSeek(int64_t<sp/>position);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoGetSize();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classarrow_1_1io_1_1_buffer_reader_1a281bd330bcb5a45119f24da1acd8dfe7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a281bd330bcb5a45119f24da1acd8dfe7" kindref="member">CheckClosed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_open_)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Operation<sp/>forbidden<sp/>on<sp/>closed<sp/>BufferReader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classarrow_1_1io_1_1_buffer_reader_1a245edeff7186cc5f173cda2c1e925314" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a245edeff7186cc5f173cda2c1e925314" kindref="member">buffer_</ref>;</highlight></codeline>
<codeline lineno="187" refid="classarrow_1_1io_1_1_buffer_reader_1a7884a6f59fa0db820f86a861ef6851cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a7884a6f59fa0db820f86a861ef6851cc" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="188" refid="classarrow_1_1io_1_1_buffer_reader_1a3f1655cf6afa7e0799f6c6914fe570e6" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a3f1655cf6afa7e0799f6c6914fe570e6" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="189" refid="classarrow_1_1io_1_1_buffer_reader_1a38c69e817deb97bbaf521824f46e2961" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a38c69e817deb97bbaf521824f46e2961" kindref="member">position_</ref>;</highlight></codeline>
<codeline lineno="190" refid="classarrow_1_1io_1_1_buffer_reader_1a4cbd9752f3bb44fdbee339093be3ce79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_buffer_reader_1a4cbd9752f3bb44fdbee339093be3ce79" kindref="member">is_open_</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/io/memory.h"/>
  </compounddef>
</doxygen>
