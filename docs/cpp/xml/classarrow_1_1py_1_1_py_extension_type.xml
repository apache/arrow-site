<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1py_1_1_py_extension_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::py::PyExtensionType</compoundname>
    <basecompoundref refid="classarrow_1_1_extension_type" prot="public" virt="non-virtual">arrow::ExtensionType</basecompoundref>
    <includes refid="python_2extension__type_8h" local="no">arrow/python/extension_type.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_extension_type_1af51e15db3bfe7c0ef5037a58b4bad1fd" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::py::PyExtensionType::extension_name_</definition>
        <argsstring></argsstring>
        <name>extension_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="61" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_extension_type_1a926476a84dc2edb5a28eccf8f9f3e9a3" prot="protected" static="no" mutable="yes">
        <type><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" kindref="compound">OwnedRefNoGIL</ref></type>
        <definition>OwnedRefNoGIL arrow::py::PyExtensionType::type_class_</definition>
        <argsstring></argsstring>
        <name>type_class_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_extension_type_1a9eed17bb074db848640c625267dabf2a" prot="protected" static="no" mutable="yes">
        <type><ref refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l" kindref="compound">OwnedRefNoGIL</ref></type>
        <definition>OwnedRefNoGIL arrow::py::PyExtensionType::type_instance_</definition>
        <argsstring></argsstring>
        <name>type_instance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="70" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1py_1_1_py_extension_type_1a89ce8cc361c9025e5820cd92861847de" prot="protected" static="no" mutable="yes">
        <type>std::string</type>
        <definition>std::string arrow::py::PyExtensionType::serialized_</definition>
        <argsstring></argsstring>
        <name>serialized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="72" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a9b7f2afdd5bc6a89e1fa8c5db11413d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::py::PyExtensionType::extension_name</definition>
        <argsstring>() const override</argsstring>
        <name>extension_name</name>
        <reimplements refid="classarrow_1_1_extension_type_1ad9916ec6eff760b2e7ea27a0447280b2">extension_name</reimplements>
        <briefdescription>
<para>Unique name of extension type used to identify type for serialization. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the string name of the extension </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="34" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a3d7a39403b8f1bb996f39f66cb93cedc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::py::PyExtensionType::ExtensionEquals</definition>
        <argsstring>(const ExtensionType &amp;other) const override</argsstring>
        <name>ExtensionEquals</name>
        <reimplements refid="classarrow_1_1_extension_type_1a69e984708e321511b6ead98555926a54">ExtensionEquals</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Determine if two instances of the same extension types are equal. </para>        </briefdescription>
        <detaileddescription>
<para>Invoked from <ref refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" kindref="member">ExtensionType::Equals</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to compare this type with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if type instances are equal </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a5b1c1c89607f6fd5b75a946b7ee97db4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Array&gt; arrow::py::PyExtensionType::MakeArray</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; data) const override</argsstring>
        <name>MakeArray</name>
        <reimplements refid="classarrow_1_1_extension_type_1a57dda0a9013da282fad40e8480fbbd05">MakeArray</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Wrap built-in <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> type in a user-defined <ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>the physical storage for the extension type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a41c41e7ddfe96efb912ae8ab6e5a14d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;DataType&gt; &gt; arrow::py::PyExtensionType::Deserialize</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; storage_type, const std::string &amp;serialized) const override</argsstring>
        <name>Deserialize</name>
        <reimplements refid="classarrow_1_1_extension_type_1ab30f3ba683a121093598f67581eda893">Deserialize</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>serialized_data</declname>
        </param>
        <briefdescription>
<para>Create an instance of the <ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref> given the actual storage type and the serialized representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">storage_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the physical storage type of the extension </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">serialized_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the serialized representation produced by Serialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1adf8571501c6b5a0038e3b7b64f9828e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::py::PyExtensionType::Serialize</definition>
        <argsstring>() const override</argsstring>
        <name>Serialize</name>
        <reimplements refid="classarrow_1_1_extension_type_1ad8d5ca0bb4338a8c5bd54cbb1e5b9041">Serialize</reimplements>
        <briefdescription>
<para>Create a serialized representation of the extension type&apos;s metadata. </para>        </briefdescription>
        <detaileddescription>
<para>The storage type will be handled automatically in IPC code paths <simplesect kind="return"><para>the serialized representation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a5369a48ece7efd0da60ccd10b8dc0c5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
        <definition>PyObject* arrow::py::PyExtensionType::GetInstance</definition>
        <argsstring>() const</argsstring>
        <name>GetInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1ad25046e9d7dbe2f4cdd173845d2fccbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::py::PyExtensionType::SetInstance</definition>
        <argsstring>(PyObject *) const</argsstring>
        <name>SetInstance</name>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a7c6f9f6fa3d1d4fd9cbac8a27e5412f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::py::PyExtensionType::FromClass</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; storage_type, const std::string extension_name, PyObject *typ, std::shared_ptr&lt; ExtensionType &gt; *out)</argsstring>
        <name>FromClass</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>extension_name</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a67b53590e90c545cebca23dadae240c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::py::PyExtensionType::PyExtensionType</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; storage_type, PyObject *typ, PyObject *inst=NULLPTR)</argsstring>
        <name>PyExtensionType</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>typ</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>inst</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1py_1_1_py_extension_type_1a2e6a4ba9e10aa879b8c14d7181bbab01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::py::PyExtensionType::PyExtensionType</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; storage_type, std::string extension_name, PyObject *typ, PyObject *inst=NULLPTR)</argsstring>
        <name>PyExtensionType</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>extension_name</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>typ</declname>
        </param>
        <param>
          <type><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref> *</type>
          <declname>inst</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="58" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3661">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="3662" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3659">
        <label>arrow::py::PyExtensionType</label>
        <link refid="classarrow_1_1py_1_1_py_extension_type"/>
        <childnode refid="3660" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3662">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="3660">
        <label>arrow::ExtensionType</label>
        <link refid="classarrow_1_1_extension_type"/>
        <childnode refid="3661" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3665">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="3666" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3663">
        <label>arrow::py::PyExtensionType</label>
        <link refid="classarrow_1_1py_1_1_py_extension_type"/>
        <childnode refid="3664" relation="public-inheritance">
        </childnode>
        <childnode refid="3667" relation="usage">
          <edgelabel>type_class_</edgelabel>
          <edgelabel>type_instance_</edgelabel>
        </childnode>
      </node>
      <node id="3667">
        <label>arrow::py::OwnedRefNoGIL</label>
        <link refid="classarrow_1_1py_1_1_owned_ref_no_g_i_l"/>
        <childnode refid="3668" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3666">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="3664">
        <label>arrow::ExtensionType</label>
        <link refid="classarrow_1_1_extension_type"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3668">
        <label>arrow::py::OwnedRef</label>
        <link refid="classarrow_1_1py_1_1_owned_ref"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/python/extension_type.h" line="31" column="1" bodyfile="/arrow/cpp/src/arrow/python/extension_type.h" bodystart="31" bodyend="73"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>children_</name></member>
      <member refid="classarrow_1_1_data_type_1a76d3baecd61b755855fff41df058785a" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>DataType</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a41c41e7ddfe96efb912ae8ab6e5a14d4" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>Deserialize</name></member>
      <member refid="classarrow_1_1_extension_type_1afb2a3286f7f95fa90f4998849f2b8540" prot="public" virt="non-virtual" ambiguityscope="arrow::ExtensionType::"><scope>arrow::py::PyExtensionType</scope><name>Deserialize</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>Equals</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a9b7f2afdd5bc6a89e1fa8c5db11413d2" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>extension_name</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1af51e15db3bfe7c0ef5037a58b4bad1fd" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>extension_name_</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a3d7a39403b8f1bb996f39f66cb93cedc" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>ExtensionEquals</name></member>
      <member refid="classarrow_1_1_extension_type_1a0c5142ee04cd6c089bbf67409f034d65" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>ExtensionType</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a7c6f9f6fa3d1d4fd9cbac8a27e5412f7" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>FromClass</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a5369a48ece7efd0da60ccd10b8dc0c5a" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>GetInstance</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>id_</name></member>
      <member refid="classarrow_1_1_extension_type_1a467c12cd7f9ee1bdbee822a311c7f2c6" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>layout</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a5b1c1c89607f6fd5b75a946b7ee97db4" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>MakeArray</name></member>
      <member refid="classarrow_1_1_extension_type_1a7db26a19117968f84d607a31b0f49322" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>num_children</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a67b53590e90c545cebca23dadae240c9" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>PyExtensionType</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a2e6a4ba9e10aa879b8c14d7181bbab01" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>PyExtensionType</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1adf8571501c6b5a0038e3b7b64f9828e8" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>Serialize</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a89ce8cc361c9025e5820cd92861847de" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>serialized_</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1ad25046e9d7dbe2f4cdd173845d2fccbe" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>SetInstance</name></member>
      <member refid="classarrow_1_1_extension_type_1affa30a5b5993a3e38d8ea27e20253ae1" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>storage_type</name></member>
      <member refid="classarrow_1_1_extension_type_1a09fc1e29ec03b24599f24dad5fb9e81f" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>storage_type_</name></member>
      <member refid="classarrow_1_1_extension_type_1a0004afa50de1db25fdeb1fe290cf7312" prot="public" virt="virtual"><scope>arrow::py::PyExtensionType</scope><name>ToString</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a926476a84dc2edb5a28eccf8f9f3e9a3" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>type_class_</name></member>
      <member refid="classarrow_1_1_extension_type_1a941594575270b88e4892e73e3ee39e4f" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>type_id</name></member>
      <member refid="classarrow_1_1py_1_1_py_extension_type_1a9eed17bb074db848640c625267dabf2a" prot="protected" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>type_instance_</name></member>
      <member refid="classarrow_1_1_extension_type_1aadda8549c7cca187b72a42e8ed280482" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::py::PyExtensionType</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
