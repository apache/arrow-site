<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parquet_2thrift__internal_8h" kind="file" language="C++">
    <compoundname>thrift_internal.h</compoundname>
    <includes refid="arrow_2util_2windows__compatibility_8h" local="yes">arrow/util/windows_compatibility.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">thrift/TApplicationException.h</includes>
    <includes local="no">thrift/protocol/TCompactProtocol.h</includes>
    <includes local="no">thrift/protocol/TDebugProtocol.h</includes>
    <includes local="no">thrift/protocol/TBinaryProtocol.h</includes>
    <includes local="no">thrift/transport/TBufferTransports.h</includes>
    <includes local="no">sstream</includes>
    <includes refid="arrow_2util_2logging_8h" local="yes">arrow/util/logging.h</includes>
    <includes refid="exception_8h" local="yes">parquet/exception.h</includes>
    <includes refid="internal__file__decryptor_8h" local="yes">parquet/internal_file_decryptor.h</includes>
    <includes refid="internal__file__encryptor_8h" local="yes">parquet/internal_file_encryptor.h</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="statistics_8h" local="yes">parquet/statistics.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includes local="yes">generated/parquet_types.h</includes>
    <incdepgraph>
      <node id="6672">
        <label>atomic</label>
      </node>
      <node id="6659">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
      </node>
      <node id="6680">
        <label>limits</label>
      </node>
      <node id="6685">
        <label>parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="6686" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6687" relation="include">
        </childnode>
      </node>
      <node id="6640">
        <label>thrift/protocol/TCompactProtocol.h</label>
      </node>
      <node id="6635">
        <label>cstdint</label>
      </node>
      <node id="6654">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6655" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6657" relation="include">
        </childnode>
        <childnode refid="6658" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6643">
        <label>thrift/transport/TBufferTransports.h</label>
      </node>
      <node id="6674">
        <label>endian.h</label>
      </node>
      <node id="6660">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="6655" relation="include">
        </childnode>
        <childnode refid="6661" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6659" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6662" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6681">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="6682" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
      </node>
      <node id="6653">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6654" relation="include">
        </childnode>
        <childnode refid="6665" relation="include">
        </childnode>
        <childnode refid="6666" relation="include">
        </childnode>
        <childnode refid="6671" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6673" relation="include">
        </childnode>
        <childnode refid="6684" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
      </node>
      <node id="6652">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6665">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6658" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6679">
        <label>cmath</label>
      </node>
      <node id="6678">
        <label>cassert</label>
      </node>
      <node id="6670">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
      </node>
      <node id="6637">
        <label>string</label>
      </node>
      <node id="6641">
        <label>thrift/protocol/TDebugProtocol.h</label>
      </node>
      <node id="6695">
        <label>generated/parquet_types.h</label>
      </node>
      <node id="6664">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="6686">
        <label>map</label>
      </node>
      <node id="6634">
        <label>arrow/util/windows_compatibility.h</label>
        <link refid="arrow_2util_2windows__compatibility_8h"/>
      </node>
      <node id="6649">
        <label>parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="6650" relation="include">
        </childnode>
        <childnode refid="6644" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
      </node>
      <node id="6650">
        <label>exception</label>
      </node>
      <node id="6639">
        <label>thrift/TApplicationException.h</label>
      </node>
      <node id="6646">
        <label>ostream</label>
      </node>
      <node id="6691">
        <label>parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="6686" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6692" relation="include">
        </childnode>
        <childnode refid="6687" relation="include">
        </childnode>
      </node>
      <node id="6648">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="6645">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6646" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6657">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6658" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6659" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6671">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="6672" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6673">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="6674" relation="include">
        </childnode>
        <childnode refid="6675" relation="include">
        </childnode>
        <childnode refid="6676" relation="include">
        </childnode>
        <childnode refid="6677" relation="include">
        </childnode>
        <childnode refid="6678" relation="include">
        </childnode>
        <childnode refid="6679" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6655" relation="include">
        </childnode>
        <childnode refid="6680" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6654" relation="include">
        </childnode>
        <childnode refid="6668" relation="include">
        </childnode>
        <childnode refid="6659" relation="include">
        </childnode>
        <childnode refid="6681" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6662" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6683" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6677">
        <label>bitset</label>
      </node>
      <node id="6682">
        <label>tuple</label>
      </node>
      <node id="6633">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
        <childnode refid="6640" relation="include">
        </childnode>
        <childnode refid="6641" relation="include">
        </childnode>
        <childnode refid="6642" relation="include">
        </childnode>
        <childnode refid="6643" relation="include">
        </childnode>
        <childnode refid="6644" relation="include">
        </childnode>
        <childnode refid="6645" relation="include">
        </childnode>
        <childnode refid="6649" relation="include">
        </childnode>
        <childnode refid="6685" relation="include">
        </childnode>
        <childnode refid="6691" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
        <childnode refid="6693" relation="include">
        </childnode>
        <childnode refid="6689" relation="include">
        </childnode>
        <childnode refid="6695" relation="include">
        </childnode>
      </node>
      <node id="6638">
        <label>vector</label>
      </node>
      <node id="6669">
        <label>new</label>
      </node>
      <node id="6651">
        <label>utility</label>
      </node>
      <node id="6663">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6664" relation="include">
        </childnode>
      </node>
      <node id="6676">
        <label>array</label>
      </node>
      <node id="6644">
        <label>sstream</label>
      </node>
      <node id="6666">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6667" relation="include">
        </childnode>
        <childnode refid="6665" relation="include">
        </childnode>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6687">
        <label>parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6646" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6688" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
        <childnode refid="6689" relation="include">
        </childnode>
      </node>
      <node id="6658">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="6661">
        <label>iosfwd</label>
      </node>
      <node id="6694">
        <label>cstddef</label>
      </node>
      <node id="6667">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6665" relation="include">
        </childnode>
        <childnode refid="6668" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6670" relation="include">
        </childnode>
        <childnode refid="6647" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6688">
        <label>unordered_map</label>
      </node>
      <node id="6668">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="6669" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6659" relation="include">
        </childnode>
      </node>
      <node id="6693">
        <label>parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="6675" relation="include">
        </childnode>
        <childnode refid="6694" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
        <childnode refid="6689" relation="include">
        </childnode>
      </node>
      <node id="6656">
        <label>type_traits</label>
      </node>
      <node id="6684">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6680" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6668" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6675">
        <label>algorithm</label>
      </node>
      <node id="6690">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6680" relation="include">
        </childnode>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6692">
        <label>parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="6686" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6688" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6649" relation="include">
        </childnode>
        <childnode refid="6687" relation="include">
        </childnode>
        <childnode refid="6689" relation="include">
        </childnode>
      </node>
      <node id="6655">
        <label>cstring</label>
      </node>
      <node id="6689">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="6675" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6655" relation="include">
        </childnode>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6644" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6690" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
      </node>
      <node id="6662">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6646" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6648" relation="include">
        </childnode>
      </node>
      <node id="6636">
        <label>memory</label>
      </node>
      <node id="6647">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="6635" relation="include">
        </childnode>
      </node>
      <node id="6683">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="6656" relation="include">
        </childnode>
      </node>
      <node id="6642">
        <label>thrift/protocol/TBinaryProtocol.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classparquet_1_1_thrift_serializer" prot="public">parquet::ThriftSerializer</innerclass>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="parquet_2thrift__internal_8h_1a8ca580c706c40d1afdc66817fc7e1b2d" prot="public" static="no">
        <name>SIGNED_RIGHT_SHIFT_IS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="34" column="9" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parquet_2thrift__internal_8h_1abff73164116e627543a6fed8679b0205" prot="public" static="no">
        <name>ARITHMETIC_RIGHT_SHIFT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="35" column="9" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2windows__compatibility_8h" kindref="compound">arrow/util/windows_compatibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>thrift<sp/>version<sp/>&lt;<sp/>0.11.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>FORCE_BOOST_SMART_PTR<sp/>is<sp/>defined.<sp/>Ref:<sp/>https://thrift.apache.org/lib/cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PARQUET_THRIFT_USE_BOOST)<sp/>||<sp/>defined(FORCE_BOOST_SMART_PTR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TCompactProtocol<sp/>requires<sp/>some<sp/>#defines<sp/>to<sp/>work<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="parquet_2thrift__internal_8h_1a8ca580c706c40d1afdc66817fc7e1b2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGNED_RIGHT_SHIFT_IS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="parquet_2thrift__internal_8h_1abff73164116e627543a6fed8679b0205" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARITHMETIC_RIGHT_SHIFT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrift/TApplicationException.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrift/protocol/TCompactProtocol.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrift/protocol/TDebugProtocol.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrift/protocol/TBinaryProtocol.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thrift/transport/TBufferTransports.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2logging_8h" kindref="compound">arrow/util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8h" kindref="compound">parquet/exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internal__file__decryptor_8h" kindref="compound">parquet/internal_file_decryptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internal__file__encryptor_8h" kindref="compound">parquet/internal_file_encryptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistics_8h" kindref="compound">parquet/statistics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;generated/parquet_types.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IYWU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>thrift<sp/>version<sp/>&lt;<sp/>0.11.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>FORCE_BOOST_SMART_PTR<sp/>is<sp/>defined.<sp/>Ref:<sp/>https://thrift.apache.org/lib/cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PARQUET_THRIFT_USE_BOOST)<sp/>||<sp/>defined(FORCE_BOOST_SMART_PTR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">using<sp/>::boost::shared_ptr;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">using<sp/>::std::shared_ptr;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>Thrift<sp/>enums<sp/>to<sp/>Parquet<sp/>enums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unsafe<sp/>enum<sp/>converters<sp/>(input<sp/>is<sp/>not<sp/>checked<sp/>for<sp/>validity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>FromThriftUnsafe(format::Type::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref><sp/>FromThriftUnsafe(format::ConvertedType::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>item<sp/>0<sp/>is<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_repetition_1a7e942dfcd49240c465cdf3e1dc011af4" kindref="member">Repetition::type</ref><sp/>FromThriftUnsafe(format::FieldRepetitionType::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structparquet_1_1_repetition_1a7e942dfcd49240c465cdf3e1dc011af4" kindref="member">Repetition::type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>FromThriftUnsafe(format::Encoding::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316d" kindref="member">PageType::type</ref><sp/>FromThriftUnsafe(format::PageType::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structparquet_1_1_page_type_1ada68cc6b55bb3a6f94139362fc39316d" kindref="member">PageType::type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>FromThriftUnsafe(format::CompressionCodec::type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::UNCOMPRESSED:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaeba5020cda7bd5be9f453fcbdba7eb9" kindref="member">Compression::UNCOMPRESSED</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::SNAPPY:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaa503712f544219feb56bf8b6bf1f5cc" kindref="member">Compression::SNAPPY</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::GZIP:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faebf20f6095f26f9b44ec4a3311adc993" kindref="member">Compression::GZIP</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::LZO:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa5d2d16a5cc6384782ffdda42f6ed2ba5" kindref="member">Compression::LZO</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::BROTLI:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa467df3f4fe4344a08a311df02ae48a9d" kindref="member">Compression::BROTLI</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::LZ4:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa77719b2e6d6a349b947287ed1ad64f3b" kindref="member">Compression::LZ4</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>format::CompressionCodec::ZSTD:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa869d6a9e3b4ea6e5cfa94dcc57a82094" kindref="member">Compression::ZSTD</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>reach<sp/>here&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaeba5020cda7bd5be9f453fcbdba7eb9" kindref="member">Compression::UNCOMPRESSED</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits<sp/>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits&lt;::parquet::format::Type::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=<sp/>Type;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits&lt;::parquet::format::ConvertedType::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=<sp/>ConvertedType;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits&lt;::parquet::format::FieldRepetitionType::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=<sp/>Repetition;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits&lt;::parquet::format::Encoding::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=<sp/>Encoding;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftEnumTypeTraits&lt;::parquet::format::PageType::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=<sp/>PageType;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>parquet<sp/>file<sp/>is<sp/>corrupted<sp/>it<sp/>is<sp/>possible<sp/>the<sp/>enum<sp/>value<sp/>decoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>not<sp/>be<sp/>in<sp/>the<sp/>range<sp/>of<sp/>defined<sp/>values,<sp/>which<sp/>is<sp/>undefined<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>facility<sp/>prevents<sp/>this<sp/>by<sp/>loading<sp/>the<sp/>value<sp/>as<sp/>the<sp/>underlying<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>checking<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>in<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnumType,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnumTypeRaw<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::underlying_type&lt;EnumType&gt;::type&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>EnumTypeRaw<sp/>LoadEnumRaw(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EnumType*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>EnumTypeRaw<sp/>raw_value;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>memcpy(),<sp/>as<sp/>a<sp/>regular<sp/>cast<sp/>would<sp/>be<sp/>undefined<sp/>behaviour<sp/>on<sp/>invalid<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>memcpy(&amp;raw_value,<sp/>in,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(EnumType));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_value;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ApiType&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SafeLoader<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ApiTypeEnum<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ApiType::type;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ApiTypeRawEnum<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::underlying_type&lt;ApiTypeEnum&gt;::type;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThriftType&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ApiTypeRawEnum<sp/>LoadRaw(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThriftType*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ApiTypeEnum)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ThriftType),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parquet<sp/>type<sp/>should<sp/>always<sp/>be<sp/>the<sp/>same<sp/>size<sp/>as<sp/>thrift<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ApiTypeRawEnum</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(LoadEnumRaw(in));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThriftType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUn</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ApiTypeEnum<sp/>LoadChecked(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;IsUnsigned,<sp/>ThriftType&gt;::type*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_value<sp/>=<sp/>LoadRaw(in);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8h_1a6f2ee7ad52872edb915cf48e163ac99c" kindref="member">ARROW_PREDICT_FALSE</ref>(raw_value<sp/>&gt;=</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;ApiTypeRawEnum&gt;(ApiType::UNDEFINED)))<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ApiType::UNDEFINED;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromThriftUnsafe(static_cast&lt;ThriftType&gt;(raw_value));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThriftType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUn</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ApiTypeEnum<sp/>LoadChecked(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!IsUnsigned,<sp/>ThriftType&gt;::type*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_value<sp/>=<sp/>LoadRaw(in);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8h_1a6f2ee7ad52872edb915cf48e163ac99c" kindref="member">ARROW_PREDICT_FALSE</ref>(raw_value<sp/>&gt;=</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;ApiTypeRawEnum&gt;(ApiType::UNDEFINED)<sp/>||</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_value<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ApiType::UNDEFINED;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromThriftUnsafe(static_cast&lt;ThriftType&gt;(raw_value));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThriftType&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ApiTypeEnum<sp/>Load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThriftType*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadChecked&lt;ThriftType,<sp/>std::is_unsigned&lt;ApiTypeRawEnum&gt;::value&gt;(in);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>enum<sp/>loader:<sp/>will<sp/>check<sp/>for<sp/>invalid<sp/>enum<sp/>value<sp/>before<sp/>converting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThriftType,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParquetEnum<sp/>=</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::ThriftEnumTypeTraits&lt;ThriftType&gt;::ParquetEnum&gt;</highlight></codeline>
<codeline lineno="205" refid="namespaceparquet_1a836c7f5b30cd60bab7d80e9d7a152573" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParquetEnum::type<sp/><ref refid="namespaceparquet_1a836c7f5b30cd60bab7d80e9d7a152573" kindref="member">LoadEnumSafe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThriftType*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::SafeLoader&lt;ParquetEnum&gt;::Load(in);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="namespaceparquet_1a0279963eb0576cba3789d0d668cf005a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/><ref refid="namespaceparquet_1a836c7f5b30cd60bab7d80e9d7a152573" kindref="member">LoadEnumSafe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>format::CompressionCodec::type*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_value<sp/>=<sp/>internal::LoadEnumRaw(in);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>bounds<sp/>manually,<sp/>as<sp/>Compression::type<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>same<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>format::CompressionCodec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_value<sp/>=</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">decltype(raw_value)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(format::CompressionCodec::UNCOMPRESSED);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max_value<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">decltype(raw_value)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(format::CompressionCodec::ZSTD);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_value<sp/>&lt;<sp/>min_value<sp/>||<sp/>raw_value<sp/>&gt;<sp/>max_value)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaeba5020cda7bd5be9f453fcbdba7eb9" kindref="member">Compression::UNCOMPRESSED</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromThriftUnsafe(*in);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>non-enum<sp/>converters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/>FromThrift(format::AesGcmV1<sp/>aesGcmV1)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref>{aesGcmV1.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>,<sp/>aesGcmV1.aad_file_unique,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aesGcmV1.supply_aad_prefix};</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/>FromThrift(format::AesGcmCtrV1<sp/>aesGcmCtrV1)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref>{aesGcmCtrV1.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>,<sp/>aesGcmCtrV1.aad_file_unique,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aesGcmCtrV1.supply_aad_prefix};</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>FromThrift(format::EncryptionAlgorithm<sp/>encryption)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>encryption_algorithm;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encryption.__isset.AES_GCM_V1)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.<ref refid="structparquet_1_1_encryption_algorithm_1a7b916a7ee5974900b82dd90f7d929996" kindref="member">algorithm</ref><sp/>=<sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4baf9ba0070ca729bff7c232e3ba5959d2a" kindref="member">ParquetCipher::AES_GCM_V1</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.<ref refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" kindref="member">aad</ref><sp/>=<sp/>FromThrift(encryption.AES_GCM_V1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encryption.__isset.AES_GCM_CTR_V1)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.<ref refid="structparquet_1_1_encryption_algorithm_1a7b916a7ee5974900b82dd90f7d929996" kindref="member">algorithm</ref><sp/>=<sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4baa801a03d4173ea6ca8d089b49f8aaf5f" kindref="member">ParquetCipher::AES_GCM_CTR_V1</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.<ref refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" kindref="member">aad</ref><sp/>=<sp/>FromThrift(encryption.AES_GCM_CTR_V1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>algorithm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encryption_algorithm;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>Thrift<sp/>enums<sp/>from<sp/>Parquet<sp/>enums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::Type::type<sp/>ToThrift(<ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">format::Type::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::ConvertedType::type<sp/>ToThrift(<ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198" kindref="member">ConvertedType::type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>item<sp/>0<sp/>is<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="arrow_2util_2logging_8h_1a6f352950c328ce2f3c531d3ff1966f03" kindref="member">DCHECK_NE</ref>(type,<sp/><ref refid="structparquet_1_1_converted_type_1a4c93674b47bffc29042acda48281e198adeb8756102a33f6619ada0dafcdf4167" kindref="member">ConvertedType::NONE</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">format::ConvertedType::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::FieldRepetitionType::type<sp/>ToThrift(<ref refid="structparquet_1_1_repetition_1a7e942dfcd49240c465cdf3e1dc011af4" kindref="member">Repetition::type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">format::FieldRepetitionType::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::Encoding::type<sp/>ToThrift(<ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">format::Encoding::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::CompressionCodec::type<sp/>ToThrift(<ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaeba5020cda7bd5be9f453fcbdba7eb9" kindref="member">Compression::UNCOMPRESSED</ref>:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::UNCOMPRESSED;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faaa503712f544219feb56bf8b6bf1f5cc" kindref="member">Compression::SNAPPY</ref>:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::SNAPPY;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163faebf20f6095f26f9b44ec4a3311adc993" kindref="member">Compression::GZIP</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::GZIP;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa5d2d16a5cc6384782ffdda42f6ed2ba5" kindref="member">Compression::LZO</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::LZO;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa467df3f4fe4344a08a311df02ae48a9d" kindref="member">Compression::BROTLI</ref>:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::BROTLI;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa77719b2e6d6a349b947287ed1ad64f3b" kindref="member">Compression::LZ4</ref>:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::LZ4;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163fa869d6a9e3b4ea6e5cfa94dcc57a82094" kindref="member">Compression::ZSTD</ref>:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::ZSTD;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>reach<sp/>here&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format::CompressionCodec::UNCOMPRESSED;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::Statistics<sp/>ToThrift(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_encoded_statistics" kindref="compound">EncodedStatistics</ref>&amp;<sp/>stats)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>format::Statistics<sp/>statistics;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1a29d6a0e732ddb046d3bfd5b30f731d63" kindref="member">has_min</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics.__set_min_value(stats.<ref refid="classparquet_1_1_encoded_statistics_1a6b5931f37b9f6a11faf1cd5bae22243e" kindref="member">min</ref>());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>order<sp/>is<sp/>SIGNED,<sp/>then<sp/>the<sp/>old<sp/>min<sp/>value<sp/>must<sp/>be<sp/>set<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>for<sp/>backward<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1a9f48efaf66a47e05e941acbe709f5059" kindref="member">is_signed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>statistics.__set_min(stats.<ref refid="classparquet_1_1_encoded_statistics_1a6b5931f37b9f6a11faf1cd5bae22243e" kindref="member">min</ref>());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1ace5a172b4de4c0f1b1c44033360d7374" kindref="member">has_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics.__set_max_value(stats.<ref refid="classparquet_1_1_encoded_statistics_1a0d63a17b8f7f76e59558fabb056f7f73" kindref="member">max</ref>());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>order<sp/>is<sp/>SIGNED,<sp/>then<sp/>the<sp/>old<sp/>max<sp/>value<sp/>must<sp/>be<sp/>set<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>for<sp/>backward<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1a9f48efaf66a47e05e941acbe709f5059" kindref="member">is_signed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>statistics.__set_max(stats.<ref refid="classparquet_1_1_encoded_statistics_1a0d63a17b8f7f76e59558fabb056f7f73" kindref="member">max</ref>());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1a994aeade67ecc20e111afc01016e1f7f" kindref="member">has_null_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics.__set_null_count(stats.<ref refid="classparquet_1_1_encoded_statistics_1a6e860a15a029dae4fab98ce179d76065" kindref="member">null_count</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="classparquet_1_1_encoded_statistics_1a839f81fbcfeb833fc7f48d0a61e0790a" kindref="member">has_distinct_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics.__set_distinct_count(stats.<ref refid="classparquet_1_1_encoded_statistics_1a937fa9d6f1d637294e19fb104b5b4ef0" kindref="member">distinct_count</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>statistics;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::AesGcmV1<sp/>ToAesGcmV1Thrift(<ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/>aad)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>format::AesGcmV1<sp/>aesGcmV1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aad_file_unique<sp/>is<sp/>always<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>aesGcmV1.__set_aad_file_unique(aad.<ref refid="structparquet_1_1_aad_metadata_1aafc5ab8e77a0523e578463f5051e874c" kindref="member">aad_file_unique</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>aesGcmV1.__set_supply_aad_prefix(aad.<ref refid="structparquet_1_1_aad_metadata_1ae1e115fbd92bb86cf6508187f02c69c4" kindref="member">supply_aad_prefix</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!aad.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>aesGcmV1.__set_aad_prefix(aad.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aesGcmV1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::AesGcmCtrV1<sp/>ToAesGcmCtrV1Thrift(<ref refid="structparquet_1_1_aad_metadata" kindref="compound">AadMetadata</ref><sp/>aad)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>format::AesGcmCtrV1<sp/>aesGcmCtrV1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aad_file_unique<sp/>is<sp/>always<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>aesGcmCtrV1.__set_aad_file_unique(aad.<ref refid="structparquet_1_1_aad_metadata_1aafc5ab8e77a0523e578463f5051e874c" kindref="member">aad_file_unique</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>aesGcmCtrV1.__set_supply_aad_prefix(aad.<ref refid="structparquet_1_1_aad_metadata_1ae1e115fbd92bb86cf6508187f02c69c4" kindref="member">supply_aad_prefix</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!aad.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>aesGcmCtrV1.__set_aad_prefix(aad.<ref refid="structparquet_1_1_aad_metadata_1afc1118ddf31ce2ef09e1e7f77ad1a150" kindref="member">aad_prefix</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aesGcmCtrV1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>format::EncryptionAlgorithm<sp/>ToThrift(<ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>encryption)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>format::EncryptionAlgorithm<sp/>encryption_algorithm;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encryption.<ref refid="structparquet_1_1_encryption_algorithm_1a7b916a7ee5974900b82dd90f7d929996" kindref="member">algorithm</ref><sp/>==<sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4baf9ba0070ca729bff7c232e3ba5959d2a" kindref="member">ParquetCipher::AES_GCM_V1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.__set_AES_GCM_V1(ToAesGcmV1Thrift(encryption.<ref refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" kindref="member">aad</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>encryption_algorithm.__set_AES_GCM_CTR_V1(ToAesGcmCtrV1Thrift(encryption.<ref refid="structparquet_1_1_encryption_algorithm_1a35b03d9eb312ae144446ffa1e77e92cb" kindref="member">aad</ref>));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encryption_algorithm;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thrift<sp/>struct<sp/>serialization<sp/>/<sp/>deserialization<sp/>utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="namespaceparquet_1a84705fc892245d2e31b55c03fa6d5ddd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a84705fc892245d2e31b55c03fa6d5ddd" kindref="member">ThriftBuffer</ref><sp/>=<sp/>apache::thrift::transport::TMemoryBuffer;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="358" refid="namespaceparquet_1a21fe87cfd5243e922a121415cb33fbcd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a21fe87cfd5243e922a121415cb33fbcd" kindref="member">DeserializeThriftUnencryptedMsg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buf,<sp/>uint32_t*<sp/>len,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>deserialized_msg)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deserialize<sp/>msg<sp/>bytes<sp/>into<sp/>c++<sp/>thrift<sp/>msg<sp/>using<sp/>memory<sp/>transport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>shared_ptr&lt;ThriftBuffer&gt;<sp/>tmem_transport(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a84705fc892245d2e31b55c03fa6d5ddd" kindref="member">ThriftBuffer</ref>(const_cast&lt;uint8_t*&gt;(buf),<sp/>*len));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>apache::thrift::protocol::TCompactProtocolFactoryT&lt;ThriftBuffer&gt;<sp/>tproto_factory;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Protect<sp/>against<sp/>CPU<sp/>and<sp/>memory<sp/>bombs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>tproto_factory.setStringSizeLimit(100<sp/>*<sp/>1000<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>tproto_factory.setContainerSizeLimit(10<sp/>*<sp/>1000<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>shared_ptr&lt;apache::thrift::protocol::TProtocol&gt;<sp/>tproto<sp/>=<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tproto_factory.getProtocol(tmem_transport);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>deserialized_msg-&gt;read(tproto.get());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>deserialize<sp/>thrift:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(ss.str());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bytes_left<sp/>=<sp/>tmem_transport-&gt;available_read();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>*len<sp/>=<sp/>*len<sp/>-<sp/>bytes_left;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deserialize<sp/>a<sp/>thrift<sp/>message<sp/>from<sp/>buf/len.<sp/><sp/>buf/len<sp/>must<sp/>at<sp/>least<sp/>contain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>bytes<sp/>needed<sp/>to<sp/>store<sp/>the<sp/>thrift<sp/>message.<sp/><sp/>On<sp/>return,<sp/>len<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>the<sp/>actual<sp/>length<sp/>of<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="384" refid="namespaceparquet_1a24df41171cae27cf1176e61e8ae71947" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a24df41171cae27cf1176e61e8ae71947" kindref="member">DeserializeThriftMsg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buf,<sp/>uint32_t*<sp/>len,<sp/>T*<sp/>deserialized_msg,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Decryptor&gt;&amp;<sp/>decryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thrift<sp/>message<sp/>is<sp/>not<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decryptor<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a21fe87cfd5243e922a121415cb33fbcd" kindref="member">DeserializeThriftUnencryptedMsg</ref>(buf,<sp/>len,<sp/>deserialized_msg);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>thrift<sp/>message<sp/>is<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>clen;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>clen<sp/>=<sp/>*len;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrypt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ResizableBuffer&gt;<sp/>decrypted_buffer<sp/>=</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::static_pointer_cast&lt;<ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref>&gt;(<ref refid="namespaceparquet_1a03bd342ae4d50b0b52f0c3ad6fd2d007" kindref="member">AllocateBuffer</ref>(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decryptor-&gt;pool(),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(clen<sp/>-<sp/>decryptor-&gt;CiphertextSizeDelta())));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>cipher_buf<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>decrypted_buffer_len<sp/>=</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decryptor-&gt;Decrypt(cipher_buf,<sp/>0,<sp/>decrypted_buffer-&gt;mutable_data());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decrypted_buffer_len<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>decrypt<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>*len<sp/>=<sp/>decrypted_buffer_len<sp/>+<sp/>decryptor-&gt;CiphertextSizeDelta();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a24df41171cae27cf1176e61e8ae71947" kindref="member">DeserializeThriftMsg</ref>(decrypted_buffer-&gt;data(),<sp/>&amp;decrypted_buffer_len,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_msg);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classparquet_1_1_thrift_serializer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_thrift_serializer" kindref="compound">ThriftSerializer</ref><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415" refid="classparquet_1_1_thrift_serializer_1aa0a29a9706aa919c585d210c717b090a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_thrift_serializer_1aa0a29a9706aa919c585d210c717b090a" kindref="member">ThriftSerializer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_buffer_size<sp/>=<sp/>1024)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mem_buffer_(new<sp/><ref refid="namespaceparquet_1a84705fc892245d2e31b55c03fa6d5ddd" kindref="member">ThriftBuffer</ref>(initial_buffer_size))<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>apache::thrift::protocol::TCompactProtocolFactoryT&lt;ThriftBuffer&gt;<sp/>factory;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>protocol_<sp/>=<sp/>factory.getProtocol(mem_buffer_);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="425" refid="classparquet_1_1_thrift_serializer_1a9ce30219377881c7e4bd067c11c40308" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_thrift_serializer_1a9ce30219377881c7e4bd067c11c40308" kindref="member">SerializeToBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>obj,<sp/>uint32_t*<sp/>len,<sp/>uint8_t**<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1py_1a54b16e387987d78f04dd5add13904560" kindref="member">SerializeObject</ref>(obj);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>mem_buffer_-&gt;getBuffer(buffer,<sp/>len);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="431" refid="classparquet_1_1_thrift_serializer_1ab6e3a970e3a555795cbdda0e53926fc4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_thrift_serializer_1ab6e3a970e3a555795cbdda0e53926fc4" kindref="member">SerializeToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>obj,<sp/>std::string*<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1py_1a54b16e387987d78f04dd5add13904560" kindref="member">SerializeObject</ref>(obj);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>mem_buffer_-&gt;getBufferAsString();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="437" refid="classparquet_1_1_thrift_serializer_1af826adc797ff50a65d0d360a6b3b563c" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classparquet_1_1_thrift_serializer_1af826adc797ff50a65d0d360a6b3b563c" kindref="member">Serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>obj,<sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">ArrowOutputStream</ref>*<sp/>out,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Encryptor&gt;&amp;<sp/>encryptor<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>out_buffer;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>out_length;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>SerializeToBuffer(obj,<sp/>&amp;out_length,<sp/>&amp;out_buffer);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obj<sp/>is<sp/>not<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encryptor<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="exception_8h_1af08ee16340a6005cdba9a694f4e14af7" kindref="member">PARQUET_THROW_NOT_OK</ref>(out-&gt;<ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">Write</ref>(out_buffer,<sp/>out_length));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(out_length);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>obj<sp/>is<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SerializeEncryptedObj(out,<sp/>out_buffer,<sp/>out_length,<sp/>encryptor);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1py_1a54b16e387987d78f04dd5add13904560" kindref="member">SerializeObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_buffer_-&gt;resetBuffer();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;write(protocol_.get());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>serialize<sp/>thrift:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(ss.str());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>int64_t<sp/>SerializeEncryptedObj(<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">ArrowOutputStream</ref>*<sp/>out,<sp/>uint8_t*<sp/>out_buffer,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>out_length,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Encryptor&gt;&amp;<sp/>encryptor)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ResizableBuffer&gt;<sp/>cipher_buffer<sp/>=</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::static_pointer_cast&lt;<ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref>&gt;(<ref refid="namespaceparquet_1a03bd342ae4d50b0b52f0c3ad6fd2d007" kindref="member">AllocateBuffer</ref>(</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encryptor-&gt;pool(),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(encryptor-&gt;CiphertextSizeDelta()<sp/>+<sp/>out_length)));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cipher_buffer_len<sp/>=</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encryptor-&gt;Encrypt(out_buffer,<sp/>out_length,<sp/>cipher_buffer-&gt;mutable_data());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="exception_8h_1af08ee16340a6005cdba9a694f4e14af7" kindref="member">PARQUET_THROW_NOT_OK</ref>(out-&gt;<ref refid="classarrow_1_1io_1_1_writable_1a51d9feed73c33f095ca4b9f35dede84d" kindref="member">Write</ref>(cipher_buffer-&gt;data(),<sp/>cipher_buffer_len));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cipher_buffer_len);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>shared_ptr&lt;ThriftBuffer&gt;<sp/>mem_buffer_;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>shared_ptr&lt;apache::thrift::protocol::TProtocol&gt;<sp/>protocol_;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">};</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/thrift_internal.h"/>
  </compounddef>
</doxygen>
