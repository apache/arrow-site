<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__parquet-file-format-arrow-reader-properties" kind="group">
    <compoundname>parquet-file-format-arrow-reader-properties</compoundname>
    <title>properties which correspond</title>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__parquet-file-format-arrow-reader-properties_1gaf62abad6e78ad159c3fd4aabefeca558" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; arrow::dataset::ParquetFileFormat::ReaderOptions::dict_columns</definition>
        <argsstring></argsstring>
        <name>dict_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_parquet.h" line="80" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_parquet.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>to members of <ref refid="classparquet_1_1_arrow_reader_properties" kindref="compound">parquet::ArrowReaderProperties</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>We don&apos;t embed <ref refid="classparquet_1_1_reader_properties" kindref="compound">parquet::ReaderProperties</ref> directly because we get batch_size from <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> at scan time, and we will never pass use_threads == true (since we defer parallelization of the scan). Additionally column names (rather than indices) are used to indicate dictionary columns. </para>    </detaileddescription>
  </compounddef>
</doxygen>
