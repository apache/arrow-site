<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_range_index_sequence" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::RangeIndexSequence</compoundname>
    <includes refid="take__internal_8h" local="no">arrow/compute/kernels/take_internal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_range_index_sequence_1ad86e834df81a2d84786520537cc1374f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::compute::RangeIndexSequence::is_valid_</definition>
        <argsstring></argsstring>
        <name>is_valid_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="205" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_range_index_sequence_1acf00e812187c347ce4a223dfc4c06400" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::RangeIndexSequence::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="206" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_range_index_sequence_1afb7e792d9a39cfa40e193fbd682b1065" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::RangeIndexSequence::length_</definition>
        <argsstring></argsstring>
        <name>length_</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="206" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1a853d208ac531cd05c0653a08cab75365" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool arrow::compute::RangeIndexSequence::never_out_of_bounds</definition>
        <argsstring>() const</argsstring>
        <name>never_out_of_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="190" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1a595a53d78c06c367f91fa4f0868010ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::compute::RangeIndexSequence::set_never_out_of_bounds</definition>
        <argsstring>()</argsstring>
        <name>set_never_out_of_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="191" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1af297d759a3f7b80279461ebd84a0d30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr arrow::compute::RangeIndexSequence::RangeIndexSequence</definition>
        <argsstring>()=default</argsstring>
        <name>RangeIndexSequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1aa59e435a8727c52be9be9d940d53f1f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::RangeIndexSequence::RangeIndexSequence</definition>
        <argsstring>(bool is_valid, int64_t offset, int64_t length)</argsstring>
        <name>RangeIndexSequence</name>
        <param>
          <type>bool</type>
          <declname>is_valid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="195" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="195" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1a81b43fd17e0623abf398f3ade8aaadd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; int64_t, bool &gt;</type>
        <definition>std::pair&lt;int64_t, bool&gt; arrow::compute::RangeIndexSequence::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="198" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1ae14cfafb83fb3c295b77195e6189b28a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::RangeIndexSequence::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="200" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_range_index_sequence_1a85693dd7badb2f6b57c81ff1eb3ad963" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::RangeIndexSequence::null_count</definition>
        <argsstring>() const</argsstring>
        <name>null_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="202" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="202" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="188" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="188" bodyend="207"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1acf00e812187c347ce4a223dfc4c06400" prot="private" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>index_</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1ad86e834df81a2d84786520537cc1374f" prot="private" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>is_valid_</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1ae14cfafb83fb3c295b77195e6189b28a" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>length</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1afb7e792d9a39cfa40e193fbd682b1065" prot="private" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>length_</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1a853d208ac531cd05c0653a08cab75365" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>never_out_of_bounds</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1a81b43fd17e0623abf398f3ade8aaadd5" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>Next</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1a85693dd7badb2f6b57c81ff1eb3ad963" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>null_count</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1af297d759a3f7b80279461ebd84a0d30c" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>RangeIndexSequence</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1aa59e435a8727c52be9be9d940d53f1f0" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>RangeIndexSequence</name></member>
      <member refid="classarrow_1_1compute_1_1_range_index_sequence_1a595a53d78c06c367f91fa4f0868010ac" prot="public" virt="non-virtual"><scope>arrow::compute::RangeIndexSequence</scope><name>set_never_out_of_bounds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
