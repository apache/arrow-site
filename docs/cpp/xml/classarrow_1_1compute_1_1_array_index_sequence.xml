<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_array_index_sequence" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::ArrayIndexSequence</compoundname>
    <includes refid="take__internal_8h" local="no">arrow/compute/kernels/take_internal.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>IndexType</declname>
        <defname>IndexType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_array_index_sequence_1acb3bf93d23493af2163445620a0f9c2e" prot="private" static="no" mutable="no">
        <type>const <ref refid="classarrow_1_1_numeric_array" kindref="compound">NumericArray</ref>&lt; IndexType &gt; *</type>
        <definition>const NumericArray&lt;IndexType&gt;* arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::indices_</definition>
        <argsstring></argsstring>
        <name>indices_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="234" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_array_index_sequence_1a2f55b2aea6f92f82cc5769193415c9ef" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="235" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_array_index_sequence_1a2d1f0fbf960b3c1810a97741d2d4b464" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::never_out_of_bounds_</definition>
        <argsstring></argsstring>
        <name>never_out_of_bounds_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="236" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a3fad23e949d1c79ca35514e337a7623b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::never_out_of_bounds</definition>
        <argsstring>() const</argsstring>
        <name>never_out_of_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="213" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a00f2939cc915a3d868b58d380a31945d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::set_never_out_of_bounds</definition>
        <argsstring>()</argsstring>
        <name>set_never_out_of_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="214" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a0b6cfedd6a84580a92349726dba0c785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::ArrayIndexSequence</definition>
        <argsstring>()=default</argsstring>
        <name>ArrayIndexSequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1af19ba5f485053a7ca4bf1ba67507367e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::ArrayIndexSequence</definition>
        <argsstring>(const Array &amp;indices)</argsstring>
        <name>ArrayIndexSequence</name>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="218" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="218" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a0241c8bcce86ada4bb4a1b928da04ccd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; int64_t, bool &gt;</type>
        <definition>std::pair&lt;int64_t, bool&gt; arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="221" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="221" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a92ec777b6571176b863008ed61435eba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="229" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_array_index_sequence_1a717e5c34e6fedf2a60aa76b32cb9b505" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::compute::ArrayIndexSequence&lt; IndexType &gt;::null_count</definition>
        <argsstring>() const</argsstring>
        <name>null_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="231" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="231" bodyend="231"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" line="211" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/take_internal.h" bodystart="211" bodyend="237"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a0b6cfedd6a84580a92349726dba0c785" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>ArrayIndexSequence</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1af19ba5f485053a7ca4bf1ba67507367e" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>ArrayIndexSequence</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a2f55b2aea6f92f82cc5769193415c9ef" prot="private" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>index_</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1acb3bf93d23493af2163445620a0f9c2e" prot="private" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>indices_</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a92ec777b6571176b863008ed61435eba" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>length</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a3fad23e949d1c79ca35514e337a7623b" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>never_out_of_bounds</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a2d1f0fbf960b3c1810a97741d2d4b464" prot="private" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>never_out_of_bounds_</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a0241c8bcce86ada4bb4a1b928da04ccd" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>Next</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a717e5c34e6fedf2a60aa76b32cb9b505" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>null_count</name></member>
      <member refid="classarrow_1_1compute_1_1_array_index_sequence_1a00f2939cc915a3d868b58d380a31945d" prot="public" virt="non-virtual"><scope>arrow::compute::ArrayIndexSequence</scope><name>set_never_out_of_bounds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
