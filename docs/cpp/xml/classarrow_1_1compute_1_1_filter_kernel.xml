<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_filter_kernel" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::compute::FilterKernel</compoundname>
    <basecompoundref refid="classarrow_1_1compute_1_1_binary_kernel" prot="public" virt="non-virtual">arrow::compute::BinaryKernel</basecompoundref>
    <includes refid="arrow_2compute_2kernels_2filter_8h" local="no">arrow/compute/kernels/filter.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_filter_kernel_1a01ccf026afc9850177d9c4dedfdc14f0" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::FilterKernel::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="100" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_filter_kernel_1aa0d37c28a23e65d0a63900b7dfa63fad" prot="protected" static="no" mutable="no">
        <type><ref refid="structarrow_1_1compute_1_1_filter_options" kindref="compound">FilterOptions</ref></type>
        <definition>FilterOptions arrow::compute::FilterKernel::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="101" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1aa57e2175270788e75b10e890d797ea4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structarrow_1_1compute_1_1_filter_options" kindref="compound">FilterOptions</ref> &amp;</type>
        <definition>const FilterOptions&amp; arrow::compute::FilterKernel::options</definition>
        <argsstring>() const</argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="71" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1a63a56b88887e492b25e0edc0ccdceeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::FilterKernel::Call</definition>
        <argsstring>(FunctionContext *ctx, const Datum &amp;values, const Datum &amp;filter, Datum *out) override</argsstring>
        <name>Call</name>
        <reimplements refid="classarrow_1_1compute_1_1_binary_kernel_1a14dc9caa940f7992faa0bac221ac95dd">Call</reimplements>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> &amp;</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_datum" kindref="compound">Datum</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para><ref refid="classarrow_1_1compute_1_1_binary_kernel" kindref="compound">BinaryKernel</ref> interface. </para>        </briefdescription>
        <detaileddescription>
<para>delegates to subclasses via <ref refid="classarrow_1_1compute_1_1_filter_kernel_1accf3416ba8626b922aedffd10f31d58d" kindref="member">Filter()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1af6ffa5804e28fd19dad6935a3b2d0b9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::compute::FilterKernel::out_type</definition>
        <argsstring>() const override</argsstring>
        <name>out_type</name>
        <reimplements refid="classarrow_1_1compute_1_1_op_kernel_1a7c5f16b7acdba73640c9131e2cd04270">out_type</reimplements>
        <briefdescription>
<para>output type of this kernel (identical to type of values filtered) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="80" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1accf3416ba8626b922aedffd10f31d58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::compute::FilterKernel::Filter</definition>
        <argsstring>(FunctionContext *ctx, const Array &amp;values, const BooleanArray &amp;filter, int64_t out_length, std::shared_ptr&lt; Array &gt; *out)=0</argsstring>
        <name>Filter</name>
        <param>
          <type><ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="classarrow_1_1_boolean_array" kindref="compound">BooleanArray</ref> &amp;</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>out_length</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>single-array implementation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1a7ffc63c96fd70018b1021ead3555ca58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::compute::FilterKernel::Make</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; value_type, FilterOptions options, std::unique_ptr&lt; FilterKernel &gt; *out)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_filter_options" kindref="compound">FilterOptions</ref></type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1compute_1_1_filter_kernel" kindref="compound">FilterKernel</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>factory for FilterKernels </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>constructed <ref refid="classarrow_1_1compute_1_1_filter_kernel" kindref="compound">FilterKernel</ref> will support filtering values of this type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>configures null_selection_behavior </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>created kernel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_filter_kernel_1a5d27448a4b980b4d3ff92f856f3e4ca5" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::FilterKernel::FilterKernel</definition>
        <argsstring>(std::shared_ptr&lt; DataType &gt; type, FilterOptions options)</argsstring>
        <name>FilterKernel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1compute_1_1_filter_options" kindref="compound">FilterOptions</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="97" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="97" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1compute_1_1_binary_kernel" kindref="compound">BinaryKernel</ref> implementing Filter operation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1691">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="1690">
        <label>arrow::compute::BinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_binary_kernel"/>
        <childnode refid="1691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1689">
        <label>arrow::compute::FilterKernel</label>
        <link refid="classarrow_1_1compute_1_1_filter_kernel"/>
        <childnode refid="1690" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1694">
        <label>arrow::compute::OpKernel</label>
        <link refid="classarrow_1_1compute_1_1_op_kernel"/>
      </node>
      <node id="1693">
        <label>arrow::compute::BinaryKernel</label>
        <link refid="classarrow_1_1compute_1_1_binary_kernel"/>
        <childnode refid="1694" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1692">
        <label>arrow::compute::FilterKernel</label>
        <link refid="classarrow_1_1compute_1_1_filter_kernel"/>
        <childnode refid="1693" relation="public-inheritance">
        </childnode>
        <childnode refid="1695" relation="usage">
          <edgelabel>options_</edgelabel>
        </childnode>
      </node>
      <node id="1695">
        <label>arrow::compute::FilterOptions</label>
        <link refid="structarrow_1_1compute_1_1_filter_options"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/compute/kernels/filter.h" line="69" column="1" bodyfile="/arrow/cpp/src/arrow/compute/kernels/filter.h" bodystart="69" bodyend="102"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1a63a56b88887e492b25e0edc0ccdceeb4" prot="public" virt="virtual"><scope>arrow::compute::FilterKernel</scope><name>Call</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1accf3416ba8626b922aedffd10f31d58d" prot="public" virt="pure-virtual"><scope>arrow::compute::FilterKernel</scope><name>Filter</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1a5d27448a4b980b4d3ff92f856f3e4ca5" prot="protected" virt="non-virtual"><scope>arrow::compute::FilterKernel</scope><name>FilterKernel</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1a7ffc63c96fd70018b1021ead3555ca58" prot="public" virt="non-virtual"><scope>arrow::compute::FilterKernel</scope><name>Make</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1aa57e2175270788e75b10e890d797ea4b" prot="public" virt="non-virtual"><scope>arrow::compute::FilterKernel</scope><name>options</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1aa0d37c28a23e65d0a63900b7dfa63fad" prot="protected" virt="non-virtual"><scope>arrow::compute::FilterKernel</scope><name>options_</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1af6ffa5804e28fd19dad6935a3b2d0b9d" prot="public" virt="virtual"><scope>arrow::compute::FilterKernel</scope><name>out_type</name></member>
      <member refid="classarrow_1_1compute_1_1_filter_kernel_1a01ccf026afc9850177d9c4dedfdc14f0" prot="protected" virt="non-virtual"><scope>arrow::compute::FilterKernel</scope><name>type_</name></member>
      <member refid="classarrow_1_1compute_1_1_op_kernel_1a640d7e2c51722436ed428013dabb63d3" prot="public" virt="virtual"><scope>arrow::compute::FilterKernel</scope><name>~OpKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
