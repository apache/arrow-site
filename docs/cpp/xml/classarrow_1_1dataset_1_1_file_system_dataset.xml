<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_file_system_dataset" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::FileSystemDataset</compoundname>
    <basecompoundref refid="classarrow_1_1dataset_1_1_dataset" prot="public" virt="non-virtual">arrow::dataset::Dataset</basecompoundref>
    <includes refid="file__base_8h" local="no">arrow/dataset/file_base.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_dataset_1a7e7b30f80451abaa4f56343b33d28d2a" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileFormat&gt; arrow::dataset::FileSystemDataset::format_</definition>
        <argsstring></argsstring>
        <name>format_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="267" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_dataset_1a53a7d241c0259d8324a385a340318ea8" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;fs::FileSystem&gt; arrow::dataset::FileSystemDataset::filesystem_</definition>
        <argsstring></argsstring>
        <name>filesystem_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="268" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_dataset_1ad4d11fe7533e78e9ba8ac61bbc89a3ea" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
        <definition>fs::PathForest arrow::dataset::FileSystemDataset::forest_</definition>
        <argsstring></argsstring>
        <name>forest_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="269" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_file_system_dataset_1a92561f9c7f471de8d1d24757bb555b78" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
        <definition>ExpressionVector arrow::dataset::FileSystemDataset::partitions_</definition>
        <argsstring></argsstring>
        <name>partitions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="270" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a9975e2628e18b084dbf4f4cf72beb459" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;FileSystemDataset&gt; &gt; arrow::dataset::FileSystemDataset::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, std::vector&lt; fs::FileInfo &gt; infos)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structarrow_1_1fs_1_1_file_info" kindref="compound">fs::FileInfo</ref> &gt;</type>
          <declname>infos</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">infos</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of files/directories to consume. attach additional partition expressions to FileInfo found in <computeroutput>infos</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a04047b7e92b107221b508e22a6452962" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;FileSystemDataset&gt; &gt; arrow::dataset::FileSystemDataset::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, std::vector&lt; fs::FileInfo &gt; infos, ExpressionVector partitions)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structarrow_1_1fs_1_1_file_info" kindref="compound">fs::FileInfo</ref> &gt;</type>
          <declname>infos</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>partitions</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> with file-level partitions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">infos</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of files/directories to consume. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>partition information associated with <computeroutput>infos</computeroutput>. attach additional partition expressions to FileInfo found in <computeroutput>infos</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a721ca71630b573338e9fe8716d8e53d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;FileSystemDataset&gt; &gt; arrow::dataset::FileSystemDataset::Make</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::PathForest forest, ExpressionVector partitions)</argsstring>
        <name>Make</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
          <declname>forest</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>partitions</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> with file-level partitions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level schema of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>the top-level partition of the DataDataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>file format to create fragments from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>the filesystem which files are from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forest</parametername>
</parameternamelist>
<parameterdescription>
<para>a PathForest of files/directories to consume. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>partition information associated with <computeroutput>forest</computeroutput>. attach additional partition expressions to FileInfo found in <computeroutput>forest</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is not required to provide a complete coverage of nodes and partitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a17dfa2f17605facefdf6552f1ebbeda8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_system_dataset" kindref="compound">FileSystemDataset</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;FileSystemDataset&gt; &gt; arrow::dataset::FileSystemDataset::Write</definition>
        <argsstring>(const WritePlan &amp;plan, std::shared_ptr&lt; ScanContext &gt; scan_context)</argsstring>
        <name>Write</name>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_write_plan" kindref="compound">WritePlan</ref> &amp;</type>
          <declname>plan</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
          <declname>scan_context</declname>
        </param>
        <briefdescription>
<para>Write to a new format and filesystem location, preserving partitioning. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">plan</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classarrow_1_1dataset_1_1_write_plan" kindref="compound">WritePlan</ref> to execute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scan_context</parametername>
</parameternamelist>
<parameterdescription>
<para>context in which to scan fragments before writing. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="242" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a9efe37fcf02fce6fe246c9a4a8163190" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FileSystemDataset::type_name</definition>
        <argsstring>() const override</argsstring>
        <name>type_name</name>
        <reimplements refid="classarrow_1_1dataset_1_1_dataset_1ac7611e16eb019f295612a9ef428fdfd2">type_name</reimplements>
        <briefdescription>
<para>The name identifying the kind of <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="245" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a652887883af7444deee7c87f8e4b59a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Dataset&gt; &gt; arrow::dataset::FileSystemDataset::ReplaceSchema</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema) const override</argsstring>
        <name>ReplaceSchema</name>
        <reimplements refid="classarrow_1_1dataset_1_1_dataset_1aa615b8333c7ac0e5553adbc9877cb44a">ReplaceSchema</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Return a copy of this <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> with a different schema. </para>        </briefdescription>
        <detaileddescription>
<para>The copy will view the same Fragments. If the new schema is not compatible with the original dataset&apos;s schema then an error will be raised. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a271030810dabf0c541d27eeea16abdd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;FileFormat&gt;&amp; arrow::dataset::FileSystemDataset::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="250" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1acb41216cc0c88906fec2a169093875f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; arrow::dataset::FileSystemDataset::files</definition>
        <argsstring>() const</argsstring>
        <name>files</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1ac29dcb2f014a1b447c1d3f489ba6281f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref> &amp;</type>
        <definition>const ExpressionVector&amp; arrow::dataset::FileSystemDataset::partitions</definition>
        <argsstring>() const</argsstring>
        <name>partitions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="254" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a6f3d3345798286896523179f0d80f5bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FileSystemDataset::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="256" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a1d0b7ec431d2d0d94455fdba6d9e324c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacearrow_1_1dataset_1a6270dc3eca80575744d55456da9447c2" kindref="member">FragmentIterator</ref></type>
        <definition>FragmentIterator arrow::dataset::FileSystemDataset::GetFragmentsImpl</definition>
        <argsstring>(std::shared_ptr&lt; ScanOptions &gt; options) override</argsstring>
        <name>GetFragmentsImpl</name>
        <reimplements refid="classarrow_1_1dataset_1_1_dataset_1ade66d78b1ee802143d6951b99783aab5">GetFragmentsImpl</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_system_dataset_1a175bc61b2f91329a71722129708d5374" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::FileSystemDataset::FileSystemDataset</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema, std::shared_ptr&lt; Expression &gt; root_partition, std::shared_ptr&lt; FileFormat &gt; format, std::shared_ptr&lt; fs::FileSystem &gt; filesystem, fs::PathForest forest, ExpressionVector file_partitions)</argsstring>
        <name>FileSystemDataset</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>root_partition</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_format" kindref="compound">FileFormat</ref> &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1fs_1_1_file_system" kindref="compound">fs::FileSystem</ref> &gt;</type>
          <declname>filesystem</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1fs_1_1_path_forest" kindref="compound">fs::PathForest</ref></type>
          <declname>forest</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1_1dataset_1a2b7f7d9324d77bc7b43a96f1b09f5001" kindref="member">ExpressionVector</ref></type>
          <declname>file_partitions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="261" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classarrow_1_1dataset_1_1_dataset" kindref="compound">Dataset</ref> of FileFragments. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1656">
        <label>arrow::dataset::FileSystemDataset</label>
        <link refid="classarrow_1_1dataset_1_1_file_system_dataset"/>
        <childnode refid="1657" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1658">
        <label>std::enable_shared_from_this&lt; Dataset &gt;</label>
      </node>
      <node id="1657">
        <label>arrow::dataset::Dataset</label>
        <link refid="classarrow_1_1dataset_1_1_dataset"/>
        <childnode refid="1658" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1659">
        <label>arrow::dataset::FileSystemDataset</label>
        <link refid="classarrow_1_1dataset_1_1_file_system_dataset"/>
        <childnode refid="1660" relation="public-inheritance">
        </childnode>
        <childnode refid="1662" relation="usage">
          <edgelabel>forest_</edgelabel>
        </childnode>
      </node>
      <node id="1662">
        <label>arrow::fs::PathForest</label>
        <link refid="classarrow_1_1fs_1_1_path_forest"/>
        <childnode refid="1663" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1663">
        <label>arrow::util::EqualityComparable&lt; PathForest &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
      <node id="1661">
        <label>std::enable_shared_from_this&lt; Dataset &gt;</label>
      </node>
      <node id="1660">
        <label>arrow::dataset::Dataset</label>
        <link refid="classarrow_1_1dataset_1_1_dataset"/>
        <childnode refid="1661" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="186" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="186" bodyend="271"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a74a03971d4c9307eaec662912257b9cc" prot="protected" virt="virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>AssumePartitionExpression</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1acd88a02acb6fafb3f934a1117e9c41f8" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a32363cc3b882a036397978326b60935c" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a2f143543604cca7dde7c20a530fbb837" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Dataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1acb41216cc0c88906fec2a169093875f4" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>files</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a53a7d241c0259d8324a385a340318ea8" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>filesystem_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a175bc61b2f91329a71722129708d5374" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>FileSystemDataset</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1ad4d11fe7533e78e9ba8ac61bbc89a3ea" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>forest_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a271030810dabf0c541d27eeea16abdd2" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>format</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a7e7b30f80451abaa4f56343b33d28d2a" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>format_</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a783f0d7ccb031e52adb3f67da8b50c15" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>GetFragments</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a1d0b7ec431d2d0d94455fdba6d9e324c" prot="protected" virt="virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>GetFragmentsImpl</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a9975e2628e18b084dbf4f4cf72beb459" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a04047b7e92b107221b508e22a6452962" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a721ca71630b573338e9fe8716d8e53d5" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Make</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a98691e35d913df562e0e34cb60e736bc" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>NewScan</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a1a7cbac64269923faa404d9f50885b61" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>NewScan</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1aa7449d6622e0098c916528be75506236" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>partition_expression</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ad1698721117105739a03725129c32a55" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>partition_expression_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1ac29dcb2f014a1b447c1d3f489ba6281f" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>partitions</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a92561f9c7f471de8d1d24757bb555b78" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>partitions_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a652887883af7444deee7c87f8e4b59a2" prot="public" virt="virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>ReplaceSchema</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1ad2edfced53a0e56cf89389ee8c754702" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a4c4752474ddf539f5d841b38f773c763" prot="protected" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>schema_</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a6f3d3345798286896523179f0d80f5bd" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>ToString</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a9efe37fcf02fce6fe246c9a4a8163190" prot="public" virt="virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>type_name</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_system_dataset_1a17dfa2f17605facefdf6552f1ebbeda8" prot="public" virt="non-virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>Write</name></member>
      <member refid="classarrow_1_1dataset_1_1_dataset_1a5a618381ecdfa4761d6fb3182e094c4f" prot="public" virt="virtual"><scope>arrow::dataset::FileSystemDataset</scope><name>~Dataset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
