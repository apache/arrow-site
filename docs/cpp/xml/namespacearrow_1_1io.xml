<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacearrow_1_1io" kind="namespace" language="C++">
    <compoundname>arrow::io</compoundname>
    <innerclass refid="classarrow_1_1io_1_1_buffered_input_stream" prot="public">arrow::io::BufferedInputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_buffered_output_stream" prot="public">arrow::io::BufferedOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_buffer_output_stream" prot="public">arrow::io::BufferOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_buffer_reader" prot="public">arrow::io::BufferReader</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_compressed_input_stream" prot="public">arrow::io::CompressedInputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_compressed_output_stream" prot="public">arrow::io::CompressedOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_file_interface" prot="public">arrow::io::FileInterface</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_file_mode" prot="public">arrow::io::FileMode</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_file_output_stream" prot="public">arrow::io::FileOutputStream</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_file_statistics" prot="public">arrow::io::FileStatistics</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_file_system" prot="public">arrow::io::FileSystem</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_fixed_size_buffer_writer" prot="public">arrow::io::FixedSizeBufferWriter</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hadoop_file_system" prot="public">arrow::io::HadoopFileSystem</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_hdfs_connection_config" prot="public">arrow::io::HdfsConnectionConfig</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hdfs_output_stream" prot="public">arrow::io::HdfsOutputStream</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_hdfs_path_info" prot="public">arrow::io::HdfsPathInfo</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_hdfs_readable_file" prot="public">arrow::io::HdfsReadableFile</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_input_stream" prot="public">arrow::io::InputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_latency_generator" prot="public">arrow::io::LatencyGenerator</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_memory_mapped_file" prot="public">arrow::io::MemoryMappedFile</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_mock_output_stream" prot="public">arrow::io::MockOutputStream</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_object_type" prot="public">arrow::io::ObjectType</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_output_stream" prot="public">arrow::io::OutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_random_access_file" prot="public">arrow::io::RandomAccessFile</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_readable" prot="public">arrow::io::Readable</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_readable_file" prot="public">arrow::io::ReadableFile</innerclass>
    <innerclass refid="structarrow_1_1io_1_1_read_range" prot="public">arrow::io::ReadRange</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_read_write_file_interface" prot="public">arrow::io::ReadWriteFileInterface</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_seekable" prot="public">arrow::io::Seekable</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_slow_input_stream" prot="public">arrow::io::SlowInputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_slow_input_stream_base" prot="public">arrow::io::SlowInputStreamBase</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_slow_random_access_file" prot="public">arrow::io::SlowRandomAccessFile</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_stderr_stream" prot="public">arrow::io::StderrStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_stdin_stream" prot="public">arrow::io::StdinStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_stdout_stream" prot="public">arrow::io::StdoutStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_writable" prot="public">arrow::io::Writable</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_writable_file" prot="public">arrow::io::WritableFile</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacearrow_1_1io_1a559bc6c902e7879baa1713f4de2b4639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::HaveLibHdfs</definition>
        <argsstring>()</argsstring>
        <name>HaveLibHdfs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/hdfs.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacearrow_1_1io_1a5e5b8a00fdc48fc477eb9fc39134f293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt; &gt;</type>
        <definition>Result&lt;Iterator&lt;std::shared_ptr&lt;Buffer&gt; &gt; &gt; arrow::io::MakeInputStreamIterator</definition>
        <argsstring>(std::shared_ptr&lt; InputStream &gt; stream, int64_t block_size)</argsstring>
        <name>MakeInputStreamIterator</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">InputStream</ref> &gt;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Return an iterator on an input stream. </para>        </briefdescription>
        <detaileddescription>
<para>The iterator yields a fixed-size block on each Next() call, except the last block in the stream which may be smaller. Once the end of stream is reached, Next() returns nullptr (unlike <ref refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8" kindref="member">InputStream::Read()</ref> which returns an empty buffer). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/interfaces.h" line="259" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/csv/reader.h" line="30" column="1"/>
  </compounddef>
</doxygen>
