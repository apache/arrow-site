<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_expression_registry" kind="class" language="C++" prot="public">
    <compoundname>gandiva::ExpressionRegistry</compoundname>
    <includes refid="expression__registry_8h" local="no">gandiva/expression_registry.h</includes>
    <innerclass refid="classgandiva_1_1_expression_registry_1_1_function_signature_iterator" prot="public">gandiva::ExpressionRegistry::FunctionSignatureIterator</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgandiva_1_1_expression_registry_1ab258ed8893c0ba110533f6025533800e" prot="public" static="no">
        <type>const <ref refid="classgandiva_1_1_native_function" kindref="compound">NativeFunction</ref> *</type>
        <definition>using gandiva::ExpressionRegistry::native_func_iterator_type =  const NativeFunction*</definition>
        <argsstring></argsstring>
        <name>native_func_iterator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="38" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgandiva_1_1_expression_registry_1a3ffa8a4c665cdb849c9015ed2953e754" prot="public" static="no">
        <type>const <ref refid="classgandiva_1_1_function_signature" kindref="compound">FunctionSignature</ref> *</type>
        <definition>using gandiva::ExpressionRegistry::func_sig_iterator_type =  const FunctionSignature*</definition>
        <argsstring></argsstring>
        <name>func_sig_iterator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="39" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_expression_registry_1a1ed33c611e2c5f775a434e47290d6a81" prot="private" static="yes" mutable="no">
        <type><ref refid="namespacegandiva_1ae9130a6d76c9e050968c236e194d4550" kindref="member">DataTypeVector</ref></type>
        <definition>DataTypeVector gandiva::ExpressionRegistry::supported_types_</definition>
        <argsstring></argsstring>
        <name>supported_types_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="64" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_expression_registry_1ab85ea9fec1b95ab7e2dbbaf9e3cd3431" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgandiva_1_1_function_registry" kindref="compound">FunctionRegistry</ref> &gt;</type>
        <definition>std::unique_ptr&lt;FunctionRegistry&gt; gandiva::ExpressionRegistry::function_registry_</definition>
        <argsstring></argsstring>
        <name>function_registry_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="67" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a167dc3c1eb931853ceee3c8c60275a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::ExpressionRegistry::ExpressionRegistry</definition>
        <argsstring>()</argsstring>
        <name>ExpressionRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1abb5960165fcbad1513075f8fe7e53eef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gandiva::ExpressionRegistry::~ExpressionRegistry</definition>
        <argsstring>()</argsstring>
        <name>~ExpressionRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a34290ac6d4c05d5b70101f8dc8864f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgandiva_1_1_expression_registry_1_1_function_signature_iterator" kindref="compound">FunctionSignatureIterator</ref></type>
        <definition>const FunctionSignatureIterator gandiva::ExpressionRegistry::function_signature_begin</definition>
        <argsstring>()</argsstring>
        <name>function_signature_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a3e33f41c04da127b8df823fbc591ac3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgandiva_1_1_expression_registry_1_1_function_signature_iterator" kindref="compound">FunctionSignatureIterator</ref></type>
        <definition>const FunctionSignatureIterator gandiva::ExpressionRegistry::function_signature_end</definition>
        <argsstring>() const</argsstring>
        <name>function_signature_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a2734dd6e55244417696bf04f26c7212b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegandiva_1ae9130a6d76c9e050968c236e194d4550" kindref="member">DataTypeVector</ref></type>
        <definition>static DataTypeVector gandiva::ExpressionRegistry::supported_types</definition>
        <argsstring>()</argsstring>
        <name>supported_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="42" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a041af1d0e3aa8498deb870c539c3fe3d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegandiva_1ae9130a6d76c9e050968c236e194d4550" kindref="member">DataTypeVector</ref></type>
        <definition>static DataTypeVector gandiva::ExpressionRegistry::InitSupportedTypes</definition>
        <argsstring>()</argsstring>
        <name>InitSupportedTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_expression_registry_1a0c47beb1e5ebcf13070d5157ed2f87b3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gandiva::ExpressionRegistry::AddArrowTypesToVector</definition>
        <argsstring>(arrow::Type::type &amp;type, DataTypeVector &amp;vector)</argsstring>
        <name>AddArrowTypesToVector</name>
        <param>
          <type><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">arrow::Type::type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacegandiva_1ae9130a6d76c9e050968c236e194d4550" kindref="member">DataTypeVector</ref> &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exports types supported by Gandiva for processing. </para>    </briefdescription>
    <detaileddescription>
<para>Has helper methods for clients to programmatically discover data types and functions supported by Gandiva. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/expression_registry.h" line="36" column="1" bodyfile="/arrow/cpp/src/gandiva/expression_registry.h" bodystart="36" bodyend="68"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_expression_registry_1a0c47beb1e5ebcf13070d5157ed2f87b3" prot="private" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>AddArrowTypesToVector</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a167dc3c1eb931853ceee3c8c60275a74" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>ExpressionRegistry</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a3ffa8a4c665cdb849c9015ed2953e754" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>func_sig_iterator_type</name></member>
      <member refid="classgandiva_1_1_expression_registry_1ab85ea9fec1b95ab7e2dbbaf9e3cd3431" prot="private" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>function_registry_</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a34290ac6d4c05d5b70101f8dc8864f26" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>function_signature_begin</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a3e33f41c04da127b8df823fbc591ac3a" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>function_signature_end</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a041af1d0e3aa8498deb870c539c3fe3d" prot="private" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>InitSupportedTypes</name></member>
      <member refid="classgandiva_1_1_expression_registry_1ab258ed8893c0ba110533f6025533800e" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>native_func_iterator_type</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a2734dd6e55244417696bf04f26c7212b" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>supported_types</name></member>
      <member refid="classgandiva_1_1_expression_registry_1a1ed33c611e2c5f775a434e47290d6a81" prot="private" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>supported_types_</name></member>
      <member refid="classgandiva_1_1_expression_registry_1abb5960165fcbad1513075f8fe7e53eef" prot="public" virt="non-virtual"><scope>gandiva::ExpressionRegistry</scope><name>~ExpressionRegistry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
