<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1compute_1_1_function_context" kind="class" language="C++" prot="public">
    <compoundname>arrow::compute::FunctionContext</compoundname>
    <includes refid="context_8h" local="no">arrow/compute/context.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_function_context_1aadb74fe66d2ca99ba7d79ea388a7105f" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::FunctionContext::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="73" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_function_context_1a71e47dcaa06f5a0ee0b7c4f85f87e1e4" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::compute::FunctionContext::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="74" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1compute_1_1_function_context_1a41a572bb7d1ed11dcb77d911a3f087ad" prot="private" static="no" mutable="no">
        <type>internal::CpuInfo *</type>
        <definition>internal::CpuInfo* arrow::compute::FunctionContext::cpu_info_</definition>
        <argsstring></argsstring>
        <name>cpu_info_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="75" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1ace9ded94827c89cfc4e5dff84fc47d22" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::compute::FunctionContext::FunctionContext</definition>
        <argsstring>(MemoryPool *pool=default_memory_pool())</argsstring>
        <name>FunctionContext</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::compute::FunctionContext::memory_pool</definition>
        <argsstring>() const</argsstring>
        <name>memory_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1a9b52caa508a3d9b48519c3ef2dcd407f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::compute::FunctionContext::Allocate</definition>
        <argsstring>(const int64_t nbytes, std::shared_ptr&lt; Buffer &gt; *out)</argsstring>
        <name>Allocate</name>
        <param>
          <type>const int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Allocate buffer from the context&apos;s memory pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1aa2836c190e3a5e5f452e45bb730fd155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::compute::FunctionContext::SetStatus</definition>
        <argsstring>(const Status &amp;status)</argsstring>
        <name>SetStatus</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Indicate that an error has occurred, to be checked by a parent caller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> instance</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Will not overwrite a prior set <ref refid="classarrow_1_1_status" kindref="compound">Status</ref>, so we will have the first error that occurred until <ref refid="classarrow_1_1compute_1_1_function_context_1ad5a87457b35454ee157e08bfb62090d1" kindref="member">FunctionContext::ResetStatus</ref> is called </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1ad5a87457b35454ee157e08bfb62090d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::compute::FunctionContext::ResetStatus</definition>
        <argsstring>()</argsstring>
        <name>ResetStatus</name>
        <briefdescription>
<para>Clear any error status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1a4240c42d4fb40bb3c09d4c3c18139509" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::compute::FunctionContext::HasError</definition>
        <argsstring>() const</argsstring>
        <name>HasError</name>
        <briefdescription>
<para>Return true if an error has occurred. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="65" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1aa575c2fe3f2b4c611ff45143333af0e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
        <definition>const Status&amp; arrow::compute::FunctionContext::status</definition>
        <argsstring>() const</argsstring>
        <name>status</name>
        <briefdescription>
<para>Return the current status of the context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="68" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1compute_1_1_function_context_1a7aff67ff53d272a6ee87e6c2eea813bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>internal::CpuInfo *</type>
        <definition>internal::CpuInfo* arrow::compute::FunctionContext::cpu_info</definition>
        <argsstring>() const</argsstring>
        <name>cpu_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/compute/context.h" line="70" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container for variables and options used by function evaluation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/compute/context.h" line="46" column="1" bodyfile="/arrow/cpp/src/arrow/compute/context.h" bodystart="46" bodyend="76"/>
    <listofallmembers>
      <member refid="classarrow_1_1compute_1_1_function_context_1a9b52caa508a3d9b48519c3ef2dcd407f" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>Allocate</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1a7aff67ff53d272a6ee87e6c2eea813bd" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>cpu_info</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1a41a572bb7d1ed11dcb77d911a3f087ad" prot="private" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>cpu_info_</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1ace9ded94827c89cfc4e5dff84fc47d22" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>FunctionContext</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1a4240c42d4fb40bb3c09d4c3c18139509" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>HasError</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>memory_pool</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1a71e47dcaa06f5a0ee0b7c4f85f87e1e4" prot="private" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>pool_</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1ad5a87457b35454ee157e08bfb62090d1" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>ResetStatus</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1aa2836c190e3a5e5f452e45bb730fd155" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>SetStatus</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1aa575c2fe3f2b4c611ff45143333af0e3" prot="public" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>status</name></member>
      <member refid="classarrow_1_1compute_1_1_function_context_1aadb74fe66d2ca99ba7d79ea388a7105f" prot="private" virt="non-virtual"><scope>arrow::compute::FunctionContext</scope><name>status_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
