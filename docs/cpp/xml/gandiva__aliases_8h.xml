<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gandiva__aliases_8h" kind="file" language="C++">
    <compoundname>gandiva_aliases.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includedby refid="annotator_8h" local="yes">/arrow/cpp/src/gandiva/annotator.h</includedby>
    <includedby refid="condition_8h" local="yes">/arrow/cpp/src/gandiva/condition.h</includedby>
    <includedby refid="dex_8h" local="yes">/arrow/cpp/src/gandiva/dex.h</includedby>
    <includedby refid="eval__batch_8h" local="yes">/arrow/cpp/src/gandiva/eval_batch.h</includedby>
    <includedby refid="gandiva_2expression_8h" local="yes">/arrow/cpp/src/gandiva/expression.h</includedby>
    <includedby refid="expression__registry_8h" local="yes">/arrow/cpp/src/gandiva/expression_registry.h</includedby>
    <includedby refid="function__ir__builder_8h" local="yes">/arrow/cpp/src/gandiva/function_ir_builder.h</includedby>
    <includedby refid="function__registry_8h" local="yes">/arrow/cpp/src/gandiva/function_registry.h</includedby>
    <includedby refid="function__registry__common_8h" local="yes">/arrow/cpp/src/gandiva/function_registry_common.h</includedby>
    <includedby refid="in__holder_8h" local="yes">/arrow/cpp/src/gandiva/in_holder.h</includedby>
    <includedby refid="llvm__generator_8h" local="yes">/arrow/cpp/src/gandiva/llvm_generator.h</includedby>
    <includedby refid="local__bitmaps__holder_8h" local="yes">/arrow/cpp/src/gandiva/local_bitmaps_holder.h</includedby>
    <includedby refid="node_8h" local="yes">/arrow/cpp/src/gandiva/node.h</includedby>
    <includedby refid="value__validity__pair_8h" local="yes">/arrow/cpp/src/gandiva/value_validity_pair.h</includedby>
    <incdepgraph>
      <node id="17049">
        <label>string</label>
      </node>
      <node id="17050">
        <label>unordered_set</label>
      </node>
      <node id="17051">
        <label>vector</label>
      </node>
      <node id="17047">
        <label>/arrow/cpp/src/gandiva/gandiva_aliases.h</label>
        <link refid="gandiva__aliases_8h"/>
        <childnode refid="17048" relation="include">
        </childnode>
        <childnode refid="17049" relation="include">
        </childnode>
        <childnode refid="17050" relation="include">
        </childnode>
        <childnode refid="17051" relation="include">
        </childnode>
      </node>
      <node id="17048">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17075">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="17054">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="17068">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="17069" relation="include">
        </childnode>
      </node>
      <node id="17053">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="17054" relation="include">
        </childnode>
      </node>
      <node id="17071">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="17070" relation="include">
        </childnode>
      </node>
      <node id="17057">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="17066">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="17080">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="17054" relation="include">
        </childnode>
      </node>
      <node id="17078">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="17075" relation="include">
        </childnode>
      </node>
      <node id="17065">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="17066" relation="include">
        </childnode>
      </node>
      <node id="17077">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="17075" relation="include">
        </childnode>
      </node>
      <node id="17067">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="17070">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="17064" relation="include">
        </childnode>
        <childnode refid="17054" relation="include">
        </childnode>
      </node>
      <node id="17059">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="17060" relation="include">
        </childnode>
      </node>
      <node id="17058">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="17069">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="17074">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="17063" relation="include">
        </childnode>
        <childnode refid="17064" relation="include">
        </childnode>
        <childnode refid="17075" relation="include">
        </childnode>
        <childnode refid="17076" relation="include">
        </childnode>
        <childnode refid="17077" relation="include">
        </childnode>
        <childnode refid="17078" relation="include">
        </childnode>
      </node>
      <node id="17060">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="17062">
        <label>/arrow/cpp/src/gandiva/expression.h</label>
        <link refid="gandiva_2expression_8h"/>
        <childnode refid="17055" relation="include">
        </childnode>
        <childnode refid="17063" relation="include">
        </childnode>
        <childnode refid="17064" relation="include">
        </childnode>
        <childnode refid="17065" relation="include">
        </childnode>
        <childnode refid="17058" relation="include">
        </childnode>
      </node>
      <node id="17079">
        <label>/arrow/cpp/src/gandiva/value_validity_pair.h</label>
        <link refid="value__validity__pair_8h"/>
        <childnode refid="17080" relation="include">
        </childnode>
        <childnode refid="17059" relation="include">
        </childnode>
        <childnode refid="17054" relation="include">
        </childnode>
      </node>
      <node id="17055">
        <label>/arrow/cpp/src/gandiva/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="17056" relation="include">
        </childnode>
        <childnode refid="17058" relation="include">
        </childnode>
      </node>
      <node id="17073">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="17061" relation="include">
        </childnode>
      </node>
      <node id="17072">
        <label>/arrow/cpp/src/gandiva/in_holder.h</label>
        <link refid="in__holder_8h"/>
        <childnode refid="17059" relation="include">
        </childnode>
      </node>
      <node id="17056">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="17057" relation="include">
        </childnode>
      </node>
      <node id="17076">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="17075" relation="include">
        </childnode>
      </node>
      <node id="17052">
        <label>/arrow/cpp/src/gandiva/gandiva_aliases.h</label>
        <link refid="gandiva__aliases_8h"/>
        <childnode refid="17053" relation="include">
        </childnode>
        <childnode refid="17055" relation="include">
        </childnode>
        <childnode refid="17059" relation="include">
        </childnode>
        <childnode refid="17061" relation="include">
        </childnode>
        <childnode refid="17062" relation="include">
        </childnode>
        <childnode refid="17067" relation="include">
        </childnode>
        <childnode refid="17068" relation="include">
        </childnode>
        <childnode refid="17070" relation="include">
        </childnode>
        <childnode refid="17071" relation="include">
        </childnode>
        <childnode refid="17072" relation="include">
        </childnode>
        <childnode refid="17054" relation="include">
        </childnode>
        <childnode refid="17073" relation="include">
        </childnode>
        <childnode refid="17074" relation="include">
        </childnode>
        <childnode refid="17079" relation="include">
        </childnode>
      </node>
      <node id="17061">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="17053" relation="include">
        </childnode>
        <childnode refid="17060" relation="include">
        </childnode>
      </node>
      <node id="17063">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="17064">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacegandiva">gandiva</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva" kindref="compound">gandiva</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Dex;</highlight></codeline>
<codeline lineno="28" refid="namespacegandiva_1a90061130771aa24c22b3875b23b473f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a90061130771aa24c22b3875b23b473f5" kindref="member">DexPtr</ref><sp/>=<sp/>std::shared_ptr&lt;Dex&gt;;</highlight></codeline>
<codeline lineno="29" refid="namespacegandiva_1acd54f0b5f98b8202b0cb8b6658dd368b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1acd54f0b5f98b8202b0cb8b6658dd368b" kindref="member">DexVector</ref><sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;Dex&gt;&gt;;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_value_validity_pair" kindref="compound">ValueValidityPair</ref>;</highlight></codeline>
<codeline lineno="32" refid="namespacegandiva_1ac7916e2d63d469d1c3a12e0110d2db80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ac7916e2d63d469d1c3a12e0110d2db80" kindref="member">ValueValidityPairPtr</ref><sp/>=<sp/>std::shared_ptr&lt;ValueValidityPair&gt;;</highlight></codeline>
<codeline lineno="33" refid="namespacegandiva_1ab203e6bb3e1b7be4bcb869e3ff847396" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab203e6bb3e1b7be4bcb869e3ff847396" kindref="member">ValueValidityPairVector</ref><sp/>=<sp/>std::vector&lt;ValueValidityPairPtr&gt;;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_field_descriptor" kindref="compound">FieldDescriptor</ref>;</highlight></codeline>
<codeline lineno="36" refid="namespacegandiva_1a35aabfbc0202ae826625ee230e45e40c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a35aabfbc0202ae826625ee230e45e40c" kindref="member">FieldDescriptorPtr</ref><sp/>=<sp/>std::shared_ptr&lt;FieldDescriptor&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_func_descriptor" kindref="compound">FuncDescriptor</ref>;</highlight></codeline>
<codeline lineno="39" refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref><sp/>=<sp/>std::shared_ptr&lt;FuncDescriptor&gt;;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_l_value" kindref="compound">LValue</ref>;</highlight></codeline>
<codeline lineno="42" refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a5a0f2dcb376b5cc9f7b1120407b3f860" kindref="member">LValuePtr</ref><sp/>=<sp/>std::shared_ptr&lt;LValue&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_expression" kindref="compound">Expression</ref>;</highlight></codeline>
<codeline lineno="45" refid="namespacegandiva_1a6735ddd686b37cdc7cda5f33008497c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a6735ddd686b37cdc7cda5f33008497c9" kindref="member">ExpressionPtr</ref><sp/>=<sp/>std::shared_ptr&lt;Expression&gt;;</highlight></codeline>
<codeline lineno="46" refid="namespacegandiva_1aad814820a6a80cb656b0f09decdc4cb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aad814820a6a80cb656b0f09decdc4cb9" kindref="member">ExpressionVector</ref><sp/>=<sp/>std::vector&lt;ExpressionPtr&gt;;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_condition" kindref="compound">Condition</ref>;</highlight></codeline>
<codeline lineno="49" refid="namespacegandiva_1ac50f3d4579d827449480b7d45be3529f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ac50f3d4579d827449480b7d45be3529f" kindref="member">ConditionPtr</ref><sp/>=<sp/>std::shared_ptr&lt;Condition&gt;;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>;</highlight></codeline>
<codeline lineno="52" refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>=<sp/>std::shared_ptr&lt;Node&gt;;</highlight></codeline>
<codeline lineno="53" refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref><sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_eval_batch" kindref="compound">EvalBatch</ref>;</highlight></codeline>
<codeline lineno="56" refid="namespacegandiva_1a2fbca35dda4c0ea064157ced8e28ff30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a2fbca35dda4c0ea064157ced8e28ff30" kindref="member">EvalBatchPtr</ref><sp/>=<sp/>std::shared_ptr&lt;EvalBatch&gt;;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_function_signature" kindref="compound">FunctionSignature</ref>;</highlight></codeline>
<codeline lineno="59" refid="namespacegandiva_1a8c7589aa8ca0ec9c9df288d686444452" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a8c7589aa8ca0ec9c9df288d686444452" kindref="member">FuncSignaturePtr</ref><sp/>=<sp/>std::shared_ptr&lt;FunctionSignature&gt;;</highlight></codeline>
<codeline lineno="60" refid="namespacegandiva_1ac400c05831d8bdbf9fae672d0602f48d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ac400c05831d8bdbf9fae672d0602f48d" kindref="member">FuncSignatureVector</ref><sp/>=<sp/>std::vector&lt;FuncSignaturePtr&gt;;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gandiva</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/gandiva_aliases.h"/>
  </compounddef>
</doxygen>
