<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="decimal__xlarge_8h" kind="file" language="C++">
    <compoundname>decimal_xlarge.h</compoundname>
    <includes local="no">cstdint</includes>
    <incdepgraph>
      <node id="15341">
        <label>cstdint</label>
      </node>
      <node id="15340">
        <label>/arrow/cpp/src/gandiva/decimal_xlarge.h</label>
        <link refid="decimal__xlarge_8h"/>
        <childnode refid="15341" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="decimal__xlarge_8h_1af83cd910ddf0de0d2dcef7725b81c0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gdv_xlarge_multiply_and_scale_down</definition>
        <argsstring>(int64_t x_high, uint64_t x_low, int64_t y_high, uint64_t y_low, int32_t reduce_scale_by, int64_t *out_high, uint64_t *out_low, bool *overflow)</argsstring>
        <name>gdv_xlarge_multiply_and_scale_down</name>
        <param>
          <type>int64_t</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>y_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>reduce_scale_by</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>out_high</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_low</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>overflow</declname>
        </param>
        <briefdescription>
<para>Stub functions to deal with extra large decimals that can be accessed from LLVM-IR code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_xlarge.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="decimal__xlarge_8h_1a1c16b55d382e8387f9640e18e348c9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gdv_xlarge_scale_up_and_divide</definition>
        <argsstring>(int64_t x_high, uint64_t x_low, int64_t y_high, uint64_t y_low, int32_t increase_scale_by, int64_t *out_high, uint64_t *out_low, bool *overflow)</argsstring>
        <name>gdv_xlarge_scale_up_and_divide</name>
        <param>
          <type>int64_t</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>y_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>increase_scale_by</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>out_high</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_low</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>overflow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_xlarge.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="decimal__xlarge_8h_1a86f35338023b0a986c7f1c3847a93d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gdv_xlarge_mod</definition>
        <argsstring>(int64_t x_high, uint64_t x_low, int32_t x_scale, int64_t y_high, uint64_t y_low, int32_t y_scale, int64_t *out_high, uint64_t *out_low)</argsstring>
        <name>gdv_xlarge_mod</name>
        <param>
          <type>int64_t</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x_scale</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>y_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y_scale</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>out_high</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_xlarge.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="decimal__xlarge_8h_1a98265abb8968bd20d991edf329850303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t gdv_xlarge_compare</definition>
        <argsstring>(int64_t x_high, uint64_t x_low, int32_t x_scale, int64_t y_high, uint64_t y_low, int32_t y_scale)</argsstring>
        <name>gdv_xlarge_compare</name>
        <param>
          <type>int64_t</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x_scale</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>y_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y_scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/decimal_xlarge.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="decimal__xlarge_8h_1af83cd910ddf0de0d2dcef7725b81c0df" kindref="member">gdv_xlarge_multiply_and_scale_down</ref>(int64_t<sp/>x_high,<sp/>uint64_t<sp/>x_low,<sp/>int64_t<sp/>y_high,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>y_low,<sp/>int32_t<sp/>reduce_scale_by,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>out_high,<sp/>uint64_t*<sp/>out_low,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>overflow);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="decimal__xlarge_8h_1a1c16b55d382e8387f9640e18e348c9b8" kindref="member">gdv_xlarge_scale_up_and_divide</ref>(int64_t<sp/>x_high,<sp/>uint64_t<sp/>x_low,<sp/>int64_t<sp/>y_high,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>y_low,<sp/>int32_t<sp/>increase_scale_by,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>out_high,<sp/>uint64_t*<sp/>out_low,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>overflow);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="decimal__xlarge_8h_1a86f35338023b0a986c7f1c3847a93d99" kindref="member">gdv_xlarge_mod</ref>(int64_t<sp/>x_high,<sp/>uint64_t<sp/>x_low,<sp/>int32_t<sp/>x_scale,<sp/>int64_t<sp/>y_high,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>y_low,<sp/>int32_t<sp/>y_scale,<sp/>int64_t*<sp/>out_high,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>out_low);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">int32_t<sp/><ref refid="decimal__xlarge_8h_1a98265abb8968bd20d991edf329850303" kindref="member">gdv_xlarge_compare</ref>(int64_t<sp/>x_high,<sp/>uint64_t<sp/>x_low,<sp/>int32_t<sp/>x_scale,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>y_high,<sp/>uint64_t<sp/>y_low,<sp/>int32_t<sp/>y_scale);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/decimal_xlarge.h"/>
  </compounddef>
</doxygen>
