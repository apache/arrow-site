<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_column_chunk_meta_data" kind="class" language="C++" prot="public">
    <compoundname>parquet::ColumnChunkMetaData</compoundname>
    <includes refid="metadata_8h" local="no">parquet/metadata.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_column_chunk_meta_data_1a9d713fe44ad52e28c34fe10179d3ae3f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; ColumnChunkMetaDataImpl &gt;</type>
        <definition>std::unique_ptr&lt;ColumnChunkMetaDataImpl&gt; parquet::ColumnChunkMetaData::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="178" column="1" bodyfile="/arrow/cpp/src/parquet/metadata.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1af741392d93d607d81cf3904de7b77567" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_column_chunk_meta_data" kindref="compound">ColumnChunkMetaData</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ColumnChunkMetaData&gt; parquet::ColumnChunkMetaData::Make</definition>
        <argsstring>(const void *metadata, const ColumnDescriptor *descr, const ApplicationVersion *writer_version=NULLPTR, int16_t row_group_ordinal=-1, int16_t column_ordinal=-1, std::shared_ptr&lt; InternalFileDecryptor &gt; file_decryptor=NULLPTR)</argsstring>
        <name>Make</name>
        <param>
          <type>const void *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref> *</type>
          <declname>writer_version</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <param>
          <type>int16_t</type>
          <declname>row_group_ordinal</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int16_t</type>
          <declname>column_ordinal</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_internal_file_decryptor" kindref="compound">InternalFileDecryptor</ref> &gt;</type>
          <declname>file_decryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a343bf0d8f09bb486fcf0f455cae14139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnChunkMetaData::~ColumnChunkMetaData</definition>
        <argsstring>()</argsstring>
        <name>~ColumnChunkMetaData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1aac065b6036ff04651b570c2451bf38a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::file_offset</definition>
        <argsstring>() const</argsstring>
        <name>file_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a9837514d8817ad413f4454ac3975fc28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; parquet::ColumnChunkMetaData::file_path</definition>
        <argsstring>() const</argsstring>
        <name>file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a5d86abf3aabf8ade10c8734bf4c4e1f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnChunkMetaData::is_metadata_set</definition>
        <argsstring>() const</argsstring>
        <name>is_metadata_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a2211e9682867722a90ed1c1b7ca392c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structparquet_1_1_type_1a2a4b0ad3da98a8a407a0dc3ecbf737ca" kindref="member">Type::type</ref></type>
        <definition>Type::type parquet::ColumnChunkMetaData::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1afed4ad2adf89fe65eb117ca492d9860a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::num_values</definition>
        <argsstring>() const</argsstring>
        <name>num_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a20da8dac529a4ed9779a81be064c500a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_column_path" kindref="compound">schema::ColumnPath</ref> &gt;</type>
        <definition>std::shared_ptr&lt;schema::ColumnPath&gt; parquet::ColumnChunkMetaData::path_in_schema</definition>
        <argsstring>() const</argsstring>
        <name>path_in_schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a2b3db1066dd9f0939c7787f1dc8b6b6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnChunkMetaData::is_stats_set</definition>
        <argsstring>() const</argsstring>
        <name>is_stats_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a92f57836c91bf1dc3231f88dff3e08f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_statistics" kindref="compound">Statistics</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Statistics&gt; parquet::ColumnChunkMetaData::statistics</definition>
        <argsstring>() const</argsstring>
        <name>statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a20fd8109cf9ef8e9529e2dcd3e12f201" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
        <definition>Compression::type parquet::ColumnChunkMetaData::compression</definition>
        <argsstring>() const</argsstring>
        <name>compression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1ad020f7aed1ac9d758379d3f1b59bdbb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnChunkMetaData::can_decompress</definition>
        <argsstring>() const</argsstring>
        <name>can_decompress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a7253e122e324c137aa95a7df99750b60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structparquet_1_1_encoding_1acd287bb69df941fa0e27dd594462f27e" kindref="member">Encoding::type</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Encoding::type&gt;&amp; parquet::ColumnChunkMetaData::encodings</definition>
        <argsstring>() const</argsstring>
        <name>encodings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1ab583dd24c3f5a66fcf4d4cbc522f4589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structparquet_1_1_page_encoding_stats" kindref="compound">PageEncodingStats</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;PageEncodingStats&gt;&amp; parquet::ColumnChunkMetaData::encoding_stats</definition>
        <argsstring>() const</argsstring>
        <name>encoding_stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a8e5ce877344ff1c3634e17a2d918b230" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnChunkMetaData::has_dictionary_page</definition>
        <argsstring>() const</argsstring>
        <name>has_dictionary_page</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a558e350ab2e89949511bfdd66e2c310f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::dictionary_page_offset</definition>
        <argsstring>() const</argsstring>
        <name>dictionary_page_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1aa3c59fa55a616d96fe848d13365bebba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::data_page_offset</definition>
        <argsstring>() const</argsstring>
        <name>data_page_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1ad654820606176db63154484241b33fff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::ColumnChunkMetaData::has_index_page</definition>
        <argsstring>() const</argsstring>
        <name>has_index_page</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1aa1c036888927548d8c34197c5bcdfc25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::index_page_offset</definition>
        <argsstring>() const</argsstring>
        <name>index_page_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a56c13d9064b0b0523a14b4be60957c0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::total_compressed_size</definition>
        <argsstring>() const</argsstring>
        <name>total_compressed_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a6ce82cd64ef0bee96401091d20b3c656" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ColumnChunkMetaData::total_uncompressed_size</definition>
        <argsstring>() const</argsstring>
        <name>total_uncompressed_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a2e045a034c0ab883e8ca46de5db6b864" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_column_crypto_meta_data" kindref="compound">ColumnCryptoMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ColumnCryptoMetaData&gt; parquet::ColumnChunkMetaData::crypto_metadata</definition>
        <argsstring>() const</argsstring>
        <name>crypto_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="169" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_column_chunk_meta_data_1a36202141765993cb92eeb5eb4b0c9a95" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ColumnChunkMetaData::ColumnChunkMetaData</definition>
        <argsstring>(const void *metadata, const ColumnDescriptor *descr, int16_t row_group_ordinal, int16_t column_ordinal, const ApplicationVersion *writer_version=NULLPTR, std::shared_ptr&lt; InternalFileDecryptor &gt; file_decryptor=NULLPTR)</argsstring>
        <name>ColumnChunkMetaData</name>
        <param>
          <type>const void *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_column_descriptor" kindref="compound">ColumnDescriptor</ref> *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>row_group_ordinal</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>column_ordinal</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_application_version" kindref="compound">ApplicationVersion</ref> *</type>
          <declname>writer_version</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_internal_file_decryptor" kindref="compound">InternalFileDecryptor</ref> &gt;</type>
          <declname>file_decryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/metadata.h" line="172" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/metadata.h" line="130" column="1" bodyfile="/arrow/cpp/src/parquet/metadata.h" bodystart="130" bodyend="179"/>
    <listofallmembers>
      <member refid="classparquet_1_1_column_chunk_meta_data_1ad020f7aed1ac9d758379d3f1b59bdbb4" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>can_decompress</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a36202141765993cb92eeb5eb4b0c9a95" prot="private" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>ColumnChunkMetaData</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a20fd8109cf9ef8e9529e2dcd3e12f201" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>compression</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a2e045a034c0ab883e8ca46de5db6b864" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>crypto_metadata</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1aa3c59fa55a616d96fe848d13365bebba" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>data_page_offset</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a558e350ab2e89949511bfdd66e2c310f" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>dictionary_page_offset</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1ab583dd24c3f5a66fcf4d4cbc522f4589" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>encoding_stats</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a7253e122e324c137aa95a7df99750b60" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>encodings</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1aac065b6036ff04651b570c2451bf38a7" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>file_offset</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a9837514d8817ad413f4454ac3975fc28" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>file_path</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a8e5ce877344ff1c3634e17a2d918b230" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>has_dictionary_page</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1ad654820606176db63154484241b33fff" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>has_index_page</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a9d713fe44ad52e28c34fe10179d3ae3f" prot="private" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>impl_</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1aa1c036888927548d8c34197c5bcdfc25" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>index_page_offset</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a5d86abf3aabf8ade10c8734bf4c4e1f2" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>is_metadata_set</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a2b3db1066dd9f0939c7787f1dc8b6b6d" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>is_stats_set</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1af741392d93d607d81cf3904de7b77567" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>Make</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1afed4ad2adf89fe65eb117ca492d9860a" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>num_values</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a20da8dac529a4ed9779a81be064c500a" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>path_in_schema</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a92f57836c91bf1dc3231f88dff3e08f9" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>statistics</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a56c13d9064b0b0523a14b4be60957c0f" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>total_compressed_size</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a6ce82cd64ef0bee96401091d20b3c656" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>total_uncompressed_size</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a2211e9682867722a90ed1c1b7ca392c4" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>type</name></member>
      <member refid="classparquet_1_1_column_chunk_meta_data_1a343bf0d8f09bb486fcf0f455cae14139" prot="public" virt="non-virtual"><scope>parquet::ColumnChunkMetaData</scope><name>~ColumnChunkMetaData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
