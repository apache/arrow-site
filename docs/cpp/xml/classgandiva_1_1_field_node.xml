<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_field_node" kind="class" language="C++" prot="public">
    <compoundname>gandiva::FieldNode</compoundname>
    <basecompoundref refid="classgandiva_1_1_node" prot="public" virt="non-virtual">gandiva::Node</basecompoundref>
    <includes refid="node_8h" local="no">gandiva/node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgandiva_1_1_field_node_1ac153a7604b60958532a4a44ecb3c08ee" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref></type>
        <definition>FieldPtr gandiva::FieldNode::field_</definition>
        <argsstring></argsstring>
        <name>field_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="111" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgandiva_1_1_field_node_1aca4ed5a5fb7696576d771a8b6ff6d520" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gandiva::FieldNode::FieldNode</definition>
        <argsstring>(FieldPtr field)</argsstring>
        <name>FieldNode</name>
        <param>
          <type><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="100" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_field_node_1a44366f117b218368058155b9aba4ff1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref></type>
        <definition>Status gandiva::FieldNode::Accept</definition>
        <argsstring>(NodeVisitor &amp;visitor) const override</argsstring>
        <name>Accept</name>
        <reimplements refid="classgandiva_1_1_node_1a07a1ab1f2c7f363bdd27cbba8387ffa3">Accept</reimplements>
        <param>
          <type><ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Derived classes should simply invoke the Visit api of the visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="102" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_field_node_1ae58aff25293b1d17991b3f71a59a8de1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref> &amp;</type>
        <definition>const FieldPtr&amp; gandiva::FieldNode::field</definition>
        <argsstring>() const</argsstring>
        <name>field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="104" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_field_node_1aa2e52d983187511add6e59b5ebe69d47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string gandiva::FieldNode::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classgandiva_1_1_node_1a7e458c306e2162546c96a9c8eea0eef6">ToString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/node.h" line="106" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="106" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref> in the expression tree, representing an arrow field. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1541">
        <label>gandiva::FieldNode</label>
        <link refid="classgandiva_1_1_field_node"/>
        <childnode refid="1542" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1542">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1543">
        <label>gandiva::FieldNode</label>
        <link refid="classgandiva_1_1_field_node"/>
        <childnode refid="1544" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1544">
        <label>gandiva::Node</label>
        <link refid="classgandiva_1_1_node"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/gandiva/node.h" line="98" column="1" bodyfile="/arrow/cpp/src/gandiva/node.h" bodystart="98" bodyend="112"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_field_node_1a44366f117b218368058155b9aba4ff1a" prot="public" virt="virtual"><scope>gandiva::FieldNode</scope><name>Accept</name></member>
      <member refid="classgandiva_1_1_field_node_1ae58aff25293b1d17991b3f71a59a8de1" prot="public" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>field</name></member>
      <member refid="classgandiva_1_1_field_node_1ac153a7604b60958532a4a44ecb3c08ee" prot="private" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>field_</name></member>
      <member refid="classgandiva_1_1_field_node_1aca4ed5a5fb7696576d771a8b6ff6d520" prot="public" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>FieldNode</name></member>
      <member refid="classgandiva_1_1_node_1abb254ba06af6ededc023d840cb4ae4ca" prot="public" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>Node</name></member>
      <member refid="classgandiva_1_1_node_1ab196d58f5e486a054ff5d49e1d932e83" prot="public" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>return_type</name></member>
      <member refid="classgandiva_1_1_node_1a01cea0ee791882a488f56df5780874df" prot="protected" virt="non-virtual"><scope>gandiva::FieldNode</scope><name>return_type_</name></member>
      <member refid="classgandiva_1_1_field_node_1aa2e52d983187511add6e59b5ebe69d47" prot="public" virt="virtual"><scope>gandiva::FieldNode</scope><name>ToString</name></member>
      <member refid="classgandiva_1_1_node_1a8bddcf2654584db4ea12ac393a87b0d3" prot="public" virt="virtual"><scope>gandiva::FieldNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
