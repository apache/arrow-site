<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1ipc_1_1feather_1_1_reader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::ipc::feather::Reader</compoundname>
    <includes refid="feather_8h" local="no">arrow/ipc/feather.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1a9f39621c85b4bcd32ace0ee69223dad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::ipc::feather::Reader::~Reader</definition>
        <argsstring>()=default</argsstring>
        <name>~Reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1a71568ff64d463c6406d6ead2fbd39141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int arrow::ipc::feather::Reader::version</definition>
        <argsstring>() const =0</argsstring>
        <name>version</name>
        <briefdescription>
<para>Return the version number of the Feather file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1a4a9d897e56fcd64e67d7692d0a9b4619" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Schema&gt; arrow::ipc::feather::Reader::schema</definition>
        <argsstring>() const =0</argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1a653ca9afc7b2ea51adf26b94b05a5929" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ipc::feather::Reader::Read</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *out)=0</argsstring>
        <name>Read</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read all columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1a606fb1b144abbee3a771dee6d5f45ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ipc::feather::Reader::Read</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;indices, std::shared_ptr&lt; Table &gt; *out)=0</argsstring>
        <name>Read</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read only the specified columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the column indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1ae2e2732289f282b13e96ca07e3ca6876" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ipc::feather::Reader::Read</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names, std::shared_ptr&lt; Table &gt; *out)=0</argsstring>
        <name>Read</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read only the specified columns from the file as an <ref refid="classarrow_1_1_table" kindref="compound">arrow::Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">names</parametername>
</parameternamelist>
<parameterdescription>
<para>the column names to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></para></simplesect>
This function is zero-copy if the file source supports zero-copy reads </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1ipc_1_1feather_1_1_reader_1abc5328a7950af7523bde71d60700bac6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1ipc_1_1feather_1_1_reader" kindref="compound">Reader</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Reader&gt; &gt; arrow::ipc::feather::Reader::Open</definition>
        <argsstring>(const std::shared_ptr&lt; io::RandomAccessFile &gt; &amp;source)</argsstring>
        <name>Open</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref> &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Open a Feather file from a RandomAccessFile interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>a RandomAccessFile instance </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the table reader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface for reading columns from Feather files. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/ipc/feather.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/ipc/feather.h" bodystart="56" bodyend="98"/>
    <listofallmembers>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1abc5328a7950af7523bde71d60700bac6" prot="public" virt="non-virtual"><scope>arrow::ipc::feather::Reader</scope><name>Open</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1a653ca9afc7b2ea51adf26b94b05a5929" prot="public" virt="pure-virtual"><scope>arrow::ipc::feather::Reader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1a606fb1b144abbee3a771dee6d5f45ac8" prot="public" virt="pure-virtual"><scope>arrow::ipc::feather::Reader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1ae2e2732289f282b13e96ca07e3ca6876" prot="public" virt="pure-virtual"><scope>arrow::ipc::feather::Reader</scope><name>Read</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1a4a9d897e56fcd64e67d7692d0a9b4619" prot="public" virt="pure-virtual"><scope>arrow::ipc::feather::Reader</scope><name>schema</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1a71568ff64d463c6406d6ead2fbd39141" prot="public" virt="pure-virtual"><scope>arrow::ipc::feather::Reader</scope><name>version</name></member>
      <member refid="classarrow_1_1ipc_1_1feather_1_1_reader_1a9f39621c85b4bcd32ace0ee69223dad9" prot="public" virt="virtual"><scope>arrow::ipc::feather::Reader</scope><name>~Reader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
