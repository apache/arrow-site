<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="formatting_8h" kind="file" language="C++">
    <compoundname>formatting.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includes refid="type__traits_8h" local="yes">arrow/type_traits.h</includes>
    <includes refid="string__view_8h" local="yes">arrow/util/string_view.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <incdepgraph>
      <node id="12379">
        <label>atomic</label>
      </node>
      <node id="12372">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
      </node>
      <node id="12364">
        <label>limits</label>
      </node>
      <node id="12374">
        <label>cstdint</label>
      </node>
      <node id="12396">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="12374" relation="include">
        </childnode>
        <childnode refid="12370" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12397" relation="include">
        </childnode>
        <childnode refid="12398" relation="include">
        </childnode>
        <childnode refid="12369" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12391">
        <label>endian.h</label>
      </node>
      <node id="12369">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="12370" relation="include">
        </childnode>
        <childnode refid="12371" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12372" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12375" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12401">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="12402" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
      </node>
      <node id="12384">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12395">
        <label>cmath</label>
      </node>
      <node id="12363">
        <label>cassert</label>
      </node>
      <node id="12385">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
      </node>
      <node id="12362">
        <label>/arrow/cpp/src/arrow/util/formatting.h</label>
        <link refid="formatting_8h"/>
        <childnode refid="12363" relation="include">
        </childnode>
        <childnode refid="12364" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12369" relation="include">
        </childnode>
        <childnode refid="12378" relation="include">
        </childnode>
        <childnode refid="12389" relation="include">
        </childnode>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12366">
        <label>string</label>
      </node>
      <node id="12400">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="12386">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="12387" relation="include">
        </childnode>
      </node>
      <node id="12388">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="12369" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12376">
        <label>ostream</label>
      </node>
      <node id="12377">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="12397">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="12374" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12398" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
        <childnode refid="12372" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12390">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="12391" relation="include">
        </childnode>
        <childnode refid="12392" relation="include">
        </childnode>
        <childnode refid="12393" relation="include">
        </childnode>
        <childnode refid="12394" relation="include">
        </childnode>
        <childnode refid="12363" relation="include">
        </childnode>
        <childnode refid="12395" relation="include">
        </childnode>
        <childnode refid="12374" relation="include">
        </childnode>
        <childnode refid="12370" relation="include">
        </childnode>
        <childnode refid="12364" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12396" relation="include">
        </childnode>
        <childnode refid="12382" relation="include">
        </childnode>
        <childnode refid="12372" relation="include">
        </childnode>
        <childnode refid="12401" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12375" relation="include">
        </childnode>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12403" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12394">
        <label>bitset</label>
      </node>
      <node id="12402">
        <label>tuple</label>
      </node>
      <node id="12381">
        <label>vector</label>
      </node>
      <node id="12383">
        <label>new</label>
      </node>
      <node id="12368">
        <label>utility</label>
      </node>
      <node id="12399">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="12374" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12400" relation="include">
        </childnode>
      </node>
      <node id="12393">
        <label>array</label>
      </node>
      <node id="12389">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
        <childnode refid="12390" relation="include">
        </childnode>
      </node>
      <node id="12398">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="12371">
        <label>iosfwd</label>
      </node>
      <node id="12387">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="12382">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="12383" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12367" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12369" relation="include">
        </childnode>
        <childnode refid="12372" relation="include">
        </childnode>
      </node>
      <node id="12380">
        <label>climits</label>
      </node>
      <node id="12378">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="12379" relation="include">
        </childnode>
        <childnode refid="12380" relation="include">
        </childnode>
        <childnode refid="12374" relation="include">
        </childnode>
        <childnode refid="12371" relation="include">
        </childnode>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12382" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
        <childnode refid="12385" relation="include">
        </childnode>
        <childnode refid="12373" relation="include">
        </childnode>
        <childnode refid="12386" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
        <childnode refid="12388" relation="include">
        </childnode>
      </node>
      <node id="12367">
        <label>type_traits</label>
      </node>
      <node id="12392">
        <label>algorithm</label>
      </node>
      <node id="12370">
        <label>cstring</label>
      </node>
      <node id="12375">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="12365" relation="include">
        </childnode>
        <childnode refid="12376" relation="include">
        </childnode>
        <childnode refid="12366" relation="include">
        </childnode>
        <childnode refid="12368" relation="include">
        </childnode>
        <childnode refid="12377" relation="include">
        </childnode>
      </node>
      <node id="12365">
        <label>memory</label>
      </node>
      <node id="12373">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="12374" relation="include">
        </childnode>
      </node>
      <node id="12403">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="12367" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>private<sp/>header<sp/>for<sp/>number-to-string<sp/>formatting<sp/>utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__traits_8h" kindref="compound">arrow/type_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__view_8h" kindref="compound">arrow/util/string_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Boolean<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ARROW_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;<ref refid="namespaceparquet_1a60f6c016c8d8b612f78974bc516006b0" kindref="member">BooleanType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>StringFormatter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>bool;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Appender&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>operator()(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/>Appender&amp;&amp;<sp/>append)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">//<sp/>Integer<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>2x100<sp/>direct<sp/>table<sp/>mapping<sp/>integers<sp/>in<sp/>[0..99]<sp/>to<sp/>their<sp/>decimal<sp/>representations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digit_pairs[];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Int&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>FormatDigit(Int<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>assert(value<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>10);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>value);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Int&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FormatTwoDigits(Int<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>assert(value<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>100);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digit_pairs<sp/>+<sp/>(value<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ARROW_TYPE&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IntToStringFormatterMixin<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ARROW_TYPE::c_type;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>unsigned_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::make_unsigned&lt;value_type&gt;::type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::is_signed;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_size<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(is_signed<sp/>?<sp/>2<sp/>:<sp/>1)<sp/>+<sp/>std::numeric_limits&lt;value_type&gt;::digits10;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Appender&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>operator()(value_type<sp/>value,<sp/>Appender&amp;&amp;<sp/>append)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[buffer_size];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>buffer<sp/>+<sp/>buffer_size;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>is_signed<sp/>&amp;&amp;<sp/>(value<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned_type<sp/>v;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>warnings<sp/>(unsigned<sp/>negation)<sp/>and<sp/>undefined<sp/>behaviour<sp/>(signed<sp/>negation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overflow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>~static_cast&lt;unsigned_type&gt;(value)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">unsigned_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Algorithm<sp/>based<sp/>on<sp/>fmtlib&apos;s<sp/>format_int<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(v<sp/>&gt;=<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unsigned_type<sp/>next_value<sp/>=<sp/>v<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>digit_pair<sp/>=<sp/>detail::FormatTwoDigits(v<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/>digit_pair[1];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/>digit_pair[0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>next_value;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/>detail::FormatDigit(v);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++size;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>digit_pair<sp/>=<sp/>detail::FormatTwoDigits(v);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/>digit_pair[1];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/>digit_pair[0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*--ptr<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++size;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ptr<sp/>&gt;=<sp/>buffer);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(ptr,<sp/>size));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;Int8Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;Int8Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;Int16Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;Int16Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;<ref refid="namespaceparquet_1a7d7c12097fa34b9a73e9e5da3df62b17" kindref="member">Int32Type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;Int32Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;<ref refid="namespaceparquet_1aebf28a7ea170ee7e771b13b12d06f3cf" kindref="member">Int64Type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;Int64Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;UInt8Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;UInt8Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;UInt16Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;UInt16Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;UInt32Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;UInt32Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;UInt64Type&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin&lt;UInt64Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IntToStringFormatterMixin::IntToStringFormatterMixin;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">//<sp/>Floating-point<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>FloatToStringFormatter<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>FloatToStringFormatter();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>~FloatToStringFormatter();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FormatFloat(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>out_buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_size);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FormatFloat(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>out_buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_size);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ARROW_TYPE&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FloatToStringFormatterMixin<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatToStringFormatter<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ARROW_TYPE::c_type;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_size<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>FloatToStringFormatterMixin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Appender&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>operator()(value_type<sp/>value,<sp/>Appender&amp;&amp;<sp/>append)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[buffer_size];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>FormatFloat(value,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>append(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(buffer,<sp/>size));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;<ref refid="namespaceparquet_1a0ed420ee4d70b4f7e8c71a3b53beefe5" kindref="member">FloatType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatToStringFormatterMixin&lt;FloatType&gt;<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FloatToStringFormatterMixin::FloatToStringFormatterMixin;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringFormatter&lt;<ref refid="namespaceparquet_1ab8b1ae52fb8af689994a86814212a9cc" kindref="member">DoubleType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatToStringFormatterMixin&lt;DoubleType&gt;<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FloatToStringFormatterMixin::FloatToStringFormatterMixin;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/formatting.h"/>
  </compounddef>
</doxygen>
