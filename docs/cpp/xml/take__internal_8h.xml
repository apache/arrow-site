<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="take__internal_8h" kind="file" language="C++">
    <compoundname>take_internal.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="builder_8h" local="yes">arrow/builder.h</includes>
    <includes refid="context_8h" local="yes">arrow/compute/context.h</includes>
    <includes refid="type__traits_8h" local="yes">arrow/type_traits.h</includes>
    <includes refid="bit__util_8h" local="yes">arrow/util/bit_util.h</includes>
    <includes refid="checked__cast_8h" local="yes">arrow/util/checked_cast.h</includes>
    <includes refid="arrow_2util_2logging_8h" local="yes">arrow/util/logging.h</includes>
    <includes refid="visitor__inline_8h" local="yes">arrow/visitor_inline.h</includes>
    <incdepgraph>
      <node id="4045">
        <label>atomic</label>
      </node>
      <node id="4025">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
      </node>
      <node id="4007">
        <label>limits</label>
      </node>
      <node id="4017">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4043" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4015">
        <label>cstdint</label>
      </node>
      <node id="4052">
        <label>arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4053" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
      </node>
      <node id="4019">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4020" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4033">
        <label>endian.h</label>
      </node>
      <node id="4058">
        <label>arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
      </node>
      <node id="4026">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4028" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4040">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="4041" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
      </node>
      <node id="4070">
        <label>arrow/util/optional.h</label>
        <link refid="optional_8h"/>
        <childnode refid="4071" relation="include">
        </childnode>
      </node>
      <node id="4022">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4037">
        <label>cmath</label>
      </node>
      <node id="4036">
        <label>cassert</label>
      </node>
      <node id="4047">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
      </node>
      <node id="4060">
        <label>arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4058" relation="include">
        </childnode>
      </node>
      <node id="4053">
        <label>numeric</label>
      </node>
      <node id="4018">
        <label>string</label>
      </node>
      <node id="4065">
        <label>arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4066" relation="include">
        </childnode>
        <childnode refid="4067" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4040" relation="include">
        </childnode>
        <childnode refid="4070" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
      </node>
      <node id="4031">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="4055">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4048">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="4049" relation="include">
        </childnode>
      </node>
      <node id="4050">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4029">
        <label>ostream</label>
      </node>
      <node id="4059">
        <label>arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
      </node>
      <node id="4066">
        <label>arrow/extension_type.h</label>
        <link refid="extension__type_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4024">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="4062">
        <label>arrow/compute/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4063" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4012">
        <label>arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4013" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4052" relation="include">
        </childnode>
        <childnode refid="4056" relation="include">
        </childnode>
        <childnode refid="4057" relation="include">
        </childnode>
        <childnode refid="4059" relation="include">
        </childnode>
        <childnode refid="4058" relation="include">
        </childnode>
        <childnode refid="4060" relation="include">
        </childnode>
        <childnode refid="4061" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4064">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4029" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4020">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4063">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="4045" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4032">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="4033" relation="include">
        </childnode>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4034" relation="include">
        </childnode>
        <childnode refid="4035" relation="include">
        </childnode>
        <childnode refid="4036" relation="include">
        </childnode>
        <childnode refid="4037" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
        <childnode refid="4038" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
        <childnode refid="4040" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4028" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
        <childnode refid="4042" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4057">
        <label>arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4013" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4058" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
      </node>
      <node id="4035">
        <label>bitset</label>
      </node>
      <node id="4041">
        <label>tuple</label>
      </node>
      <node id="4013">
        <label>arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
      </node>
      <node id="4011">
        <label>vector</label>
      </node>
      <node id="4014">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4042" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4056">
        <label>arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4052" relation="include">
        </childnode>
      </node>
      <node id="4039">
        <label>new</label>
      </node>
      <node id="4010">
        <label>utility</label>
      </node>
      <node id="4030">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4031" relation="include">
        </childnode>
      </node>
      <node id="4034">
        <label>array</label>
      </node>
      <node id="4069">
        <label>arrow/util/basic_decimal.h</label>
        <link refid="basic__decimal_8h"/>
        <childnode refid="4034" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4042" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4051">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
      </node>
      <node id="4068">
        <label>arrow/util/decimal.h</label>
        <link refid="util_2decimal_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4038" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4069" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
      </node>
      <node id="4071">
        <label>arrow/vendored/optional.hpp</label>
      </node>
      <node id="4021">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="4027">
        <label>iosfwd</label>
      </node>
      <node id="4005">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4012" relation="include">
        </childnode>
        <childnode refid="4062" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4064" relation="include">
        </childnode>
        <childnode refid="4065" relation="include">
        </childnode>
      </node>
      <node id="4054">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="4045" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4055" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4049">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="4038">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="4039" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
      </node>
      <node id="4046">
        <label>climits</label>
      </node>
      <node id="4067">
        <label>arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4038" relation="include">
        </childnode>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
        <childnode refid="4068" relation="include">
        </childnode>
        <childnode refid="4064" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4043">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
      </node>
      <node id="4044">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="4045" relation="include">
        </childnode>
        <childnode refid="4046" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4038" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4048" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
        <childnode refid="4050" relation="include">
        </childnode>
      </node>
      <node id="4009">
        <label>type_traits</label>
      </node>
      <node id="4006">
        <label>algorithm</label>
      </node>
      <node id="4016">
        <label>cstring</label>
      </node>
      <node id="4028">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4029" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4008">
        <label>memory</label>
      </node>
      <node id="4061">
        <label>arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
      </node>
      <node id="4023">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="4015" relation="include">
        </childnode>
      </node>
      <node id="4042">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="4009" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classarrow_1_1compute_1_1_taker" prot="public">arrow::compute::Taker</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_range_index_sequence" prot="public">arrow::compute::RangeIndexSequence</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_array_index_sequence" prot="public">arrow::compute::ArrayIndexSequence</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl" prot="public">arrow::compute::TakerImpl</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, NullType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_list_taker_impl" prot="public">arrow::compute::ListTakerImpl</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_list_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, ListType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_large_list_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, LargeListType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_map_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, MapType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, FixedSizeListType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, StructType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, UnionType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, DictionaryType &gt;</innerclass>
    <innerclass refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4" prot="public">arrow::compute::TakerImpl&lt; IndexSequence, ExtensionType &gt;</innerclass>
    <innerclass refid="structarrow_1_1compute_1_1_taker_make_impl" prot="public">arrow::compute::TakerMakeImpl</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1compute">arrow::compute</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder_8h" kindref="compound">arrow/builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">arrow/compute/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__traits_8h" kindref="compound">arrow/type_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bit__util_8h" kindref="compound">arrow/util/bit_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="checked__cast_8h" kindref="compound">arrow/util/checked_cast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2logging_8h" kindref="compound">arrow/util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="visitor__inline_8h" kindref="compound">arrow/visitor_inline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">compute<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::checked_cast;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::checked_pointer_cast;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ade436c20161be56a69cde0c8e044bd0e" kindref="member">enable_if_not_base_binary</ref><sp/>=</highlight></codeline>
<codeline lineno="43" refid="namespacearrow_1_1compute_1ade436c20161be56a69cde0c8e044bd0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1a6ffa941ae85f4dd1545a9fad796324c6" kindref="member">enable_if_t&lt;!std::is_base_of&lt;BaseBinaryType, T&gt;::value</ref>,<sp/>R&gt;;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>non-binary<sp/>builders,<sp/>use<sp/>regular<sp/>value<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Builder,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ade436c20161be56a69cde0c8e044bd0e" kindref="member">enable_if_not_base_binary&lt;typename Builder::TypeClass, Status&gt;</ref><sp/>UnsafeAppend(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>Builder*<sp/>builder,<sp/><ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref>&amp;&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>builder-&gt;UnsafeAppend(std::forward&lt;Scalar&gt;(value));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>binary<sp/>builders,<sp/>need<sp/>to<sp/>reserve<sp/>byte<sp/>storage<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Builder&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a5adfa6f41eb212d569e8c644b9815bd8" kindref="member">enable_if_base_binary&lt;typename Builder::TypeClass, Status&gt;</ref><sp/>UnsafeAppend(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Builder*<sp/>builder,<sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(builder-&gt;ReserveData(static_cast&lt;int64_t&gt;(value.size())));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>builder-&gt;UnsafeAppend(value);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SomeIndicesNull,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SomeValuesNull,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NeverOutOfBounds,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="69" refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(IndexSequence<sp/>indices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>Visitor&amp;&amp;<sp/>vis)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>indices.length();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index_valid<sp/>=<sp/>indices.Next();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SomeIndicesNull<sp/>&amp;&amp;<sp/>!index_valid.second)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(vis(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>index_valid.first;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NeverOutOfBounds)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>values.<ref refid="classarrow_1_1_array_1a49c7fb3f73d2d43e7338591c5a8bd8bf" kindref="member">length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a271ce890dfa95b2d9a29c181050b8d9c" kindref="member">Status::IndexError</ref>(</highlight><highlight class="stringliteral">&quot;take<sp/>index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1aece88ac235225ad03cf77868a931cc83" kindref="member">DCHECK_GE</ref>(index,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1ac38ad2de0753ea2ed31f4930eca0f566" kindref="member">DCHECK_LT</ref>(index,<sp/>values.<ref refid="classarrow_1_1_array_1a49c7fb3f73d2d43e7338591c5a8bd8bf" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid<sp/>=<sp/>!SomeValuesNull<sp/>||<sp/>values.<ref refid="classarrow_1_1_array_1ae554bfb313cd6b161f63fb2966dbd662" kindref="member">IsValid</ref>(index);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(vis(index,<sp/>is_valid));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SomeIndicesNull,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SomeValuesNull,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="95" refid="namespacearrow_1_1compute_1a8cdcf44c088f89cf0c2ea88bcac9f9b2" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(IndexSequence<sp/>indices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>Visitor&amp;&amp;<sp/>vis)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.never_out_of_bounds())<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;SomeIndicesNull,<sp/>SomeValuesNull,<sp/>true&gt;(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices,<sp/>values,<sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;SomeIndicesNull,<sp/>SomeValuesNull,<sp/>false&gt;(indices,<sp/>values,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SomeIndicesNull,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="105" refid="namespacearrow_1_1compute_1abdf5e5f83e0bcd94bec510d8befbfaff" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(IndexSequence<sp/>indices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>Visitor&amp;&amp;<sp/>vis)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.<ref refid="classarrow_1_1_array_1a0537d3b69a889b951e88be2fe9f3d96a" kindref="member">null_count</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;SomeIndicesNull,<sp/>false&gt;(indices,<sp/>values,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;SomeIndicesNull,<sp/>true&gt;(indices,<sp/>values,<sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="114" refid="namespacearrow_1_1compute_1a22e30e069b176830d83b3175738735fc" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(IndexSequence<sp/>indices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>Visitor&amp;&amp;<sp/>vis)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.null_count()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;false&gt;(indices,<sp/>values,<sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitIndices&lt;true&gt;(indices,<sp/>values,<sp/>std::forward&lt;Visitor&gt;(vis));</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>for<sp/>gathering<sp/>values<sp/>from<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="123" refid="classarrow_1_1compute_1_1_taker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125" refid="classarrow_1_1compute_1_1_taker_1a65a0c52cbd68141029bf12610d4c95c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a65a0c52cbd68141029bf12610d4c95c4" kindref="member">Taker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type)<sp/>:<sp/><ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>(type)<sp/>{}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1ad5830b3d718a2ffe42515cfd2731b7a8" kindref="member">~Taker</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>this<sp/>taker<sp/>including<sp/>constructing<sp/>any<sp/>children,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>called<sp/>once<sp/>after<sp/>construction<sp/>before<sp/>any<sp/>other<sp/>methods<sp/>are<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classarrow_1_1compute_1_1_taker_1aac186bd69dfcb58f439f95e85c7d6594" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1aac186bd69dfcb58f439f95e85c7d6594" kindref="member">Init</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>this<sp/>Taker<sp/>and<sp/>set<sp/>FunctionContext<sp/>for<sp/>taking<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>called<sp/>each<sp/>time<sp/>the<sp/>FunctionContext<sp/>may<sp/>have<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gather<sp/>elements<sp/>from<sp/>an<sp/>array<sp/>at<sp/>the<sp/>provided<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assemble<sp/>an<sp/>array<sp/>of<sp/>all<sp/>gathered<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>factory;<sp/>the<sp/>output<sp/>Taker<sp/>will<sp/>support<sp/>gathering<sp/>values<sp/>of<sp/>the<sp/>given<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Make</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,<sp/>std::unique_ptr&lt;Taker&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>static_assert(std::is_literal_type&lt;IndexSequence&gt;::value,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>sequences<sp/>must<sp/>be<sp/>literal<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>static_assert(std::is_copy_constructible&lt;IndexSequence&gt;::value,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>sequences<sp/>must<sp/>be<sp/>copy<sp/>constructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>static_assert(std::is_same&lt;decltype(std::declval&lt;IndexSequence&gt;().Next()),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;int64_t,<sp/>bool&gt;&gt;::value,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>index<sp/>sequence<sp/>must<sp/>yield<sp/>pairs<sp/>of<sp/>indices:int64_t,<sp/>validity:bool.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>static_assert(std::is_same&lt;decltype(std::declval&lt;const<sp/>IndexSequence&gt;().length()),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&gt;::value,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>index<sp/>sequence<sp/>must<sp/>provide<sp/>its<sp/>length.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>static_assert(std::is_same&lt;decltype(std::declval&lt;const<sp/>IndexSequence&gt;().null_count()),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&gt;::value,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>index<sp/>sequence<sp/>must<sp/>provide<sp/>the<sp/>number<sp/>of<sp/>nulls<sp/>it<sp/>will<sp/>take.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;decltype(std::declval&lt;const<sp/>IndexSequence&gt;().never_out_of_bounds()),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::value,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>sequences<sp/>must<sp/>declare<sp/>whether<sp/>bounds<sp/>checking<sp/>is<sp/>necessary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;decltype(std::declval&lt;IndexSequence&gt;().set_never_out_of_bounds()),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::value,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>index<sp/>sequence<sp/>must<sp/>support<sp/>ignoring<sp/>bounds<sp/>checking.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Builder&gt;</highlight></codeline>
<codeline lineno="176" refid="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" kindref="member">MakeBuilder</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>std::unique_ptr&lt;Builder&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ArrayBuilder&gt;<sp/>builder;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="namespacearrow_1a08900491dab187842698af9cca156b17" kindref="member">arrow::MakeBuilder</ref>(pool,<sp/><ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>&amp;builder));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(checked_cast&lt;Builder*&gt;(builder.release()));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>IndexSequence<sp/>which<sp/>yields<sp/>indices<sp/>from<sp/>a<sp/>specified<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>yields<sp/>null<sp/>for<sp/>the<sp/>length<sp/>of<sp/>that<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classarrow_1_1compute_1_1_range_index_sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_range_index_sequence" kindref="compound">RangeIndexSequence</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190" refid="classarrow_1_1compute_1_1_range_index_sequence_1a853d208ac531cd05c0653a08cab75365" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1a853d208ac531cd05c0653a08cab75365" kindref="member">never_out_of_bounds</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="191" refid="classarrow_1_1compute_1_1_range_index_sequence_1a595a53d78c06c367f91fa4f0868010ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1a595a53d78c06c367f91fa4f0868010ac" kindref="member">set_never_out_of_bounds</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence" kindref="compound">RangeIndexSequence</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classarrow_1_1compute_1_1_range_index_sequence_1aa59e435a8727c52be9be9d940d53f1f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1aa59e435a8727c52be9be9d940d53f1f0" kindref="member">RangeIndexSequence</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid,<sp/>int64_t<sp/>offset,<sp/>int64_t<sp/>length)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>is_valid_(is_valid),<sp/>index_(offset),<sp/>length_(length)<sp/>{}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classarrow_1_1compute_1_1_range_index_sequence_1a81b43fd17e0623abf398f3ade8aaadd5" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;int64_t,<sp/>bool&gt;<sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1a81b43fd17e0623abf398f3ade8aaadd5" kindref="member">Next</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(index_++,<sp/>is_valid_);<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classarrow_1_1compute_1_1_range_index_sequence_1ae14cfafb83fb3c295b77195e6189b28a" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1ae14cfafb83fb3c295b77195e6189b28a" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length_;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classarrow_1_1compute_1_1_range_index_sequence_1a85693dd7badb2f6b57c81ff1eb3ad963" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence_1a85693dd7badb2f6b57c81ff1eb3ad963" kindref="member">null_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_valid_<sp/>?<sp/>0<sp/>:<sp/>length_;<sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>int64_t<sp/>index_<sp/>=<sp/>0,<sp/>length_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>IndexSequence<sp/>which<sp/>yields<sp/>the<sp/>values<sp/>of<sp/>an<sp/>Array<sp/>of<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType&gt;</highlight></codeline>
<codeline lineno="211" refid="classarrow_1_1compute_1_1_array_index_sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_array_index_sequence" kindref="compound">ArrayIndexSequence</ref><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="213" refid="classarrow_1_1compute_1_1_array_index_sequence_1a3fad23e949d1c79ca35514e337a7623b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a3fad23e949d1c79ca35514e337a7623b" kindref="member">never_out_of_bounds</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>never_out_of_bounds_;<sp/>}</highlight></codeline>
<codeline lineno="214" refid="classarrow_1_1compute_1_1_array_index_sequence_1a00f2939cc915a3d868b58d380a31945d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a00f2939cc915a3d868b58d380a31945d" kindref="member">set_never_out_of_bounds</ref>()<sp/>{<sp/>never_out_of_bounds_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence" kindref="compound">ArrayIndexSequence</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classarrow_1_1compute_1_1_array_index_sequence_1af19ba5f485053a7ca4bf1ba67507367e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1af19ba5f485053a7ca4bf1ba67507367e" kindref="member">ArrayIndexSequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>indices)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>indices_(&amp;checked_cast&lt;const<sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">NumericArray</ref>&lt;IndexType&gt;&amp;&gt;(indices))<sp/>{}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classarrow_1_1compute_1_1_array_index_sequence_1a0241c8bcce86ada4bb4a1b928da04ccd" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;int64_t,<sp/>bool&gt;<sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a0241c8bcce86ada4bb4a1b928da04ccd" kindref="member">Next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices_-&gt;IsNull(index_))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++index_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(-1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(indices_-&gt;Value(index_++),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classarrow_1_1compute_1_1_array_index_sequence_1a92ec777b6571176b863008ed61435eba" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a92ec777b6571176b863008ed61435eba" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_-&gt;length();<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classarrow_1_1compute_1_1_array_index_sequence_1a717e5c34e6fedf2a60aa76b32cb9b505" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a717e5c34e6fedf2a60aa76b32cb9b505" kindref="member">null_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices_-&gt;null_count();<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_numeric_array" kindref="compound">NumericArray&lt;IndexType&gt;</ref>*<sp/>indices_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>int64_t<sp/>index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>never_out_of_bounds_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>implementation:<sp/>taking<sp/>from<sp/>a<sp/>simple<sp/>array<sp/>into<sp/>a<sp/>builder<sp/>requires<sp/>only<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>array<sp/>supports<sp/>array.GetView()<sp/>and<sp/>the<sp/>corresponding<sp/>builder<sp/>supports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>builder.UnsafeAppend(array.GetView())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="243" refid="classarrow_1_1compute_1_1_taker_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245" refid="classarrow_1_1compute_1_1_taker_impl_1acc320bf20895802827a0d46099ab1ef9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1acc320bf20895802827a0d46099ab1ef9" kindref="member">ArrayType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits&lt;T&gt;::ArrayType</ref>;</highlight></codeline>
<codeline lineno="246" refid="classarrow_1_1compute_1_1_taker_impl_1a3c76180502bc92637dace56a94237908" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1a3c76180502bc92637dace56a94237908" kindref="member">BuilderType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits&lt;T&gt;::BuilderType</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classarrow_1_1compute_1_1_taker_impl_1acd85b6e45fd6b01fac25d14cc99af29c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1acd85b6e45fd6b01fac25d14cc99af29c" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1a2aca386983ec0e6eb34e279e03c4e029" kindref="member">MakeBuilder</ref>(ctx-&gt;<ref refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" kindref="member">memory_pool</ref>(),<sp/>&amp;builder_);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classarrow_1_1compute_1_1_taker_impl_1ae8d9ff2f8ec36dce99e61572a076f8a8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1ae8d9ff2f8ec36dce99e61572a076f8a8" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_valid)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder_-&gt;UnsafeAppendNull();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1acc320bf20895802827a0d46099ab1ef9" kindref="member">ArrayType</ref>&amp;&gt;(values).GetView(index);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnsafeAppend(builder_.get(),<sp/>value);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classarrow_1_1compute_1_1_taker_impl_1a72eb485e0aaff0518266d802b6b2b5d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_1a72eb485e0aaff0518266d802b6b2b5d2" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder_-&gt;Finish(out);<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;BuilderType&gt;<sp/>builder_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gathering<sp/>from<sp/>NullArrays<sp/>is<sp/>trivial;<sp/>skip<sp/>the<sp/>builder<sp/>and<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="276" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1aff85c25c7c02239228d4a00ab4d501fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1aff85c25c7c02239228d4a00ab4d501fe" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1afca7d8e946e4555f81fc1154f02d8797" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1afca7d8e946e4555f81fc1154f02d8797" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>length_<sp/>+=<sp/>indices.length();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.never_out_of_bounds())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[](int64_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();<sp/>});</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1ae0562a611b57a3b8f8eb1fd94e794a91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_null_type_01_4_1ae0562a611b57a3b8f8eb1fd94e794a91" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_null_array" kindref="compound">NullArray</ref>(length_));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>int64_t<sp/>length_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeClass&gt;</highlight></codeline>
<codeline lineno="304" refid="classarrow_1_1compute_1_1_list_taker_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306" refid="classarrow_1_1compute_1_1_list_taker_impl_1ae63a6737bace67551e393d1ab80ace59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1ae63a6737bace67551e393d1ab80ace59" kindref="member">offset_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeClass::offset_type;</highlight></codeline>
<codeline lineno="307" refid="classarrow_1_1compute_1_1_list_taker_impl_1aa23ee612bf3756d7bf640672f0dd133c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1aa23ee612bf3756d7bf640672f0dd133c" kindref="member">ArrayType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits&lt;TypeClass&gt;::ArrayType</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1ac02d7740af2f12326d1a1608c369214f" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>list_type<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TypeClass&amp;&gt;(*this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Taker&lt;RangeIndexSequence&gt;::Make</ref>(list_type.value_type(),<sp/>&amp;value_taker_);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1a9b41ca8c778827f20ebb1ff5328bb57e" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>=<sp/>ctx-&gt;<ref refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" kindref="member">memory_pool</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4" kindref="compound">TypedBufferBuilder&lt;bool&gt;</ref>(pool));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>offset_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder&lt;offset_type&gt;</ref>(pool));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(offset_builder_-&gt;Append(0));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_taker_-&gt;SetContext(ctx);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1ab666934d586377f8c081c2fe111042ed" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>list_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1aa23ee612bf3756d7bf640672f0dd133c" kindref="member">ArrayType</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(offset_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1ae63a6737bace67551e393d1ab80ace59" kindref="member">offset_type</ref><sp/>offset<sp/>=<sp/>offset_builder_-&gt;data()[offset_builder_-&gt;length()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_-&gt;UnsafeAppend(is_valid);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_valid)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>list_array.value_length(index);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence" kindref="compound">RangeIndexSequence</ref><sp/>value_indices(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>list_array.value_offset(index),</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_array.value_length(index));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(value_taker_-&gt;Take(*list_array.values(),<sp/>value_indices));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset_builder_-&gt;UnsafeAppend(offset);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1a096ea4efb7d423c71cc3d86b41e0cd24" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_count<sp/>=<sp/>null_bitmap_builder_-&gt;false_count();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>null_bitmap_builder_-&gt;length();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>offsets,<sp/>null_bitmap;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Finish(&amp;null_bitmap));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(offset_builder_-&gt;Finish(&amp;offsets));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/>taken_values;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(value_taker_-&gt;Finish(&amp;taken_values));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1aa23ee612bf3756d7bf640672f0dd133c" kindref="member">ArrayType</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>length,<sp/>offsets,<sp/>taken_values,<sp/>null_bitmap,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_count));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classarrow_1_1compute_1_1_list_taker_impl_1acc43e85dba39420e817a1ad570a29eaf" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;bool&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1acc43e85dba39420e817a1ad570a29eaf" kindref="member">null_bitmap_builder_</ref>;</highlight></codeline>
<codeline lineno="365" refid="classarrow_1_1compute_1_1_list_taker_impl_1ae2fae657fb1a6e9aef2c9ffa3264c7ea" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;offset_type&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1ae2fae657fb1a6e9aef2c9ffa3264c7ea" kindref="member">offset_builder_</ref>;</highlight></codeline>
<codeline lineno="366" refid="classarrow_1_1compute_1_1_list_taker_impl_1a64022651335c48f5bade0d1b2db4ba31" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Taker&lt;RangeIndexSequence&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl_1a64022651335c48f5bade0d1b2db4ba31" kindref="member">value_taker_</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="370" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_list_type" kindref="compound">ListType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl</ref>&lt;IndexSequence,<sp/>ListType&gt;<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl&lt;IndexSequence, ListType&gt;::ListTakerImpl</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="375" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_large_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_large_list_type" kindref="compound">LargeListType</ref>&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl</ref>&lt;IndexSequence,<sp/>LargeListType&gt;<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl&lt;IndexSequence, LargeListType&gt;::ListTakerImpl</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="381" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_map_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_map_type" kindref="compound">MapType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl</ref>&lt;IndexSequence,<sp/>MapType&gt;<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_list_taker_impl" kindref="compound">ListTakerImpl&lt;IndexSequence, MapType&gt;::ListTakerImpl</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="386" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_fixed_size_list_type" kindref="compound">FixedSizeListType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a8181c133e5956be4de19b5ad0f4148ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a8181c133e5956be4de19b5ad0f4148ad" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>list_type<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_list_type" kindref="compound">FixedSizeListType</ref>&amp;&gt;(*this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Taker&lt;RangeIndexSequence&gt;::Make</ref>(list_type.value_type(),<sp/>&amp;value_taker_);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a239e3ee6dff94390ff424685f0136717" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a239e3ee6dff94390ff424685f0136717" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>=<sp/>ctx-&gt;<ref refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" kindref="member">memory_pool</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4" kindref="compound">TypedBufferBuilder&lt;bool&gt;</ref>(pool));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_taker_-&gt;SetContext(ctx);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a7dc9d799cf3fe131c3f1bddb5cc216ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a7dc9d799cf3fe131c3f1bddb5cc216ad" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>list_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_list_array" kindref="compound">FixedSizeListArray</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>list_size<sp/>=<sp/>list_array.<ref refid="classarrow_1_1_fixed_size_list_array_1a54c107103f0a45ac7bd4679c3c81ee85" kindref="member">list_type</ref>()-&gt;<ref refid="classarrow_1_1_fixed_size_list_type_1ad4548f4e0c6706babea2b47b363cca83" kindref="member">list_size</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_-&gt;UnsafeAppend(is_valid);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>FixedSizeList,<sp/>null<sp/>lists<sp/>are<sp/>not<sp/>empty<sp/>(they<sp/>also<sp/>span<sp/>a<sp/>segment<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list_size<sp/>in<sp/>the<sp/>child<sp/>data),<sp/>so<sp/>we<sp/>must<sp/>append<sp/>to<sp/>value_taker_<sp/>even<sp/>if<sp/>!is_valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1compute_1_1_range_index_sequence" kindref="compound">RangeIndexSequence</ref><sp/>value_indices(is_valid,<sp/>list_array.value_offset(index),</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_size);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_taker_-&gt;Take(*list_array.values(),<sp/>value_indices);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1ad82e52c36064599d6ecde5a7fe9098f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1ad82e52c36064599d6ecde5a7fe9098f9" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_count<sp/>=<sp/>null_bitmap_builder_-&gt;false_count();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>null_bitmap_builder_-&gt;length();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>null_bitmap;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Finish(&amp;null_bitmap));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/>taken_values;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(value_taker_-&gt;Finish(&amp;taken_values));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_fixed_size_list_array" kindref="compound">FixedSizeListArray</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>length,<sp/>taken_values,<sp/>null_bitmap,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_count));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a8609f49f7e50b37bef67c81600a5f19d" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;bool&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1a8609f49f7e50b37bef67c81600a5f19d" kindref="member">null_bitmap_builder_</ref>;</highlight></codeline>
<codeline lineno="436" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1aea0bb6884ff6ba1228d4ee1ba49fb1d1" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Taker&lt;RangeIndexSequence&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_fixed_size_list_type_01_4_1aea0bb6884ff6ba1228d4ee1ba49fb1d1" kindref="member">value_taker_</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="440" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_struct_type" kindref="compound">StructType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a5e24d23c0bca30dc774274e7e1c7769e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a5e24d23c0bca30dc774274e7e1c7769e" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>children_.resize(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children());</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Make</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;child(i)-&gt;type(),<sp/>&amp;children_[i]));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a9c1726b02f7e0ee53ead4c575c6bbace" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a9c1726b02f7e0ee53ead4c575c6bbace" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4" kindref="compound">TypedBufferBuilder&lt;bool&gt;</ref>(ctx-&gt;<ref refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" kindref="member">memory_pool</ref>()));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" kindref="member">SetContext</ref>(ctx));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a310f7b446d0a2669353a3586af43e9f1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a310f7b446d0a2669353a3586af43e9f1" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_-&gt;UnsafeAppend(is_valid);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>checking<sp/>was<sp/>done<sp/>while<sp/>appending<sp/>to<sp/>the<sp/>null<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.set_never_out_of_bounds();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>struct_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_struct_array" kindref="compound">StructArray</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" kindref="member">Take</ref>(*struct_array.field(i),<sp/>indices));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a14f0176d9c931f8f2fcf54124d82af00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a14f0176d9c931f8f2fcf54124d82af00" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_count<sp/>=<sp/>null_bitmap_builder_-&gt;false_count();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>null_bitmap_builder_-&gt;length();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>null_bitmap;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Finish(&amp;null_bitmap));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref><sp/>fields(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" kindref="member">Finish</ref>(&amp;fields[i]));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_struct_array" kindref="compound">StructArray</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>length,<sp/>std::move(fields),<sp/>null_bitmap,<sp/>null_count));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="497" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1af5d563828177b2762e7cbbb939830239" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;bool&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1af5d563828177b2762e7cbbb939830239" kindref="member">null_bitmap_builder_</ref>;</highlight></codeline>
<codeline lineno="498" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a95edc183a92b161a4829fbc96287e8cd" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Taker&lt;IndexSequence&gt;&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_struct_type_01_4_1a95edc183a92b161a4829fbc96287e8cd" kindref="member">children_</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="502" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_union_type" kindref="compound">UnionType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a1430b03d5dda7042e2cc07b721edf56a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a1430b03d5dda7042e2cc07b721edf56a" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>union_type_<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_union_type" kindref="compound">UnionType</ref>*&gt;(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>.get());</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaf747592e2e0c52a802406811b95b3a60" kindref="member">UnionMode::SPARSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sparse_children_.resize(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dense_children_.resize(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child_length_.resize(union_type_-&gt;max_type_code()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaf747592e2e0c52a802406811b95b3a60" kindref="member">UnionMode::SPARSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Make</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;child(i)-&gt;type(),</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sparse_children_[i]));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;<ref refid="classarrow_1_1compute_1_1_array_index_sequence" kindref="compound">ArrayIndexSequence&lt;Int32Type&gt;</ref>&gt;::<ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Make</ref>(</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;child(i)-&gt;type(),<sp/>&amp;dense_children_[i]));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a6c01c87731dc2a6e649a5dae3b8230bb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a6c01c87731dc2a6e649a5dae3b8230bb" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_<sp/>=<sp/>ctx-&gt;<ref refid="classarrow_1_1compute_1_1_function_context_1a6a40381868c74845a698123ce6f2a4d3" kindref="member">memory_pool</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>null_bitmap_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4" kindref="compound">TypedBufferBuilder&lt;bool&gt;</ref>(pool_));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>type_code_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder&lt;int8_t&gt;</ref>(pool_));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaef144d3c92655aa5bd51132a713b1cbc" kindref="member">UnionMode::DENSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset_builder_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder&lt;int32_t&gt;</ref>(pool_));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(child_length_.begin(),<sp/>child_length_.end(),<sp/>0);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaf747592e2e0c52a802406811b95b3a60" kindref="member">UnionMode::SPARSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(sparse_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" kindref="member">SetContext</ref>(ctx));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(dense_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1a620b0ace70ae4ac4330056858a9bd121" kindref="member">SetContext</ref>(ctx));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1aa12ea96bd3d7ea1ec6415917f6bb5a7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1aa12ea96bd3d7ea1ec6415917f6bb5a7a" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>union_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_union_array" kindref="compound">UnionArray</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type_codes<sp/>=<sp/>union_array.<ref refid="classarrow_1_1_union_array_1a4f1c505593b63d8cfb4bbda98c5055dc" kindref="member">raw_type_codes</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaf747592e2e0c52a802406811b95b3a60" kindref="member">UnionMode::SPARSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(type_code_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_-&gt;UnsafeAppend(is_valid);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_code_builder_-&gt;UnsafeAppend(type_codes[index]);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>checking<sp/>was<sp/>done<sp/>while<sp/>appending<sp/>to<sp/>the<sp/>null<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.set_never_out_of_bounds();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(sparse_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" kindref="member">Take</ref>(*union_array.child(i),<sp/>indices));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gathering<sp/>from<sp/>the<sp/>offsets<sp/>into<sp/>child<sp/>arrays<sp/>is<sp/>a<sp/>bit<sp/>tricky.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>child_counts(union_type_-&gt;max_type_code()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(type_code_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap_builder_-&gt;UnsafeAppend(is_valid);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_code_builder_-&gt;UnsafeAppend(type_codes[index]);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_counts[type_codes[index]]<sp/>+=<sp/>is_valid;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>checking<sp/>was<sp/>done<sp/>while<sp/>appending<sp/>to<sp/>the<sp/>null<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.set_never_out_of_bounds();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>temporary<sp/>storage<sp/>for<sp/>the<sp/>offsets<sp/>of<sp/>all<sp/>valid<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child_offsets_storage_size<sp/>=</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::accumulate(child_counts.begin(),<sp/>child_counts.end(),<sp/>0);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="result_8h_1aaf9efe9debc83022fad249a0fa56e680" kindref="member">ARROW_ASSIGN_OR_RAISE</ref>(</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>child_offsets_storage,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(child_offsets_storage_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t),<sp/>pool_));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partition<sp/>offsets<sp/>by<sp/>type_code:<sp/>child_offset_partitions[type_code]<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>storage<sp/>for<sp/>child_counts[type_code]<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int32_t*&gt;<sp/>child_offset_partitions(child_counts.size());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child_offsets_storage_data<sp/>=<sp/>GetInt32(child_offsets_storage);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type_code<sp/>:<sp/>union_type_-&gt;type_codes())<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_offset_partitions[type_code]<sp/>=<sp/>child_offsets_storage_data;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_offsets_storage_data<sp/>+=<sp/>child_counts[type_code];</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1a41dd12c3206f67dc0b985215522c1013" kindref="member">DCHECK_EQ</ref>(child_offsets_storage_data<sp/>-<sp/>GetInt32(child_offsets_storage),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_offsets_storage_size);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>child_offsets_storage<sp/>with<sp/>the<sp/>taken<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(offset_builder_-&gt;Reserve(indices.length()));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(<ref refid="namespacearrow_1_1compute_1ac520849fea358849b66f86a378d540dd" kindref="member">VisitIndices</ref>(indices,<sp/>values,<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type_code<sp/>=<sp/>type_codes[index];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_valid)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_builder_-&gt;UnsafeAppend(child_length_[type_code]++);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*child_offset_partitions[type_code]<sp/>=<sp/>union_array.value_offset(index);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++child_offset_partitions[type_code];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_builder_-&gt;UnsafeAppend(0);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>from<sp/>each<sp/>child<sp/>at<sp/>those<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>taken_offset_begin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type_code<sp/>=<sp/>union_type_-&gt;type_codes()[i];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>child_counts[type_code];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int32Array<sp/>taken_offsets(length,<sp/>SliceBuffer(child_offsets_storage,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t)<sp/>*<sp/>taken_offset_begin,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t)<sp/>*<sp/>length));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1compute_1_1_array_index_sequence" kindref="compound">ArrayIndexSequence&lt;Int32Type&gt;</ref><sp/>child_indices(taken_offsets);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_indices.<ref refid="classarrow_1_1compute_1_1_array_index_sequence_1a00f2939cc915a3d868b58d380a31945d" kindref="member">set_never_out_of_bounds</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(dense_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ae3e664608c91a157bfcbe8fe5f750f1b" kindref="member">Take</ref>(*union_array.child(i),<sp/>child_indices));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>taken_offset_begin<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a790da9ca608d2402f7dae233c0e4e020" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a790da9ca608d2402f7dae233c0e4e020" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_count<sp/>=<sp/>null_bitmap_builder_-&gt;false_count();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>null_bitmap_builder_-&gt;length();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>null_bitmap,<sp/>type_codes;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(null_bitmap_builder_-&gt;Finish(&amp;null_bitmap));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(type_code_builder_-&gt;Finish(&amp;type_codes));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>offsets;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaef144d3c92655aa5bd51132a713b1cbc" kindref="member">UnionMode::DENSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(offset_builder_-&gt;Finish(&amp;offsets));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref><sp/>fields(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children());</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;num_children();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(union_type_-&gt;mode()<sp/>==<sp/><ref refid="structarrow_1_1_union_mode_1a98f368f8fb8a5553a17abc2fb1e76dacaf747592e2e0c52a802406811b95b3a60" kindref="member">UnionMode::SPARSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(sparse_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" kindref="member">Finish</ref>(&amp;fields[i]));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(dense_children_[i]-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ac7c6c8a5f145594be007fee65d4b3812" kindref="member">Finish</ref>(&amp;fields[i]));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_union_array" kindref="compound">UnionArray</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>length,<sp/>std::move(fields),<sp/>type_codes,<sp/>offsets,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_bitmap,<sp/>null_count));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="662" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1add84c4f76a08b23d23712e21d458d87a" refkind="member"><highlight class="normal"><sp/><sp/>int32_t*<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1add84c4f76a08b23d23712e21d458d87a" kindref="member">GetInt32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">int32_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b-&gt;mutable_data());</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a567c39ca32a3fee2c4b03d0dda6ed8e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_union_type" kindref="compound">UnionType</ref>*<sp/>union_type_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1ad28a34826855b2be1c93753a9eec9a1a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a7e03f57c1b29729d88f9ab6f93958c14" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;bool&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a7e03f57c1b29729d88f9ab6f93958c14" kindref="member">null_bitmap_builder_</ref>;</highlight></codeline>
<codeline lineno="669" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2878c66cf597cb25713b71c575e4ac03" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;int8_t&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2878c66cf597cb25713b71c575e4ac03" kindref="member">type_code_builder_</ref>;</highlight></codeline>
<codeline lineno="670" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a79adde1169e92e8f5d6b82a2596ff846" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypedBufferBuilder&lt;int32_t&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a79adde1169e92e8f5d6b82a2596ff846" kindref="member">offset_builder_</ref>;</highlight></codeline>
<codeline lineno="671" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a646acd4e1f1315267d5c50f4742d85bd" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Taker&lt;IndexSequence&gt;&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a646acd4e1f1315267d5c50f4742d85bd" kindref="member">sparse_children_</ref>;</highlight></codeline>
<codeline lineno="672" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1afaa9ecfb43e4c6a48c848edeaaab4b8c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Taker&lt;ArrayIndexSequence&lt;Int32Type&gt;&gt;&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1afaa9ecfb43e4c6a48c848edeaaab4b8c" kindref="member">dense_children_</ref>;</highlight></codeline>
<codeline lineno="673" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2f0fb1291ebfdee1cc1e8785efc45ead" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int32_t&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_union_type_01_4_1a2f0fb1291ebfdee1cc1e8785efc45ead" kindref="member">child_length_</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">};</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>taking<sp/>from<sp/>a<sp/>DictionaryArray<sp/>is<sp/>accomplished<sp/>by<sp/>taking<sp/>from<sp/>its<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="678" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_dictionary_type" kindref="compound">DictionaryType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a1bd9cc1c45a890802ad3cf5428948f42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a1bd9cc1c45a890802ad3cf5428948f42" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dict_type<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_type" kindref="compound">DictionaryType</ref>&amp;&gt;(*this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Taker&lt;IndexSequence&gt;::Make</ref>(dict_type.index_type(),<sp/>&amp;index_taker_);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4a56234abcb638c37e7613e00bf0679c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4a56234abcb638c37e7613e00bf0679c" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>dictionary_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_taker_-&gt;SetContext(ctx);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1ab7037ca71014d5d828cabc3e40a483df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1ab7037ca71014d5d828cabc3e40a483df" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dict_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_array" kindref="compound">DictionaryArray</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionary_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dictionary_<sp/>!=<sp/>dict_array.dictionary())<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" kindref="member">Status::NotImplemented</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;taking<sp/>from<sp/>DictionaryArrays<sp/>with<sp/>different<sp/>dictionaries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionary_<sp/>=<sp/>dict_array.dictionary();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_taker_-&gt;Take(*dict_array.indices(),<sp/>indices);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4ad9ab4f13000caefffd225fbd3e964d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1a4ad9ab4f13000caefffd225fbd3e964d" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/>taken_indices;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(index_taker_-&gt;Finish(&amp;taken_indices));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_dictionary_array" kindref="compound">DictionaryArray</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>taken_indices,<sp/>dictionary_));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="713" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1ae1870be2b309ade0481c9f7014f8ac43" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1ae1870be2b309ade0481c9f7014f8ac43" kindref="member">dictionary_</ref>;</highlight></codeline>
<codeline lineno="714" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1acf65e5cf8f42699339c089f8f5ff9baa" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Taker&lt;IndexSequence&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_dictionary_type_01_4_1acf65e5cf8f42699339c089f8f5ff9baa" kindref="member">index_taker_</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">};</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>taking<sp/>from<sp/>an<sp/>ExtensionArray<sp/>is<sp/>accomplished<sp/>by<sp/>taking<sp/>from<sp/>its<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="719" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl</ref>&lt;IndexSequence,<sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker</ref>&lt;IndexSequence&gt;<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker" kindref="compound">Taker&lt;IndexSequence&gt;::Taker</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a81dbefe26681c67f700f4c5e300d4eee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a81dbefe26681c67f700f4c5e300d4eee" kindref="member">Init</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ext_type<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>&amp;&gt;(*this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Taker&lt;IndexSequence&gt;::Make</ref>(ext_type.storage_type(),<sp/>&amp;storage_taker_);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a0a35f895d21badb59f207cdce46474cc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a0a35f895d21badb59f207cdce46474cc" kindref="member">SetContext</ref>(<ref refid="classarrow_1_1compute_1_1_function_context" kindref="compound">FunctionContext</ref>*<sp/>ctx)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_taker_-&gt;SetContext(ctx);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a98302863bfc45d86a38dfe932deb7fd5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1a98302863bfc45d86a38dfe932deb7fd5" kindref="member">Take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref>&amp;<sp/>values,<sp/>IndexSequence<sp/>indices)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arrow_2util_2logging_8h_1afbcf38b795bbece32e47b67a15463fd5" kindref="member">DCHECK</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>-&gt;Equals(values.<ref refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" kindref="member">type</ref>()));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ext_array<sp/>=<sp/>checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref>&amp;&gt;(values);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_taker_-&gt;Take(*ext_array.storage(),<sp/>indices);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1abf627286207bd1a477a52a1e0840da70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1abf627286207bd1a477a52a1e0840da70" kindref="member">Finish</ref>(std::shared_ptr&lt;Array&gt;*<sp/>out)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/>taken_storage;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(storage_taker_-&gt;Finish(&amp;taken_storage));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref>(this-&gt;<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>,<sp/>taken_storage));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="746" refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1ad0a4da94f8f7b1be93e7f7ed4ed6335d" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Taker&lt;IndexSequence&gt;&gt;<sp/><ref refid="classarrow_1_1compute_1_1_taker_impl_3_01_index_sequence_00_01_extension_type_01_4_1ad0a4da94f8f7b1be93e7f7ed4ed6335d" kindref="member">storage_taker_</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">};</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="750" refid="structarrow_1_1compute_1_1_taker_make_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1compute_1_1_taker_make_impl" kindref="compound">TakerMakeImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="752" refid="structarrow_1_1compute_1_1_taker_make_impl_1a02f3bea68d7979d31e8b8a91e2e46ead" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structarrow_1_1compute_1_1_taker_make_impl_1a02f3bea68d7979d31e8b8a91e2e46ead" kindref="member">Visit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>out_-&gt;reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1compute_1_1_taker_impl" kindref="compound">TakerImpl&lt;IndexSequence, T&gt;</ref>(<ref refid="classarrow_1_1compute_1_1_taker_1ab5b8e4b705e867e327fa214d599de83c" kindref="member">type_</ref>));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*out_)-&gt;Init();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="structarrow_1_1compute_1_1_taker_make_impl_1ad356aae29744cb7eb13d073681c928a7" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="structarrow_1_1compute_1_1_taker_make_impl_1ad356aae29744cb7eb13d073681c928a7" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="758" refid="structarrow_1_1compute_1_1_taker_make_impl_1a10f84ff4d73cd14fd17356d5e53c16b5" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Taker&lt;IndexSequence&gt;&gt;*<sp/><ref refid="structarrow_1_1compute_1_1_taker_make_impl_1a10f84ff4d73cd14fd17356d5e53c16b5" kindref="member">out_</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal">};</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexSequence&gt;</highlight></codeline>
<codeline lineno="762" refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" refkind="member"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1compute_1_1_taker_1a60689a4cb0e145c92ed66f5c717ee846" kindref="member">Taker&lt;IndexSequence&gt;::Make</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Taker&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1compute_1_1_taker_make_impl" kindref="compound">TakerMakeImpl&lt;IndexSequence&gt;</ref><sp/>visitor{type,<sp/>out};</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a431bd46d978673b1b00afc3049776c49" kindref="member">VisitTypeInline</ref>(*type,<sp/>&amp;visitor);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/compute/kernels/take_internal.h"/>
  </compounddef>
</doxygen>
