<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classplasma_1_1_event_loop" kind="class" language="C++" prot="public">
    <compoundname>plasma::EventLoop</compoundname>
    <includes refid="events_8h" local="no">plasma/events.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classplasma_1_1_event_loop_1afb1f64d30a1d3bb9de511f8126583aae" prot="public" static="no">
        <type>std::function&lt; void(int)&gt;</type>
        <definition>using plasma::EventLoop::FileCallback =  std::function&lt;void(int)&gt;</definition>
        <argsstring></argsstring>
        <name>FileCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="51" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classplasma_1_1_event_loop_1a11ef4f6b6c35526f9813190d86ad3093" prot="public" static="no">
        <type>std::function&lt; int(int64_t)&gt;</type>
        <definition>using plasma::EventLoop::TimerCallback =  std::function&lt;int(int64_t)&gt;</definition>
        <argsstring></argsstring>
        <name>TimerCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="57" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classplasma_1_1_event_loop_1a31a30e7d0e613165b6c448ae832a2856" prot="private" static="no" mutable="no">
        <type><ref refid="structae_event_loop" kindref="compound">aeEventLoop</ref> *</type>
        <definition>aeEventLoop* plasma::EventLoop::loop_</definition>
        <argsstring></argsstring>
        <name>loop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="103" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_event_loop_1adfd3f1ec08c6aeceb982269decc0473b" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int, std::unique_ptr&lt; <ref refid="classplasma_1_1_event_loop_1afb1f64d30a1d3bb9de511f8126583aae" kindref="member">FileCallback</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;int, std::unique_ptr&lt;FileCallback&gt; &gt; plasma::EventLoop::file_callbacks_</definition>
        <argsstring></argsstring>
        <name>file_callbacks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="104" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplasma_1_1_event_loop_1a653acfbf9f2b62f2908065d6d9c1e55e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int64_t, std::unique_ptr&lt; <ref refid="classplasma_1_1_event_loop_1a11ef4f6b6c35526f9813190d86ad3093" kindref="member">TimerCallback</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;int64_t, std::unique_ptr&lt;TimerCallback&gt; &gt; plasma::EventLoop::timer_callbacks_</definition>
        <argsstring></argsstring>
        <name>timer_callbacks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="105" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a7e9f4a50545e3cc50e380bf75114b45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>plasma::EventLoop::EventLoop</definition>
        <argsstring>()</argsstring>
        <name>EventLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1acef49c97b4766e6b0c7402a148f1f993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>plasma::EventLoop::~EventLoop</definition>
        <argsstring>()</argsstring>
        <name>~EventLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1ac7c31f1048cae6bdcee2c9fdf7ca66a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool plasma::EventLoop::AddFileEvent</definition>
        <argsstring>(int fd, int events, const FileCallback &amp;callback)</argsstring>
        <name>AddFileEvent</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <param>
          <type>const <ref refid="classplasma_1_1_event_loop_1afb1f64d30a1d3bb9de511f8126583aae" kindref="member">FileCallback</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Add a new file event handler to the event loop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor we are listening to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags for events we are listening to (read or write). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback that will be called when the event happens. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the event handler was added successfully. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a217ecc428989208ef94a226be196cc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::EventLoop::RemoveFileEvent</definition>
        <argsstring>(int fd)</argsstring>
        <name>RemoveFileEvent</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Remove a file event handler from the event loop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor of the event handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1aedbad19a51209f3faa68e00cbde087da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t plasma::EventLoop::AddTimer</definition>
        <argsstring>(int64_t timeout, const TimerCallback &amp;callback)</argsstring>
        <name>AddTimer</name>
        <param>
          <type>int64_t</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>const <ref refid="classplasma_1_1_event_loop_1a11ef4f6b6c35526f9813190d86ad3093" kindref="member">TimerCallback</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Register a handler that will be called after a time slice of &quot;timeout&quot; milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeout in milliseconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback for the timeout. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ID of the newly created timer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1afbf8709d3d559e14494b950fff59d6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int plasma::EventLoop::RemoveTimer</definition>
        <argsstring>(int64_t timer_id)</argsstring>
        <name>RemoveTimer</name>
        <param>
          <type>int64_t</type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
<para>Remove a timer handler from the event loop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the timer that is to be removed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ae.c error code. TODO(pcm): needs to be standardized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a0165bb6fa7ca0753e7f2408f6d586c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::EventLoop::Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
<para>Run the event loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a3136943dd0f8dc3680b7801267d2c2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::EventLoop::Stop</definition>
        <argsstring>()</argsstring>
        <name>Stop</name>
        <briefdescription>
<para>Stop the event loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a3ea81af287795772520bb93bdd5704f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma::EventLoop::Shutdown</definition>
        <argsstring>()</argsstring>
        <name>Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classplasma_1_1_event_loop_1ad39990e1f8102259a294b4c0d38b95bb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void plasma::EventLoop::FileEventCallback</definition>
        <argsstring>(aeEventLoop *loop, int fd, void *context, int events)</argsstring>
        <name>FileEventCallback</name>
        <param>
          <type><ref refid="structae_event_loop" kindref="compound">aeEventLoop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_event_loop_1a4882e3d4a283cc62a4241564e01175d4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int plasma::EventLoop::TimerEventCallback</definition>
        <argsstring>(aeEventLoop *loop, TimerID timer_id, void *context)</argsstring>
        <name>TimerEventCallback</name>
        <param>
          <type><ref refid="structae_event_loop" kindref="compound">aeEventLoop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="namespaceplasma_1a62f124d2399362309e83ba8344cd155b" kindref="member">TimerID</ref></type>
          <declname>timer_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/events.h" line="101" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/plasma/events.h" line="45" column="1" bodyfile="/arrow/cpp/src/plasma/events.h" bodystart="45" bodyend="106"/>
    <listofallmembers>
      <member refid="classplasma_1_1_event_loop_1ac7c31f1048cae6bdcee2c9fdf7ca66a0" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>AddFileEvent</name></member>
      <member refid="classplasma_1_1_event_loop_1aedbad19a51209f3faa68e00cbde087da" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>AddTimer</name></member>
      <member refid="classplasma_1_1_event_loop_1a7e9f4a50545e3cc50e380bf75114b45b" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>EventLoop</name></member>
      <member refid="classplasma_1_1_event_loop_1adfd3f1ec08c6aeceb982269decc0473b" prot="private" virt="non-virtual"><scope>plasma::EventLoop</scope><name>file_callbacks_</name></member>
      <member refid="classplasma_1_1_event_loop_1afb1f64d30a1d3bb9de511f8126583aae" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>FileCallback</name></member>
      <member refid="classplasma_1_1_event_loop_1ad39990e1f8102259a294b4c0d38b95bb" prot="private" virt="non-virtual"><scope>plasma::EventLoop</scope><name>FileEventCallback</name></member>
      <member refid="classplasma_1_1_event_loop_1a31a30e7d0e613165b6c448ae832a2856" prot="private" virt="non-virtual"><scope>plasma::EventLoop</scope><name>loop_</name></member>
      <member refid="classplasma_1_1_event_loop_1a217ecc428989208ef94a226be196cc7f" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>RemoveFileEvent</name></member>
      <member refid="classplasma_1_1_event_loop_1afbf8709d3d559e14494b950fff59d6f3" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>RemoveTimer</name></member>
      <member refid="classplasma_1_1_event_loop_1a3ea81af287795772520bb93bdd5704f9" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>Shutdown</name></member>
      <member refid="classplasma_1_1_event_loop_1a0165bb6fa7ca0753e7f2408f6d586c12" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>Start</name></member>
      <member refid="classplasma_1_1_event_loop_1a3136943dd0f8dc3680b7801267d2c2e6" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>Stop</name></member>
      <member refid="classplasma_1_1_event_loop_1a653acfbf9f2b62f2908065d6d9c1e55e" prot="private" virt="non-virtual"><scope>plasma::EventLoop</scope><name>timer_callbacks_</name></member>
      <member refid="classplasma_1_1_event_loop_1a11ef4f6b6c35526f9813190d86ad3093" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>TimerCallback</name></member>
      <member refid="classplasma_1_1_event_loop_1a4882e3d4a283cc62a4241564e01175d4" prot="private" virt="non-virtual"><scope>plasma::EventLoop</scope><name>TimerEventCallback</name></member>
      <member refid="classplasma_1_1_event_loop_1acef49c97b4766e6b0c7402a148f1f993" prot="public" virt="non-virtual"><scope>plasma::EventLoop</scope><name>~EventLoop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
