<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_type_traits_3_01_list_type_01_4" kind="struct" language="C++" prot="public">
    <compoundname>arrow::TypeTraits&lt; ListType &gt;</compoundname>
    <derivedcompoundref refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4" prot="public" virt="non-virtual">arrow::CTypeTraits&lt; std::vector&lt; CType &gt; &gt;</derivedcompoundref>
    <includes refid="type__traits_8h" local="no">arrow/type_traits.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1aab17a5bd4ab94822e00ec5fd702671d8" prot="public" static="no">
        <type><ref refid="classarrow_1_1_list_array" kindref="compound">ListArray</ref></type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::ArrayType =  ListArray</definition>
        <argsstring></argsstring>
        <name>ArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="302" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1a9b2dbeef7548488dc453d76d03e863dd" prot="public" static="no">
        <type><ref refid="classarrow_1_1_list_builder" kindref="compound">ListBuilder</ref></type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::BuilderType =  ListBuilder</definition>
        <argsstring></argsstring>
        <name>BuilderType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="303" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1ace08a50ac6ca62bd69ea8adc0c8d5b2a" prot="public" static="no">
        <type><ref refid="structarrow_1_1_list_scalar" kindref="compound">ListScalar</ref></type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::ScalarType =  ListScalar</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="304" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1a884d779a4f886251bc0f9314735d6df4" prot="public" static="no">
        <type><ref refid="classarrow_1_1_int32_type" kindref="compound">Int32Type</ref></type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::OffsetType =  Int32Type</definition>
        <argsstring></argsstring>
        <name>OffsetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="305" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1a1f8c8e8b9dddb17662f162348ee662fb" prot="public" static="no">
        <type>Int32Array</type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::OffsetArrayType =  Int32Array</definition>
        <argsstring></argsstring>
        <name>OffsetArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="306" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1a5d77a2e18083b08f574157204220f375" prot="public" static="no">
        <type><ref refid="namespacearrow_1a031c893d8d592c7a099bb9bea3a25f86" kindref="member">Int32Builder</ref></type>
        <definition>using arrow::TypeTraits&lt; ListType &gt;::OffsetBuilderType =  Int32Builder</definition>
        <argsstring></argsstring>
        <name>OffsetBuilderType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="307" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structarrow_1_1_type_traits_3_01_list_type_01_4_1a12b61eb4fd1da8d0f5506a72e994b66a" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool arrow::TypeTraits&lt; ListType &gt;::is_parameter_free</definition>
        <argsstring></argsstring>
        <name>is_parameter_free</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type_traits.h" line="308" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4811">
        <label>arrow::TypeTraits&lt; ListType &gt;</label>
        <link refid="structarrow_1_1_type_traits_3_01_list_type_01_4"/>
      </node>
      <node id="4812">
        <label>arrow::CTypeTraits&lt; std::vector&lt; CType &gt; &gt;</label>
        <link refid="structarrow_1_1_c_type_traits_3_01std_1_1vector_3_01_c_type_01_4_01_4"/>
        <childnode refid="4811" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/arrow/cpp/src/arrow/type_traits.h" line="301" column="1" bodyfile="/arrow/cpp/src/arrow/type_traits.h" bodystart="301" bodyend="309"/>
    <listofallmembers>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1aab17a5bd4ab94822e00ec5fd702671d8" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>ArrayType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a9b2dbeef7548488dc453d76d03e863dd" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>BuilderType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a12b61eb4fd1da8d0f5506a72e994b66a" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>is_parameter_free</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a1f8c8e8b9dddb17662f162348ee662fb" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>OffsetArrayType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a5d77a2e18083b08f574157204220f375" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>OffsetBuilderType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1a884d779a4f886251bc0f9314735d6df4" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>OffsetType</name></member>
      <member refid="structarrow_1_1_type_traits_3_01_list_type_01_4_1ace08a50ac6ca62bd69ea8adc0c8d5b2a" prot="public" virt="non-virtual"><scope>arrow::TypeTraits&lt; ListType &gt;</scope><name>ScalarType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
