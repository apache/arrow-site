<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="node_8h" kind="file" language="C++">
    <compoundname>node.h</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="arrow_8h" local="yes">gandiva/arrow.h</includes>
    <includes refid="func__descriptor_8h" local="yes">gandiva/func_descriptor.h</includes>
    <includes refid="gandiva__aliases_8h" local="yes">gandiva/gandiva_aliases.h</includes>
    <includes refid="literal__holder_8h" local="yes">gandiva/literal_holder.h</includes>
    <includes refid="node__visitor_8h" local="yes">gandiva/node_visitor.h</includes>
    <includes refid="gandiva_2visibility_8h" local="yes">gandiva/visibility.h</includes>
    <includedby refid="expr__decomposer_8h" local="yes">/arrow/cpp/src/gandiva/expr_decomposer.h</includedby>
    <includedby refid="expr__validator_8h" local="yes">/arrow/cpp/src/gandiva/expr_validator.h</includedby>
    <includedby refid="function__holder__registry_8h" local="yes">/arrow/cpp/src/gandiva/function_holder_registry.h</includedby>
    <includedby refid="like__holder_8h" local="yes">/arrow/cpp/src/gandiva/like_holder.h</includedby>
    <includedby refid="random__generator__holder_8h" local="yes">/arrow/cpp/src/gandiva/random_generator_holder.h</includedby>
    <includedby refid="to__date__holder_8h" local="yes">/arrow/cpp/src/gandiva/to_date_holder.h</includedby>
    <incdepgraph>
      <node id="17742">
        <label>atomic</label>
      </node>
      <node id="17733">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
      </node>
      <node id="17761">
        <label>limits</label>
      </node>
      <node id="17773">
        <label>arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17762" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17736">
        <label>cstdint</label>
      </node>
      <node id="17775">
        <label>arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17776" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
      </node>
      <node id="17762">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17763" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17755">
        <label>endian.h</label>
      </node>
      <node id="17779">
        <label>arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
      </node>
      <node id="17728">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17767">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
      </node>
      <node id="17748">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17760">
        <label>cmath</label>
      </node>
      <node id="17759">
        <label>cassert</label>
      </node>
      <node id="17749">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
      </node>
      <node id="17781">
        <label>arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
      </node>
      <node id="17776">
        <label>numeric</label>
      </node>
      <node id="17785">
        <label>gandiva/func_descriptor.h</label>
        <link refid="func__descriptor_8h"/>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17740" relation="include">
        </childnode>
        <childnode refid="17786" relation="include">
        </childnode>
      </node>
      <node id="17725">
        <label>string</label>
      </node>
      <node id="17766">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="17743">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17750">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="17751" relation="include">
        </childnode>
      </node>
      <node id="17726">
        <label>unordered_set</label>
      </node>
      <node id="17752">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17738">
        <label>ostream</label>
      </node>
      <node id="17780">
        <label>arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
      </node>
      <node id="17792">
        <label>gandiva/basic_decimal_scalar.h</label>
        <link refid="basic__decimal__scalar_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17791" relation="include">
        </childnode>
      </node>
      <node id="17739">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="17770">
        <label>arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17775" relation="include">
        </childnode>
        <childnode refid="17777" relation="include">
        </childnode>
        <childnode refid="17778" relation="include">
        </childnode>
        <childnode refid="17780" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
        <childnode refid="17781" relation="include">
        </childnode>
        <childnode refid="17782" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17795">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17763">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17783">
        <label>arrow/pretty_print.h</label>
        <link refid="pretty__print_8h"/>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17754">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="17755" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
        <childnode refid="17759" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17762" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17767" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17778">
        <label>arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
      </node>
      <node id="17793">
        <label>gandiva/node_visitor.h</label>
        <link refid="node__visitor_8h"/>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17794" relation="include">
        </childnode>
        <childnode refid="17786" relation="include">
        </childnode>
      </node>
      <node id="17758">
        <label>bitset</label>
      </node>
      <node id="17768">
        <label>tuple</label>
      </node>
      <node id="17740">
        <label>gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
        <childnode refid="17783" relation="include">
        </childnode>
        <childnode refid="17784" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
      </node>
      <node id="17794">
        <label>gandiva/logging.h</label>
        <link refid="gandiva_2logging_8h"/>
        <childnode refid="17795" relation="include">
        </childnode>
      </node>
      <node id="17771">
        <label>arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
      </node>
      <node id="17723">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17740" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17787" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17793" relation="include">
        </childnode>
        <childnode refid="17786" relation="include">
        </childnode>
      </node>
      <node id="17727">
        <label>vector</label>
      </node>
      <node id="17772">
        <label>arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17777">
        <label>arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17775" relation="include">
        </childnode>
      </node>
      <node id="17747">
        <label>new</label>
      </node>
      <node id="17732">
        <label>utility</label>
      </node>
      <node id="17765">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
      </node>
      <node id="17757">
        <label>array</label>
      </node>
      <node id="17724">
        <label>sstream</label>
      </node>
      <node id="17791">
        <label>arrow/util/basic_decimal.h</label>
        <link refid="basic__decimal_8h"/>
        <childnode refid="17757" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17753">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
      </node>
      <node id="17790">
        <label>arrow/util/decimal.h</label>
        <link refid="util_2decimal_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17791" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
      </node>
      <node id="17784">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17764">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="17730">
        <label>iosfwd</label>
      </node>
      <node id="17789">
        <label>gandiva/decimal_scalar.h</label>
        <link refid="decimal__scalar_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17790" relation="include">
        </childnode>
        <childnode refid="17792" relation="include">
        </childnode>
      </node>
      <node id="17741">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17743" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17751">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="17746">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="17747" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
      </node>
      <node id="17788">
        <label>gandiva/literal_holder.h</label>
        <link refid="literal__holder_8h"/>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17789" relation="include">
        </childnode>
      </node>
      <node id="17745">
        <label>climits</label>
      </node>
      <node id="17774">
        <label>arrow/util/ubsan.h</label>
        <link refid="ubsan_8h"/>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
      </node>
      <node id="17786">
        <label>gandiva/visibility.h</label>
        <link refid="gandiva_2visibility_8h"/>
      </node>
      <node id="17744">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
        <childnode refid="17752" relation="include">
        </childnode>
      </node>
      <node id="17734">
        <label>type_traits</label>
      </node>
      <node id="17787">
        <label>gandiva/gandiva_aliases.h</label>
        <link refid="gandiva__aliases_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
      </node>
      <node id="17756">
        <label>algorithm</label>
      </node>
      <node id="17729">
        <label>cstring</label>
      </node>
      <node id="17737">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
      </node>
      <node id="17731">
        <label>memory</label>
      </node>
      <node id="17782">
        <label>arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
      </node>
      <node id="17735">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="17736" relation="include">
        </childnode>
      </node>
      <node id="17769">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="17734" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17799">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="17802">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="17799" relation="include">
        </childnode>
      </node>
      <node id="17801">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="17799" relation="include">
        </childnode>
      </node>
      <node id="17796">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="17797" relation="include">
        </childnode>
        <childnode refid="17798" relation="include">
        </childnode>
        <childnode refid="17799" relation="include">
        </childnode>
        <childnode refid="17800" relation="include">
        </childnode>
        <childnode refid="17801" relation="include">
        </childnode>
        <childnode refid="17802" relation="include">
        </childnode>
      </node>
      <node id="17800">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="17799" relation="include">
        </childnode>
      </node>
      <node id="17797">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="17798">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgandiva_1_1_node" prot="public">gandiva::Node</innerclass>
    <innerclass refid="classgandiva_1_1_literal_node" prot="public">gandiva::LiteralNode</innerclass>
    <innerclass refid="classgandiva_1_1_field_node" prot="public">gandiva::FieldNode</innerclass>
    <innerclass refid="classgandiva_1_1_function_node" prot="public">gandiva::FunctionNode</innerclass>
    <innerclass refid="classgandiva_1_1_if_node" prot="public">gandiva::IfNode</innerclass>
    <innerclass refid="classgandiva_1_1_boolean_node" prot="public">gandiva::BooleanNode</innerclass>
    <innerclass refid="classgandiva_1_1_in_expression_node" prot="public">gandiva::InExpressionNode</innerclass>
    <innernamespace refid="namespacegandiva">gandiva</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_8h" kindref="compound">gandiva/arrow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="func__descriptor_8h" kindref="compound">gandiva/func_descriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva__aliases_8h" kindref="compound">gandiva/gandiva_aliases.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="literal__holder_8h" kindref="compound">gandiva/literal_holder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="node__visitor_8h" kindref="compound">gandiva/node_visitor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gandiva_2visibility_8h" kindref="compound">gandiva/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva" kindref="compound">gandiva</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classgandiva_1_1_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classgandiva_1_1_node_1abb254ba06af6ededc023d840cb4ae4ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node_1abb254ba06af6ededc023d840cb4ae4ca" kindref="member">Node</ref>(<ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>return_type)<sp/>:<sp/>return_type_(return_type)<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classgandiva_1_1_node_1ab196d58f5e486a054ff5d49e1d932e83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_node_1ab196d58f5e486a054ff5d49e1d932e83" kindref="member">return_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_type_;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Accept(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespacegandiva_1a8180bae659d734ba6f3ee6c8eebd821e" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classgandiva_1_1_node_1a01cea0ee791882a488f56df5780874df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/><ref refid="classgandiva_1_1_node_1a01cea0ee791882a488f56df5780874df" kindref="member">return_type_</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classgandiva_1_1_literal_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_literal_node" kindref="compound">LiteralNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classgandiva_1_1_literal_node_1aed15316eeb500be707c80ac8a97d8e71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_literal_node_1aed15316eeb500be707c80ac8a97d8e71" kindref="member">LiteralNode</ref>(<ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aa31f7f112a6f719fa79ed0980df84cba" kindref="member">LiteralHolder</ref>&amp;<sp/>holder,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_null)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(type),<sp/>holder_(holder),<sp/>is_null_(is_null)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classgandiva_1_1_literal_node_1a46eca0a068d1ee52911ed8fd97afb672" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_literal_node_1a46eca0a068d1ee52911ed8fd97afb672" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classgandiva_1_1_literal_node_1a9a48d654b88cef11dc43e88127179409" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aa31f7f112a6f719fa79ed0980df84cba" kindref="member">LiteralHolder</ref>&amp;<sp/><ref refid="classgandiva_1_1_literal_node_1a9a48d654b88cef11dc43e88127179409" kindref="member">holder</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>holder_;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classgandiva_1_1_literal_node_1a59d7d3fd513215959183e9e645524e57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_literal_node_1a59d7d3fd513215959183e9e645524e57" kindref="member">is_null</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_null_;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classgandiva_1_1_literal_node_1aec1b02a78a7c14d0f14096c480b823fe" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_literal_node_1aec1b02a78a7c14d0f14096c480b823fe" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(const<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>return_type()-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_null())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::string(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="namespacegandiva_1a8180bae659d734ba6f3ee6c8eebd821e" kindref="member">gandiva::ToString</ref>(holder_);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>formatter<sp/>prints<sp/>in<sp/>decimal<sp/>can<sp/>cause<sp/>a<sp/>loss<sp/>in<sp/>precision.<sp/>so,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>in<sp/>hex.<sp/>Can&apos;t<sp/>use<sp/>hexfloat<sp/>since<sp/>gcc<sp/>4.9<sp/>doesn&apos;t<sp/>support<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_type()-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a75397800ad025678ff7803b543d4a183" kindref="member">arrow::Type::DOUBLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>arrow::util::get&lt;double&gt;(holder_);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bits;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;bits,<sp/>&amp;dvalue,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bits));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>raw(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>bits<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_type()-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a57c54c2b9d1630bc8c99b5fec4c93e58" kindref="member">arrow::Type::FLOAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fvalue<sp/>=<sp/>arrow::util::get&lt;float&gt;(holder_);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>bits;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;bits,<sp/>&amp;fvalue,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bits));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>raw(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>bits<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1aa31f7f112a6f719fa79ed0980df84cba" kindref="member">LiteralHolder</ref><sp/>holder_;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_null_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classgandiva_1_1_field_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_field_node" kindref="compound">FieldNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100" refid="classgandiva_1_1_field_node_1aca4ed5a5fb7696576d771a8b6ff6d520" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_field_node_1aca4ed5a5fb7696576d771a8b6ff6d520" kindref="member">FieldNode</ref>(<ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>)<sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(field-&gt;type()),<sp/>field_(field)<sp/>{}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classgandiva_1_1_field_node_1a44366f117b218368058155b9aba4ff1a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_field_node_1a44366f117b218368058155b9aba4ff1a" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classgandiva_1_1_field_node_1ae58aff25293b1d17991b3f71a59a8de1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_field_node_1ae58aff25293b1d17991b3f71a59a8de1" kindref="member">field</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field_;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classgandiva_1_1_field_node_1aa2e52d983187511add6e59b5ebe69d47" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_field_node_1aa2e52d983187511add6e59b5ebe69d47" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>()-&gt;type()-&gt;ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>()-&gt;name();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a8202d69b17c893247edc1c7653412438" kindref="member">FieldPtr</ref><sp/>field_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classgandiva_1_1_function_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_function_node" kindref="compound">FunctionNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_function_node" kindref="compound">FunctionNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref>&amp;<sp/>children,<sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>retType);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classgandiva_1_1_function_node_1a02e684ff69cfd649aa3a29d3d5a0aedc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_function_node_1a02e684ff69cfd649aa3a29d3d5a0aedc" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classgandiva_1_1_function_node_1a3a58ea409868bb99c8708083aa2a3ecb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_function_node_1a3a58ea409868bb99c8708083aa2a3ecb" kindref="member">descriptor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descriptor_;<sp/>}</highlight></codeline>
<codeline lineno="122" refid="classgandiva_1_1_function_node_1a4a49a23a3c1538f0cc07381ac73e8058" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref>&amp;<sp/><ref refid="classgandiva_1_1_function_node_1a4a49a23a3c1538f0cc07381ac73e8058" kindref="member">children</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children_;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classgandiva_1_1_function_node_1ac8dc5fd29986cecd4a670e9058e9e00f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_function_node_1ac8dc5fd29986cecd4a670e9058e9e00f" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>descriptor()-&gt;return_type()-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>descriptor()-&gt;name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_comma<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>children())<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skip_comma)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>child-&gt;ToString();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_comma<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>child-&gt;ToString();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref><sp/>descriptor_;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref><sp/>children_;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classgandiva_1_1_function_node_1aa38b87a6486ee7404252975468bbf836" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_function_node_1aa38b87a6486ee7404252975468bbf836" kindref="member">FunctionNode::FunctionNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref>&amp;<sp/>children,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>return_type)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(return_type),<sp/>children_(children)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1ae9130a6d76c9e050968c236e194d4550" kindref="member">DataTypeVector</ref><sp/>param_types;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>children)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>param_types.push_back(child-&gt;return_type());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>descriptor_<sp/>=<sp/><ref refid="namespacegandiva_1a8dfc53f452269d59bc6ee241ca95db75" kindref="member">FuncDescriptorPtr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_func_descriptor" kindref="compound">FuncDescriptor</ref>(name,<sp/>param_types,<sp/>return_type));</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classgandiva_1_1_if_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_if_node" kindref="compound">IfNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159" refid="classgandiva_1_1_if_node_1ab708288bfc6c41547309b4f75bf8aebd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_if_node_1ab708288bfc6c41547309b4f75bf8aebd" kindref="member">IfNode</ref>(<ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>condition,<sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>then_node,<sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>else_node,<sp/><ref refid="namespacegandiva_1a3e3446d98cf1dcf281b0d3f6c16a65d3" kindref="member">DataTypePtr</ref><sp/>result_type)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(result_type),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condition_(condition),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then_node_(then_node),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else_node_(else_node)<sp/>{}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classgandiva_1_1_if_node_1ae14023d53beeaac0859e75cc396bc0c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_if_node_1ae14023d53beeaac0859e75cc396bc0c4" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classgandiva_1_1_if_node_1a448fbf14c400e9f8409b1973def67f03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_if_node_1a448fbf14c400e9f8409b1973def67f03" kindref="member">condition</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>condition_;<sp/>}</highlight></codeline>
<codeline lineno="168" refid="classgandiva_1_1_if_node_1a121755a3806bebcb701c82fbe19ccda4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_if_node_1a121755a3806bebcb701c82fbe19ccda4" kindref="member">then_node</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>then_node_;<sp/>}</highlight></codeline>
<codeline lineno="169" refid="classgandiva_1_1_if_node_1a8dccb1573d0964c3ed921d45763ac137" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_if_node_1a8dccb1573d0964c3ed921d45763ac137" kindref="member">else_node</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>else_node_;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classgandiva_1_1_if_node_1aeef6668fbb4ffa1d985f88e1e3d23285" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_if_node_1aeef6668fbb4ffa1d985f88e1e3d23285" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>condition()-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>then_node()-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}<sp/>else<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>else_node()-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>condition_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>then_node_;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>else_node_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classgandiva_1_1_boolean_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gandiva_2visibility_8h_1a83e5755eccafecad3dfbb97ae7372caf" kindref="member">GANDIVA_EXPORT</ref><sp/><ref refid="classgandiva_1_1_boolean_node" kindref="compound">BooleanNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188" refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787baa7d73e9aab0627a1e884ead0f2c91982" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787b" kindref="member">ExprType</ref><sp/>:<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>{<sp/>AND,<sp/>OR<sp/>};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classgandiva_1_1_boolean_node_1aa0d0896755d075610d0589a9ffcf381a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_boolean_node_1aa0d0896755d075610d0589a9ffcf381a" kindref="member">BooleanNode</ref>(<ref refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787b" kindref="member">ExprType</ref><sp/>expr_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref>&amp;<sp/><ref refid="classgandiva_1_1_function_node_1a4a49a23a3c1538f0cc07381ac73e8058" kindref="member">children</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(<ref refid="namespacearrow" kindref="compound">arrow</ref>::<ref refid="group__type-factories_1ga1e585e8f1c25a9751ac9381a274df057" kindref="member">boolean</ref>()),<sp/>expr_type_(expr_type),<sp/>children_(children)<sp/>{}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classgandiva_1_1_boolean_node_1a84cce12a7ba0090a950c36f052d5d033" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_boolean_node_1a84cce12a7ba0090a950c36f052d5d033" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classgandiva_1_1_boolean_node_1a9f4cdcd4d03a9d7a7b13c2cd73ae22b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787b" kindref="member">ExprType</ref><sp/><ref refid="classgandiva_1_1_boolean_node_1a9f4cdcd4d03a9d7a7b13c2cd73ae22b5" kindref="member">expr_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expr_type_;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classgandiva_1_1_boolean_node_1a3adbe6bef1372013879de9a6afc8c4d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref>&amp;<sp/><ref refid="classgandiva_1_1_boolean_node_1a3adbe6bef1372013879de9a6afc8c4d9" kindref="member">children</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children_;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classgandiva_1_1_boolean_node_1aa4077189da14b40fb36fbe4babc3e570" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_boolean_node_1aa4077189da14b40fb36fbe4babc3e570" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>children_)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expr_type()<sp/>==<sp/><ref refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787ba3af99bccb16b74baee7b380be2ea9723" kindref="member">BooleanNode::AND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&amp;&amp;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>||<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>child-&gt;ToString();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_boolean_node_1a3464a51cbb7ae4a660ee6de4d9a9787b" kindref="member">ExprType</ref><sp/>expr_type_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1ab396cd9ee14fd2c9a0ac0bffc034bd62" kindref="member">NodeVector</ref><sp/>children_;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="223" refid="classgandiva_1_1_in_expression_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgandiva_1_1_in_expression_node" kindref="compound">InExpressionNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225" refid="classgandiva_1_1_in_expression_node_1a99d94facad207b1bfba01093c86355b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgandiva_1_1_in_expression_node_1a99d94facad207b1bfba01093c86355b5" kindref="member">InExpressionNode</ref>(<ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>eval_expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_set&lt;Type&gt;&amp;<sp/>values)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classgandiva_1_1_node" kindref="compound">Node</ref>(<ref refid="namespacearrow" kindref="compound">arrow</ref>::<ref refid="group__type-factories_1ga1e585e8f1c25a9751ac9381a274df057" kindref="member">boolean</ref>()),<sp/>eval_expr_(eval_expr),<sp/>values_(values)<sp/>{}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classgandiva_1_1_in_expression_node_1ab3a444bb2db7d33a981e9bd17d5aeea4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref>&amp;<sp/><ref refid="classgandiva_1_1_in_expression_node_1ab3a444bb2db7d33a981e9bd17d5aeea4" kindref="member">eval_expr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eval_expr_;<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classgandiva_1_1_in_expression_node_1a112c5a04d56d5b008ca6f9a01e727d68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_set&lt;Type&gt;&amp;<sp/><ref refid="classgandiva_1_1_in_expression_node_1a112c5a04d56d5b008ca6f9a01e727d68" kindref="member">values</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values_;<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classgandiva_1_1_in_expression_node_1a985fe871e65dfc2cc7dca67a360ad134" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classgandiva_1_1_in_expression_node_1a985fe871e65dfc2cc7dca67a360ad134" kindref="member">Accept</ref>(<ref refid="classgandiva_1_1_node_visitor" kindref="compound">NodeVisitor</ref>&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classgandiva_1_1_node_visitor_1a313074d7d961481bcc607dde4968a763" kindref="member">Visit</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classgandiva_1_1_in_expression_node_1a14c1821c4994f69ad7688ccbd6f28a8d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classgandiva_1_1_in_expression_node_1a14c1821c4994f69ad7688ccbd6f28a8d" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>eval_expr_-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IN<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_comma<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>values_)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(add_comma)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>type<sp/>in<sp/>the<sp/>front<sp/>to<sp/>differentiate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_comma<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1aaf741be1e0ab1897069ab26377793d63" kindref="member">NodePtr</ref><sp/>eval_expr_;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;Type&gt;<sp/>values_;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gandiva</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/node.h"/>
  </compounddef>
</doxygen>
