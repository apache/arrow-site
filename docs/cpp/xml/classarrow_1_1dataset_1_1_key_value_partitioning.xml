<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_key_value_partitioning" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::dataset::KeyValuePartitioning</compoundname>
    <basecompoundref refid="classarrow_1_1dataset_1_1_partitioning" prot="public" virt="non-virtual">arrow::dataset::Partitioning</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_directory_partitioning" prot="public" virt="non-virtual">arrow::dataset::DirectoryPartitioning</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_hive_partitioning" prot="public" virt="non-virtual">arrow::dataset::HivePartitioning</derivedcompoundref>
    <includes refid="partition_8h" local="no">arrow/dataset/partition.h</includes>
    <innerclass refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" prot="public">arrow::dataset::KeyValuePartitioning::Key</innerclass>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1ae4a0b7f6434e2e3893d3a74f7c723f67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::dataset::KeyValuePartitioning::VisitKeys</definition>
        <argsstring>(const Expression &amp;expr, const std::function&lt; Status(const std::string &amp;name, const std::shared_ptr&lt; Scalar &gt; &amp;value)&gt; &amp;visitor)</argsstring>
        <name>VisitKeys</name>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const std::function&lt; <ref refid="classarrow_1_1_status" kindref="compound">Status</ref>(const std::string &amp;name, const std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &amp;value)&gt; &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1a42f7083835f6411b99e626865dda7aee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::dataset::KeyValuePartitioning::SetDefaultValuesFromKeys</definition>
        <argsstring>(const Expression &amp;expr, RecordBatchProjector *projector)</argsstring>
        <name>SetDefaultValuesFromKeys</name>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref> *</type>
          <declname>projector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1ab9b0c657e5f05937724b9bd8f7c3fd5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Expression&gt; &gt; arrow::dataset::KeyValuePartitioning::ConvertKey</definition>
        <argsstring>(const Key &amp;key, const Schema &amp;schema)</argsstring>
        <name>ConvertKey</name>
        <param>
          <type>const <ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &amp;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Convert a <ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref> to a full expression. </para>        </briefdescription>
        <detaileddescription>
<para>If the field referenced in key is absent from the schema will be ignored. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="167" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1a7998e0d9b1e58c617ff6954ff0741ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacearrow_1_1util_1a37597d23d580458d4547f817e2943744" kindref="member">util::optional</ref>&lt; <ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref> &gt;</type>
        <definition>virtual util::optional&lt;Key&gt; arrow::dataset::KeyValuePartitioning::ParseKey</definition>
        <argsstring>(const std::string &amp;segment, int i) const =0</argsstring>
        <name>ParseKey</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_directory_partitioning_1aa32a8bacad196663dd5e6c79b86ec66d">ParseKey</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_hive_partitioning_1a2bf2005f3d78879fe75390ffe4fbe650">ParseKey</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Extract a partition key from a path segment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1ad53a7bc9e2b100713cbe345955108897" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>virtual Result&lt;std::string&gt; arrow::dataset::KeyValuePartitioning::FormatKey</definition>
        <argsstring>(const Key &amp;expr, int i) const =0</argsstring>
        <name>FormatKey</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_directory_partitioning_1aa55e1b581dfce7e67e22e6aacc9c1fb6">FormatKey</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_hive_partitioning_1a37ba09d4a779e5e1e095687f1375b8e5">FormatKey</reimplementedby>
        <param>
          <type>const <ref refid="structarrow_1_1dataset_1_1_key_value_partitioning_1_1_key" kindref="compound">Key</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1af40cc68dab1aa86a7f4981a149a25e55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Expression&gt; &gt; arrow::dataset::KeyValuePartitioning::Parse</definition>
        <argsstring>(const std::string &amp;segment, int i) const override</argsstring>
        <name>Parse</name>
        <reimplements refid="classarrow_1_1dataset_1_1_partitioning_1afd5114de0eca9b252c14cc281127c678">Parse</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Parse a path segment into a partition expression. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">segment</parametername>
</parameternamelist>
<parameterdescription>
<para>the path segment to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of segment within a path </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parsed expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_key_value_partitioning_1a2c4705aaf379deb7e12cdfc3897b314a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt;std::string&gt; arrow::dataset::KeyValuePartitioning::Format</definition>
        <argsstring>(const Expression &amp;expr, int i) const override</argsstring>
        <name>Format</name>
        <reimplements refid="classarrow_1_1dataset_1_1_partitioning_1a658b4a6e1a29460db595042446f875c7">Format</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="178" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Subclass for the common case of a partitioning which yields an equality expression for each segment. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2669">
        <label>arrow::dataset::HivePartitioning</label>
        <link refid="classarrow_1_1dataset_1_1_hive_partitioning"/>
        <childnode refid="2666" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2666">
        <label>arrow::dataset::KeyValuePartitioning</label>
        <link refid="classarrow_1_1dataset_1_1_key_value_partitioning"/>
        <childnode refid="2667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2667">
        <label>arrow::dataset::Partitioning</label>
        <link refid="classarrow_1_1dataset_1_1_partitioning"/>
      </node>
      <node id="2668">
        <label>arrow::dataset::DirectoryPartitioning</label>
        <link refid="classarrow_1_1dataset_1_1_directory_partitioning"/>
        <childnode refid="2666" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2670">
        <label>arrow::dataset::KeyValuePartitioning</label>
        <link refid="classarrow_1_1dataset_1_1_key_value_partitioning"/>
        <childnode refid="2671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2671">
        <label>arrow::dataset::Partitioning</label>
        <link refid="classarrow_1_1dataset_1_1_partitioning"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/partition.h" line="149" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/partition.h" bodystart="149" bodyend="182"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1ab9b0c657e5f05937724b9bd8f7c3fd5a" prot="public" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>ConvertKey</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1a157ec7c73980998eda65bb012ad6aaf2" prot="public" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>Default</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1a2c4705aaf379deb7e12cdfc3897b314a" prot="public" virt="virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>Format</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1ad53a7bc9e2b100713cbe345955108897" prot="public" virt="pure-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>FormatKey</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1af40cc68dab1aa86a7f4981a149a25e55" prot="public" virt="virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>Parse</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1a6d9d38e3f60b51b162a6dcdfd86e296c" prot="public" virt="non-virtual" ambiguityscope="arrow::dataset::Partitioning::"><scope>arrow::dataset::KeyValuePartitioning</scope><name>Parse</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1a7998e0d9b1e58c617ff6954ff0741ac8" prot="public" virt="pure-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>ParseKey</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1ae0ffcc236e1ad13f0e5f3da6a1b8770e" prot="protected" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>Partitioning</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1ad0d9beac97c3f9703adbaa6c6a434c50" prot="public" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1ab22cd7ff0da98f2fb7d975c9c39ccd81" prot="protected" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>schema_</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1a42f7083835f6411b99e626865dda7aee" prot="public" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>SetDefaultValuesFromKeys</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1acb1a6614ca4a3e55a2e56d491b80e58b" prot="public" virt="pure-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>type_name</name></member>
      <member refid="classarrow_1_1dataset_1_1_key_value_partitioning_1ae4a0b7f6434e2e3893d3a74f7c723f67" prot="public" virt="non-virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>VisitKeys</name></member>
      <member refid="classarrow_1_1dataset_1_1_partitioning_1a4f703ebd597dcf81476206736c003ffd" prot="public" virt="virtual"><scope>arrow::dataset::KeyValuePartitioning</scope><name>~Partitioning</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
