<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_iterator_1_1_range_iterator" kind="class" language="C++" prot="public">
    <compoundname>arrow::Iterator::RangeIterator</compoundname>
    <includes refid="iterator_8h" local="no">arrow/util/iterator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_iterator_1_1_range_iterator_1af396bff6932444c7f1d6336abf41f3fb" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt;T&gt; arrow::Iterator&lt; T &gt;::RangeIterator::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="144" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_iterator_1_1_range_iterator_1a7d7d6cd7a78f97a4a3bfb5574447c249" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator arrow::Iterator&lt; T &gt;::RangeIterator::iterator_</definition>
        <argsstring></argsstring>
        <name>iterator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="145" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1a5aeb5efc83e0f4df23746ad1ea5d6a36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Iterator&lt; T &gt;::RangeIterator::RangeIterator</definition>
        <argsstring>()</argsstring>
        <name>RangeIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="113" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1a247db788256ef2b91927460207187196" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Iterator&lt; T &gt;::RangeIterator::RangeIterator</definition>
        <argsstring>(Iterator i)</argsstring>
        <name>RangeIterator</name>
        <param>
          <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="115" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1ae58551ae3a19092cb4eb93b748522cd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Iterator&lt; T &gt;::RangeIterator::operator!=</definition>
        <argsstring>(const RangeIterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classarrow_1_1_iterator_1_1_range_iterator" kindref="compound">RangeIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="120" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1aae92283adad089f74d341fc5a47e8ec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_iterator_1_1_range_iterator" kindref="compound">RangeIterator</ref> &amp;</type>
        <definition>RangeIterator&amp; arrow::Iterator&lt; T &gt;::RangeIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="122" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1adabcc13236b24012ac546505ba62f154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt;T&gt; arrow::Iterator&lt; T &gt;::RangeIterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="127" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="127" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_iterator_1_1_range_iterator_1a62098b13599878994928442bd4975390" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Iterator&lt; T &gt;::RangeIterator::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="136" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="136" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/iterator.h" line="111" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="111" bodyend="146"/>
    <listofallmembers>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1a7d7d6cd7a78f97a4a3bfb5574447c249" prot="private" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>iterator_</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1a62098b13599878994928442bd4975390" prot="private" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>Next</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1ae58551ae3a19092cb4eb93b748522cd2" prot="public" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>operator!=</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1adabcc13236b24012ac546505ba62f154" prot="public" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>operator*</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1aae92283adad089f74d341fc5a47e8ec9" prot="public" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>operator++</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1a5aeb5efc83e0f4df23746ad1ea5d6a36" prot="public" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>RangeIterator</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1a247db788256ef2b91927460207187196" prot="public" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>RangeIterator</name></member>
      <member refid="classarrow_1_1_iterator_1_1_range_iterator_1af396bff6932444c7f1d6336abf41f3fb" prot="private" virt="non-virtual"><scope>arrow::Iterator::RangeIterator</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
