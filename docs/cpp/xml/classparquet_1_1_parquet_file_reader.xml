<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_parquet_file_reader" kind="class" language="C++" prot="public">
    <compoundname>parquet::ParquetFileReader</compoundname>
    <includes refid="file__reader_8h" local="no">parquet/file_reader.h</includes>
    <innerclass refid="structparquet_1_1_parquet_file_reader_1_1_contents" prot="public">parquet::ParquetFileReader::Contents</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_parquet_file_reader_1ababbf56f6a932ad399a0df7e935ff397" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_parquet_file_reader_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Contents&gt; parquet::ParquetFileReader::contents_</definition>
        <argsstring></argsstring>
        <name>contents_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="122" column="1" bodyfile="/arrow/cpp/src/parquet/file_reader.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1a713f0e233da177ee07e888e6c9ffc3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetFileReader::ParquetFileReader</definition>
        <argsstring>()</argsstring>
        <name>ParquetFileReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1ab1a95964954f120134f60dcfeee1d16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::ParquetFileReader::~ParquetFileReader</definition>
        <argsstring>()</argsstring>
        <name>~ParquetFileReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1a195bf6c5bd781b0fd91a23f7e8f1ae76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ParquetFileReader::Open</definition>
        <argsstring>(std::unique_ptr&lt; Contents &gt; contents)</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="structparquet_1_1_parquet_file_reader_1_1_contents" kindref="compound">Contents</ref> &gt;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1a64b6e3c5accf0b8805b97f7dba901666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::ParquetFileReader::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1af11de5b95fc661860d25933b3110c4a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_row_group_reader" kindref="compound">RowGroupReader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RowGroupReader&gt; parquet::ParquetFileReader::RowGroup</definition>
        <argsstring>(int i)</argsstring>
        <name>RowGroup</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1a36140aab08533349f6a22febdae1b67b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileMetaData&gt; parquet::ParquetFileReader::metadata</definition>
        <argsstring>() const</argsstring>
        <name>metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1ad0bc5563da8acc6efbc80f0df8b9c9cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ParquetFileReader&gt; parquet::ParquetFileReader::Open</definition>
        <argsstring>(std::unique_ptr&lt; RandomAccessSource &gt; source, const ReaderProperties &amp;props=default_reader_properties(), std::shared_ptr&lt; FileMetaData &gt; metadata=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_random_access_source" kindref="compound">RandomAccessSource</ref> &gt;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_reader_properties" kindref="compound">ReaderProperties</ref> &amp;</type>
          <declname>props</declname>
          <defval><ref refid="namespaceparquet_1a0a384c637ba6393d21075504a44e233e" kindref="member">default_reader_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
          <declname>metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1a45de882eab2f78d1d13fe23fbd88c483" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ParquetFileReader&gt; parquet::ParquetFileReader::Open</definition>
        <argsstring>(std::shared_ptr&lt;::arrow::io::RandomAccessFile &gt; source, const ReaderProperties &amp;props=default_reader_properties(), std::shared_ptr&lt; FileMetaData &gt; metadata=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">arrow::io::RandomAccessFile</ref> &gt;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_reader_properties" kindref="compound">ReaderProperties</ref> &amp;</type>
          <declname>props</declname>
          <defval><ref refid="namespaceparquet_1a0a384c637ba6393d21075504a44e233e" kindref="member">default_reader_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
          <declname>metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_parquet_file_reader_1abb685288f5224cec479a56ec75091d28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_parquet_file_reader" kindref="compound">ParquetFileReader</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ParquetFileReader&gt; parquet::ParquetFileReader::OpenFile</definition>
        <argsstring>(const std::string &amp;path, bool memory_map=true, const ReaderProperties &amp;props=default_reader_properties(), std::shared_ptr&lt; FileMetaData &gt; metadata=NULLPTR)</argsstring>
        <name>OpenFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>memory_map</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="classparquet_1_1_reader_properties" kindref="compound">ReaderProperties</ref> &amp;</type>
          <declname>props</declname>
          <defval><ref refid="namespaceparquet_1a0a384c637ba6393d21075504a44e233e" kindref="member">default_reader_properties</ref>()</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_meta_data" kindref="compound">FileMetaData</ref> &gt;</type>
          <declname>metadata</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/file_reader.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/file_reader.h" line="65" column="1" bodyfile="/arrow/cpp/src/parquet/file_reader.h" bodystart="65" bodyend="123"/>
    <listofallmembers>
      <member refid="classparquet_1_1_parquet_file_reader_1a64b6e3c5accf0b8805b97f7dba901666" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>Close</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1ababbf56f6a932ad399a0df7e935ff397" prot="private" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>contents_</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1a36140aab08533349f6a22febdae1b67b" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>metadata</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1ad0bc5563da8acc6efbc80f0df8b9c9cd" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1a45de882eab2f78d1d13fe23fbd88c483" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1a195bf6c5bd781b0fd91a23f7e8f1ae76" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>Open</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1abb685288f5224cec479a56ec75091d28" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>OpenFile</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1a713f0e233da177ee07e888e6c9ffc3cb" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>ParquetFileReader</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1af11de5b95fc661860d25933b3110c4a7" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>RowGroup</name></member>
      <member refid="classparquet_1_1_parquet_file_reader_1ab1a95964954f120134f60dcfeee1d16c" prot="public" virt="non-virtual"><scope>parquet::ParquetFileReader</scope><name>~ParquetFileReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
