<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_adaptive_int_builder" kind="class" language="C++" prot="public">
    <compoundname>arrow::AdaptiveIntBuilder</compoundname>
    <basecompoundref prot="public" virt="non-virtual">arrow::internal::AdaptiveIntBuilderBase</basecompoundref>
    <includes refid="builder__adaptive_8h" local="no">arrow/array/builder_adaptive.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1a193cb277075fa1716f2b3a58d22eb24b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::AdaptiveIntBuilder::AdaptiveIntBuilder</definition>
        <argsstring>(MemoryPool *pool=default_memory_pool())</argsstring>
        <name>AdaptiveIntBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1a1c0b400ac1a3622a1585ac4ae19287a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::Append</definition>
        <argsstring>(const int64_t val)</argsstring>
        <name>Append</name>
        <param>
          <type>const int64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para><ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> append. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="135" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_adaptive.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1ad0e3e63d185e4fb53d885eb89c71ad57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::AppendValues</definition>
        <argsstring>(const int64_t *values, int64_t length, const uint8_t *valid_bytes=NULLPTR)</argsstring>
        <name>AppendValues</name>
        <param>
          <type>const int64_t *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
<para>Append a sequence of elements in one shot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>a contiguous C array of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of values to append </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">valid_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of bytes where non-zero indicates a valid (non-null) value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1aec148417ee3a6e40b8ac1514d3347d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::FinishInternal</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; *out) override</argsstring>
        <name>FinishInternal</name>
        <reimplements refid="classarrow_1_1_array_builder_1a0e0aea1c332b472f3671bea9da5ec473">FinishInternal</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an internal generic <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Resets builder except for dictionary builder</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1a2f06153316565ee72f0140057e1b5337" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::AdaptiveIntBuilder::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classarrow_1_1_array_builder_1a39b4b420be1fcf4fe7219fe953eb65c7">type</reimplements>
        <briefdescription>
<para>Return the type of the built <ref refid="classarrow_1_1_array" kindref="compound">Array</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="148" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1acc3f7548c0e6c05625e62fe1f28dc74d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::CommitPendingData</definition>
        <argsstring>() override</argsstring>
        <name>CommitPendingData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1abae1edefe37e0526b9db4efa34ece34f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::ExpandIntSize</definition>
        <argsstring>(uint8_t new_int_size)</argsstring>
        <name>ExpandIntSize</name>
        <param>
          <type>uint8_t</type>
          <declname>new_int_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1a89f6a362be0e90e049c2b6f76538cd09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::AppendValuesInternal</definition>
        <argsstring>(const int64_t *values, int64_t length, const uint8_t *valid_bytes)</argsstring>
        <name>AppendValuesInternal</name>
        <param>
          <type>const int64_t *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_adaptive_int_builder_1a3b33051003edeabf2becea1a2169285a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename new_type</type>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::AdaptiveIntBuilder::ExpandIntSizeN</definition>
        <argsstring>()</argsstring>
        <name>ExpandIntSizeN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>arrow::internal::AdaptiveIntBuilderBase</label>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>arrow::AdaptiveIntBuilder</label>
        <link refid="classarrow_1_1_adaptive_int_builder"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="19">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="16">
        <label>arrow::internal::AdaptiveIntBuilderBase</label>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>arrow::AdaptiveIntBuilder</label>
        <link refid="classarrow_1_1_adaptive_int_builder"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="18" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_adaptive.h" line="127" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_adaptive.h" bodystart="127" bodyend="159"/>
    <listofallmembers>
      <member refid="classarrow_1_1_adaptive_int_builder_1a193cb277075fa1716f2b3a58d22eb24b" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AdaptiveIntBuilder</name></member>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1a1c0b400ac1a3622a1585ac4ae19287a4" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Append</name></member>
      <member refid="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015" prot="public" virt="pure-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14" prot="public" virt="pure-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1ad0e3e63d185e4fb53d885eb89c71ad57" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendValues</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1a89f6a362be0e90e049c2b6f76538cd09" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>AppendValuesInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1acc3f7548c0e6c05625e62fe1f28dc74d" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>CommitPendingData</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1abae1edefe37e0526b9db4efa34ece34f" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>ExpandIntSize</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1a3b33051003edeabf2becea1a2169285a" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>ExpandIntSizeN</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1aec148417ee3a6e40b8ac1514d3347d1b" prot="public" virt="virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" prot="public" virt="virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b" prot="public" virt="virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_adaptive_int_builder_1a2f06153316565ee72f0140057e1b5337" prot="public" virt="virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_array_builder_1a44b3f511e5aefdba55aebfd4afa99c8f" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::AdaptiveIntBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
