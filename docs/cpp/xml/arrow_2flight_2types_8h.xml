<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2flight_2types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="arrow_2flight_2visibility_8h" local="yes">arrow/flight/visibility.h</includes>
    <includes refid="arrow_2ipc_2writer_8h" local="yes">arrow/ipc/writer.h</includes>
    <includedby refid="flight_2api_8h" local="yes">/arrow/cpp/src/arrow/flight/api.h</includedby>
    <includedby refid="arrow_2flight_2client_8h" local="yes">/arrow/cpp/src/arrow/flight/client.h</includedby>
    <includedby refid="internal_8h" local="yes">/arrow/cpp/src/arrow/flight/internal.h</includedby>
    <includedby refid="arrow_2flight_2pch_8h" local="yes">/arrow/cpp/src/arrow/flight/pch.h</includedby>
    <includedby refid="serialization__internal_8h" local="yes">/arrow/cpp/src/arrow/flight/serialization_internal.h</includedby>
    <includedby refid="server_8h" local="yes">/arrow/cpp/src/arrow/flight/server.h</includedby>
    <incdepgraph>
      <node id="6721">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6722" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
      </node>
      <node id="6733">
        <label>limits</label>
      </node>
      <node id="6709">
        <label>cstdint</label>
      </node>
      <node id="6727">
        <label>arrow/ipc/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6728" relation="include">
        </childnode>
        <childnode refid="6718" relation="include">
        </childnode>
        <childnode refid="6730" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6718">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="6719" relation="include">
        </childnode>
        <childnode refid="6720" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6721" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
        <childnode refid="6724" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6730">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6713" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6711">
        <label>string</label>
      </node>
      <node id="6715">
        <label>arrow/ipc/writer.h</label>
        <link refid="arrow_2ipc_2writer_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6713" relation="include">
        </childnode>
        <childnode refid="6716" relation="include">
        </childnode>
        <childnode refid="6727" relation="include">
        </childnode>
        <childnode refid="6731" relation="include">
        </childnode>
        <childnode refid="6728" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6725">
        <label>ostream</label>
      </node>
      <node id="6726">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="6714">
        <label>arrow/flight/visibility.h</label>
        <link refid="arrow_2flight_2visibility_8h"/>
      </node>
      <node id="6716">
        <label>arrow/ipc/dictionary.h</label>
        <link refid="dictionary_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6717" relation="include">
        </childnode>
        <childnode refid="6718" relation="include">
        </childnode>
        <childnode refid="6723" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6713">
        <label>vector</label>
      </node>
      <node id="6729">
        <label>new</label>
      </node>
      <node id="6712">
        <label>utility</label>
      </node>
      <node id="6720">
        <label>iosfwd</label>
      </node>
      <node id="6708">
        <label>cstddef</label>
      </node>
      <node id="6717">
        <label>unordered_map</label>
      </node>
      <node id="6728">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="6729" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6722" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6718" relation="include">
        </childnode>
        <childnode refid="6721" relation="include">
        </childnode>
      </node>
      <node id="6722">
        <label>type_traits</label>
      </node>
      <node id="6732">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6733" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6728" relation="include">
        </childnode>
        <childnode refid="6718" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6719">
        <label>cstring</label>
      </node>
      <node id="6724">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6725" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6731">
        <label>arrow/ipc/options.h</label>
        <link refid="ipc_2options_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6713" relation="include">
        </childnode>
        <childnode refid="6730" relation="include">
        </childnode>
        <childnode refid="6732" relation="include">
        </childnode>
        <childnode refid="6726" relation="include">
        </childnode>
      </node>
      <node id="6710">
        <label>memory</label>
      </node>
      <node id="6723">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="6709" relation="include">
        </childnode>
      </node>
      <node id="6707">
        <label>/arrow/cpp/src/arrow/flight/types.h</label>
        <link refid="arrow_2flight_2types_8h"/>
        <childnode refid="6708" relation="include">
        </childnode>
        <childnode refid="6709" relation="include">
        </childnode>
        <childnode refid="6710" relation="include">
        </childnode>
        <childnode refid="6711" relation="include">
        </childnode>
        <childnode refid="6712" relation="include">
        </childnode>
        <childnode refid="6713" relation="include">
        </childnode>
        <childnode refid="6714" relation="include">
        </childnode>
        <childnode refid="6715" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6736">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="6738">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="6735">
        <label>/arrow/cpp/src/arrow/flight/api.h</label>
        <link refid="flight_2api_8h"/>
        <childnode refid="6736" relation="include">
        </childnode>
      </node>
      <node id="6740">
        <label>/arrow/cpp/src/arrow/flight/serialization_internal.h</label>
        <link refid="serialization__internal_8h"/>
      </node>
      <node id="6741">
        <label>/arrow/cpp/src/arrow/flight/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="6735" relation="include">
        </childnode>
        <childnode refid="6738" relation="include">
        </childnode>
      </node>
      <node id="6739">
        <label>/arrow/cpp/src/arrow/flight/internal.h</label>
        <link refid="internal_8h_source"/>
        <childnode refid="6740" relation="include">
        </childnode>
      </node>
      <node id="6737">
        <label>/arrow/cpp/src/arrow/flight/client.h</label>
        <link refid="arrow_2flight_2client_8h"/>
        <childnode refid="6735" relation="include">
        </childnode>
        <childnode refid="6738" relation="include">
        </childnode>
      </node>
      <node id="6734">
        <label>/arrow/cpp/src/arrow/flight/types.h</label>
        <link refid="arrow_2flight_2types_8h"/>
        <childnode refid="6735" relation="include">
        </childnode>
        <childnode refid="6737" relation="include">
        </childnode>
        <childnode refid="6739" relation="include">
        </childnode>
        <childnode refid="6738" relation="include">
        </childnode>
        <childnode refid="6740" relation="include">
        </childnode>
        <childnode refid="6741" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1flight_1_1_flight_status_detail" prot="public">arrow::flight::FlightStatusDetail</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_cert_key_pair" prot="public">arrow::flight::CertKeyPair</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_action_type" prot="public">arrow::flight::ActionType</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_criteria" prot="public">arrow::flight::Criteria</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_action" prot="public">arrow::flight::Action</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_result" prot="public">arrow::flight::Result</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_basic_auth" prot="public">arrow::flight::BasicAuth</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_flight_descriptor" prot="public">arrow::flight::FlightDescriptor</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_ticket" prot="public">arrow::flight::Ticket</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_location" prot="public">arrow::flight::Location</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_flight_endpoint" prot="public">arrow::flight::FlightEndpoint</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_flight_payload" prot="public">arrow::flight::FlightPayload</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_schema_result" prot="public">arrow::flight::SchemaResult</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_flight_info" prot="public">arrow::flight::FlightInfo</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_flight_info_1_1_data" prot="public">arrow::flight::FlightInfo::Data</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_flight_listing" prot="public">arrow::flight::FlightListing</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_result_stream" prot="public">arrow::flight::ResultStream</innerclass>
    <innerclass refid="structarrow_1_1flight_1_1_flight_stream_chunk" prot="public">arrow::flight::FlightStreamChunk</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_metadata_record_batch_reader" prot="public">arrow::flight::MetadataRecordBatchReader</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_simple_flight_listing" prot="public">arrow::flight::SimpleFlightListing</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_simple_result_stream" prot="public">arrow::flight::SimpleResultStream</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1ipc">arrow::ipc</innernamespace>
    <innernamespace refid="namespacearrow_1_1flight">arrow::flight</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data<sp/>structure<sp/>for<sp/>Flight<sp/>RPC.<sp/>API<sp/>should<sp/>be<sp/>considered<sp/>experimental<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2flight_2visibility_8h" kindref="compound">arrow/flight/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2ipc_2writer_8h" kindref="compound">arrow/ipc/writer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RecordBatch;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Schema;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Table;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryMemo;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ipc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Uri;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flight<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>:<sp/>int8_t<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450aafbf0897a5a83fdd873dfb032ec695d3" kindref="member">Internal</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450a9541eb2348d883dd8e32ae0420274c4c" kindref="member">TimedOut</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450aa149e85a44aeec9140e92733d9ed694e" kindref="member">Cancelled</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450ab403ce880ed2c28d0784a2430a9b6eda" kindref="member">Unauthenticated</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450ae06d1ba70f1331e9f9a113cc2f887d3f" kindref="member">Unauthorized</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450a453e6aa38d87b28ccae545967c53004f" kindref="member">Unavailable</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450ad7c8c85bf79bbe1b7188497c32c3b0ca" kindref="member">Failed</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Silence<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;non<sp/>dll-interface<sp/>class<sp/>RecordBatchReader<sp/>used<sp/>as<sp/>base<sp/>for<sp/>dll-interface<sp/>class&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4275)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classarrow_1_1flight_1_1_flight_status_detail" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_flight_status_detail" kindref="compound">FlightStatusDetail</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_detail" kindref="compound">arrow::StatusDetail</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82" refid="classarrow_1_1flight_1_1_flight_status_detail_1a46c4e29d6a8a648c4497ffab4d98139d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_flight_status_detail_1a46c4e29d6a8a648c4497ffab4d98139d" kindref="member">FlightStatusDetail</ref>(<ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code)<sp/>:<sp/>code_{code}<sp/>{}</highlight></codeline>
<codeline lineno="83" refid="classarrow_1_1flight_1_1_flight_status_detail_1a34afb2ea9e314b8ef0925cd311d444aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_flight_status_detail_1a34afb2ea9e314b8ef0925cd311d444aa" kindref="member">FlightStatusDetail</ref>(<ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code,<sp/>std::string<sp/>extra_info)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>code_{code},<sp/>extra_info_(std::move(extra_info))<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_id()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::string<sp/>extra_info()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::string<sp/>CodeAsString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_extra_info(std::string<sp/>extra_info);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;FlightStatusDetail&gt;<sp/>UnwrapStatus(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">arrow::Status</ref>&amp;<sp/>status);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::string<sp/>extra_info_;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1flight_1a917da31f25e80be8e05c1c6c5a30729e" kindref="member">MakeFlightError</ref>(<ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1flight_1a917da31f25e80be8e05c1c6c5a30729e" kindref="member">MakeFlightError</ref>(<ref refid="namespacearrow_1_1flight_1a9646b05ed7886d8967494f73da99b450" kindref="member">FlightStatusCode</ref><sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extra_info);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structarrow_1_1flight_1_1_cert_key_pair" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_cert_key_pair" kindref="compound">CertKeyPair</ref><sp/>{</highlight></codeline>
<codeline lineno="134" refid="structarrow_1_1flight_1_1_cert_key_pair_1ab8ccf50ff902c1d72f10fd7b3139a122" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_cert_key_pair_1ab8ccf50ff902c1d72f10fd7b3139a122" kindref="member">pem_cert</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="structarrow_1_1flight_1_1_cert_key_pair_1abfc97775bd03a5ad77db6f565a4211de" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_cert_key_pair_1abfc97775bd03a5ad77db6f565a4211de" kindref="member">pem_key</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structarrow_1_1flight_1_1_action_type" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_action_type" kindref="compound">ActionType</ref><sp/>{</highlight></codeline>
<codeline lineno="143" refid="structarrow_1_1flight_1_1_action_type_1ad0398039d125c7e81a1cf0c92e416a27" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_action_type_1ad0398039d125c7e81a1cf0c92e416a27" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structarrow_1_1flight_1_1_action_type_1acce448827c5033af73977af150754917" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_action_type_1acce448827c5033af73977af150754917" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structarrow_1_1flight_1_1_criteria" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_criteria" kindref="compound">Criteria</ref><sp/>{</highlight></codeline>
<codeline lineno="152" refid="structarrow_1_1flight_1_1_criteria_1aa7f742b91843a5345a772eeb33741c73" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_criteria_1aa7f742b91843a5345a772eeb33741c73" kindref="member">expression</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structarrow_1_1flight_1_1_action" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_action" kindref="compound">Action</ref><sp/>{</highlight></codeline>
<codeline lineno="158" refid="structarrow_1_1flight_1_1_action_1af9896e305e4138edb643078f4fcca5f4" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_action_1af9896e305e4138edb643078f4fcca5f4" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structarrow_1_1flight_1_1_action_1ad8502d5b8d1b7e2e0f48c90acda15ef7" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structarrow_1_1flight_1_1_action_1ad8502d5b8d1b7e2e0f48c90acda15ef7" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structarrow_1_1flight_1_1_result" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_result" kindref="compound">Result</ref><sp/>{</highlight></codeline>
<codeline lineno="166" refid="structarrow_1_1flight_1_1_result_1a8168bf6a5a3abb1ca8d35819d3290e44" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structarrow_1_1flight_1_1_result_1a8168bf6a5a3abb1ca8d35819d3290e44" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structarrow_1_1flight_1_1_basic_auth" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_basic_auth" kindref="compound">BasicAuth</ref><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structarrow_1_1flight_1_1_basic_auth_1a9b491df507da433f27ed0d3d55c127fd" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_basic_auth_1a9b491df507da433f27ed0d3d55c127fd" kindref="member">username</ref>;</highlight></codeline>
<codeline lineno="172" refid="structarrow_1_1flight_1_1_basic_auth_1ae441925cb04b079e1103d853b539793b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_basic_auth_1ae441925cb04b079e1103d853b539793b" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Deserialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized,<sp/><ref refid="structarrow_1_1flight_1_1_basic_auth" kindref="compound">BasicAuth</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Serialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_basic_auth" kindref="compound">BasicAuth</ref>&amp;<sp/>basic_auth,<sp/>std::string*<sp/>out);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structarrow_1_1flight_1_1_flight_descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="181" refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962" kindref="member">DescriptorType</ref><sp/>{</highlight></codeline>
<codeline lineno="182" refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962a9688233f333a17067402bace51ea3ad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UNKNOWN<sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="183" refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962a0df0c0ebb47fafcad1af1cca9ee87e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH<sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184" refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962a0614d8795bf553f8063af0331125f97e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CMD<sp/>=<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structarrow_1_1flight_1_1_flight_descriptor_1aabfcaa722ae6b362ee3be72273ea79ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a86465cf81f2b46fd5e80b7082dec3962" kindref="member">DescriptorType</ref><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1aabfcaa722ae6b362ee3be72273ea79ab" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structarrow_1_1flight_1_1_flight_descriptor_1a5cc5791676902261e4985350fa9c92ed" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a5cc5791676902261e4985350fa9c92ed" kindref="member">cmd</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structarrow_1_1flight_1_1_flight_descriptor_1a5451422dd19bfec89dce2b62866c1e53" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a5451422dd19bfec89dce2b62866c1e53" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SerializeToString(std::string*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Deserialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized,<sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>factory<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structarrow_1_1flight_1_1_flight_descriptor_1a50c992a6e82ca12c696be3c4a0d221c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a50c992a6e82ca12c696be3c4a0d221c6" kindref="member">Command</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>{CMD,<sp/>c,<sp/>{}};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="structarrow_1_1flight_1_1_flight_descriptor_1aa8f8cc4c71c14a184bec9cad73ca5ed3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1aa8f8cc4c71c14a184bec9cad73ca5ed3" kindref="member">Path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>{PATH,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>p};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structarrow_1_1flight_1_1_flight_descriptor_1a30fff3a8a1af621f04540d5a1a9e83a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a30fff3a8a1af621f04540d5a1a9e83a9" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.<ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a3c7187a26270baba281c9c05678081c6" kindref="member">Equals</ref>(right);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228" refid="structarrow_1_1flight_1_1_flight_descriptor_1a1634868f6bb5ec7639e0f1ffda82b2aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor_1a1634868f6bb5ec7639e0f1ffda82b2aa" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structarrow_1_1flight_1_1_ticket" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref><sp/>{</highlight></codeline>
<codeline lineno="236" refid="structarrow_1_1flight_1_1_ticket_1aebde6e2b07e45f50c558ce4ade3c3a92" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_ticket_1aebde6e2b07e45f50c558ce4ade3c3a92" kindref="member">ticket</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structarrow_1_1flight_1_1_ticket_1ae7812df8c8772b34348a863d352d716f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket_1ae7812df8c8772b34348a863d352d716f" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.<ref refid="structarrow_1_1flight_1_1_ticket_1aee490ddefc4063d0012521a2241c8c05" kindref="member">Equals</ref>(right);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243" refid="structarrow_1_1flight_1_1_ticket_1ab91e7ac2c575299045cfd63f061f2e60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket_1ab91e7ac2c575299045cfd63f061f2e60" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SerializeToString(std::string*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Deserialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized,<sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1flight_1_1_flight_client" kindref="compound">FlightClient</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1flight_1_1_flight_server_base" kindref="compound">FlightServerBase</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacearrow_1_1flight_1a0de3f0120b4b011b68bd804d92aaec47" kindref="member">kSchemeGrpc</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacearrow_1_1flight_1a9179275d8cf67563b02c2fb26e5d276e" kindref="member">kSchemeGrpcTcp</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacearrow_1_1flight_1aaa485acbe79a582df888ef2a6c26de35" kindref="member">kSchemeGrpcUnix</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">ARROW_FLIGHT_EXPORT</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacearrow_1_1flight_1a8463cfa2cd1ea05d60943a30de8c3340" kindref="member">kSchemeGrpcTls</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structarrow_1_1flight_1_1_location" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>uri_string,<sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>*<sp/>location);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ForGrpcTcp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>*<sp/>location);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ForGrpcTls(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>*<sp/>location);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ForGrpcUnix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>*<sp/>location);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>std::string<sp/>scheme()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="structarrow_1_1flight_1_1_location_1a68504c57743016268bc610731fdb4c34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location_1a68504c57743016268bc610731fdb4c34" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.<ref refid="structarrow_1_1flight_1_1_location_1a10cfd1bdecf25a222a7d4514a033744f" kindref="member">Equals</ref>(right);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312" refid="structarrow_1_1flight_1_1_location_1ab08bf4ff28e0e84ed5ba732d44a8889a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location_1ab08bf4ff28e0e84ed5ba732d44a8889a" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_location" kindref="compound">Location</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="317" refid="structarrow_1_1flight_1_1_location_1a86769d0d82198bf33863991c833befa4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1flight_1_1_flight_client" kindref="compound">FlightClient</ref>;</highlight></codeline>
<codeline lineno="318" refid="structarrow_1_1flight_1_1_location_1a6186b623bb454d72225908e66dc4621f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1flight_1_1_flight_server_base" kindref="compound">FlightServerBase</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;arrow::internal::Uri&gt;<sp/>uri_;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="structarrow_1_1flight_1_1_flight_endpoint" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref><sp/>{</highlight></codeline>
<codeline lineno="326" refid="structarrow_1_1flight_1_1_flight_endpoint_1ae88cc1607d53a206d33ea692c3f5d4f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1flight_1_1_ticket" kindref="compound">Ticket</ref><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint_1ae88cc1607d53a206d33ea692c3f5d4f0" kindref="member">ticket</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="structarrow_1_1flight_1_1_flight_endpoint_1a93c933152f5458413022c74b3a68ec3e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Location&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint_1a93c933152f5458413022c74b3a68ec3e" kindref="member">locations</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="structarrow_1_1flight_1_1_flight_endpoint_1a3b35086870a2957af5cb528bfbf1557e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint_1a3b35086870a2957af5cb528bfbf1557e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.<ref refid="structarrow_1_1flight_1_1_flight_endpoint_1a7d2d278a5859df838e8d728b6e61015e" kindref="member">Equals</ref>(right);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338" refid="structarrow_1_1flight_1_1_flight_endpoint_1a0fec73c99d3fa3b91a86f9e4c4ca9f56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint_1a0fec73c99d3fa3b91a86f9e4c4ca9f56" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_endpoint" kindref="compound">FlightEndpoint</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(left<sp/>==<sp/>right);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="structarrow_1_1flight_1_1_flight_payload" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_flight_payload" kindref="compound">FlightPayload</ref><sp/>{</highlight></codeline>
<codeline lineno="347" refid="structarrow_1_1flight_1_1_flight_payload_1afb387ad2d242c6c13e0f97eb7d59dd8c" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_payload_1afb387ad2d242c6c13e0f97eb7d59dd8c" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="348" refid="structarrow_1_1flight_1_1_flight_payload_1ab268a9d74079f183ac4e745449359482" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_payload_1ab268a9d74079f183ac4e745449359482" kindref="member">app_metadata</ref>;</highlight></codeline>
<codeline lineno="349" refid="structarrow_1_1flight_1_1_flight_payload_1a9c1b3b649a6a2c1166ca486ac99d25ff" refkind="member"><highlight class="normal"><sp/><sp/>ipc::internal::IpcPayload<sp/><ref refid="structarrow_1_1flight_1_1_flight_payload_1a9c1b3b649a6a2c1166ca486ac99d25ff" kindref="member">ipc_message</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="structarrow_1_1flight_1_1_schema_result" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_schema_result" kindref="compound">SchemaResult</ref><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355" refid="structarrow_1_1flight_1_1_schema_result_1a8b348062d5e283a0b704394d07498df5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_schema_result_1a8b348062d5e283a0b704394d07498df5" kindref="member">SchemaResult</ref>(std::string<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>)<sp/>:<sp/>raw_schema_(<ref refid="namespacestd" kindref="compound">std</ref>::move(schema))<sp/>{}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetSchema(<ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">ipc::DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="structarrow_1_1flight_1_1_schema_result_1a8e419bf9e2890895b288d989ddbb6b84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="structarrow_1_1flight_1_1_schema_result_1a8e419bf9e2890895b288d989ddbb6b84" kindref="member">serialized_schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_schema_;<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>std::string<sp/>raw_schema_;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classarrow_1_1flight_1_1_flight_info" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374" refid="structarrow_1_1flight_1_1_flight_info_1_1_data" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data" kindref="compound">Data</ref><sp/>{</highlight></codeline>
<codeline lineno="375" refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a1466bb8050414baecd6fb911db415729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a1466bb8050414baecd6fb911db415729" kindref="member">schema</ref>;</highlight></codeline>
<codeline lineno="376" refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a488cc3ebb3117d1c22fa1093b96e090c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref><sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a488cc3ebb3117d1c22fa1093b96e090c" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="377" refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1af01df68f477e8c276ad1b1bb4b9833df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FlightEndpoint&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1af01df68f477e8c276ad1b1bb4b9833df" kindref="member">endpoints</ref>;</highlight></codeline>
<codeline lineno="378" refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1ac4a88ef71614814701735929c6a15150" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1ac4a88ef71614814701735929c6a15150" kindref="member">total_records</ref>;</highlight></codeline>
<codeline lineno="379" refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a23a215df52e0050ed48e232836597766" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data_1a23a215df52e0050ed48e232836597766" kindref="member">total_bytes</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classarrow_1_1flight_1_1_flight_info_1a0289feabdbb38fbc82f313cef0c5e9ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1a0289feabdbb38fbc82f313cef0c5e9ef" kindref="member">FlightInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data" kindref="compound">Data</ref>&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)<sp/>:<sp/>data_(data),<sp/>reconstructed_schema_(false)<sp/>{}</highlight></codeline>
<codeline lineno="383" refid="classarrow_1_1flight_1_1_flight_info_1ab4b4f56f8a4e4cb4a0d9e5757c156efb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1ab4b4f56f8a4e4cb4a0d9e5757c156efb" kindref="member">FlightInfo</ref>(<ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data" kindref="compound">Data</ref>&amp;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(<ref refid="namespacestd" kindref="compound">std</ref>::move(<ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)),<sp/>reconstructed_schema_(false)<sp/>{}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>GetSchema(<ref refid="classarrow_1_1ipc_1_1_dictionary_memo" kindref="compound">ipc::DictionaryMemo</ref>*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classarrow_1_1flight_1_1_flight_info_1a38e272da0b5de4dcc60931a3f5b76bd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1a38e272da0b5de4dcc60931a3f5b76bd1" kindref="member">serialized_schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.schema;<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classarrow_1_1flight_1_1_flight_info_1af948fa2fc9f46987656dff565aeb62bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1flight_1_1_flight_descriptor" kindref="compound">FlightDescriptor</ref>&amp;<sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1af948fa2fc9f46987656dff565aeb62bb" kindref="member">descriptor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.descriptor;<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classarrow_1_1flight_1_1_flight_info_1a101f2c75e81b0eec16a59baf05514d22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FlightEndpoint&gt;&amp;<sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1a101f2c75e81b0eec16a59baf05514d22" kindref="member">endpoints</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.endpoints;<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classarrow_1_1flight_1_1_flight_info_1a9e19c96b3ae8be6c624b56240f4356b8" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1a9e19c96b3ae8be6c624b56240f4356b8" kindref="member">total_records</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.total_records;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classarrow_1_1flight_1_1_flight_info_1a558520833731ca6a747ad6ef5257ecf2" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1flight_1_1_flight_info_1a558520833731ca6a747ad6ef5257ecf2" kindref="member">total_bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.total_bytes;<sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SerializeToString(std::string*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Deserialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;FlightInfo&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1flight_1_1_flight_info_1_1_data" kindref="compound">Data</ref><sp/>data_;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema_;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reconstructed_schema_;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classarrow_1_1flight_1_1_flight_listing" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_flight_listing" kindref="compound">FlightListing</ref><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_flight_listing" kindref="compound">FlightListing</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Next(std::unique_ptr&lt;FlightInfo&gt;*<sp/>info)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="classarrow_1_1flight_1_1_result_stream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_result_stream" kindref="compound">ResultStream</ref><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_result_stream" kindref="compound">ResultStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Next(std::unique_ptr&lt;Result&gt;*<sp/>info)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">};</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="structarrow_1_1flight_1_1_flight_stream_chunk" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="structarrow_1_1flight_1_1_flight_stream_chunk" kindref="compound">FlightStreamChunk</ref><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="456" refid="structarrow_1_1flight_1_1_flight_stream_chunk_1a491e24f667b692c76e97c689da0468df" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;RecordBatch&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_stream_chunk_1a491e24f667b692c76e97c689da0468df" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="457" refid="structarrow_1_1flight_1_1_flight_stream_chunk_1a0f164ae8452a2fd7ccc88db18f820aaa" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="structarrow_1_1flight_1_1_flight_stream_chunk_1a0f164ae8452a2fd7ccc88db18f820aaa" kindref="member">app_metadata</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classarrow_1_1flight_1_1_metadata_record_batch_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_metadata_record_batch_reader" kindref="compound">MetadataRecordBatchReader</ref><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_metadata_record_batch_reader" kindref="compound">MetadataRecordBatchReader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Next(<ref refid="structarrow_1_1flight_1_1_flight_stream_chunk" kindref="compound">FlightStreamChunk</ref>*<sp/>next)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadAll(std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;*<sp/>batches);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadAll(std::shared_ptr&lt;Table&gt;*<sp/>table);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="classarrow_1_1flight_1_1_simple_flight_listing" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_simple_flight_listing" kindref="compound">SimpleFlightListing</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_flight_listing" kindref="compound">FlightListing</ref><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_simple_flight_listing" kindref="compound">SimpleFlightListing</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FlightInfo&gt;&amp;<sp/>flights);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_simple_flight_listing" kindref="compound">SimpleFlightListing</ref>(std::vector&lt;FlightInfo&gt;&amp;&amp;<sp/>flights);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Next(std::unique_ptr&lt;FlightInfo&gt;*<sp/>info)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position_;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>std::vector&lt;FlightInfo&gt;<sp/>flights_;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">};</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="classarrow_1_1flight_1_1_simple_result_stream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_simple_result_stream" kindref="compound">SimpleResultStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_result_stream" kindref="compound">ResultStream</ref><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_simple_result_stream" kindref="compound">SimpleResultStream</ref>(std::vector&lt;Result&gt;&amp;&amp;<sp/>results);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Next(std::unique_ptr&lt;Result&gt;*<sp/>result)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>std::vector&lt;Result&gt;<sp/>results_;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position_;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">};</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>flight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/flight/types.h"/>
  </compounddef>
</doxygen>
