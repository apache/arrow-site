<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="eviction__policy_8h" kind="file" language="C++">
    <compoundname>eviction_policy.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">list</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="plasma_2common_8h" local="yes">plasma/common.h</includes>
    <includes refid="plasma_8h" local="yes">plasma/plasma.h</includes>
    <includedby refid="quota__aware__policy_8h" local="yes">/arrow/cpp/src/plasma/quota_aware_policy.h</includedby>
    <incdepgraph>
      <node id="20053">
        <label>list</label>
      </node>
      <node id="20075">
        <label>stdbool.h</label>
      </node>
      <node id="20065">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20066" relation="include">
        </childnode>
        <childnode refid="20056" relation="include">
        </childnode>
        <childnode refid="20067" relation="include">
        </childnode>
      </node>
      <node id="20052">
        <label>functional</label>
      </node>
      <node id="20072">
        <label>plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="20073" relation="include">
        </childnode>
        <childnode refid="20074" relation="include">
        </childnode>
        <childnode refid="20075" relation="include">
        </childnode>
        <childnode refid="20059" relation="include">
        </childnode>
        <childnode refid="20076" relation="include">
        </childnode>
        <childnode refid="20077" relation="include">
        </childnode>
        <childnode refid="20078" relation="include">
        </childnode>
        <childnode refid="20081" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20055" relation="include">
        </childnode>
        <childnode refid="20082" relation="include">
        </childnode>
        <childnode refid="20057" relation="include">
        </childnode>
        <childnode refid="20062" relation="include">
        </childnode>
        <childnode refid="20063" relation="include">
        </childnode>
        <childnode refid="20083" relation="include">
        </childnode>
        <childnode refid="20067" relation="include">
        </childnode>
        <childnode refid="20058" relation="include">
        </childnode>
      </node>
      <node id="20068">
        <label>cstdint</label>
      </node>
      <node id="20077">
        <label>stdlib.h</label>
      </node>
      <node id="20063">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="20060" relation="include">
        </childnode>
        <childnode refid="20064" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20056" relation="include">
        </childnode>
        <childnode refid="20065" relation="include">
        </childnode>
        <childnode refid="20067" relation="include">
        </childnode>
        <childnode refid="20069" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
      </node>
      <node id="20073">
        <label>errno.h</label>
      </node>
      <node id="20054">
        <label>string</label>
      </node>
      <node id="20080">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="20082">
        <label>unordered_set</label>
      </node>
      <node id="20051">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="20052" relation="include">
        </childnode>
        <childnode refid="20053" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20055" relation="include">
        </childnode>
        <childnode refid="20056" relation="include">
        </childnode>
        <childnode refid="20057" relation="include">
        </childnode>
        <childnode refid="20058" relation="include">
        </childnode>
        <childnode refid="20072" relation="include">
        </childnode>
      </node>
      <node id="20059">
        <label>stddef.h</label>
      </node>
      <node id="20070">
        <label>ostream</label>
      </node>
      <node id="20071">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="20083">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20070" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20067" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
      </node>
      <node id="20078">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20057" relation="include">
        </childnode>
        <childnode refid="20079" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
      </node>
      <node id="20081">
        <label>unistd.h</label>
      </node>
      <node id="20057">
        <label>vector</label>
      </node>
      <node id="20056">
        <label>utility</label>
      </node>
      <node id="20079">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="20068" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20080" relation="include">
        </childnode>
      </node>
      <node id="20064">
        <label>iosfwd</label>
      </node>
      <node id="20062">
        <label>plasma/compat.h</label>
        <link refid="compat_8h"/>
      </node>
      <node id="20055">
        <label>unordered_map</label>
      </node>
      <node id="20066">
        <label>type_traits</label>
      </node>
      <node id="20058">
        <label>plasma/common.h</label>
        <link refid="plasma_2common_8h"/>
        <childnode refid="20059" relation="include">
        </childnode>
        <childnode refid="20060" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20055" relation="include">
        </childnode>
        <childnode refid="20062" relation="include">
        </childnode>
        <childnode refid="20063" relation="include">
        </childnode>
      </node>
      <node id="20076">
        <label>stdio.h</label>
      </node>
      <node id="20060">
        <label>cstring</label>
      </node>
      <node id="20069">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20070" relation="include">
        </childnode>
        <childnode refid="20054" relation="include">
        </childnode>
        <childnode refid="20056" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
      </node>
      <node id="20061">
        <label>memory</label>
      </node>
      <node id="20074">
        <label>inttypes.h</label>
      </node>
      <node id="20067">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="20068" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20084">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="20085" relation="include">
        </childnode>
      </node>
      <node id="20086">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="20085">
        <label>/arrow/cpp/src/plasma/quota_aware_policy.h</label>
        <link refid="quota__aware__policy_8h"/>
        <childnode refid="20086" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classplasma_1_1_l_r_u_cache" prot="public">plasma::LRUCache</innerclass>
    <innerclass refid="classplasma_1_1_eviction_policy" prot="public">plasma::EvictionPolicy</innerclass>
    <innernamespace refid="namespaceplasma">plasma</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_2common_8h" kindref="compound">plasma/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_8h" kindref="compound">plasma/plasma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceplasma" kindref="compound">plasma</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====<sp/>The<sp/>eviction<sp/>policy<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>declaration<sp/>for<sp/>all<sp/>functions<sp/>and<sp/>data<sp/>structures<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>provided<sp/>if<sp/>you<sp/>want<sp/>to<sp/>implement<sp/>a<sp/>new<sp/>eviction<sp/>algorithm<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Plasma<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>does<sp/>not<sp/>implement<sp/>memory<sp/>quotas;<sp/>see<sp/>quota_aware_policy<sp/>for<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classplasma_1_1_l_r_u_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classplasma_1_1_l_r_u_cache" kindref="compound">LRUCache</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classplasma_1_1_l_r_u_cache_1ae9d118bb32bd6224509b2f4366533e84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classplasma_1_1_l_r_u_cache_1ae9d118bb32bd6224509b2f4366533e84" kindref="member">LRUCache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>int64_t<sp/>size)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name_(name),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_capacity_(size),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity_(size),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_capacity_(0),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_evictions_total_(0),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_evicted_total_(0)<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_l_r_u_cache_1ace32160bb3082e8c8675f5271fe4ad9c" kindref="member">Add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>key,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1af5ed0ac2399d4642d67e9ad103fbdc3c" kindref="member">Remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>key);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1a8fb0a8babb6bfe3abe27956888161538" kindref="member">ChooseObjectsToEvict</ref>(int64_t<sp/>num_bytes_required,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ObjectID&gt;*<sp/>objects_to_evict);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1afb4618c64bbc7511c3a751307ae1e696" kindref="member">OriginalCapacity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1ad93609a2741776eb62ffbf9a51436afb" kindref="member">Capacity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1aa365d4236e3a698fed6514d5b52aeffd" kindref="member">RemainingCapacity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_l_r_u_cache_1adb4e334f02d6341ad6286a89f8410761" kindref="member">AdjustCapacity</ref>(int64_t<sp/>delta);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_l_r_u_cache_1aa3ffe81eee2cbe56bbee927e4a99d775" kindref="member">Foreach</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;)&gt;);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classplasma_1_1_l_r_u_cache_1a0d322a9ea65d281f5489c0c993ac6af7" kindref="member">DebugString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;std::pair&lt;ObjectID,<sp/>int64_t&gt;&gt;<sp/>ItemList;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ItemList<sp/>item_list_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;ObjectID,<sp/>ItemList::iterator&gt;<sp/>item_map_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>original_capacity_;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>int64_t<sp/>capacity_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>int64_t<sp/>used_capacity_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_evictions_total_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>int64_t<sp/>bytes_evicted_total_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classplasma_1_1_eviction_policy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classplasma_1_1_eviction_policy" kindref="compound">EvictionPolicy</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_eviction_policy" kindref="compound">EvictionPolicy</ref>(<ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref>*<sp/>store_info,<sp/>int64_t<sp/>max_size);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classplasma_1_1_eviction_policy_1a6eafeafec7f514890b6fc825f4ce712d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_eviction_policy_1a6eafeafec7f514890b6fc825f4ce712d" kindref="member">~EvictionPolicy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ObjectCreated(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id,<sp/><ref refid="structplasma_1_1_client" kindref="compound">Client</ref>*<sp/>client,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_create);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetClientQuota(<ref refid="structplasma_1_1_client" kindref="compound">Client</ref>*<sp/>client,<sp/>int64_t<sp/>output_memory_quota);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EnforcePerClientQuota(<ref refid="structplasma_1_1_client" kindref="compound">Client</ref>*<sp/>client,<sp/>int64_t<sp/>size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_create,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ObjectID&gt;*<sp/>objects_to_evict);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClientDisconnected(<ref refid="structplasma_1_1_client" kindref="compound">Client</ref>*<sp/>client);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RequireSpace(int64_t<sp/>size,<sp/>std::vector&lt;ObjectID&gt;*<sp/>objects_to_evict);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BeginObjectAccess(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EndObjectAccess(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classplasma_1_1_l_r_u_cache_1a8fb0a8babb6bfe3abe27956888161538" kindref="member">ChooseObjectsToEvict</ref>(int64_t<sp/>num_bytes_required,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ObjectID&gt;*<sp/>objects_to_evict);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveObject(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RefreshObjects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectID&gt;&amp;<sp/>object_ids);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classplasma_1_1_l_r_u_cache_1a0d322a9ea65d281f5489c0c993ac6af7" kindref="member">DebugString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>int64_t<sp/>GetObjectSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classplasma_1_1_unique_i_d" kindref="compound">ObjectID</ref>&amp;<sp/>object_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classplasma_1_1_eviction_policy_1aae9d0c10bfb3301a99a2ba1d6f85af41" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classplasma_1_1_eviction_policy_1aae9d0c10bfb3301a99a2ba1d6f85af41" kindref="member">pinned_memory_bytes_</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classplasma_1_1_eviction_policy_1a080bf6e4bd6ff04d07a682eeae1ca74b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structplasma_1_1_plasma_store_info" kindref="compound">PlasmaStoreInfo</ref>*<sp/><ref refid="classplasma_1_1_eviction_policy_1a080bf6e4bd6ff04d07a682eeae1ca74b" kindref="member">store_info_</ref>;</highlight></codeline>
<codeline lineno="206" refid="classplasma_1_1_eviction_policy_1ab035814f65b85c6692d15a49987aecbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classplasma_1_1_l_r_u_cache" kindref="compound">LRUCache</ref><sp/><ref refid="classplasma_1_1_eviction_policy_1ab035814f65b85c6692d15a49987aecbe" kindref="member">cache_</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>plasma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/plasma/eviction_policy.h"/>
  </compounddef>
</doxygen>
