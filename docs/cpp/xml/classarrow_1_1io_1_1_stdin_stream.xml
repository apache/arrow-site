<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_stdin_stream" kind="class" language="C++" prot="public">
    <compoundname>arrow::io::StdinStream</compoundname>
    <basecompoundref refid="classarrow_1_1io_1_1_input_stream" prot="public" virt="non-virtual">arrow::io::InputStream</basecompoundref>
    <includes refid="io__util_8h" local="no">arrow/util/io_util.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1io_1_1_stdin_stream_1a18e861bcc92be93352cbeaf1ab2cf3f6" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::io::StdinStream::pos_</definition>
        <argsstring></argsstring>
        <name>pos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="94" column="1" bodyfile="/arrow/cpp/src/arrow/util/io_util.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1ac94990b712d63ea7ddd4ec34c4d9888d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::io::StdinStream::StdinStream</definition>
        <argsstring>()</argsstring>
        <name>StdinStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1a4baea940525b78a32a06c885d54f6c0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::io::StdinStream::~StdinStream</definition>
        <argsstring>() override</argsstring>
        <name>~StdinStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="82" column="1" bodyfile="/arrow/cpp/src/arrow/util/io_util.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1a98c95b8908eab01a28881d9bfd28ee87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::io::StdinStream::Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ae0f46d227a430af180576715e7aa0b78">Close</reimplements>
        <briefdescription>
<para>Close the stream cleanly. </para>        </briefdescription>
        <detaileddescription>
<para>For writable streams, this will attempt to flush any pending data before releasing the underlying resource.</para><para>After <ref refid="classarrow_1_1io_1_1_stdin_stream_1a98c95b8908eab01a28881d9bfd28ee87" kindref="member">Close()</ref> is called, <ref refid="classarrow_1_1io_1_1_stdin_stream_1a665825bfc56c1e593746cd0d57824c44" kindref="member">closed()</ref> returns true and the stream is not available for further operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1a665825bfc56c1e593746cd0d57824c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::io::StdinStream::closed</definition>
        <argsstring>() const override</argsstring>
        <name>closed</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1a5ba1d2c3cec2e05e7b0018624f19c10b">closed</reimplements>
        <briefdescription>
<para>Return whether the stream is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1ad7ec754d6fa4d77ee51912af7553c86d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::StdinStream::Tell</definition>
        <argsstring>() const override</argsstring>
        <name>Tell</name>
        <reimplements refid="classarrow_1_1io_1_1_file_interface_1ac6c6709147a46cd7f45d0779c1819ce6">Tell</reimplements>
        <briefdescription>
<para>Return the position in this stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1a3f2520098953063c10875e0a8f715707" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; int64_t &gt;</type>
        <definition>Result&lt;int64_t&gt; arrow::io::StdinStream::Read</definition>
        <argsstring>(int64_t nbytes, void *out) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1ab94d6d47006df39f6cf77c078a61b8d8">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position into <computeroutput>out</computeroutput>. The number of bytes read is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_stdin_stream_1ac1741d41e0e22e787135146ea7395628" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Buffer&gt; &gt; arrow::io::StdinStream::Read</definition>
        <argsstring>(int64_t nbytes) override</argsstring>
        <name>Read</name>
        <reimplements refid="classarrow_1_1io_1_1_readable_1aca2d005299c3af1092bedff34b5b015b">Read</reimplements>
        <param>
          <type>int64_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Read data from current file position. </para>        </briefdescription>
        <detaileddescription>
<para>Read at most <computeroutput>nbytes</computeroutput> from the current file position. Less bytes may be read if EOF is reached. This method updates the current file position.</para><para>In some cases (e.g. a memory-mapped file), this method may avoid a memory copy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/io_util.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4305">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="4304">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="4302">
        <label>arrow::io::StdinStream</label>
        <link refid="classarrow_1_1io_1_1_stdin_stream"/>
        <childnode refid="4303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4303">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="4304" relation="public-inheritance">
        </childnode>
        <childnode refid="4305" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4309">
        <label>arrow::io::Readable</label>
        <link refid="classarrow_1_1io_1_1_readable"/>
      </node>
      <node id="4308">
        <label>arrow::io::FileInterface</label>
        <link refid="classarrow_1_1io_1_1_file_interface"/>
      </node>
      <node id="4306">
        <label>arrow::io::StdinStream</label>
        <link refid="classarrow_1_1io_1_1_stdin_stream"/>
        <childnode refid="4307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4307">
        <label>arrow::io::InputStream</label>
        <link refid="classarrow_1_1io_1_1_input_stream"/>
        <childnode refid="4308" relation="public-inheritance">
        </childnode>
        <childnode refid="4309" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/util/io_util.h" line="79" column="1" bodyfile="/arrow/cpp/src/arrow/util/io_util.h" bodystart="79" bodyend="95"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_file_interface_1a0fa59fe92d3c99c9d9701210626aac60" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Abort</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1ab5e2e1bdb05f7847363461bc3b90d386" prot="public" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>Advance</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1a98c95b8908eab01a28881d9bfd28ee87" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Close</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1a665825bfc56c1e593746cd0d57824c44" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>closed</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1afea9126bb21e3720212a826aa78b5534" prot="protected" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aeb778572d0e9bf4902dbfbbc5353d7fd" prot="protected" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>InputStream</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a75a3739361570bb121b9adb04d5d8686" prot="public" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>mode</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1a504d0410eb6066316365a4549d000ee0" prot="protected" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>mode_</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1aba80e2518abc166625077bd065ae3721" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Peek</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1a18e861bcc92be93352cbeaf1ab2cf3f6" prot="private" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>pos_</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1a3f2520098953063c10875e0a8f715707" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1ac1741d41e0e22e787135146ea7395628" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Read</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1af3dd01a780076e39a34770beb513f71f" prot="protected" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>set_mode</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1ac94990b712d63ea7ddd4ec34c4d9888d" prot="public" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>StdinStream</name></member>
      <member refid="classarrow_1_1io_1_1_input_stream_1a2b9978739db7fa75ba81e794bfba2a64" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>supports_zero_copy</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1ad7ec754d6fa4d77ee51912af7553c86d" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>Tell</name></member>
      <member refid="classarrow_1_1io_1_1_file_interface_1aa42dcdfad00634f01192b39f1d9b4929" prot="public" virt="pure-virtual"><scope>arrow::io::StdinStream</scope><name>~FileInterface</name></member>
      <member refid="classarrow_1_1io_1_1_readable_1a96a411d4494a9872d7eef4f8bb6396b4" prot="public" virt="virtual"><scope>arrow::io::StdinStream</scope><name>~Readable</name></member>
      <member refid="classarrow_1_1io_1_1_stdin_stream_1a4baea940525b78a32a06c885d54f6c0b" prot="public" virt="non-virtual"><scope>arrow::io::StdinStream</scope><name>~StdinStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
