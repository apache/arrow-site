<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="compressed_8h" kind="file" language="C++">
    <compoundname>compressed.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="concurrency_8h" local="yes">arrow/io/concurrency.h</includes>
    <includes refid="interfaces_8h" local="yes">arrow/io/interfaces.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="io_2api_8h" local="yes">/arrow/cpp/src/arrow/io/api.h</includedby>
    <incdepgraph>
      <node id="8051">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8040" relation="include">
        </childnode>
      </node>
      <node id="8036">
        <label>cstdint</label>
      </node>
      <node id="8048">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8049" relation="include">
        </childnode>
        <childnode refid="8050" relation="include">
        </childnode>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
        <childnode refid="8040" relation="include">
        </childnode>
        <childnode refid="8052" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8039">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8037" relation="include">
        </childnode>
        <childnode refid="8040" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8035">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="8036" relation="include">
        </childnode>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8037" relation="include">
        </childnode>
        <childnode refid="8038" relation="include">
        </childnode>
        <childnode refid="8039" relation="include">
        </childnode>
        <childnode refid="8040" relation="include">
        </childnode>
        <childnode refid="8042" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8054">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
      </node>
      <node id="8033">
        <label>string</label>
      </node>
      <node id="8043">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="8053">
        <label>ostream</label>
      </node>
      <node id="8041">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8037">
        <label>vector</label>
      </node>
      <node id="8045">
        <label>new</label>
      </node>
      <node id="8047">
        <label>utility</label>
      </node>
      <node id="8042">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="8036" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8043" relation="include">
        </childnode>
      </node>
      <node id="8038">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="8050">
        <label>iosfwd</label>
      </node>
      <node id="8034">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8035" relation="include">
        </childnode>
        <childnode refid="8044" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8054" relation="include">
        </childnode>
        <childnode refid="8040" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8044">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8045" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8046" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8048" relation="include">
        </childnode>
        <childnode refid="8051" relation="include">
        </childnode>
      </node>
      <node id="8031">
        <label>/arrow/cpp/src/arrow/io/compressed.h</label>
        <link refid="compressed_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8034" relation="include">
        </childnode>
        <childnode refid="8035" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8046">
        <label>type_traits</label>
      </node>
      <node id="8049">
        <label>cstring</label>
      </node>
      <node id="8052">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8032" relation="include">
        </childnode>
        <childnode refid="8053" relation="include">
        </childnode>
        <childnode refid="8033" relation="include">
        </childnode>
        <childnode refid="8047" relation="include">
        </childnode>
        <childnode refid="8041" relation="include">
        </childnode>
      </node>
      <node id="8032">
        <label>memory</label>
      </node>
      <node id="8040">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8036" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8056">
        <label>/arrow/cpp/src/arrow/io/api.h</label>
        <link refid="io_2api_8h"/>
      </node>
      <node id="8055">
        <label>/arrow/cpp/src/arrow/io/compressed.h</label>
        <link refid="compressed_8h"/>
        <childnode refid="8056" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1io_1_1_compressed_output_stream" prot="public">arrow::io::CompressedOutputStream</innerclass>
    <innerclass refid="classarrow_1_1io_1_1_compressed_input_stream" prot="public">arrow::io::CompressedInputStream</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1util">arrow::util</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compressed<sp/>stream<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="concurrency_8h" kindref="compound">arrow/io/concurrency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interfaces_8h" kindref="compound">arrow/io/interfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a0d70b006a1f6feca958a1505b38a8cb7" kindref="member">MemoryPool</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespacearrow_1_1util" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1util_1_1_codec" kindref="compound">Codec</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classarrow_1_1io_1_1_compressed_output_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">OutputStream</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;CompressedOutputStream&gt;</ref>&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1util_1_1_codec" kindref="compound">util::Codec</ref>*<sp/>codec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputStream&gt;&amp;<sp/>raw,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputStream<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Abort()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>Tell()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Writable::Write;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Flush()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;OutputStream&gt;<sp/>raw()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_compressed_output_stream" kindref="compound">CompressedOutputStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>Impl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classarrow_1_1io_1_1_compressed_input_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1io_1_1_compressed_input_stream" kindref="compound">CompressedInputStream</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>internal::InputStreamConcurrencyWrapper&lt;CompressedInputStream&gt;<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1io_1_1_compressed_input_stream" kindref="compound">CompressedInputStream</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;CompressedInputStream&gt;</ref>&gt;<sp/>Make(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1util_1_1_codec" kindref="compound">util::Codec</ref>*<sp/>codec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;InputStream&gt;&amp;<sp/>raw,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>InputStream<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;InputStream&gt;<sp/>raw()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>InputStreamConcurrencyWrapper&lt;CompressedInputStream&gt;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1io_1_1_compressed_input_stream" kindref="compound">CompressedInputStream</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1io_1_1_compressed_input_stream" kindref="compound">CompressedInputStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DoClose();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>DoAbort()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoTell()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;int64_t&gt;</ref><sp/>DoRead(int64_t<sp/>nbytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>out);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>DoRead(int64_t<sp/>nbytes);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="arrow_2util_2visibility_8h_1a843cb8dccea68a22a2b9995605cb5a74" kindref="member">ARROW_NO_EXPORT</ref><sp/>Impl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/io/compressed.h"/>
  </compounddef>
</doxygen>
