<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structparquet_1_1arrow_1_1_multipath_level_builder_result" kind="struct" language="C++" prot="public">
    <compoundname>parquet::arrow::MultipathLevelBuilderResult</compoundname>
    <includes refid="path__internal_8h" local="no">parquet/arrow/path_internal.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structparquet_1_1arrow_1_1_multipath_level_builder_result_1ae01f2953068b12bbe83223d5aa1953ad" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt;::<ref refid="classarrow_1_1_array" kindref="compound">arrow::Array</ref> &gt;</type>
        <definition>std::shared_ptr&lt;::arrow::Array&gt; parquet::arrow::MultipathLevelBuilderResult::leaf_array</definition>
        <argsstring></argsstring>
        <name>leaf_array</name>
        <briefdescription>
<para>The Array containing only the values to write (after all nesting has been processed. </para>        </briefdescription>
        <detaileddescription>
<para>No additional processing is done on this array (it is copied as is when visited via a DFS). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="69" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a22c137ff55cbe4c7d382006834cb3709" prot="public" static="no" mutable="no">
        <type>const int16_t *</type>
        <definition>const int16_t* parquet::arrow::MultipathLevelBuilderResult::def_levels</definition>
        <argsstring></argsstring>
        <name>def_levels</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Might be null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="72" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a43109e0908db57c042581e0995968b08" prot="public" static="no" mutable="no">
        <type>const int16_t *</type>
        <definition>const int16_t* parquet::arrow::MultipathLevelBuilderResult::rep_levels</definition>
        <argsstring></argsstring>
        <name>rep_levels</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Might be null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="75" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structparquet_1_1arrow_1_1_multipath_level_builder_result_1ae92319b400660c460792f9cd48a7eb1a" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t parquet::arrow::MultipathLevelBuilderResult::def_rep_level_count</definition>
        <argsstring></argsstring>
        <name>def_rep_level_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of items (int16_t) contained in def/rep_levels when present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="78" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a8eed3c5b9c06f07d183a0aaa306e8fbf" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structparquet_1_1arrow_1_1_element_range" kindref="compound">ElementRange</ref> &gt;</type>
        <definition>std::vector&lt;ElementRange&gt; parquet::arrow::MultipathLevelBuilderResult::post_list_visited_elements</definition>
        <argsstring></argsstring>
        <name>post_list_visited_elements</name>
        <briefdescription>
<para>Contains element ranges of the required visiting on the descendants of the final list ancestor for any leaf node. </para>        </briefdescription>
        <detaileddescription>
<para>The algorithm will attempt to consolidate visited ranges into the smallest number possible.</para><para>This data is necessary to pass along because after producing def-rep levels for each leaf array it is impossible to determine which values have to be sent to parquet when a null list value in a nullable ListArray is non-empty.</para><para>This allows for the parquet writing to determine which values ultimately needs to be written. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="93" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Result for a single leaf array when running the builder on the its root. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/arrow/path_internal.h" line="63" column="1" bodyfile="/arrow/cpp/src/parquet/arrow/path_internal.h" bodystart="63" bodyend="94"/>
    <listofallmembers>
      <member refid="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a22c137ff55cbe4c7d382006834cb3709" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilderResult</scope><name>def_levels</name></member>
      <member refid="structparquet_1_1arrow_1_1_multipath_level_builder_result_1ae92319b400660c460792f9cd48a7eb1a" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilderResult</scope><name>def_rep_level_count</name></member>
      <member refid="structparquet_1_1arrow_1_1_multipath_level_builder_result_1ae01f2953068b12bbe83223d5aa1953ad" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilderResult</scope><name>leaf_array</name></member>
      <member refid="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a8eed3c5b9c06f07d183a0aaa306e8fbf" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilderResult</scope><name>post_list_visited_elements</name></member>
      <member refid="structparquet_1_1arrow_1_1_multipath_level_builder_result_1a43109e0908db57c042581e0995968b08" prot="public" virt="non-virtual"><scope>parquet::arrow::MultipathLevelBuilderResult</scope><name>rep_levels</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
