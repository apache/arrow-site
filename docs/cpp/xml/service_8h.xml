<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="service_8h" kind="file" language="C++">
    <compoundname>service.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="dbi_2hiveserver2_2api_8h" local="yes">/arrow/cpp/src/arrow/dbi/hiveserver2/api.h</includedby>
    <includedby refid="session_8h" local="yes">/arrow/cpp/src/arrow/dbi/hiveserver2/session.h</includedby>
    <includedby refid="arrow_2dbi_2hiveserver2_2thrift__internal_8h" local="yes">/arrow/cpp/src/arrow/dbi/hiveserver2/thrift_internal.h</includedby>
    <incdepgraph>
      <node id="6594">
        <label>cstdint</label>
      </node>
      <node id="6592">
        <label>string</label>
      </node>
      <node id="6590">
        <label>map</label>
      </node>
      <node id="6595">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="6589">
        <label>/arrow/cpp/src/arrow/dbi/hiveserver2/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="6590" relation="include">
        </childnode>
        <childnode refid="6591" relation="include">
        </childnode>
        <childnode refid="6592" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6595" relation="include">
        </childnode>
      </node>
      <node id="6591">
        <label>memory</label>
      </node>
      <node id="6593">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="6594" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6599">
        <label>/arrow/cpp/src/arrow/dbi/hiveserver2/thrift_internal.h</label>
        <link refid="arrow_2dbi_2hiveserver2_2thrift__internal_8h"/>
      </node>
      <node id="6598">
        <label>/arrow/cpp/src/arrow/dbi/hiveserver2/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="6597" relation="include">
        </childnode>
      </node>
      <node id="6596">
        <label>/arrow/cpp/src/arrow/dbi/hiveserver2/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6598" relation="include">
        </childnode>
        <childnode refid="6599" relation="include">
        </childnode>
      </node>
      <node id="6597">
        <label>/arrow/cpp/src/arrow/dbi/hiveserver2/api.h</label>
        <link refid="dbi_2hiveserver2_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config" prot="public">arrow::hiveserver2::HS2ClientConfig</innerclass>
    <innerclass refid="classarrow_1_1hiveserver2_1_1_service" prot="public">arrow::hiveserver2::Service</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1hiveserver2">arrow::hiveserver2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hiveserver2<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Session;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThriftRPC;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stores<sp/>per-session<sp/>or<sp/>per-operation<sp/>configuration<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config" kindref="compound">HS2ClientConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1a63ea4575d826413f1d3019fd736cc35e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1a63ea4575d826413f1d3019fd736cc35e" kindref="member">SetOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>config_[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1a2b01f1efaadd3b66bcfdd87710f419de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1a2b01f1efaadd3b66bcfdd87710f419de" kindref="member">GetOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/>std::string*<sp/>value_out)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_.find(key)<sp/>!=<sp/>config_.end()<sp/>&amp;&amp;<sp/>value_out)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value_out<sp/>=<sp/>config_[key];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1acc3bcb7a50d73e608f4521978057a3e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/><ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config_1acc3bcb7a50d73e608f4521978057a3e2" kindref="member">GetConfig</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>config_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maps<sp/>directly<sp/>to<sp/>TProtocolVersion<sp/>in<sp/>the<sp/>HiveServer2<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" kindref="member">ProtocolVersion</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4ea2c1ce0e20e3280b4fd815d50cb94c0fa" kindref="member">PROTOCOL_V1</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4ea40b5bc8461d5e5d4566b5b6955c0ef58" kindref="member">PROTOCOL_V2</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4eac8355152190e0ca8d854e757e4bb3524" kindref="member">PROTOCOL_V3</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4ea8fc073e958b84bf9e8ffe0caab64e01e" kindref="member">PROTOCOL_V4</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4eaaa0b281a3a26171b0b1912ede77e4c42" kindref="member">PROTOCOL_V5</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4ea96838d96582c4fa443add35878456094" kindref="member">PROTOCOL_V6</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4ead88f5dd0403018406a27f7887d35bbb3" kindref="member">PROTOCOL_V7</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Manages<sp/>a<sp/>connection<sp/>to<sp/>a<sp/>HiveServer2<sp/>server.<sp/>Primarily<sp/>used<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>sessions<sp/>via<sp/>OpenSession.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Service<sp/>objects<sp/>are<sp/>created<sp/>using<sp/>Service::Connect().<sp/>They<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>Close<sp/>called<sp/>on<sp/>them<sp/>before<sp/>they<sp/>can<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>not<sp/>thread-safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unique_ptr&lt;Service&gt;<sp/>service;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>(Service::Connect(host,<sp/>port,<sp/>protocol_version,<sp/>&amp;service).ok())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>do<sp/>some<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>service-&gt;Close();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classarrow_1_1hiveserver2_1_1_service" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>new<sp/>connection<sp/>to<sp/>a<sp/>HS2<sp/>service<sp/>at<sp/>the<sp/>given<sp/>host<sp/>and<sp/>port.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>conn_timeout<sp/>&gt;<sp/>0,<sp/>connection<sp/>attempts<sp/>will<sp/>timeout<sp/>after<sp/>conn_timeout<sp/>ms,<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>timeout<sp/>is<sp/>used.<sp/>protocol_version<sp/>is<sp/>the<sp/>HiveServer2<sp/>protocol<sp/>to<sp/>use,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determines<sp/>whether<sp/>the<sp/>results<sp/>returned<sp/>by<sp/>operations<sp/>from<sp/>this<sp/>service<sp/>are<sp/>row<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>oriented.<sp/>Only<sp/>column<sp/>oriented<sp/>protocols<sp/>are<sp/>currently<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>client<sp/>calling<sp/>Connect<sp/>has<sp/>ownership<sp/>of<sp/>the<sp/>new<sp/>Service<sp/>that<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Executing<sp/>RPCs<sp/>with<sp/>a<sp/>Session<sp/>or<sp/>Operation<sp/>corresponding<sp/>to<sp/>a<sp/>particular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Service<sp/>after<sp/>that<sp/>Service<sp/>has<sp/>been<sp/>closed<sp/>or<sp/>deleted<sp/>in<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Connect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conn_timeout,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" kindref="member">ProtocolVersion</ref><sp/>protocol_version,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Service&gt;*<sp/>service);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>connection.<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>the<sp/>service<sp/>is<sp/>deleted.<sp/>May<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>safely<sp/>called<sp/>on<sp/>an<sp/>invalid<sp/>or<sp/>already<sp/>closed<sp/>service<sp/>-<sp/>will<sp/>only<sp/>return<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>the<sp/>service<sp/>is<sp/>open<sp/>but<sp/>the<sp/>close<sp/>rpc<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Close();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>this<sp/>service<sp/>has<sp/>an<sp/>active<sp/>connection<sp/>to<sp/>the<sp/>HiveServer2<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConnected()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>send<sp/>and<sp/>receive<sp/>timeout<sp/>for<sp/>Thrift<sp/>RPCs<sp/>in<sp/>ms.<sp/>0<sp/>indicates<sp/>no<sp/>timeout,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>values<sp/>are<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRecvTimeout(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSendTimeout(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opens<sp/>a<sp/>new<sp/>HS2<sp/>session<sp/>using<sp/>this<sp/>service.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>client<sp/>calling<sp/>OpenSession<sp/>has<sp/>ownership<sp/>of<sp/>the<sp/>Session<sp/>that<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Operations<sp/>on<sp/>the<sp/>Session<sp/>are<sp/>undefined<sp/>once<sp/>it<sp/>is<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OpenSession(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1hiveserver2_1_1_h_s2_client_config" kindref="compound">HS2ClientConfig</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Session&gt;*<sp/>session)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hides<sp/>Thrift<sp/>objects<sp/>from<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ServiceImpl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1hiveserver2_1_1_service" kindref="compound">Service</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conn_timeout,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearrow_1_1hiveserver2_1a10a1582b875c02d6fb521837c0134b4e" kindref="member">ProtocolVersion</ref><sp/>protocol_version);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opens<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>server.<sp/>Called<sp/>by<sp/>Connect<sp/>before<sp/>new<sp/>service<sp/>is<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>user.<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>OpenSession.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::string<sp/>host_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conn_timeout_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ServiceImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ThriftRPC&gt;<sp/>rpc_;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hiveserver2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/dbi/hiveserver2/service.h"/>
  </compounddef>
</doxygen>
