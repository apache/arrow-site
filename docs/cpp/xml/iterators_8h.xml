<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="iterators_8h" kind="file" language="C++">
    <compoundname>iterators.h</compoundname>
    <includes local="no">utility</includes>
    <includes refid="arrow_2python_2common_8h" local="yes">arrow/python/common.h</includes>
    <includes refid="numpy__internal_8h" local="yes">arrow/python/numpy_internal.h</includes>
    <incdepgraph>
      <node id="9623">
        <label>atomic</label>
      </node>
      <node id="9615">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
      </node>
      <node id="9656">
        <label>limits</label>
      </node>
      <node id="9618">
        <label>cstdint</label>
      </node>
      <node id="9645">
        <label>arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="9646" relation="include">
        </childnode>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9639" relation="include">
        </childnode>
        <childnode refid="9647" relation="include">
        </childnode>
        <childnode refid="9626" relation="include">
        </childnode>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9648" relation="include">
        </childnode>
        <childnode refid="9622" relation="include">
        </childnode>
        <childnode refid="9629" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9639">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9612" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9640" relation="include">
        </childnode>
        <childnode refid="9641" relation="include">
        </childnode>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9642" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9651">
        <label>endian.h</label>
      </node>
      <node id="9660">
        <label>arrow/python/numpy_internal.h</label>
        <link refid="numpy__internal_8h"/>
        <childnode refid="9634" relation="include">
        </childnode>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9605" relation="include">
        </childnode>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9661" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
      </node>
      <node id="9611">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="9612" relation="include">
        </childnode>
        <childnode refid="9613" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9615" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9619" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9657">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="9658" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
      </node>
      <node id="9600">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9602" relation="include">
        </childnode>
        <childnode refid="9660" relation="include">
        </childnode>
      </node>
      <node id="9628">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9655">
        <label>cmath</label>
      </node>
      <node id="9654">
        <label>cassert</label>
      </node>
      <node id="9629">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
      </node>
      <node id="9614">
        <label>string</label>
      </node>
      <node id="9643">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="9647">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9613" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9636">
        <label>numpy/arrayobject.h</label>
      </node>
      <node id="9630">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="9631" relation="include">
        </childnode>
      </node>
      <node id="9632">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9620">
        <label>ostream</label>
      </node>
      <node id="9635">
        <label>numpy/numpyconfig.h</label>
      </node>
      <node id="9621">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="9644">
        <label>arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="9605" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9610" relation="include">
        </childnode>
        <childnode refid="9645" relation="include">
        </childnode>
      </node>
      <node id="9633">
        <label>arrow/util/logging.h</label>
        <link refid="arrow_2util_2logging_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9620" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9640">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9641" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9615" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9650">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="9651" relation="include">
        </childnode>
        <childnode refid="9608" relation="include">
        </childnode>
        <childnode refid="9652" relation="include">
        </childnode>
        <childnode refid="9653" relation="include">
        </childnode>
        <childnode refid="9654" relation="include">
        </childnode>
        <childnode refid="9655" relation="include">
        </childnode>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9612" relation="include">
        </childnode>
        <childnode refid="9656" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9639" relation="include">
        </childnode>
        <childnode refid="9626" relation="include">
        </childnode>
        <childnode refid="9615" relation="include">
        </childnode>
        <childnode refid="9657" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9619" relation="include">
        </childnode>
        <childnode refid="9642" relation="include">
        </childnode>
        <childnode refid="9659" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9653">
        <label>bitset</label>
      </node>
      <node id="9658">
        <label>tuple</label>
      </node>
      <node id="9606">
        <label>Python.h</label>
      </node>
      <node id="9610">
        <label>arrow/python/visibility.h</label>
        <link refid="arrow_2python_2visibility_8h"/>
      </node>
      <node id="9625">
        <label>vector</label>
      </node>
      <node id="9648">
        <label>arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9647" relation="include">
        </childnode>
        <childnode refid="9622" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9649" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9627">
        <label>new</label>
      </node>
      <node id="9601">
        <label>utility</label>
      </node>
      <node id="9642">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9643" relation="include">
        </childnode>
      </node>
      <node id="9652">
        <label>array</label>
      </node>
      <node id="9661">
        <label>sstream</label>
      </node>
      <node id="9649">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9650" relation="include">
        </childnode>
      </node>
      <node id="9638">
        <label>numpy/ufuncobject.h</label>
      </node>
      <node id="9641">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="9613">
        <label>iosfwd</label>
      </node>
      <node id="9607">
        <label>datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="9608" relation="include">
        </childnode>
        <childnode refid="9609" relation="include">
        </childnode>
        <childnode refid="9605" relation="include">
        </childnode>
        <childnode refid="9610" relation="include">
        </childnode>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9622" relation="include">
        </childnode>
        <childnode refid="9633" relation="include">
        </childnode>
      </node>
      <node id="9634">
        <label>arrow/python/numpy_interop.h</label>
        <link refid="numpy__interop_8h"/>
        <childnode refid="9605" relation="include">
        </childnode>
        <childnode refid="9635" relation="include">
        </childnode>
        <childnode refid="9636" relation="include">
        </childnode>
        <childnode refid="9637" relation="include">
        </childnode>
        <childnode refid="9638" relation="include">
        </childnode>
      </node>
      <node id="9604">
        <label>arrow/python/config.h</label>
        <link refid="arrow_2python_2config_8h"/>
        <childnode refid="9605" relation="include">
        </childnode>
        <childnode refid="9634" relation="include">
        </childnode>
        <childnode refid="9610" relation="include">
        </childnode>
      </node>
      <node id="9646">
        <label>cstddef</label>
      </node>
      <node id="9637">
        <label>numpy/arrayscalars.h</label>
      </node>
      <node id="9631">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="9626">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="9627" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9616" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9611" relation="include">
        </childnode>
        <childnode refid="9615" relation="include">
        </childnode>
      </node>
      <node id="9624">
        <label>climits</label>
      </node>
      <node id="9602">
        <label>arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9604" relation="include">
        </childnode>
        <childnode refid="9639" relation="include">
        </childnode>
        <childnode refid="9644" relation="include">
        </childnode>
        <childnode refid="9610" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
      </node>
      <node id="9605">
        <label>arrow/python/platform.h</label>
        <link refid="arrow_2python_2platform_8h"/>
        <childnode refid="9606" relation="include">
        </childnode>
        <childnode refid="9607" relation="include">
        </childnode>
      </node>
      <node id="9609">
        <label>chrono</label>
      </node>
      <node id="9622">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="9623" relation="include">
        </childnode>
        <childnode refid="9624" relation="include">
        </childnode>
        <childnode refid="9618" relation="include">
        </childnode>
        <childnode refid="9613" relation="include">
        </childnode>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9625" relation="include">
        </childnode>
        <childnode refid="9626" relation="include">
        </childnode>
        <childnode refid="9628" relation="include">
        </childnode>
        <childnode refid="9629" relation="include">
        </childnode>
        <childnode refid="9617" relation="include">
        </childnode>
        <childnode refid="9630" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
        <childnode refid="9632" relation="include">
        </childnode>
      </node>
      <node id="9616">
        <label>type_traits</label>
      </node>
      <node id="9608">
        <label>algorithm</label>
      </node>
      <node id="9612">
        <label>cstring</label>
      </node>
      <node id="9619">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="9603" relation="include">
        </childnode>
        <childnode refid="9620" relation="include">
        </childnode>
        <childnode refid="9614" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
        <childnode refid="9621" relation="include">
        </childnode>
      </node>
      <node id="9603">
        <label>memory</label>
      </node>
      <node id="9617">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="9618" relation="include">
        </childnode>
      </node>
      <node id="9659">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="9616" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1py">arrow::py</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2python_2common_8h" kindref="compound">arrow/python/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="numpy__internal_8h" kindref="compound">arrow/python/numpy_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visit<sp/>the<sp/>Python<sp/>sequence,<sp/>calling<sp/>the<sp/>given<sp/>callable<sp/>on<sp/>each<sp/>element.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>callable<sp/>returns<sp/>a<sp/>non-OK<sp/>status,<sp/>iteration<sp/>stops<sp/>and<sp/>the<sp/>status<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>call<sp/>signature<sp/>for<sp/>Visitor<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visit(PyObject*<sp/>obj,<sp/>int64_t<sp/>index,<sp/>bool*<sp/>keep_going)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>keep_going<sp/>is<sp/>set<sp/>to<sp/>false,<sp/>the<sp/>iteration<sp/>terminates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VisitorFunc&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>VisitSequenceGeneric(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>VisitorFunc&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>VisitorFunc<sp/>may<sp/>set<sp/>to<sp/>false<sp/>to<sp/>terminate<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep_going<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyArray_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>PyArrayObject*<sp/>arr_obj<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PyArrayObject*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyArray_NDIM(arr_obj)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Only<sp/>1D<sp/>arrays<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyArray_DESCR(arr_obj)-&gt;type_num<sp/>==<sp/>NPY_OBJECT)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>an<sp/>array<sp/>object,<sp/>we<sp/>can<sp/>fetch<sp/>object<sp/>pointers<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ndarray1DIndexer&lt;PyObject*&gt;<sp/>objects(arr_obj);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>keep_going<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>objects.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(func(objects[i],<sp/>i,<sp/>&amp;keep_going));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>a<sp/>non-object<sp/>array,<sp/>fall<sp/>back<sp/>on<sp/>regular<sp/>sequence<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(note<sp/>PyArray_GETITEM()<sp/>is<sp/>slightly<sp/>different:<sp/>it<sp/>returns<sp/>standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Python<sp/>types,<sp/>not<sp/>Numpy<sp/>scalar<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>path<sp/>is<sp/>inefficient:<sp/>callers<sp/>should<sp/>implement<sp/>dedicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>logic<sp/>for<sp/>non-object<sp/>arrays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PySequence_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_Check(obj)<sp/>||<sp/>PyTuple_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>fast<sp/>item<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>PySequence_Fast_GET_SIZE(obj);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Py_ssize_t<sp/>i<sp/>=<sp/>0;<sp/>keep_going<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>value<sp/>=<sp/>PySequence_Fast_GET_ITEM(obj,<sp/>i);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(func(value,<sp/>static_cast&lt;int64_t&gt;(i),<sp/>&amp;keep_going));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>sequence:<sp/>avoid<sp/>making<sp/>a<sp/>potentially<sp/>large<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>PySequence_Size(obj);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Py_ssize_t<sp/>i<sp/>=<sp/>0;<sp/>keep_going<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OwnedRef<sp/>value_ref(PySequence_ITEM(obj,<sp/>i));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(func(value_ref.obj(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i),<sp/>&amp;keep_going));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a0ff96a9163346d8af8abe40e9809a8ba" kindref="member">Status::TypeError</ref>(</highlight><highlight class="stringliteral">&quot;Object<sp/>is<sp/>not<sp/>a<sp/>sequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visit<sp/>sequence<sp/>with<sp/>no<sp/>null<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VisitorFunc&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>VisitSequence(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>VisitorFunc&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitSequenceGeneric(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj,<sp/>[&amp;func](<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>value,<sp/>int64_t<sp/>i<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>keep_going)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func(value,<sp/>keep_going);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VisitorFunc&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>VisitSequenceMasked(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>mo,<sp/>VisitorFunc&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mo<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!PyArray_Check(mo))<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Null<sp/>mask<sp/>must<sp/>be<sp/>NumPy<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>PyArrayObject*<sp/>mask<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PyArrayObject*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mo);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyArray_NDIM(mask)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Mask<sp/>must<sp/>be<sp/>1D<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>obj_size<sp/>=<sp/>PySequence_Size(obj);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyArray_SIZE(mask)<sp/>!=<sp/>static_cast&lt;int64_t&gt;(obj_size))<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Mask<sp/>was<sp/>a<sp/>different<sp/>length<sp/>from<sp/>sequence<sp/>being<sp/>converted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dtype<sp/>=<sp/><ref refid="namespacearrow_1_1py_1a04b27faa75e48a0e8e019c55f1fc7554" kindref="member">fix_numpy_type_num</ref>(PyArray_DESCR(mask)-&gt;type_num);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype<sp/>==<sp/>NPY_BOOL)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>Ndarray1DIndexer&lt;uint8_t&gt;<sp/>mask_values(mask);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitSequenceGeneric(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj,<sp/>[&amp;func,<sp/>&amp;mask_values](<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>value,<sp/>int64_t<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>keep_going)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func(value,<sp/>mask_values[i],<sp/>keep_going);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" kindref="member">Status::Invalid</ref>(</highlight><highlight class="stringliteral">&quot;Mask<sp/>must<sp/>be<sp/>boolean<sp/>dtype&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>IterateSequence,<sp/>but<sp/>accepts<sp/>any<sp/>generic<sp/>iterable<sp/>(including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-restartable<sp/>iterators,<sp/>e.g.<sp/>generators).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>call<sp/>signature<sp/>for<sp/>VisitorFunc<sp/>must<sp/>be<sp/>Visit(PyObject*,<sp/>bool*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep_going).<sp/>If<sp/>keep_going<sp/>is<sp/>set<sp/>to<sp/>false,<sp/>the<sp/>iteration<sp/>terminates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VisitorFunc&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>VisitIterable(<ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>obj,<sp/>VisitorFunc&amp;&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PySequence_Check(obj))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Numpy<sp/>arrays<sp/>fall<sp/>here<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitSequence(obj,<sp/>std::forward&lt;VisitorFunc&gt;(func));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>on<sp/>the<sp/>iterator<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>OwnedRef<sp/>iter_ref(PyObject_GetIter(obj));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>iter<sp/>=<sp/>iter_ref.obj();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="serialize_8h_1ae19630c1f4ca6d5236b30719d9140013" kindref="member">PyObject</ref>*<sp/>value;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep_going<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(keep_going<sp/>&amp;&amp;<sp/>(value<sp/>=<sp/>PyIter_Next(iter)))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>OwnedRef<sp/>value_ref(value);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a0a03bcf7fdbd9a96c67afa05fc0a545d" kindref="member">RETURN_NOT_OK</ref>(func(value_ref.obj(),<sp/>&amp;keep_going));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="arrow_2python_2common_8h_1ad99052ac0ced9d8a858bd49d5bfd2ebd" kindref="member">RETURN_IF_PYERROR</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>__next__()<sp/>might<sp/>have<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/python/iterators.h"/>
  </compounddef>
</doxygen>
