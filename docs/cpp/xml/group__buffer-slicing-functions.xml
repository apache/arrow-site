<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__buffer-slicing-functions" kind="group">
    <compoundname>buffer-slicing-functions</compoundname>
    <title>Functions for slicing buffers</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__buffer-slicing-functions_1ga23386d14ecaa97d5c1c93b53676c34e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Buffer &gt;</type>
        <definition>static std::shared_ptr&lt;Buffer&gt; arrow::SliceBuffer</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;buffer, const int64_t offset, const int64_t length)</argsstring>
        <name>SliceBuffer</name>
        <param>
          <type>const std::shared_ptr&lt; Buffer &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Construct a view on a buffer at the given offset and length. </para>        </briefdescription>
        <detaileddescription>
<para>This function cannot fail and does not check for errors (except in debug builds) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer.h" line="341" column="1" bodyfile="/arrow/cpp/src/arrow/buffer.h" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer-slicing-functions_1gab051c8518e0c9881042fdf8cf1416cbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Buffer &gt;</type>
        <definition>static std::shared_ptr&lt;Buffer&gt; arrow::SliceBuffer</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;buffer, const int64_t offset)</argsstring>
        <name>SliceBuffer</name>
        <param>
          <type>const std::shared_ptr&lt; Buffer &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Construct a view on a buffer at the given offset, up to the buffer&apos;s end. </para>        </briefdescription>
        <detaileddescription>
<para>This function cannot fail and does not check for errors (except in debug builds) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer.h" line="350" column="1" bodyfile="/arrow/cpp/src/arrow/buffer.h" bodystart="350" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer-slicing-functions_1ga44c8f98a2874248eb7d5658ccee5718e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; Buffer &gt;</type>
        <definition>std::shared_ptr&lt;Buffer&gt; arrow::SliceMutableBuffer</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;buffer, const int64_t offset, const int64_t length)</argsstring>
        <name>SliceMutableBuffer</name>
        <param>
          <type>const std::shared_ptr&lt; Buffer &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Like SliceBuffer, but construct a mutable buffer slice. </para>        </briefdescription>
        <detaileddescription>
<para>If the parent buffer is not mutable, behavior is undefined (it may abort in debug builds). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer-slicing-functions_1ga5eccd6ba6b0902e9eab560b0dc960aae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Buffer &gt;</type>
        <definition>static std::shared_ptr&lt;Buffer&gt; arrow::SliceMutableBuffer</definition>
        <argsstring>(const std::shared_ptr&lt; Buffer &gt; &amp;buffer, const int64_t offset)</argsstring>
        <name>SliceMutableBuffer</name>
        <param>
          <type>const std::shared_ptr&lt; Buffer &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Like SliceBuffer, but construct a mutable buffer slice. </para>        </briefdescription>
        <detaileddescription>
<para>If the parent buffer is not mutable, behavior is undefined (it may abort in debug builds). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/buffer.h" line="368" column="1" bodyfile="/arrow/cpp/src/arrow/buffer.h" bodystart="368" bodyend="372"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
