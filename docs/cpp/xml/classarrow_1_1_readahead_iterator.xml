<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_readahead_iterator" kind="class" language="C++" prot="public">
    <compoundname>arrow::ReadaheadIterator</compoundname>
    <includes refid="iterator_8h" local="no">arrow/util/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classarrow_1_1_readahead_iterator_1aaa8e7a643e8ecda5547bfcc0ae7485f4" prot="private" static="no">
        <type>typename detail::ReadaheadIteratorPromise&lt; T &gt;</type>
        <definition>using arrow::ReadaheadIterator&lt; T &gt;::PromiseType =  typename detail::ReadaheadIteratorPromise&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>PromiseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="463" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_readahead_iterator_1a42751a9e4fcd513ef475277c918c21d9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;Iterator&lt;T&gt; &gt; arrow::ReadaheadIterator&lt; T &gt;::it_</definition>
        <argsstring></argsstring>
        <name>it_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="519" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_readahead_iterator_1a928e13f674a4d815b5afcbe49c6e67e3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; detail::ReadaheadQueue &gt;</type>
        <definition>std::unique_ptr&lt;detail::ReadaheadQueue&gt; arrow::ReadaheadIterator&lt; T &gt;::queue_</definition>
        <argsstring></argsstring>
        <name>queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="520" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_readahead_iterator_1a503d0ccf5113c4c1877d530d59d4e69e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool arrow::ReadaheadIterator&lt; T &gt;::done_</definition>
        <argsstring></argsstring>
        <name>done_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="521" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1af0a91d3c17da39cb528568e784fdc9ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::ReadaheadIterator&lt; T &gt;::ReadaheadIterator</definition>
        <argsstring>()</argsstring>
        <name>ReadaheadIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="467" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="467" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a7dd72c63386058c10ff38fb270600aec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::ReadaheadIterator&lt; T &gt;::~ReadaheadIterator</definition>
        <argsstring>()</argsstring>
        <name>~ReadaheadIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="469" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="469" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a259fa606d34d6c278f1bf2ad487f9825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ReadaheadIterator&lt; T &gt;::ARROW_DEFAULT_MOVE_AND_ASSIGN</definition>
        <argsstring>(ReadaheadIterator)</argsstring>
        <name>ARROW_DEFAULT_MOVE_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1_readahead_iterator" kindref="compound">ReadaheadIterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a5ef1694ea976b20e61e7928171558ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ReadaheadIterator&lt; T &gt;::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(ReadaheadIterator)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1_readahead_iterator" kindref="compound">ReadaheadIterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1ac34cd4c631e159b96d0f28a259648f1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt;T&gt; arrow::ReadaheadIterator&lt; T &gt;::Next</definition>
        <argsstring>()</argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="480" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="480" bodyend="496"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1aff4b0d0b48d706551cc0f3a3efd6a948" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; T &gt; &gt;</type>
        <definition>static Result&lt;Iterator&lt;T&gt; &gt; arrow::ReadaheadIterator&lt; T &gt;::Make</definition>
        <argsstring>(Iterator&lt; T &gt; it, int readahead_queue_size)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; T &gt;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>readahead_queue_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="498" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="498" bodyend="502"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a08e4052dd69b16321d4d59fa0e652087" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::ReadaheadIterator&lt; T &gt;::ReadaheadIterator</definition>
        <argsstring>(Iterator&lt; T &gt; it, int readahead_queue_size)</argsstring>
        <name>ReadaheadIterator</name>
        <param>
          <type><ref refid="classarrow_1_1_iterator" kindref="compound">Iterator</ref>&lt; T &gt;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>readahead_queue_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="505" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a82c89354be0fc0efe5947e34e3a39817" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ReadaheadIterator&lt; T &gt;::Pump</definition>
        <argsstring>()</argsstring>
        <name>Pump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="509" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_readahead_iterator_1a9cb0a794617327f58d32bb9fbd2ed382" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; detail::ReadaheadPromise &gt;</type>
        <definition>std::unique_ptr&lt;detail::ReadaheadPromise&gt; arrow::ReadaheadIterator&lt; T &gt;::MakePromise</definition>
        <argsstring>()</argsstring>
        <name>MakePromise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/util/iterator.h" line="513" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="513" bodyend="515"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Readahead iterator that iterates on the underlying iterator in a separate thread, getting up to N values in advance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/util/iterator.h" line="462" column="1" bodyfile="/arrow/cpp/src/arrow/util/iterator.h" bodystart="462" bodyend="522"/>
    <listofallmembers>
      <member refid="classarrow_1_1_readahead_iterator_1a259fa606d34d6c278f1bf2ad487f9825" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>ARROW_DEFAULT_MOVE_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a5ef1694ea976b20e61e7928171558ff3" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a503d0ccf5113c4c1877d530d59d4e69e" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>done_</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a42751a9e4fcd513ef475277c918c21d9" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>it_</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1aff4b0d0b48d706551cc0f3a3efd6a948" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>Make</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a9cb0a794617327f58d32bb9fbd2ed382" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>MakePromise</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1ac34cd4c631e159b96d0f28a259648f1f" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>Next</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1aaa8e7a643e8ecda5547bfcc0ae7485f4" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>PromiseType</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a82c89354be0fc0efe5947e34e3a39817" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>Pump</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a928e13f674a4d815b5afcbe49c6e67e3" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>queue_</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1af0a91d3c17da39cb528568e784fdc9ab" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>ReadaheadIterator</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a08e4052dd69b16321d4d59fa0e652087" prot="private" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>ReadaheadIterator</name></member>
      <member refid="classarrow_1_1_readahead_iterator_1a7dd72c63386058c10ff38fb270600aec" prot="public" virt="non-virtual"><scope>arrow::ReadaheadIterator</scope><name>~ReadaheadIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
