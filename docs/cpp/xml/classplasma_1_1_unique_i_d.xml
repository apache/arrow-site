<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classplasma_1_1_unique_i_d" kind="class" language="C++" prot="public">
    <compoundname>plasma::UniqueID</compoundname>
    <includes refid="plasma_2common_8h" local="no">plasma/common.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classplasma_1_1_unique_i_d_1a6709e94e6c6c5b1a942327ecbfdd8b5c" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t plasma::UniqueID::id_[kUniqueIDSize]</definition>
        <argsstring>[kUniqueIDSize]</argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="74" column="1" bodyfile="/arrow/cpp/src/plasma/common.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1a35bce29897b79eb6215fbd1b9ebe99bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref></type>
        <definition>static UniqueID plasma::UniqueID::from_binary</definition>
        <argsstring>(const std::string &amp;binary)</argsstring>
        <name>from_binary</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>binary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1aa88147dccaf669a0e220c367feb5120d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t plasma::UniqueID::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="71" column="1" bodyfile="/arrow/cpp/src/plasma/common.h" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1a2b552bb72c3322b5e619cfa2df360e5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool plasma::UniqueID::operator==</definition>
        <argsstring>(const UniqueID &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classplasma_1_1_unique_i_d" kindref="compound">UniqueID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1aed6ceb5e3ed532dce17f2f3776b7c93b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* plasma::UniqueID::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1a6183ad9ace0e3942ec96d8369bf5fbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* plasma::UniqueID::mutable_data</definition>
        <argsstring>()</argsstring>
        <name>mutable_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1a8646de53cd1ec9c3e4e68ba3f92a518a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string plasma::UniqueID::binary</definition>
        <argsstring>() const</argsstring>
        <name>binary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1a7d960f1c661c8bef8281d30f6a2019a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string plasma::UniqueID::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classplasma_1_1_unique_i_d_1ae4ea0d97257424556cf48e8e1b14dc1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t plasma::UniqueID::hash</definition>
        <argsstring>() const</argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/common.h" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/plasma/common.h" line="62" column="1" bodyfile="/arrow/cpp/src/plasma/common.h" bodystart="62" bodyend="75"/>
    <listofallmembers>
      <member refid="classplasma_1_1_unique_i_d_1a8646de53cd1ec9c3e4e68ba3f92a518a" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>binary</name></member>
      <member refid="classplasma_1_1_unique_i_d_1aed6ceb5e3ed532dce17f2f3776b7c93b" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>data</name></member>
      <member refid="classplasma_1_1_unique_i_d_1a35bce29897b79eb6215fbd1b9ebe99bb" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>from_binary</name></member>
      <member refid="classplasma_1_1_unique_i_d_1ae4ea0d97257424556cf48e8e1b14dc1d" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>hash</name></member>
      <member refid="classplasma_1_1_unique_i_d_1a7d960f1c661c8bef8281d30f6a2019a7" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>hex</name></member>
      <member refid="classplasma_1_1_unique_i_d_1a6709e94e6c6c5b1a942327ecbfdd8b5c" prot="private" virt="non-virtual"><scope>plasma::UniqueID</scope><name>id_</name></member>
      <member refid="classplasma_1_1_unique_i_d_1a6183ad9ace0e3942ec96d8369bf5fbff" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>mutable_data</name></member>
      <member refid="classplasma_1_1_unique_i_d_1a2b552bb72c3322b5e619cfa2df360e5a" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>operator==</name></member>
      <member refid="classplasma_1_1_unique_i_d_1aa88147dccaf669a0e220c367feb5120d" prot="public" virt="non-virtual"><scope>plasma::UniqueID</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
