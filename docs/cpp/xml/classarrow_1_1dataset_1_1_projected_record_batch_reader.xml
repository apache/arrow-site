<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_projected_record_batch_reader" kind="class" language="C++" prot="public">
    <compoundname>arrow::dataset::ProjectedRecordBatchReader</compoundname>
    <basecompoundref refid="classarrow_1_1_record_batch_reader" prot="public" virt="non-virtual">arrow::RecordBatchReader</basecompoundref>
    <includes refid="dataset__internal_8h" local="no">arrow/dataset/dataset_internal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a46d1c3537bf65fbc561b4dc40a8648f7" prot="private" static="no" mutable="no">
        <type><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref></type>
        <definition>RecordBatchProjector arrow::dataset::ProjectedRecordBatchReader::projector_</definition>
        <argsstring></argsstring>
        <name>projector_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="188" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1ac100312009a1c9b06353033e3ca56927" prot="private" static="no" mutable="no">
        <type><ref refid="namespacearrow_1a98532acfa6b99a8c35c14d2484cd65bb" kindref="member">RecordBatchIterator</ref></type>
        <definition>RecordBatchIterator arrow::dataset::ProjectedRecordBatchReader::wrapped_</definition>
        <argsstring></argsstring>
        <name>wrapped_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="189" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a9fa2a3446241aeeab9edd87388f0fe10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::dataset::ProjectedRecordBatchReader::Make</definition>
        <argsstring>(MemoryPool *pool, RecordBatchProjector projector, RecordBatchIterator wrapped, RecordBatchIterator *out)</argsstring>
        <name>Make</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref></type>
          <declname>projector</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1a98532acfa6b99a8c35c14d2484cd65bb" kindref="member">RecordBatchIterator</ref></type>
          <declname>wrapped</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1a98532acfa6b99a8c35c14d2484cd65bb" kindref="member">RecordBatchIterator</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="163" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="163" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1ae7afaf53369bfd6b5ee24f44332b75f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::dataset::ProjectedRecordBatchReader::ReadNext</definition>
        <argsstring>(std::shared_ptr&lt; RecordBatch &gt; *out) override</argsstring>
        <name>ReadNext</name>
        <reimplements refid="classarrow_1_1_record_batch_reader_1aaffe944df9d8a4c3e6592eb2f8f78f9f">ReadNext</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
<para>Read the next record batch in the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Return null for batch when reaching end of stream</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">batch</parametername>
</parameternamelist>
<parameterdescription>
<para>the next loaded batch, null at end of stream </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="170" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="170" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a022dde86a583326a8fe02d5616866fb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Schema&gt; arrow::dataset::ProjectedRecordBatchReader::schema</definition>
        <argsstring>() const override</argsstring>
        <name>schema</name>
        <reimplements refid="classarrow_1_1_record_batch_reader_1ad2ded865a6720e61e4685cfd34ed377f">schema</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the shared schema of the record batches in the stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="181" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="181" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a00a9da9abd56da0a6445e3c42eddf824" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::ProjectedRecordBatchReader::ProjectedRecordBatchReader</definition>
        <argsstring>(MemoryPool *pool, RecordBatchProjector projector, RecordBatchIterator wrapped)</argsstring>
        <name>ProjectedRecordBatchReader</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref></type>
          <declname>projector</declname>
        </param>
        <param>
          <type><ref refid="namespacearrow_1a98532acfa6b99a8c35c14d2484cd65bb" kindref="member">RecordBatchIterator</ref></type>
          <declname>wrapped</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="184" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="184" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wraps a RecordBatchIterator and projects each yielded batch using the given projector. </para>    </briefdescription>
    <detaileddescription>
<para>Note that as with <ref refid="classarrow_1_1dataset_1_1_record_batch_projector" kindref="compound">RecordBatchProjector</ref>, <ref refid="classarrow_1_1dataset_1_1_projected_record_batch_reader" kindref="compound">ProjectedRecordBatchReader</ref> is most efficient when projecting record batches with a consistent schema (for example batches from a table), but it can project record batches having any schema. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3403">
        <label>arrow::RecordBatchReader</label>
        <link refid="classarrow_1_1_record_batch_reader"/>
      </node>
      <node id="3402">
        <label>arrow::dataset::ProjectedRecordBatchReader</label>
        <link refid="classarrow_1_1dataset_1_1_projected_record_batch_reader"/>
        <childnode refid="3403" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3405">
        <label>arrow::RecordBatchReader</label>
        <link refid="classarrow_1_1_record_batch_reader"/>
      </node>
      <node id="3404">
        <label>arrow::dataset::ProjectedRecordBatchReader</label>
        <link refid="classarrow_1_1dataset_1_1_projected_record_batch_reader"/>
        <childnode refid="3405" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/dataset_internal.h" line="161" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/dataset_internal.h" bodystart="161" bodyend="190"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a9fa2a3446241aeeab9edd87388f0fe10" prot="public" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>Make</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a0463e37c1a5e1875b9d228052713d192" prot="public" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>Next</name></member>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a00a9da9abd56da0a6445e3c42eddf824" prot="private" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>ProjectedRecordBatchReader</name></member>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a46d1c3537bf65fbc561b4dc40a8648f7" prot="private" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>projector_</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a8fd184ee67656e5ca4758335fb82737d" prot="public" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a4c4cedba15636348d36be585b7443d58" prot="public" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>ReadAll</name></member>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1ae7afaf53369bfd6b5ee24f44332b75f3" prot="public" virt="virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>ReadNext</name></member>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1a022dde86a583326a8fe02d5616866fb3" prot="public" virt="virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>schema</name></member>
      <member refid="classarrow_1_1dataset_1_1_projected_record_batch_reader_1ac100312009a1c9b06353033e3ca56927" prot="private" virt="non-virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>wrapped_</name></member>
      <member refid="classarrow_1_1_record_batch_reader_1a77922fab827a0f039aeb8b8a7c06ae4c" prot="public" virt="virtual"><scope>arrow::dataset::ProjectedRecordBatchReader</scope><name>~RecordBatchReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
