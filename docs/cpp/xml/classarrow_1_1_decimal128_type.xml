<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_decimal128_type" kind="class" language="C++" prot="public">
    <compoundname>arrow::Decimal128Type</compoundname>
    <basecompoundref refid="classarrow_1_1_decimal_type" prot="public" virt="non-virtual">arrow::DecimalType</basecompoundref>
    <includes refid="type_8h" local="no">arrow/type.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classarrow_1_1_decimal128_type_1a7ea0448809b48b8d9ad921807433a7c9" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref></type>
        <definition>constexpr Type::type arrow::Decimal128Type::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= <ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44a014fe7104b592dbd7c70e4e861774a63" kindref="member">Type::DECIMAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="969" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_decimal128_type_1ab389aafefe37140f196113f302247b3c" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t arrow::Decimal128Type::kMinPrecision</definition>
        <argsstring></argsstring>
        <name>kMinPrecision</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="985" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="985" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_decimal128_type_1a3beb616ece98e2f3cc314b676e87c188" prot="public" static="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t arrow::Decimal128Type::kMaxPrecision</definition>
        <argsstring></argsstring>
        <name>kMaxPrecision</name>
        <initializer>= 38</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="986" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="986" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1a0947b8f705f447ae896c62e0caede55a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>static constexpr const char* arrow::Decimal128Type::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="971" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="971" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1a2b448df63022091188871a902e00b5e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;DataType&gt; &gt; arrow::Decimal128Type::Make</definition>
        <argsstring>(int32_t precision, int32_t scale)</argsstring>
        <name>Make</name>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para><ref refid="classarrow_1_1_decimal128_type" kindref="compound">Decimal128Type</ref> constructor that returns an error on invalid input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="977" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1ad68128bbb790ed8430f161b8aa433559" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Decimal128Type::Make</definition>
        <argsstring>(int32_t precision, int32_t scale, std::shared_ptr&lt; DataType &gt; *out)</argsstring>
        <name>Make</name>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="980" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1a52777308aaa90097b6dff7aba27482c1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::Decimal128Type::Decimal128Type</definition>
        <argsstring>(int32_t precision, int32_t scale)</argsstring>
        <name>Decimal128Type</name>
        <param>
          <type>int32_t</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para><ref refid="classarrow_1_1_decimal128_type" kindref="compound">Decimal128Type</ref> constructor that aborts on invalid input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="974" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1aa18803bc8d4540498e2bc697353daa96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::Decimal128Type::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classarrow_1_1_fixed_size_binary_type_1a470c5c8c75c6480ff99c8abd16e375a2">ToString</reimplements>
        <briefdescription>
<para>A string representation of the type, including any children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="982" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_decimal128_type_1a369b5ae40c271133e15571f9c6198170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::Decimal128Type::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classarrow_1_1_fixed_size_binary_type_1af533276c83d45b5cefa826a169bef6c7">name</reimplements>
        <briefdescription>
<para>A string name of the type, omitting any child fields. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental API </para></simplesect>
<simplesect kind="since"><para>0.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/type.h" line="983" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="983" bodyend="983"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete type class for 128-bit decimal data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1120">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="1115">
        <label>arrow::DecimalType</label>
        <link refid="classarrow_1_1_decimal_type"/>
        <childnode refid="1116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1116">
        <label>arrow::FixedSizeBinaryType</label>
        <link refid="classarrow_1_1_fixed_size_binary_type"/>
        <childnode refid="1117" relation="public-inheritance">
        </childnode>
        <childnode refid="1120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1118">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1119">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1117">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="1118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1114">
        <label>arrow::Decimal128Type</label>
        <link refid="classarrow_1_1_decimal128_type"/>
        <childnode refid="1115" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1127">
        <label>arrow::ParametricType</label>
        <link refid="classarrow_1_1_parametric_type"/>
      </node>
      <node id="1122">
        <label>arrow::DecimalType</label>
        <link refid="classarrow_1_1_decimal_type"/>
        <childnode refid="1123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1123">
        <label>arrow::FixedSizeBinaryType</label>
        <link refid="classarrow_1_1_fixed_size_binary_type"/>
        <childnode refid="1124" relation="public-inheritance">
        </childnode>
        <childnode refid="1127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1125">
        <label>arrow::DataType</label>
        <link refid="classarrow_1_1_data_type"/>
        <childnode refid="1126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1126">
        <label>arrow::detail::Fingerprintable</label>
      </node>
      <node id="1124">
        <label>arrow::FixedWidthType</label>
        <link refid="classarrow_1_1_fixed_width_type"/>
        <childnode refid="1125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1121">
        <label>arrow::Decimal128Type</label>
        <link refid="classarrow_1_1_decimal128_type"/>
        <childnode refid="1122" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/type.h" line="967" column="1" bodyfile="/arrow/cpp/src/arrow/type.h" bodystart="967" bodyend="987"/>
    <listofallmembers>
      <member refid="classarrow_1_1_data_type_1a97571c4039e363f7ebcb09f7c789064a" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1afc7baa826c87aec4d35172d75974b0e0" prot="public" virt="virtual"><scope>arrow::Decimal128Type</scope><name>bit_width</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a684663b4cfeedd523eece039c6c0955a" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>byte_width</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a2dfa5ac6ba9a94d355533f5b23a7b1bc" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>byte_width_</name></member>
      <member refid="classarrow_1_1_data_type_1a3c9f77b8d895abd8618566386cbeb7c0" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>child</name></member>
      <member refid="classarrow_1_1_data_type_1a36061c037a2e6e974cc3b22dfb6a5bac" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>children</name></member>
      <member refid="classarrow_1_1_data_type_1a8dd2f042289733133c386463afcea902" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>children_</name></member>
      <member refid="classarrow_1_1_decimal_type_1aa8556ca6f346fc23d79db1aaa84a8298" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>ComputeFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1e0bf7cc98ce39872b8044f375d7de6b" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>ComputeMetadataFingerprint</name></member>
      <member refid="classarrow_1_1_data_type_1a1b8a7ece05983649f67396177f40e844" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>DataType</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a52777308aaa90097b6dff7aba27482c1" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Decimal128Type</name></member>
      <member refid="classarrow_1_1_decimal_type_1a543c9830ae2a5ceb96cb5d2d62b85092" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>DecimalType</name></member>
      <member refid="classarrow_1_1_data_type_1aaf003113bb8f4c51a03a16f4b27a52bb" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_data_type_1ae974f4c707ef998d25368d278818af6b" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a0a6a0f0fed4fbaafaff6d6c74569d5ac" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>FixedSizeBinaryType</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a3f57f5b4f09bf5d93df7a33600427500" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>FixedSizeBinaryType</name></member>
      <member refid="classarrow_1_1_data_type_1a5ec6a1c93420c68e9c8065d4a56ad645" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>id</name></member>
      <member refid="classarrow_1_1_data_type_1aa2704f1cfc50018d02e109b32f67e422" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>id_</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a809705b1401eb473cb45de6c3ad97507" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>is_utf8</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a3beb616ece98e2f3cc314b676e87c188" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>kMaxPrecision</name></member>
      <member refid="classarrow_1_1_decimal128_type_1ab389aafefe37140f196113f302247b3c" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>kMinPrecision</name></member>
      <member refid="classarrow_1_1_fixed_size_binary_type_1a272445981e412ccca95784e133f0a6cc" prot="public" virt="virtual"><scope>arrow::Decimal128Type</scope><name>layout</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a2b448df63022091188871a902e00b5e9" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Make</name></member>
      <member refid="classarrow_1_1_decimal128_type_1ad68128bbb790ed8430f161b8aa433559" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>Make</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a369b5ae40c271133e15571f9c6198170" prot="public" virt="virtual"><scope>arrow::Decimal128Type</scope><name>name</name></member>
      <member refid="classarrow_1_1_data_type_1ac8920179a6c1e7f434c495d5ec4662f1" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_decimal_type_1ae0614854692c96eb26115585d83448b8" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>precision</name></member>
      <member refid="classarrow_1_1_decimal_type_1a09ebc67c090d23e5c0851da68b0a9745" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>precision_</name></member>
      <member refid="classarrow_1_1_decimal_type_1af2d0aac6bef37b491f35a6464619a736" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>scale</name></member>
      <member refid="classarrow_1_1_decimal_type_1a8cdef6e38e4f984e614f4c81baaa8d1c" prot="protected" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>scale_</name></member>
      <member refid="classarrow_1_1_decimal128_type_1aa18803bc8d4540498e2bc697353daa96" prot="public" virt="virtual"><scope>arrow::Decimal128Type</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a7ea0448809b48b8d9ad921807433a7c9" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>type_id</name></member>
      <member refid="classarrow_1_1_decimal128_type_1a0947b8f705f447ae896c62e0caede55a" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>type_name</name></member>
      <member refid="classarrow_1_1_data_type_1a268b7e57ebec17a48930c73d8c0605d2" prot="public" virt="non-virtual"><scope>arrow::Decimal128Type</scope><name>~DataType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
