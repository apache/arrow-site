<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_no_op_auth_handler" kind="class" language="C++" prot="public">
    <compoundname>arrow::flight::NoOpAuthHandler</compoundname>
    <basecompoundref refid="classarrow_1_1flight_1_1_server_auth_handler" prot="public" virt="non-virtual">arrow::flight::ServerAuthHandler</basecompoundref>
    <includes refid="server__auth_8h" local="no">arrow/flight/server_auth.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_no_op_auth_handler_1a91c6be896e586f707ccf81e0cffdab64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::NoOpAuthHandler::~NoOpAuthHandler</definition>
        <argsstring>() override</argsstring>
        <name>~NoOpAuthHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server_auth.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_no_op_auth_handler_1a6d919f385cf87852afb6ff53e056898b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::NoOpAuthHandler::Authenticate</definition>
        <argsstring>(ServerAuthSender *outgoing, ServerAuthReader *incoming) override</argsstring>
        <name>Authenticate</name>
        <reimplements refid="classarrow_1_1flight_1_1_server_auth_handler_1a0894c7d60d620e5cafb3ffdcd4924766">Authenticate</reimplements>
        <param>
          <type><ref refid="classarrow_1_1flight_1_1_server_auth_sender" kindref="compound">ServerAuthSender</ref> *</type>
          <declname>outgoing</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1flight_1_1_server_auth_reader" kindref="compound">ServerAuthReader</ref> *</type>
          <declname>incoming</declname>
        </param>
        <briefdescription>
<para>Authenticate the client on initial connection. </para>        </briefdescription>
        <detaileddescription>
<para>The server can send and read responses from the client at any time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server_auth.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_no_op_auth_handler_1a4983860a1b23abafe41c0192008eebd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::NoOpAuthHandler::IsValid</definition>
        <argsstring>(const std::string &amp;token, std::string *peer_identity) override</argsstring>
        <name>IsValid</name>
        <reimplements refid="classarrow_1_1flight_1_1_server_auth_handler_1aa756900200309dfbe26e1f90d29151e6">IsValid</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>peer_identity</declname>
        </param>
        <briefdescription>
<para>Validate a per-call client token. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">token</parametername>
</parameternamelist>
<parameterdescription>
<para>The client token. May be the empty string if the client does not provide a token. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">peer_identity</parametername>
</parameternamelist>
<parameterdescription>
<para>The identity of the peer, if this authentication method supports it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> OK if the token is valid, any other status if validation failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/server_auth.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An authentication mechanism that does nothing. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3163">
        <label>arrow::flight::ServerAuthHandler</label>
        <link refid="classarrow_1_1flight_1_1_server_auth_handler"/>
      </node>
      <node id="3162">
        <label>arrow::flight::NoOpAuthHandler</label>
        <link refid="classarrow_1_1flight_1_1_no_op_auth_handler"/>
        <childnode refid="3163" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3165">
        <label>arrow::flight::ServerAuthHandler</label>
        <link refid="classarrow_1_1flight_1_1_server_auth_handler"/>
      </node>
      <node id="3164">
        <label>arrow::flight::NoOpAuthHandler</label>
        <link refid="classarrow_1_1flight_1_1_no_op_auth_handler"/>
        <childnode refid="3165" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/flight/server_auth.h" line="70" column="1" bodyfile="/arrow/cpp/src/arrow/flight/server_auth.h" bodystart="70" bodyend="75"/>
    <listofallmembers>
      <member refid="classarrow_1_1flight_1_1_no_op_auth_handler_1a6d919f385cf87852afb6ff53e056898b" prot="public" virt="virtual"><scope>arrow::flight::NoOpAuthHandler</scope><name>Authenticate</name></member>
      <member refid="classarrow_1_1flight_1_1_no_op_auth_handler_1a4983860a1b23abafe41c0192008eebd0" prot="public" virt="virtual"><scope>arrow::flight::NoOpAuthHandler</scope><name>IsValid</name></member>
      <member refid="classarrow_1_1flight_1_1_no_op_auth_handler_1a91c6be896e586f707ccf81e0cffdab64" prot="public" virt="non-virtual"><scope>arrow::flight::NoOpAuthHandler</scope><name>~NoOpAuthHandler</name></member>
      <member refid="classarrow_1_1flight_1_1_server_auth_handler_1a508068757ca92ff92a9bbc420614e0fc" prot="public" virt="virtual"><scope>arrow::flight::NoOpAuthHandler</scope><name>~ServerAuthHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
