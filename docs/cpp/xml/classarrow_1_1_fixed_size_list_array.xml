<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_fixed_size_list_array" kind="class" language="C++" prot="public">
    <compoundname>arrow::FixedSizeListArray</compoundname>
    <basecompoundref refid="classarrow_1_1_array" prot="public" virt="non-virtual">arrow::Array</basecompoundref>
    <includes refid="array_8h" local="no">arrow/array.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classarrow_1_1_fixed_size_list_array_1a34018edada75e58eaf28f02196a74551" prot="public" static="no">
        <type><ref refid="classarrow_1_1_fixed_size_list_type" kindref="compound">FixedSizeListType</ref></type>
        <definition>using arrow::FixedSizeListArray::TypeClass =  FixedSizeListType</definition>
        <argsstring></argsstring>
        <name>TypeClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="777" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classarrow_1_1_fixed_size_list_array_1a008d02e638ef5e14c155f7505169b8c5" prot="public" static="no">
        <type><ref refid="classarrow_1_1_fixed_size_list_type_1afb8571e18fc3b51ef6f671fffabdea3c" kindref="member">TypeClass::offset_type</ref></type>
        <definition>using arrow::FixedSizeListArray::offset_type =  TypeClass::offset_type</definition>
        <argsstring></argsstring>
        <name>offset_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="778" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_list_array_1a61f79108a788ebca0b611eab5c862673" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeListArray::list_size_</definition>
        <argsstring></argsstring>
        <name>list_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="814" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="814" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_fixed_size_list_array_1ae5222159496eba78ed9a6563c4db37f7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Array&gt; arrow::FixedSizeListArray::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="817" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1ac4a5ce107c58f16f9548d726e636491e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::FixedSizeListArray::FixedSizeListArray</definition>
        <argsstring>(const std::shared_ptr&lt; ArrayData &gt; &amp;data)</argsstring>
        <name>FixedSizeListArray</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a51cb08777716a776f62dbc9b99340135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::FixedSizeListArray::FixedSizeListArray</definition>
        <argsstring>(const std::shared_ptr&lt; DataType &gt; &amp;type, int64_t length, const std::shared_ptr&lt; Array &gt; &amp;values, const std::shared_ptr&lt; Buffer &gt; &amp;null_bitmap=NULLPTR, int64_t null_count=kUnknownNullCount, int64_t offset=0)</argsstring>
        <name>FixedSizeListArray</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref> &gt; &amp;</type>
          <declname>null_bitmap</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>null_count</declname>
          <defval><ref refid="namespacearrow_1a2bc89c993234944fd7bdbdfe95812080" kindref="member">kUnknownNullCount</ref></defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a54c107103f0a45ac7bd4679c3c81ee85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classarrow_1_1_fixed_size_list_type" kindref="compound">FixedSizeListType</ref> *</type>
        <definition>const FixedSizeListType* arrow::FixedSizeListArray::list_type</definition>
        <argsstring>() const</argsstring>
        <name>list_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="787" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1ac323ad93f8a6a2078cf093e2742a51a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Array&gt; arrow::FixedSizeListArray::values</definition>
        <argsstring>() const</argsstring>
        <name>values</name>
        <briefdescription>
<para>Return array object containing the list&apos;s values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a1a8414fe0d1438738070e5e1106fdcd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::FixedSizeListArray::value_type</definition>
        <argsstring>() const</argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="792" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a4e1606690a77fd804727106948d43143" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeListArray::value_offset</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>value_offset</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="795" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a14069d3cea9a7b8984fdeef97c775fbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t arrow::FixedSizeListArray::value_length</definition>
        <argsstring>(int64_t i=0) const</argsstring>
        <name>value_length</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="799" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="799" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1aad8caf0d4af38b0d6230326f891d1a88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Array&gt; arrow::FixedSizeListArray::value_slice</definition>
        <argsstring>(int64_t i) const</argsstring>
        <name>value_slice</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="800" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="800" bodyend="802"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a74e7133427e29bc0e9b4c9986d805d63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &gt;</type>
        <definition>static Result&lt;std::shared_ptr&lt;Array&gt; &gt; arrow::FixedSizeListArray::FromArrays</definition>
        <argsstring>(const std::shared_ptr&lt; Array &gt; &amp;values, int32_t list_size)</argsstring>
        <name>FromArrays</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>list_size</declname>
        </param>
        <briefdescription>
<para>Construct <ref refid="classarrow_1_1_fixed_size_list_array" kindref="compound">FixedSizeListArray</ref> from child value array and value_length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classarrow_1_1_array" kindref="compound">Array</ref> containing list values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The fixed length of each list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Will have length equal to values.length() / list_size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="809" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_fixed_size_list_array_1a4b65a01c862a5419ed4199f2dee787cb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::FixedSizeListArray::SetData</definition>
        <argsstring>(const std::shared_ptr&lt; ArrayData &gt; &amp;data)</argsstring>
        <name>SetData</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array.h" line="813" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> class for fixed size list data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1763">
        <label>arrow::Array</label>
        <link refid="classarrow_1_1_array"/>
      </node>
      <node id="1762">
        <label>arrow::FixedSizeListArray</label>
        <link refid="classarrow_1_1_fixed_size_list_array"/>
        <childnode refid="1763" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1765">
        <label>arrow::Array</label>
        <link refid="classarrow_1_1_array"/>
      </node>
      <node id="1764">
        <label>arrow::FixedSizeListArray</label>
        <link refid="classarrow_1_1_fixed_size_list_array"/>
        <childnode refid="1765" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array.h" line="775" column="1" bodyfile="/arrow/cpp/src/arrow/array.h" bodystart="775" bodyend="818"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_1a168f3ec5c96688dadeaf015692e4bef8" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Accept</name></member>
      <member refid="classarrow_1_1_array_1a381e6469686eccd2545cf1dc171f6cb7" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>ApproxEquals</name></member>
      <member refid="classarrow_1_1_array_1a2ed35161e2e2200bf4dcadb6ff11d7fb" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>ApproxEquals</name></member>
      <member refid="classarrow_1_1_array_1ae44d3c2fae3a8578fe829da20c6732f8" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Array</name></member>
      <member refid="classarrow_1_1_array_1aeca84e9b3a1f1e6e3f83a61c90e376a9" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>data</name></member>
      <member refid="classarrow_1_1_array_1a2631dce1d5868216cba0a140e81ef14e" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>data_</name></member>
      <member refid="classarrow_1_1_array_1a95ff1c7489e9d2fd5ff52fde1b8b5c46" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Diff</name></member>
      <member refid="classarrow_1_1_array_1a686cf58bab513d8ecfe3a285f4562eab" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_array_1a99913841c11eb73c61a25c018f57ca40" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1ac4a5ce107c58f16f9548d726e636491e" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>FixedSizeListArray</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a51cb08777716a776f62dbc9b99340135" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>FixedSizeListArray</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a74e7133427e29bc0e9b4c9986d805d63" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>FromArrays</name></member>
      <member refid="classarrow_1_1_array_1a18c61cd4c8c158a30f30023eabc83acb" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>IsNull</name></member>
      <member refid="classarrow_1_1_array_1ae554bfb313cd6b161f63fb2966dbd662" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>IsValid</name></member>
      <member refid="classarrow_1_1_array_1a49c7fb3f73d2d43e7338591c5a8bd8bf" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>length</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a61f79108a788ebca0b611eab5c862673" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>list_size_</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a54c107103f0a45ac7bd4679c3c81ee85" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>list_type</name></member>
      <member refid="classarrow_1_1_array_1a76c4756ac85b29f9135064d68d2ef908" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>null_bitmap</name></member>
      <member refid="classarrow_1_1_array_1a7a8838fbc97b9b3b8ca15cb163b2027c" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>null_bitmap_data</name></member>
      <member refid="classarrow_1_1_array_1aed59d9e8608229ff3808983cdc908ccd" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>null_bitmap_data_</name></member>
      <member refid="classarrow_1_1_array_1a0537d3b69a889b951e88be2fe9f3d96a" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_1a183e69c91c531609f42a29b593119d58" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>num_fields</name></member>
      <member refid="classarrow_1_1_array_1a1a0c6c1aa06cffd1dcb3813f0d24b2fd" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>offset</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a008d02e638ef5e14c155f7505169b8c5" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>offset_type</name></member>
      <member refid="classarrow_1_1_array_1ace5ac1affa59422d70a8b3f6929b70bc" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>RangeEquals</name></member>
      <member refid="classarrow_1_1_array_1a537467bcecb4471b18d3271f14ca9ad2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>RangeEquals</name></member>
      <member refid="classarrow_1_1_array_1acf138d427e7f8a8c56cac7f9d9e64db3" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>RangeEquals</name></member>
      <member refid="classarrow_1_1_array_1a28f8f8d92439489bbd1727392123b0f7" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>RangeEquals</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a4b65a01c862a5419ed4199f2dee787cb" prot="protected" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>SetData</name></member>
      <member refid="classarrow_1_1_array_1ae32f72c78fe10ce17f0a817e302e17d1" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Slice</name></member>
      <member refid="classarrow_1_1_array_1a5cf4c3330e850670aa52dab3b21869ea" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Slice</name></member>
      <member refid="classarrow_1_1_array_1a41c7af0e40ac55f2ce11785fea3e051e" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_array_1a635a694fbadb0bfa731beb97df2ef7ea" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>type</name></member>
      <member refid="classarrow_1_1_array_1a155d9d827415438f976e3cb31e0a55f6" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>type_id</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a34018edada75e58eaf28f02196a74551" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>TypeClass</name></member>
      <member refid="classarrow_1_1_array_1ad62bad8fde2bb8fbd5a52df3fa4bd56c" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>Validate</name></member>
      <member refid="classarrow_1_1_array_1a793321da66d2d1839e6c89a956e4cb07" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>ValidateFull</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a14069d3cea9a7b8984fdeef97c775fbf" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>value_length</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a4e1606690a77fd804727106948d43143" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>value_offset</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1aad8caf0d4af38b0d6230326f891d1a88" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>value_slice</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1a1a8414fe0d1438738070e5e1106fdcd2" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>value_type</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1ac323ad93f8a6a2078cf093e2742a51a6" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>values</name></member>
      <member refid="classarrow_1_1_fixed_size_list_array_1ae5222159496eba78ed9a6563c4db37f7" prot="private" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>values_</name></member>
      <member refid="classarrow_1_1_array_1aa2b5f248c09a41c089e1fbc911beecb0" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>View</name></member>
      <member refid="classarrow_1_1_array_1ad015904c8c6e5e2513c791fb577f2679" prot="public" virt="non-virtual"><scope>arrow::FixedSizeListArray</scope><name>View</name></member>
      <member refid="classarrow_1_1_array_1addd582eec9488bca2b3379b71fef6ce5" prot="public" virt="virtual"><scope>arrow::FixedSizeListArray</scope><name>~Array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
