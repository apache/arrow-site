<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_page_reader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>parquet::PageReader</compoundname>
    <includes refid="column__reader_8h" local="no">parquet/column_reader.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_page_reader_1a0633afd10b6ad06c542475c6f9b43e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual parquet::PageReader::~PageReader</definition>
        <argsstring>()=default</argsstring>
        <name>~PageReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_reader.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_reader_1aac1deba56f4f639e54694b769a26b37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_page" kindref="compound">Page</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Page&gt; parquet::PageReader::NextPage</definition>
        <argsstring>()=0</argsstring>
        <name>NextPage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_reader.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_page_reader_1a7722f794d43e6eba5efe34c1b052cdc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void parquet::PageReader::set_max_page_header_size</definition>
        <argsstring>(uint32_t size)=0</argsstring>
        <name>set_max_page_header_size</name>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_reader.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classparquet_1_1_page_reader_1a5f9da3c8060896a10218325775feee10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1_page_reader" kindref="compound">PageReader</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;PageReader&gt; parquet::PageReader::Open</definition>
        <argsstring>(std::shared_ptr&lt; ArrowInputStream &gt; stream, int64_t total_num_rows, Compression::type codec, ::arrow::MemoryPool *pool=::arrow::default_memory_pool(), const CryptoContext *ctx=NULLPTR)</argsstring>
        <name>Open</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="namespaceparquet_1a69cbbbff0bc1abb6d4e61f9762c86da7" kindref="member">ArrowInputStream</ref> &gt;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>total_num_rows</declname>
        </param>
        <param>
          <type><ref refid="structarrow_1_1_compression_1a8abcec0357242c077a2905d645f2163f" kindref="member">Compression::type</ref></type>
          <declname>codec</declname>
        </param>
        <param>
          <type>::<ref refid="classarrow_1_1_memory_pool" kindref="compound">arrow::MemoryPool</ref> *</type>
          <declname>pool</declname>
          <defval>::<ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">arrow::default_memory_pool</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="structparquet_1_1_crypto_context" kindref="compound">CryptoContext</ref> *</type>
          <declname>ctx</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/column_reader.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/column_reader.h" line="99" column="1" bodyfile="/arrow/cpp/src/parquet/column_reader.h" bodystart="99" bodyend="113"/>
    <listofallmembers>
      <member refid="classparquet_1_1_page_reader_1aac1deba56f4f639e54694b769a26b37a" prot="public" virt="pure-virtual"><scope>parquet::PageReader</scope><name>NextPage</name></member>
      <member refid="classparquet_1_1_page_reader_1a5f9da3c8060896a10218325775feee10" prot="public" virt="non-virtual"><scope>parquet::PageReader</scope><name>Open</name></member>
      <member refid="classparquet_1_1_page_reader_1a7722f794d43e6eba5efe34c1b052cdc8" prot="public" virt="pure-virtual"><scope>parquet::PageReader</scope><name>set_max_page_header_size</name></member>
      <member refid="classparquet_1_1_page_reader_1a0633afd10b6ad06c542475c6f9b43e35" prot="public" virt="virtual"><scope>parquet::PageReader</scope><name>~PageReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
