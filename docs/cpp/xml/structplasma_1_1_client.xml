<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structplasma_1_1_client" kind="struct" language="C++" prot="public">
    <compoundname>plasma::Client</compoundname>
    <includes refid="plasma_8h" local="no">plasma/plasma.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structplasma_1_1_client_1aa62f177326fcd6c98c356dc0e5dec603" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int plasma::Client::fd</definition>
        <argsstring></argsstring>
        <name>fd</name>
        <briefdescription>
<para>The file descriptor used to communicate with the client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="77" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplasma_1_1_client_1a609c2917180d9c137a32f81509820113" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespaceplasma_1adf1aa2f87f6f11e1993628f574e31e75" kindref="member">ObjectID</ref> &gt;</type>
        <definition>std::unordered_set&lt;ObjectID&gt; plasma::Client::object_ids</definition>
        <argsstring></argsstring>
        <name>object_ids</name>
        <briefdescription>
<para>Object ids that are used by this client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="80" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplasma_1_1_client_1aebf43e216da5b9b8701f031f6385d996" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; int &gt;</type>
        <definition>std::unordered_set&lt;int&gt; plasma::Client::used_fds</definition>
        <argsstring></argsstring>
        <name>used_fds</name>
        <briefdescription>
<para>File descriptors that are used by this client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="83" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplasma_1_1_client_1aa43ab98a6d2142b06dfca1518f113105" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int plasma::Client::notification_fd</definition>
        <argsstring></argsstring>
        <name>notification_fd</name>
        <briefdescription>
<para>The file descriptor used to push notifications to client. </para>        </briefdescription>
        <detaileddescription>
<para>This is only valid if client subscribes to plasma store. -1 indicates invalid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="87" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplasma_1_1_client_1ac904e73c964c39622ce32b076c9e7de2" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string plasma::Client::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <initializer>= &quot;anonymous_client&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="89" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structplasma_1_1_client_1a3c2356f10cc82433b0795f992c75c5d4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>plasma::Client::Client</definition>
        <argsstring>(int fd)</argsstring>
        <name>Client</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/plasma/plasma.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains all information that is associated with a Plasma store client. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/plasma/plasma.h" line="73" column="1" bodyfile="/arrow/cpp/src/plasma/plasma.h" bodystart="73" bodyend="90"/>
    <listofallmembers>
      <member refid="structplasma_1_1_client_1a3c2356f10cc82433b0795f992c75c5d4" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>Client</name></member>
      <member refid="structplasma_1_1_client_1aa62f177326fcd6c98c356dc0e5dec603" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>fd</name></member>
      <member refid="structplasma_1_1_client_1ac904e73c964c39622ce32b076c9e7de2" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>name</name></member>
      <member refid="structplasma_1_1_client_1aa43ab98a6d2142b06dfca1518f113105" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>notification_fd</name></member>
      <member refid="structplasma_1_1_client_1a609c2917180d9c137a32f81509820113" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>object_ids</name></member>
      <member refid="structplasma_1_1_client_1aebf43e216da5b9b8701f031f6385d996" prot="public" virt="non-virtual"><scope>plasma::Client</scope><name>used_fds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
