<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gdv__function__stubs_8h" kind="file" language="C++">
    <compoundname>gdv_function_stubs.h</compoundname>
    <includes local="no">cstdint</includes>
    <includedby refid="gandiva_2precompiled_2types_8h" local="yes">/arrow/cpp/src/gandiva/precompiled/types.h</includedby>
    <incdepgraph>
      <node id="17082">
        <label>cstdint</label>
      </node>
      <node id="17081">
        <label>/arrow/cpp/src/gandiva/gdv_function_stubs.h</label>
        <link refid="gdv__function__stubs_8h"/>
        <childnode refid="17082" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17083">
        <label>/arrow/cpp/src/gandiva/gdv_function_stubs.h</label>
        <link refid="gdv__function__stubs_8h"/>
        <childnode refid="17084" relation="include">
        </childnode>
      </node>
      <node id="17084">
        <label>/arrow/cpp/src/gandiva/precompiled/types.h</label>
        <link refid="gandiva_2precompiled_2types_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gdv__function__stubs_8h_1ab753e93e7e590e9e61ade77dd7aebdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gdv_fn_like_utf8_utf8</definition>
        <argsstring>(int64_t ptr, const char *data, int data_len, const char *pattern, int pattern_len)</argsstring>
        <name>gdv_fn_like_utf8_utf8</name>
        <param>
          <type>int64_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pattern_len</declname>
        </param>
        <briefdescription>
<para>Stub functions that can be accessed from LLVM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a5ccf54eb3210e8e3370756b43c6cd91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t gdv_fn_to_date_utf8_utf8_int32</definition>
        <argsstring>(int64_t context, int64_t ptr, const char *data, int data_len, bool in1_validity, const char *pattern, int pattern_len, bool in2_validity, int32_t suppress_errors, bool in3_validity, bool *out_valid)</argsstring>
        <name>gdv_fn_to_date_utf8_utf8_int32</name>
        <param>
          <type>int64_t</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in1_validity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in2_validity</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>suppress_errors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in3_validity</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>out_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a77727c885bd6083a581d87825ab13142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gdv_fn_context_set_error_msg</definition>
        <argsstring>(int64_t context_ptr, const char *err_msg)</argsstring>
        <name>gdv_fn_context_set_error_msg</name>
        <param>
          <type>int64_t</type>
          <declname>context_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>err_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a2e5f1040460b767ceabe3cf117a865ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* gdv_fn_context_arena_malloc</definition>
        <argsstring>(int64_t context_ptr, int32_t data_len)</argsstring>
        <name>gdv_fn_context_arena_malloc</name>
        <param>
          <type>int64_t</type>
          <declname>context_ptr</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a25e5bb16326ddf8d10b1bee5f1b1910a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gdv_fn_context_arena_reset</definition>
        <argsstring>(int64_t context_ptr)</argsstring>
        <name>gdv_fn_context_arena_reset</name>
        <param>
          <type>int64_t</type>
          <declname>context_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a079f4c7db7b143030e4441da9f6e08a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool in_expr_lookup_int32</definition>
        <argsstring>(int64_t ptr, int32_t value, bool in_validity)</argsstring>
        <name>in_expr_lookup_int32</name>
        <param>
          <type>int64_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1aed1df445f95b331464d505a7bebacf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool in_expr_lookup_int64</definition>
        <argsstring>(int64_t ptr, int64_t value, bool in_validity)</argsstring>
        <name>in_expr_lookup_int64</name>
        <param>
          <type>int64_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a0f6dcedd9decf0bf9aa25b6ceed06d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool in_expr_lookup_utf8</definition>
        <argsstring>(int64_t ptr, const char *data, int data_len, bool in_validity)</argsstring>
        <name>in_expr_lookup_utf8</name>
        <param>
          <type>int64_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a7b4553591c7bdcdfc28df404b7f8ac72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gdv_fn_time_with_zone</definition>
        <argsstring>(int *time_fields, const char *zone, int zone_len, int64_t *ret_time)</argsstring>
        <name>gdv_fn_time_with_zone</name>
        <param>
          <type>int *</type>
          <declname>time_fields</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>zone</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zone_len</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>ret_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1a5bba36acf7677b57c5a552f32cba6648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t gdv_fn_dec_from_string</definition>
        <argsstring>(int64_t context, const char *in, int32_t in_length, int32_t *precision_from_str, int32_t *scale_from_str, int64_t *dec_high_from_str, uint64_t *dec_low_from_str)</argsstring>
        <name>gdv_fn_dec_from_string</name>
        <param>
          <type>int64_t</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>in_length</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>precision_from_str</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>scale_from_str</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dec_high_from_str</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>dec_low_from_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdv__function__stubs_8h_1af35e0916df343b29696226285eac4f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gdv_fn_dec_to_string</definition>
        <argsstring>(int64_t context, int64_t x_high, uint64_t x_low, int32_t x_scale, int32_t *dec_str_len)</argsstring>
        <name>gdv_fn_dec_to_string</name>
        <param>
          <type>int64_t</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x_scale</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>dec_str_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1ab753e93e7e590e9e61ade77dd7aebdc5" kindref="member">gdv_fn_like_utf8_utf8</ref>(int64_t<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_len,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern_len);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">int64_t<sp/><ref refid="gdv__function__stubs_8h_1a5ccf54eb3210e8e3370756b43c6cd91e" kindref="member">gdv_fn_to_date_utf8_utf8_int32</ref>(int64_t<sp/>context,<sp/>int64_t<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in1_validity,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern_len,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in2_validity,<sp/>int32_t<sp/>suppress_errors,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in3_validity,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_valid);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1a77727c885bd6083a581d87825ab13142" kindref="member">gdv_fn_context_set_error_msg</ref>(int64_t<sp/>context_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>err_msg);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">uint8_t*<sp/><ref refid="gdv__function__stubs_8h_1a2e5f1040460b767ceabe3cf117a865ef" kindref="member">gdv_fn_context_arena_malloc</ref>(int64_t<sp/>context_ptr,<sp/>int32_t<sp/>data_len);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1a25e5bb16326ddf8d10b1bee5f1b1910a" kindref="member">gdv_fn_context_arena_reset</ref>(int64_t<sp/>context_ptr);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1a079f4c7db7b143030e4441da9f6e08a4" kindref="member">in_expr_lookup_int32</ref>(int64_t<sp/>ptr,<sp/>int32_t<sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_validity);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1aed1df445f95b331464d505a7bebacf79" kindref="member">in_expr_lookup_int64</ref>(int64_t<sp/>ptr,<sp/>int64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_validity);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1a0f6dcedd9decf0bf9aa25b6ceed06d1b" kindref="member">in_expr_lookup_utf8</ref>(int64_t<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_validity);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gdv__function__stubs_8h_1a7b4553591c7bdcdfc28df404b7f8ac72" kindref="member">gdv_fn_time_with_zone</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>time_fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>zone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zone_len,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>ret_time);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">int32_t<sp/><ref refid="gdv__function__stubs_8h_1a5bba36acf7677b57c5a552f32cba6648" kindref="member">gdv_fn_dec_from_string</ref>(int64_t<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in,<sp/>int32_t<sp/>in_length,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t*<sp/>precision_from_str,<sp/>int32_t*<sp/>scale_from_str,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>dec_high_from_str,<sp/>uint64_t*<sp/>dec_low_from_str);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="gdv__function__stubs_8h_1af35e0916df343b29696226285eac4f05" kindref="member">gdv_fn_dec_to_string</ref>(int64_t<sp/>context,<sp/>int64_t<sp/>x_high,<sp/>uint64_t<sp/>x_low,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x_scale,<sp/>int32_t*<sp/>dec_str_len);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/gandiva/gdv_function_stubs.h"/>
  </compounddef>
</doxygen>
