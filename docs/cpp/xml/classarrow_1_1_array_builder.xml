<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_array_builder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::ArrayBuilder</compoundname>
    <derivedcompoundref refid="classarrow_1_1_base_binary_builder" prot="public" virt="non-virtual">arrow::BaseBinaryBuilder&lt; TYPE &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_base_list_builder" prot="public" virt="non-virtual">arrow::BaseListBuilder&lt; TYPE &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_basic_union_builder" prot="public" virt="non-virtual">arrow::BasicUnionBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_boolean_builder" prot="public" virt="non-virtual">arrow::BooleanBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_fixed_size_binary_builder" prot="public" virt="non-virtual">arrow::FixedSizeBinaryBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_fixed_size_list_builder" prot="public" virt="non-virtual">arrow::FixedSizeListBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1internal_1_1_adaptive_int_builder_base" prot="public" virt="non-virtual">arrow::internal::AdaptiveIntBuilderBase</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1internal_1_1_dictionary_builder_base" prot="public" virt="non-virtual">arrow::internal::DictionaryBuilderBase&lt; BuilderType, T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1internal_1_1_dictionary_builder_base_3_01_builder_type_00_01_null_type_01_4" prot="public" virt="non-virtual">arrow::internal::DictionaryBuilderBase&lt; BuilderType, NullType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_map_builder" prot="public" virt="non-virtual">arrow::MapBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_null_builder" prot="public" virt="non-virtual">arrow::NullBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_numeric_builder" prot="public" virt="non-virtual">arrow::NumericBuilder&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_struct_builder" prot="public" virt="non-virtual">arrow::StructBuilder</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_base_binary_builder" prot="public" virt="non-virtual">arrow::BaseBinaryBuilder&lt; BinaryType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_base_binary_builder" prot="public" virt="non-virtual">arrow::BaseBinaryBuilder&lt; LargeBinaryType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_base_list_builder" prot="public" virt="non-virtual">arrow::BaseListBuilder&lt; LargeListType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_base_list_builder" prot="public" virt="non-virtual">arrow::BaseListBuilder&lt; ListType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1internal_1_1_dictionary_builder_base" prot="public" virt="non-virtual">arrow::internal::DictionaryBuilderBase&lt; AdaptiveIntBuilder, T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1internal_1_1_dictionary_builder_base" prot="public" virt="non-virtual">arrow::internal::DictionaryBuilderBase&lt; Int32Builder, T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1_numeric_builder" prot="public" virt="non-virtual">arrow::NumericBuilder&lt; DayTimeIntervalType &gt;</derivedcompoundref>
    <includes refid="builder__base_8h" local="no">arrow/array/builder_base.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::ArrayBuilder::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="208" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_typed_buffer_builder" kindref="compound">TypedBufferBuilder</ref>&lt; bool &gt;</type>
        <definition>TypedBufferBuilder&lt;bool&gt; arrow::ArrayBuilder::null_bitmap_builder_</definition>
        <argsstring></argsstring>
        <name>null_bitmap_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="210" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::null_count_</definition>
        <argsstring></argsstring>
        <name>null_count_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="211" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::length_</definition>
        <argsstring></argsstring>
        <name>length_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="214" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::capacity_</definition>
        <argsstring></argsstring>
        <name>capacity_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="215" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ArrayBuilder&gt; &gt; arrow::ArrayBuilder::children_</definition>
        <argsstring></argsstring>
        <name>children_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="218" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::ArrayBuilder::ArrayBuilder</definition>
        <argsstring>(MemoryPool *pool)</argsstring>
        <name>ArrayBuilder</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="56" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::ArrayBuilder::~ArrayBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>~ArrayBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref> *</type>
        <definition>ArrayBuilder* arrow::ArrayBuilder::child</definition>
        <argsstring>(int i)</argsstring>
        <name>child</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>For nested types. </para>        </briefdescription>
        <detaileddescription>
<para>Since the objects are owned by this class instance, we skip shared pointers and just return a raw pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="62" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int arrow::ArrayBuilder::num_children</definition>
        <argsstring>() const</argsstring>
        <name>num_children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="64" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="66" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::null_count</definition>
        <argsstring>() const</argsstring>
        <name>null_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="67" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::ArrayBuilder::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="68" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ArrayBuilder::Resize</definition>
        <argsstring>(int64_t capacity)</argsstring>
        <name>Resize</name>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1ae82a9301ca92b957b7db7e1362cffb16">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1ae82a9301ca92b957b7db7e1362cffb16">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1ae82a9301ca92b957b7db7e1362cffb16">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1ad006024991f00da4ad8aa2890bdb0c83">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1a2740b157594106cdee063de3c6d40173">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a39a192382af4e821b8c7686bb0b0f3f7">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a39a192382af4e821b8c7686bb0b0f3f7">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a39a192382af4e821b8c7686bb0b0f3f7">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1aeca1c0c6bf23b4e79d118df9dd90fab4">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1a4f2626da73f59eb1c0473c7adacdf470">Resize</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1acab2531151f38e2752dc0d6400a22ec2">Resize</reimplementedby>
        <param>
          <type>int64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Ensure that enough memory has been allocated to fit the indicated number of total elements in the builder, including any that have already been appended. </para>        </briefdescription>
        <detaileddescription>
<para>Does not account for reallocations that may be due to variable size data, like binary values. To make space for incremental appends, use Reserve instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum number of total array values to accommodate. Must be greater than the current capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::Reserve</definition>
        <argsstring>(int64_t additional_capacity)</argsstring>
        <name>Reserve</name>
        <param>
          <type>int64_t</type>
          <declname>additional_capacity</declname>
        </param>
        <briefdescription>
<para>Ensure that there is enough space allocated to append the indicated number of elements without any further reallocation. </para>        </briefdescription>
        <detaileddescription>
<para>Overallocation is used in order to minimize the impact of incremental <ref refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" kindref="member">Reserve()</ref> calls. Note that additional_capacity is relative to the current number of elements rather than to the current capacity, so calls to <ref refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" kindref="member">Reserve()</ref> which are not interspersed with addition of new elements may not increase the capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">additional_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of additional array values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="90" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void arrow::ArrayBuilder::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5e18aaf8fc9c940e1adf8d20c3658531">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5e18aaf8fc9c940e1adf8d20c3658531">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5e18aaf8fc9c940e1adf8d20c3658531">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a7ceb2d5bc1adb0cf2f7cb3912b813e2b">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1aedad1aa92a893f60a677f2a59e30d65f">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a8b28644573282a55a360478ba160fa8f">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a8b28644573282a55a360478ba160fa8f">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a8b28644573282a55a360478ba160fa8f">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1a980758c124ac9ae650fae2a7a72b0397">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_struct_builder_1a361986b08279c6cb0ed7ec337e096767">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1a5c7274589b0a49432cac36e0badbf742">Reset</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1af646f4d380162134d7d18ad4af81f056">Reset</reimplementedby>
        <briefdescription>
<para>Reset the builder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ArrayBuilder::AppendNull</definition>
        <argsstring>()=0</argsstring>
        <name>AppendNull</name>
        <reimplementedby refid="classarrow_1_1_null_builder_1af2c0562e2cb8a6e899bc07ab3c72858c">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1adc7a7beaf773747268a8b51d163ad801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1adc7a7beaf773747268a8b51d163ad801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1adc7a7beaf773747268a8b51d163ad801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5f01529de25a28eeeac92463264bb801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5f01529de25a28eeeac92463264bb801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a1acc20f9680309d7ad1d55ab7401f815">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a5f01529de25a28eeeac92463264bb801">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_dense_union_builder_1a478cd1f119d4da61a5bc9103ee10bf34">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_sparse_union_builder_1afdf9f674dc658d3007b07afc46c16064">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1ab93134c7e0033f61f7e151dbcd4becca">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1aae9f39dbf89f8d1874cc8a4a90aec06b">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1a165e35124aece9f8d7757f0d1642a8bc">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_struct_builder_1affc04333f5da18873a56fa281e8f8b1e">AppendNull</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1aef21d518e5d67d6ee0bf71bd0dc699a0">AppendNull</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ArrayBuilder::AppendNulls</definition>
        <argsstring>(int64_t length)=0</argsstring>
        <name>AppendNulls</name>
        <reimplementedby refid="classarrow_1_1_null_builder_1a16d3ef02a9cd9ac54c1d0f4c450e6d3b">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1ad3d58ebc0b0233d4d99c69f4d8509c28">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1ad3d58ebc0b0233d4d99c69f4d8509c28">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1ad3d58ebc0b0233d4d99c69f4d8509c28">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a1e67c6dc6ade96b660c75ab3031ac8b7">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1aeac3db7650e6fad0c89be433eb79e650">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1aeac3db7650e6fad0c89be433eb79e650">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1aeac3db7650e6fad0c89be433eb79e650">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_dense_union_builder_1ad452ffd9af60da52879566666b0a3fd5">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_sparse_union_builder_1a2a5f145546117068cf70d071e317cfb8">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1a7df073c6ced7e1766d7577c844a7772b">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1a3ac08ddd73dd5be1d27f2f148cf95d75">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1abaa33ff731317d6c6690e551598a41bb">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_struct_builder_1a3715e75de72f58a9727bff979c227fd7">AppendNulls</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1a1b0f9b13338aef6618b24898542189f8">AppendNulls</reimplementedby>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::Advance</definition>
        <argsstring>(int64_t elements)</argsstring>
        <name>Advance</name>
        <param>
          <type>int64_t</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
<para>For cases where raw data was memcpy&apos;d into the internal buffers, allows us to advance the length of the builder. </para>        </briefdescription>
        <detaileddescription>
<para>It is your responsibility to use this function responsibly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a0e0aea1c332b472f3671bea9da5ec473" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::ArrayBuilder::FinishInternal</definition>
        <argsstring>(std::shared_ptr&lt; ArrayData &gt; *out)=0</argsstring>
        <name>FinishInternal</name>
        <reimplementedby refid="classarrow_1_1_basic_union_builder_1a1e76f1afc12889c884e66d87c48d1e9f">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_decimal128_builder_1a1024061ca0b17d1af0967f008ec47313">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_null_builder_1a11081e4904045bb75039fa6eacbeceed">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a935a4b7804a1f9eec4e334c31838d679">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a935a4b7804a1f9eec4e334c31838d679">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a935a4b7804a1f9eec4e334c31838d679">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_adaptive_u_int_builder_1a9482e808befeda60e397cdc728b28fc3">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_dense_union_builder_1a5d9c77eb75838636f2604bba9674a3e5">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_adaptive_int_builder_1aec148417ee3a6e40b8ac1514d3347d1b">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1a63949674fe5401e01fd62b012dabe14c">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1a6ee03b643d8dc1ff7d5fe5009f852412">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a083a647ec622d5da23981aaa7ad77fe6">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a083a647ec622d5da23981aaa7ad77fe6">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_binary_builder_1a083a647ec622d5da23981aaa7ad77fe6">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1a5a2cd1a8d758cc46c83b898051e79e07">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_struct_builder_1afd9ece86557f3fec253e10a2edbd4840">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1a84e5ee3cc0ae427135093c80b014765c">FinishInternal</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1af4abbc3596d4e7bb4b5bb843f361540e">FinishInternal</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an internal generic <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Resets builder except for dictionary builder</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="structarrow_1_1_array_data" kindref="compound">ArrayData</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::Finish</definition>
        <argsstring>(std::shared_ptr&lt; Array &gt; *out)</argsstring>
        <name>Finish</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return result of builder as an <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The builder is reset except for <ref refid="classarrow_1_1_dictionary_builder" kindref="compound">DictionaryBuilder</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the finalized <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a39b4b420be1fcf4fe7219fe953eb65c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;DataType&gt; arrow::ArrayBuilder::type</definition>
        <argsstring>() const =0</argsstring>
        <name>type</name>
        <reimplementedby refid="classarrow_1_1_basic_union_builder_1a0eea959637a833f5a859df78fb00f51f">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_decimal128_builder_1a0c86d55c78f2080023eaa290cb40c01f">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_null_builder_1aa6a17412ccc108d7e1fc3acd8d3a6083">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_adaptive_u_int_builder_1a12c11724ed7a9121909400beb33aed30">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a1665bd1f7c2e96da2507950d46e03998">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a1665bd1f7c2e96da2507950d46e03998">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_base_list_builder_1a1665bd1f7c2e96da2507950d46e03998">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_adaptive_int_builder_1a2f06153316565ee72f0140057e1b5337">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_numeric_builder_1ae51e115a30d7881f9d7d143256355c30">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_map_builder_1a468ecd7d5d0b7236324528b3011373d2">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_list_builder_1aba8f3c8d4888dcda3f8bba3bfb9888e0">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_binary_builder_1a6d1c09cbc3b70c842335d449383140f0">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_string_builder_1a57f3e39d2beab058c7f5726a033cc619">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_large_binary_builder_1a6d7dcefdbdd95cba0fd4e775e450a159">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_large_string_builder_1ab5f86d865a9d466544760bffe0dd73b8">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_struct_builder_1a3ac0956447f482a35ae1a5c26f538e32">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_boolean_builder_1aa3517d917b67cb7221fe3ef21fe553c6">type</reimplementedby>
        <reimplementedby refid="classarrow_1_1_fixed_size_binary_builder_1a76883cc379d8422428762e902bed364c">type</reimplementedby>
        <briefdescription>
<para>Return the type of the built <ref refid="classarrow_1_1_array" kindref="compound">Array</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::AppendToBitmap</definition>
        <argsstring>(bool is_valid)</argsstring>
        <name>AppendToBitmap</name>
        <param>
          <type>bool</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
<para>Append to null bitmap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::AppendToBitmap</definition>
        <argsstring>(const uint8_t *valid_bytes, int64_t length)</argsstring>
        <name>AppendToBitmap</name>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Vector append. </para>        </briefdescription>
        <detaileddescription>
<para>Treat each zero byte as a null. If valid_bytes is null assume all of length bits are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::AppendToBitmap</definition>
        <argsstring>(int64_t num_bits, bool value)</argsstring>
        <name>AppendToBitmap</name>
        <param>
          <type>int64_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Uniform append. Append N times the same validity bit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::SetNotNull</definition>
        <argsstring>(int64_t length)</argsstring>
        <name>SetNotNull</name>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Set the next length bits to not null (i.e. valid). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a44b3f511e5aefdba55aebfd4afa99c8f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeAppendNull</definition>
        <argsstring>()</argsstring>
        <name>UnsafeAppendNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="145" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeAppendToBitmap</definition>
        <argsstring>(bool is_valid)</argsstring>
        <name>UnsafeAppendToBitmap</name>
        <param>
          <type>bool</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="148" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeAppendToBitmap</definition>
        <argsstring>(const uint8_t *valid_bytes, int64_t length)</argsstring>
        <name>UnsafeAppendToBitmap</name>
        <param>
          <type>const uint8_t *</type>
          <declname>valid_bytes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="156" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeAppendToBitmap</definition>
        <argsstring>(const int64_t num_bits, bool value)</argsstring>
        <name>UnsafeAppendToBitmap</name>
        <param>
          <type>const int64_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="166" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeAppendToBitmap</definition>
        <argsstring>(const std::vector&lt; bool &gt; &amp;is_valid)</argsstring>
        <name>UnsafeAppendToBitmap</name>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>is_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeSetNotNull</definition>
        <argsstring>(int64_t length)</argsstring>
        <name>UnsafeSetNotNull</name>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::ArrayBuilder::UnsafeSetNull</definition>
        <argsstring>(int64_t length)</argsstring>
        <name>UnsafeSetNull</name>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrayType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::FinishTyped</definition>
        <argsstring>(std::shared_ptr&lt; ArrayType &gt; *out)</argsstring>
        <name>FinishTyped</name>
        <param>
          <type>std::shared_ptr&lt; ArrayType &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Finish to an array of the specified ArrayType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="186" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::ArrayBuilder::CheckCapacity</definition>
        <argsstring>(int64_t new_capacity)</argsstring>
        <name>CheckCapacity</name>
        <param>
          <type>int64_t</type>
          <declname>new_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="194" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="194" bodyend="206"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::ArrayBuilder::TrimBuffer</definition>
        <argsstring>(const int64_t bytes_filled, ResizableBuffer *buffer)</argsstring>
        <name>TrimBuffer</name>
        <param>
          <type>const int64_t</type>
          <declname>bytes_filled</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="182" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_array_builder_1a882360256505f4b65aa91e9e7c052f4f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::ArrayBuilder::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(ArrayBuilder)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1_array_builder" kindref="compound">ArrayBuilder</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="221" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all data array builders. </para>    </briefdescription>
    <detaileddescription>
<para>This class provides a facilities for incrementally building the null bitmap (see Append methods) and as a side effect the current number of slots and the null count.</para><para><simplesect kind="note"><para>Users are expected to use builders as one of the concrete types below. For example, ArrayBuilder* pointing to <ref refid="classarrow_1_1_binary_builder" kindref="compound">BinaryBuilder</ref> should be downcast before use. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="146">
        <label>arrow::NumericBuilder&lt; DayTimeIntervalType &gt;</label>
        <link refid="classarrow_1_1_numeric_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>arrow::ListBuilder</label>
        <link refid="classarrow_1_1_list_builder"/>
        <childnode refid="140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>arrow::NumericBuilder&lt; T &gt;</label>
        <link refid="classarrow_1_1_numeric_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>arrow::BaseBinaryBuilder&lt; LargeBinaryType &gt;</label>
        <link refid="classarrow_1_1_base_binary_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>arrow::FixedSizeBinaryBuilder</label>
        <link refid="classarrow_1_1_fixed_size_binary_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>arrow::StringBuilder</label>
        <link refid="classarrow_1_1_string_builder"/>
        <childnode refid="133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>arrow::LargeListBuilder</label>
        <link refid="classarrow_1_1_large_list_builder"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>arrow::internal::DictionaryBuilderBase&lt; BuilderType, T &gt;</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>arrow::internal::DictionaryBuilderBase&lt; BuilderType, NullType &gt;</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>arrow::LargeBinaryBuilder</label>
        <link refid="classarrow_1_1_large_binary_builder"/>
        <childnode refid="135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>arrow::internal::DictionaryBuilderBase&lt; Int32Builder, T &gt;</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>arrow::BasicUnionBuilder</label>
        <link refid="classarrow_1_1_basic_union_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>arrow::BaseBinaryBuilder&lt; BinaryType &gt;</label>
        <link refid="classarrow_1_1_base_binary_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>arrow::FixedSizeListBuilder</label>
        <link refid="classarrow_1_1_fixed_size_list_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>arrow::BooleanBuilder</label>
        <link refid="classarrow_1_1_boolean_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>arrow::NullBuilder</label>
        <link refid="classarrow_1_1_null_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>arrow::internal::DictionaryBuilderBase&lt; AdaptiveIntBuilder, T &gt;</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>arrow::DenseUnionBuilder</label>
        <link refid="classarrow_1_1_dense_union_builder"/>
        <childnode refid="116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>arrow::AdaptiveUIntBuilder</label>
        <link refid="classarrow_1_1_adaptive_u_int_builder"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>arrow::StructBuilder</label>
        <link refid="classarrow_1_1_struct_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>arrow::BaseListBuilder&lt; LargeListType &gt;</label>
        <link refid="classarrow_1_1_base_list_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>arrow::BinaryBuilder</label>
        <link refid="classarrow_1_1_binary_builder"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>arrow::MapBuilder</label>
        <link refid="classarrow_1_1_map_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>arrow::LargeStringBuilder</label>
        <link refid="classarrow_1_1_large_string_builder"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>arrow::BaseListBuilder&lt; ListType &gt;</label>
        <link refid="classarrow_1_1_base_list_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>arrow::internal::AdaptiveIntBuilderBase</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>arrow::AdaptiveIntBuilder</label>
        <link refid="classarrow_1_1_adaptive_int_builder"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
      </node>
      <node id="114">
        <label>arrow::BaseBinaryBuilder&lt; TYPE &gt;</label>
        <link refid="classarrow_1_1_base_binary_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>arrow::Dictionary32Builder&lt; T &gt;</label>
        <link refid="classarrow_1_1_dictionary32_builder"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>arrow::Decimal128Builder</label>
        <link refid="classarrow_1_1_decimal128_builder"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>arrow::SparseUnionBuilder</label>
        <link refid="classarrow_1_1_sparse_union_builder"/>
        <childnode refid="116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>arrow::DayTimeIntervalBuilder</label>
        <link refid="classarrow_1_1_day_time_interval_builder"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>arrow::DictionaryBuilder&lt; T &gt;</label>
        <link refid="classarrow_1_1_dictionary_builder"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>arrow::BaseListBuilder&lt; TYPE &gt;</label>
        <link refid="classarrow_1_1_base_list_builder"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="149">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="150">
        <label>arrow::TypedBufferBuilder&lt; bool &gt;</label>
        <link refid="classarrow_1_1_typed_buffer_builder_3_01bool_01_4"/>
      </node>
      <node id="148">
        <label>arrow::ArrayBuilder</label>
        <link refid="classarrow_1_1_array_builder"/>
        <childnode refid="149" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
        <childnode refid="150" relation="usage">
          <edgelabel>null_bitmap_builder_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/array/builder_base.h" line="54" column="1" bodyfile="/arrow/cpp/src/arrow/array/builder_base.h" bodystart="54" bodyend="222"/>
    <listofallmembers>
      <member refid="classarrow_1_1_array_builder_1a630ea6ee96e26b8f1a2d08b45180fb32" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>Advance</name></member>
      <member refid="classarrow_1_1_array_builder_1a6f7c2fbebb93e8630142dca01a328015" prot="public" virt="pure-virtual"><scope>arrow::ArrayBuilder</scope><name>AppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a0900943af067e85d9fa227123c223b14" prot="public" virt="pure-virtual"><scope>arrow::ArrayBuilder</scope><name>AppendNulls</name></member>
      <member refid="classarrow_1_1_array_builder_1a21c1d9818e379f41e6c72df407ae029d" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a17c9bf5211cb980518df3bb1c33ba4fc" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab8bb1f62d1eaa27de03c41a2db3d53e3" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>AppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5fe829691bef00b33894d51e16e6aa5" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>ArrayBuilder</name></member>
      <member refid="classarrow_1_1_array_builder_1a882360256505f4b65aa91e9e7c052f4f" prot="private" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1_array_builder_1a0236e815af8f62c98bd612eea219cd73" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>capacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aeb92737fe5ada5b372459705c1690d7e" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>capacity_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0d77ad3f24791679196dda8b3ac84437" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>CheckCapacity</name></member>
      <member refid="classarrow_1_1_array_builder_1aad4a1ed2c24204b1cc21e44ab0ad444b" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>child</name></member>
      <member refid="classarrow_1_1_array_builder_1a66ce8a6890bf6f222baf1642557d889b" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>children_</name></member>
      <member refid="classarrow_1_1_array_builder_1a67b2227edb4b51bc44425f1c8a439819" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>Finish</name></member>
      <member refid="classarrow_1_1_array_builder_1a0e0aea1c332b472f3671bea9da5ec473" prot="public" virt="pure-virtual"><scope>arrow::ArrayBuilder</scope><name>FinishInternal</name></member>
      <member refid="classarrow_1_1_array_builder_1a9f90da9e81d9db4bc9277458ba70d46a" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>FinishTyped</name></member>
      <member refid="classarrow_1_1_array_builder_1a296ac75b9b3d877192e37681c66513ba" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>length</name></member>
      <member refid="classarrow_1_1_array_builder_1ae8b7ebc042e6684440bd9e1c77f0f5c1" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>length_</name></member>
      <member refid="classarrow_1_1_array_builder_1a0f32beedba413982480c5df287946922" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>null_bitmap_builder_</name></member>
      <member refid="classarrow_1_1_array_builder_1aad098f61890072a4576867a7cf4fb9ee" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>null_count</name></member>
      <member refid="classarrow_1_1_array_builder_1a9ea96ba4121857ab23241b6b408051b9" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>null_count_</name></member>
      <member refid="classarrow_1_1_array_builder_1aa829b8339092408c9d710cc2c1bdc46a" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>num_children</name></member>
      <member refid="classarrow_1_1_array_builder_1a33e3aa20cedda9f6d8581809437f1c86" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>pool_</name></member>
      <member refid="classarrow_1_1_array_builder_1afe8448fda39a8529a119bde5ba7ba119" prot="public" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>Reserve</name></member>
      <member refid="classarrow_1_1_array_builder_1a71a25653bdf242da1b3a317f4fd49a98" prot="public" virt="virtual"><scope>arrow::ArrayBuilder</scope><name>Reset</name></member>
      <member refid="classarrow_1_1_array_builder_1a994d873bec453c33fbaeb995442d520b" prot="public" virt="virtual"><scope>arrow::ArrayBuilder</scope><name>Resize</name></member>
      <member refid="classarrow_1_1_array_builder_1aa505ec95646314c3b9254e0cce39538b" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>SetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a1e3e49019e307f0829ef66b72ce1b82e" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>TrimBuffer</name></member>
      <member refid="classarrow_1_1_array_builder_1a39b4b420be1fcf4fe7219fe953eb65c7" prot="public" virt="pure-virtual"><scope>arrow::ArrayBuilder</scope><name>type</name></member>
      <member refid="classarrow_1_1_array_builder_1a44b3f511e5aefdba55aebfd4afa99c8f" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeAppendNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a2dbe80584eac62147112c4d0a43ceea2" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1afd319659d3125af8a72c0c529c329c12" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a40a4e3c231f1f47dcd046c42ee63b63b" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1a361c8efe3030a75126cbbbe90e9a3ee4" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeAppendToBitmap</name></member>
      <member refid="classarrow_1_1_array_builder_1aa0a2125633a3cdb1860d3f62d44ac4a1" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeSetNotNull</name></member>
      <member refid="classarrow_1_1_array_builder_1ab5622a696215f318672d5a800d4bfe48" prot="protected" virt="non-virtual"><scope>arrow::ArrayBuilder</scope><name>UnsafeSetNull</name></member>
      <member refid="classarrow_1_1_array_builder_1a74bb29b347e12ed7528925d12db109a7" prot="public" virt="virtual"><scope>arrow::ArrayBuilder</scope><name>~ArrayBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
