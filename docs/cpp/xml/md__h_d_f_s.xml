<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="md__h_d_f_s" kind="page">
    <compoundname>md_HDFS</compoundname>
    <title>HDFS</title>
    <detaileddescription>
<para><heading level="2">Using Arrow&apos;s HDFS (Apache Hadoop Distributed File System) interface</heading>
</para><para><heading level="3">Build requirements</heading>
</para><para>To build the integration, pass the following option to CMake</para><para><programlisting><codeline><highlight class="normal">-DARROW_HDFS=on</highlight></codeline>
</programlisting></para><para>For convenience, we have bundled <computeroutput>hdfs.h</computeroutput> for libhdfs from Apache Hadoop in Arrow&apos;s thirdparty. If you wish to build against the <computeroutput>hdfs.h</computeroutput> in your installed Hadoop distribution, set the <computeroutput>$HADOOP_HOME</computeroutput> environment variable.</para><para><heading level="3">Runtime requirements</heading>
</para><para>By default, the HDFS client C++ class in <computeroutput>libarrow_io</computeroutput> uses the libhdfs JNI interface to the Java Hadoop client. This library is loaded <bold>at runtime</bold> (rather than at link / library load time, since the library may not be in your LD_LIBRARY_PATH), and relies on some environment variables.</para><para><itemizedlist>
<listitem><para><computeroutput>HADOOP_HOME</computeroutput>: the root of your installed Hadoop distribution. Often has <computeroutput>lib/native/libhdfs.so</computeroutput>.</para></listitem><listitem><para><computeroutput>JAVA_HOME</computeroutput>: the location of your Java SDK installation.</para></listitem><listitem><para><computeroutput>CLASSPATH</computeroutput>: must contain the Hadoop jars. You can set these using:</para></listitem></itemizedlist>
</para><para>``<computeroutput>shell export CLASSPATH=</computeroutput>$HADOOP_HOME/bin/hadoop classpath <ndash/>glob` <programlisting><codeline><highlight class="normal">*<sp/>`ARROW_LIBHDFS_DIR`<sp/>(optional):<sp/>explicit<sp/>location<sp/>of<sp/>`libhdfs.so`<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline><highlight class="normal">installed<sp/>somewhere<sp/>other<sp/>than<sp/>`$HADOOP_HOME/lib/native`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>accommodate<sp/>distribution-specific<sp/>nuances,<sp/>the<sp/>`JAVA_HOME`<sp/>variable<sp/>may<sp/>be</highlight></codeline>
<codeline><highlight class="normal">set<sp/>to<sp/>the<sp/>root<sp/>path<sp/>for<sp/>the<sp/>Java<sp/>SDK,<sp/>the<sp/>JRE<sp/>path<sp/>itself,<sp/>or<sp/>to<sp/>the<sp/>directory</highlight></codeline>
<codeline><highlight class="normal">containing<sp/>the<sp/>`libjvm`<sp/>library.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Mac<sp/>Specifics</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>installed<sp/>location<sp/>of<sp/>Java<sp/>on<sp/>OS<sp/>X<sp/>can<sp/>vary,<sp/>however<sp/>the<sp/>following<sp/>snippet</highlight></codeline>
<codeline><highlight class="normal">will<sp/>set<sp/>it<sp/>automatically<sp/>for<sp/>you:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```shell</highlight></codeline>
<codeline><highlight class="normal">export<sp/>JAVA_HOME=$(/usr/libexec/java_home)</highlight></codeline>
</programlisting></para><para>Homebrew&apos;s Hadoop does not have native libs. Apache doesn&apos;t build these, so users must build Hadoop to get the native libs. See this Stack Overflow answer for details:</para><para><ulink url="http://stackoverflow.com/a/40051353/478288">http://stackoverflow.com/a/40051353/478288</ulink></para><para>Be sure to include the path to the native libs in <computeroutput>JAVA_LIBRARY_PATH</computeroutput>:</para><para><programlisting><codeline><highlight class="normal">export<sp/>JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native:$JAVA_LIBRARY_PATH</highlight></codeline>
</programlisting></para><para>If you get an error about needing to install Java 6, then add <emphasis>BundledApp</emphasis> and <emphasis>JNI</emphasis> to the <computeroutput>JVMCapabilities</computeroutput> in <computeroutput>$JAVA_HOME/../Info.plist</computeroutput>. See</para><para><ulink url="https://oliverdowling.com.au/2015/10/09/oracles-jre-8-on-mac-os-x-el-capitan/">https://oliverdowling.com.au/2015/10/09/oracles-jre-8-on-mac-os-x-el-capitan/</ulink></para><para><ulink url="https://derflounder.wordpress.com/2015/08/08/modifying-oracles-java-sdk-to-run-java-applications-on-os-x/">https://derflounder.wordpress.com/2015/08/08/modifying-oracles-java-sdk-to-run-java-applications-on-os-x/</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
