<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="string_8h" kind="file" language="C++">
    <compoundname>string.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="string__view_8h" local="yes">arrow/util/string_view.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="c_2helpers_8h" local="no">/arrow/cpp/src/arrow/c/helpers.h</includedby>
    <includedby refid="bit__stream__utils_8h" local="no">/arrow/cpp/src/arrow/util/bit_stream_utils.h</includedby>
    <includedby refid="plasma_8h" local="no">/arrow/cpp/src/plasma/plasma.h</includedby>
    <incdepgraph>
      <node id="13491">
        <label>cstdint</label>
      </node>
      <node id="13488">
        <label>string</label>
      </node>
      <node id="13492">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="13493">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="13487">
        <label>/arrow/cpp/src/arrow/util/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="13488" relation="include">
        </childnode>
        <childnode refid="13489" relation="include">
        </childnode>
        <childnode refid="13490" relation="include">
        </childnode>
        <childnode refid="13493" relation="include">
        </childnode>
      </node>
      <node id="13489">
        <label>vector</label>
      </node>
      <node id="13490">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="13491" relation="include">
        </childnode>
        <childnode refid="13488" relation="include">
        </childnode>
        <childnode refid="13492" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13499">
        <label>/arrow/cpp/src/plasma/plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="13500" relation="include">
        </childnode>
        <childnode refid="13503" relation="include">
        </childnode>
        <childnode refid="13501" relation="include">
        </childnode>
        <childnode refid="13502" relation="include">
        </childnode>
      </node>
      <node id="13503">
        <label>/arrow/cpp/src/plasma/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="13502" relation="include">
        </childnode>
      </node>
      <node id="13497">
        <label>/arrow/cpp/src/arrow/util/bit_stream_utils.h</label>
        <link refid="bit__stream__utils_8h"/>
        <childnode refid="13498" relation="include">
        </childnode>
      </node>
      <node id="13500">
        <label>/arrow/cpp/src/plasma/eviction_policy.h</label>
        <link refid="eviction__policy_8h"/>
        <childnode refid="13501" relation="include">
        </childnode>
      </node>
      <node id="13495">
        <label>/arrow/cpp/src/arrow/c/helpers.h</label>
        <link refid="c_2helpers_8h"/>
        <childnode refid="13496" relation="include">
        </childnode>
      </node>
      <node id="13494">
        <label>/arrow/cpp/src/arrow/util/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="13495" relation="include">
        </childnode>
        <childnode refid="13497" relation="include">
        </childnode>
        <childnode refid="13499" relation="include">
        </childnode>
      </node>
      <node id="13502">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="13496">
        <label>/arrow/cpp/src/arrow/c/util_internal.h</label>
        <link refid="c_2util__internal_8h"/>
      </node>
      <node id="13501">
        <label>/arrow/cpp/src/plasma/quota_aware_policy.h</label>
        <link refid="quota__aware__policy_8h"/>
        <childnode refid="13502" relation="include">
        </childnode>
      </node>
      <node id="13498">
        <label>/arrow/cpp/src/arrow/util/rle_encoding.h</label>
        <link refid="rle__encoding_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__view_8h" kindref="compound">arrow/util/string_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1a2cc96e2a2b4dca763befd1d172134ac2" kindref="member">HexEncode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1af0898d30c6a1068bbfc1ccf9064aa8ec" kindref="member">Escape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1a2cc96e2a2b4dca763befd1d172134ac2" kindref="member">HexEncode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1a2cc96e2a2b4dca763befd1d172134ac2" kindref="member">HexEncode</ref>(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/>str);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1af0898d30c6a1068bbfc1ccf9064aa8ec" kindref="member">Escape</ref>(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/>str);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/><ref refid="namespacearrow_1a5b66debdce0800121a0b573cb4f51344" kindref="member">ParseHexValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>uint8_t*<sp/>out);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="46"><highlight class="normal">std::string<sp/>JoinStrings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;util::string_view&gt;&amp;<sp/>strings,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/>delimiter);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="51"><highlight class="normal">std::string<sp/>TrimString(std::string<sp/>value);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/string.h"/>
  </compounddef>
</doxygen>
