<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1io_1_1_latency_generator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::io::LatencyGenerator</compoundname>
    <includes refid="slow_8h" local="no">arrow/io/slow.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_latency_generator_1a83dbdd59108d7041433b877b80afbaa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::io::LatencyGenerator::~LatencyGenerator</definition>
        <argsstring>()</argsstring>
        <name>~LatencyGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_latency_generator_1af53284a6747fb1344a2239a42744e96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::io::LatencyGenerator::Sleep</definition>
        <argsstring>()</argsstring>
        <name>Sleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_latency_generator_1a2eaed78ce7e02bda7f9906b96de20108" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double arrow::io::LatencyGenerator::NextLatency</definition>
        <argsstring>()=0</argsstring>
        <name>NextLatency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1io_1_1_latency_generator_1a981e9e5a285849c64fae9d44a76705af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_latency_generator" kindref="compound">LatencyGenerator</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;LatencyGenerator&gt; arrow::io::LatencyGenerator::Make</definition>
        <argsstring>(double average_latency)</argsstring>
        <name>Make</name>
        <param>
          <type>double</type>
          <declname>average_latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1io_1_1_latency_generator_1a0e7a7ea5549a5dda9cc06156a1d0f0ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_latency_generator" kindref="compound">LatencyGenerator</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;LatencyGenerator&gt; arrow::io::LatencyGenerator::Make</definition>
        <argsstring>(double average_latency, int32_t seed)</argsstring>
        <name>Make</name>
        <param>
          <type>double</type>
          <declname>average_latency</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/io/slow.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/io/slow.h" line="36" column="1" bodyfile="/arrow/cpp/src/arrow/io/slow.h" bodystart="36" bodyend="46"/>
    <listofallmembers>
      <member refid="classarrow_1_1io_1_1_latency_generator_1a981e9e5a285849c64fae9d44a76705af" prot="public" virt="non-virtual"><scope>arrow::io::LatencyGenerator</scope><name>Make</name></member>
      <member refid="classarrow_1_1io_1_1_latency_generator_1a0e7a7ea5549a5dda9cc06156a1d0f0ad" prot="public" virt="non-virtual"><scope>arrow::io::LatencyGenerator</scope><name>Make</name></member>
      <member refid="classarrow_1_1io_1_1_latency_generator_1a2eaed78ce7e02bda7f9906b96de20108" prot="public" virt="pure-virtual"><scope>arrow::io::LatencyGenerator</scope><name>NextLatency</name></member>
      <member refid="classarrow_1_1io_1_1_latency_generator_1af53284a6747fb1344a2239a42744e96d" prot="public" virt="non-virtual"><scope>arrow::io::LatencyGenerator</scope><name>Sleep</name></member>
      <member refid="classarrow_1_1io_1_1_latency_generator_1a83dbdd59108d7041433b877b80afbaa2" prot="public" virt="virtual"><scope>arrow::io::LatencyGenerator</scope><name>~LatencyGenerator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
