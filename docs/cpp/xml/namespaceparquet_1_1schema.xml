<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceparquet_1_1schema" kind="namespace" language="C++">
    <compoundname>parquet::schema</compoundname>
    <innerclass refid="classparquet_1_1schema_1_1_column_path" prot="public">parquet::schema::ColumnPath</innerclass>
    <innerclass refid="structparquet_1_1schema_1_1_decimal_metadata" prot="public">parquet::schema::DecimalMetadata</innerclass>
    <innerclass refid="classparquet_1_1schema_1_1_group_node" prot="public">parquet::schema::GroupNode</innerclass>
    <innerclass refid="structparquet_1_1schema_1_1_list_encoding" prot="public">parquet::schema::ListEncoding</innerclass>
    <innerclass refid="classparquet_1_1schema_1_1_node" prot="public">parquet::schema::Node</innerclass>
    <innerclass refid="classparquet_1_1schema_1_1_primitive_node" prot="public">parquet::schema::PrimitiveNode</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1schema_1_1_node" kindref="compound">Node</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;Node&gt; parquet::schema::NodePtr</definition>
        <argsstring></argsstring>
        <name>NodePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="194" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceparquet_1_1schema_1a8289c0ec21718b7fa853359974ffb298" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" kindref="member">NodePtr</ref> &gt;</type>
        <definition>typedef std::vector&lt;NodePtr&gt; parquet::schema::NodeVector</definition>
        <argsstring></argsstring>
        <name>NodeVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="195" column="1" bodyfile="/arrow/cpp/src/parquet/schema.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceparquet_1_1schema_1ac09846741b35e12ab0a19aa4a88d7641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::schema::PrintSchema</definition>
        <argsstring>(const schema::Node *schema, std::ostream &amp;stream, int indent_width=2)</argsstring>
        <name>PrintSchema</name>
        <param>
          <type>const <ref refid="classparquet_1_1schema_1_1_node" kindref="compound">schema::Node</ref> *</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent_width</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceparquet_1_1schema_1ac9d8e5707577790f516f7508f5f8a9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;SchemaDescriptor&gt; parquet::schema::FromParquet</definition>
        <argsstring>(const std::vector&lt; format::SchemaElement &gt; &amp;schema)</argsstring>
        <name>FromParquet</name>
        <param>
          <type>const std::vector&lt; format::SchemaElement &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema_internal.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceparquet_1_1schema_1a234b2fe746ba38d6030f3777106099f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classparquet_1_1schema_1_1_node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Node&gt; parquet::schema::Unflatten</definition>
        <argsstring>(const format::SchemaElement *elements, int length)</argsstring>
        <name>Unflatten</name>
        <param>
          <type>const format::SchemaElement *</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema_internal.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceparquet_1_1schema_1a15563c58c5e627fc2776ab3228cb07ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::schema::ToParquet</definition>
        <argsstring>(const GroupNode *schema, std::vector&lt; format::SchemaElement &gt; *out)</argsstring>
        <name>ToParquet</name>
        <param>
          <type>const <ref refid="classparquet_1_1schema_1_1_group_node" kindref="compound">GroupNode</ref> *</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::vector&lt; format::SchemaElement &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/schema_internal.h" line="51" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/metadata.h" line="46" column="1"/>
  </compounddef>
</doxygen>
