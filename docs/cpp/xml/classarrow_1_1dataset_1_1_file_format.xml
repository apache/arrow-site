<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_file_format" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::dataset::FileFormat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; FileFormat &gt;</basecompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_ipc_file_format" prot="public" virt="non-virtual">arrow::dataset::IpcFileFormat</derivedcompoundref>
    <derivedcompoundref refid="classarrow_1_1dataset_1_1_parquet_file_format" prot="public" virt="non-virtual">arrow::dataset::ParquetFileFormat</derivedcompoundref>
    <includes refid="file__base_8h" local="no">arrow/dataset/file_base.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1a80398ed921f651882dd0069423929b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::dataset::FileFormat::~FileFormat</definition>
        <argsstring>()=default</argsstring>
        <name>~FileFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1ab089438dfec369581face93a00fdeb08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string arrow::dataset::FileFormat::type_name</definition>
        <argsstring>() const =0</argsstring>
        <name>type_name</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a19d3016dad597fbd87ebca2528794338">type_name</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1aaae04966393cc5cd4df9258c899d619c">type_name</reimplementedby>
        <briefdescription>
<para>The name identifying the kind of file format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1ae48aca8d7f632fec22a4fe622e74d3a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool arrow::dataset::FileFormat::splittable</definition>
        <argsstring>() const</argsstring>
        <name>splittable</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a5d02ae89eeddedc3bdc005eb4d3f2657">splittable</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1a93ef2febee8485cf77fd29b9b72ae61e">splittable</reimplementedby>
        <briefdescription>
<para>Return true if fragments of this format can benefit from parallel scanning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="132" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1ae934a7b69d0402f36aecfa6037fa1343" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; bool &gt;</type>
        <definition>virtual Result&lt;bool&gt; arrow::dataset::FileFormat::IsSupported</definition>
        <argsstring>(const FileSource &amp;source) const =0</argsstring>
        <name>IsSupported</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a7a143ae018f520857453cf983f9a53bf">IsSupported</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1a841f1cc6362ebc7b769998485e698229">IsSupported</reimplementedby>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Indicate if the <ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref> is supported/readable by this format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1a9c4a4144a9dd512a9bb1a165bb3961c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &gt;</type>
        <definition>virtual Result&lt;std::shared_ptr&lt;Schema&gt; &gt; arrow::dataset::FileFormat::Inspect</definition>
        <argsstring>(const FileSource &amp;source) const =0</argsstring>
        <name>Inspect</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a3d3cbfd28ab8ce58cc93b18d36c4a93a">Inspect</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1a1b86068edfb07a50b1f69a40ae6c46c7">Inspect</reimplementedby>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Return the schema of the file if possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1a69e49cf6e143608d5dcf1d7cd7e3fbcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="namespacearrow_1_1dataset_1a43ffb5f1e9c4b4e7a7b95e434e32a169" kindref="member">ScanTaskIterator</ref> &gt;</type>
        <definition>virtual Result&lt;ScanTaskIterator&gt; arrow::dataset::FileFormat::ScanFile</definition>
        <argsstring>(const FileSource &amp;source, std::shared_ptr&lt; ScanOptions &gt; options, std::shared_ptr&lt; ScanContext &gt; context) const =0</argsstring>
        <name>ScanFile</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a90c09acd61fdbc12291fc8f4275d95d2">ScanFile</reimplementedby>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1ae1922d40f00402a711c74767b2a9744a">ScanFile</reimplementedby>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Open a file for scanning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1a7e9f25cdee62ce636f66077f88a0e34e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_fragment" kindref="compound">FileFragment</ref> &gt; &gt;</type>
        <definition>virtual Result&lt;std::shared_ptr&lt;FileFragment&gt; &gt; arrow::dataset::FileFormat::MakeFragment</definition>
        <argsstring>(FileSource source, std::shared_ptr&lt; ScanOptions &gt; options, std::shared_ptr&lt; Expression &gt; partition_expression)</argsstring>
        <name>MakeFragment</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_parquet_file_format_1a16fee7726aab2adac52b57248bf0f555">MakeFragment</reimplementedby>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>partition_expression</declname>
        </param>
        <briefdescription>
<para>Open a fragment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1a67076dc3548ce3d4777f6de9883bd076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_file_fragment" kindref="compound">FileFragment</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;FileFragment&gt; &gt; arrow::dataset::FileFormat::MakeFragment</definition>
        <argsstring>(FileSource source, std::shared_ptr&lt; ScanOptions &gt; options)</argsstring>
        <name>MakeFragment</name>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_scan_options" kindref="compound">ScanOptions</ref> &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_file_format_1ab0f9a714310dca7e354135697b3b5bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_write_task" kindref="compound">WriteTask</ref> &gt; &gt;</type>
        <definition>virtual Result&lt;std::shared_ptr&lt;WriteTask&gt; &gt; arrow::dataset::FileFormat::WriteFragment</definition>
        <argsstring>(FileSource destination, std::shared_ptr&lt; Fragment &gt; fragment, std::shared_ptr&lt; ScanContext &gt; scan_context)</argsstring>
        <name>WriteFragment</name>
        <reimplementedby refid="classarrow_1_1dataset_1_1_ipc_file_format_1a13eb54454f9b65bca22d8229c313e23d">WriteFragment</reimplementedby>
        <param>
          <type><ref refid="classarrow_1_1dataset_1_1_file_source" kindref="compound">FileSource</ref></type>
          <declname>destination</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_fragment" kindref="compound">Fragment</ref> &gt;</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structarrow_1_1dataset_1_1_scan_context" kindref="compound">ScanContext</ref> &gt;</type>
          <declname>scan_context</declname>
        </param>
        <briefdescription>
<para>Write a fragment. </para>        </briefdescription>
        <detaileddescription>
<para>If the parent directory of destination does not exist, it will be created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="155" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for file format implementation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1562">
        <label>arrow::dataset::ParquetFileFormat</label>
        <link refid="classarrow_1_1dataset_1_1_parquet_file_format"/>
        <childnode refid="1559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1559">
        <label>arrow::dataset::FileFormat</label>
        <link refid="classarrow_1_1dataset_1_1_file_format"/>
        <childnode refid="1560" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1561">
        <label>arrow::dataset::IpcFileFormat</label>
        <link refid="classarrow_1_1dataset_1_1_ipc_file_format"/>
        <childnode refid="1559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1560">
        <label>std::enable_shared_from_this&lt; FileFormat &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1563">
        <label>arrow::dataset::FileFormat</label>
        <link refid="classarrow_1_1dataset_1_1_file_format"/>
        <childnode refid="1564" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1564">
        <label>std::enable_shared_from_this&lt; FileFormat &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/file_base.h" line="124" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/file_base.h" bodystart="124" bodyend="158"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_file_format_1a9c4a4144a9dd512a9bb1a165bb3961c9" prot="public" virt="pure-virtual"><scope>arrow::dataset::FileFormat</scope><name>Inspect</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1ae934a7b69d0402f36aecfa6037fa1343" prot="public" virt="pure-virtual"><scope>arrow::dataset::FileFormat</scope><name>IsSupported</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1a7e9f25cdee62ce636f66077f88a0e34e" prot="public" virt="virtual"><scope>arrow::dataset::FileFormat</scope><name>MakeFragment</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1a67076dc3548ce3d4777f6de9883bd076" prot="public" virt="non-virtual"><scope>arrow::dataset::FileFormat</scope><name>MakeFragment</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1a69e49cf6e143608d5dcf1d7cd7e3fbcf" prot="public" virt="pure-virtual"><scope>arrow::dataset::FileFormat</scope><name>ScanFile</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1ae48aca8d7f632fec22a4fe622e74d3a2" prot="public" virt="virtual"><scope>arrow::dataset::FileFormat</scope><name>splittable</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1ab089438dfec369581face93a00fdeb08" prot="public" virt="pure-virtual"><scope>arrow::dataset::FileFormat</scope><name>type_name</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1ab0f9a714310dca7e354135697b3b5bb6" prot="public" virt="virtual"><scope>arrow::dataset::FileFormat</scope><name>WriteFragment</name></member>
      <member refid="classarrow_1_1dataset_1_1_file_format_1a80398ed921f651882dd0069423929b93" prot="public" virt="virtual"><scope>arrow::dataset::FileFormat</scope><name>~FileFormat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
