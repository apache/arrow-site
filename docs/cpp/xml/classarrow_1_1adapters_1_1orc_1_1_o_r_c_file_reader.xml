<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader" kind="class" language="C++" prot="public">
    <compoundname>arrow::adapters::orc::ORCFileReader</compoundname>
    <includes refid="adapter_8h" local="no">arrow/adapters/orc/adapter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a01522b3d96267ecf3ffb72f28eeb59c2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; arrow::adapters::orc::ORCFileReader::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="141" column="1" bodyfile="/arrow/cpp/src/arrow/adapters/orc/adapter.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a435db8820356ef28e7b7749b2e413503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::adapters::orc::ORCFileReader::~ORCFileReader</definition>
        <argsstring>()</argsstring>
        <name>~ORCFileReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1afa4e44c5c25113aa5c909ecb40032eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::ReadSchema</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; *out)</argsstring>
        <name>ReadSchema</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return the schema read from the ORC file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad0940b042e1504713e6715b5ce6014ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::Read</definition>
        <argsstring>(std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read the file as a <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The table will be composed of one record batch per stripe.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a84717daf38320c1baae6d3bb17e9da98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::Read</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read the file as a <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The table will be composed of one record batch per stripe.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> schema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ac36cd88849bcf306bb39a6d9aa03fa25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::Read</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;include_indices, std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>include_indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read the file as a <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The table will be composed of one record batch per stripe.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">include_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected field indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab4a6299a996138f83647be24b406a76f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::Read</definition>
        <argsstring>(const std::shared_ptr&lt; Schema &gt; &amp;schema, const std::vector&lt; int &gt; &amp;include_indices, std::shared_ptr&lt; Table &gt; *out)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &gt; &amp;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>include_indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read the file as a <ref refid="classarrow_1_1_table" kindref="compound">Table</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The table will be composed of one record batch per stripe.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> schema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">include_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected field indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad784b52ec708a358711568469738de35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::ReadStripe</definition>
        <argsstring>(int64_t stripe, std::shared_ptr&lt; RecordBatch &gt; *out)</argsstring>
        <name>ReadStripe</name>
        <param>
          <type>int64_t</type>
          <declname>stripe</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read a single stripe as a <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stripe</parametername>
</parameternamelist>
<parameterdescription>
<para>the stripe index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab3c663ec7ddce1fe0d17833d0be863b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::ReadStripe</definition>
        <argsstring>(int64_t stripe, const std::vector&lt; int &gt; &amp;include_indices, std::shared_ptr&lt; RecordBatch &gt; *out)</argsstring>
        <name>ReadStripe</name>
        <param>
          <type>int64_t</type>
          <declname>stripe</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>include_indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Read a single stripe as a <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stripe</parametername>
</parameternamelist>
<parameterdescription>
<para>the stripe index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">include_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected field indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad5649aa6eca9bb1d532492b42db65aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::Seek</definition>
        <argsstring>(int64_t row_number)</argsstring>
        <name>Seek</name>
        <param>
          <type>int64_t</type>
          <declname>row_number</declname>
        </param>
        <briefdescription>
<para>Seek to designated row. </para>        </briefdescription>
        <detaileddescription>
<para>Invoke <ref refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1aa8aaaaddbd12f220affc9e4884dc75bf" kindref="member">NextStripeReader()</ref> after seek will return stripe reader starting from designated row.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">row_number</parametername>
</parameternamelist>
<parameterdescription>
<para>the rows number to seek </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1aa8aaaaddbd12f220affc9e4884dc75bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::NextStripeReader</definition>
        <argsstring>(int64_t batch_size, std::shared_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>NextStripeReader</name>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a stripe level record batch iterator with specified row count in each record batch. </para>        </briefdescription>
        <detaileddescription>
<para>NextStripeReader serves as a fine grain alternative to ReadStripe which may cause OOM issue by loading the whole stripes into memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rows each record batch contains in record batch iteration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned stripe reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a55deea5a327e6e680e7aa8e24c85a60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::adapters::orc::ORCFileReader::NextStripeReader</definition>
        <argsstring>(int64_t batch_size, const std::vector&lt; int &gt; &amp;include_indices, std::shared_ptr&lt; RecordBatchReader &gt; *out)</argsstring>
        <name>NextStripeReader</name>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>include_indices</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a stripe level record batch iterator with specified row count in each record batch. </para>        </briefdescription>
        <detaileddescription>
<para>NextStripeReader serves as a fine grain alternative to ReadStripe which may cause OOM issue by loading the whole stripes into memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">batch_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Get a stripe level record batch iterator with specified row count in each record batch.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">include_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>the selected field indices to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned stripe reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab04c36ed4e787213ff4011ff93c97220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::adapters::orc::ORCFileReader::NumberOfStripes</definition>
        <argsstring>()</argsstring>
        <name>NumberOfStripes</name>
        <briefdescription>
<para>The number of stripes in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a89e8d5ccbce912415e978c45931fc5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t arrow::adapters::orc::ORCFileReader::NumberOfRows</definition>
        <argsstring>()</argsstring>
        <name>NumberOfRows</name>
        <briefdescription>
<para>The number of rows in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a6dde3c9a4b39a461fdfe3f4fac2a835d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::adapters::orc::ORCFileReader::Open</definition>
        <argsstring>(const std::shared_ptr&lt; io::RandomAccessFile &gt; &amp;file, MemoryPool *pool, std::unique_ptr&lt; ORCFileReader &gt; *reader)</argsstring>
        <name>Open</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref> &gt; &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader" kindref="compound">ORCFileReader</ref> &gt; *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Creates a new ORC reader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>the data source </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> to use for buffer allocations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned reader object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a2f7b9a62fdb31f76b4fe827b883934c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::adapters::orc::ORCFileReader::ORCFileReader</definition>
        <argsstring>()</argsstring>
        <name>ORCFileReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read an Arrow <ref refid="classarrow_1_1_table" kindref="compound">Table</ref> or <ref refid="classarrow_1_1_record_batch" kindref="compound">RecordBatch</ref> from an ORC file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/adapters/orc/adapter.h" line="39" column="1" bodyfile="/arrow/cpp/src/arrow/adapters/orc/adapter.h" bodystart="39" bodyend="143"/>
    <listofallmembers>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a01522b3d96267ecf3ffb72f28eeb59c2" prot="private" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>impl_</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1aa8aaaaddbd12f220affc9e4884dc75bf" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>NextStripeReader</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a55deea5a327e6e680e7aa8e24c85a60b" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>NextStripeReader</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a89e8d5ccbce912415e978c45931fc5b5" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>NumberOfRows</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab04c36ed4e787213ff4011ff93c97220" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>NumberOfStripes</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a6dde3c9a4b39a461fdfe3f4fac2a835d" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Open</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a2f7b9a62fdb31f76b4fe827b883934c5" prot="private" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>ORCFileReader</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad0940b042e1504713e6715b5ce6014ac" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a84717daf38320c1baae6d3bb17e9da98" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ac36cd88849bcf306bb39a6d9aa03fa25" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab4a6299a996138f83647be24b406a76f" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Read</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1afa4e44c5c25113aa5c909ecb40032eac" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>ReadSchema</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad784b52ec708a358711568469738de35" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>ReadStripe</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ab3c663ec7ddce1fe0d17833d0be863b6" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>ReadStripe</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1ad5649aa6eca9bb1d532492b42db65aa1" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>Seek</name></member>
      <member refid="classarrow_1_1adapters_1_1orc_1_1_o_r_c_file_reader_1a435db8820356ef28e7b7749b2e413503" prot="public" virt="non-virtual"><scope>arrow::adapters::orc::ORCFileReader</scope><name>~ORCFileReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
