<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arrow_2schema_8h" kind="file" language="C++">
    <compoundname>schema.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes refid="parquet_2platform_8h" local="yes">parquet/platform.h</includes>
    <includes refid="schema_8h" local="yes">parquet/schema.h</includes>
    <includedby refid="reader__internal_8h" local="yes">/arrow/cpp/src/parquet/arrow/reader_internal.h</includedby>
    <incdepgraph>
      <node id="18540">
        <label>atomic</label>
      </node>
      <node id="18526">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
      </node>
      <node id="18548">
        <label>limits</label>
      </node>
      <node id="18515">
        <label>cstdint</label>
      </node>
      <node id="18516">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18517" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18521" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18542">
        <label>endian.h</label>
      </node>
      <node id="18527">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="18517" relation="include">
        </childnode>
        <childnode refid="18528" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18526" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18529" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18549">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="18550" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
      </node>
      <node id="18523">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18514">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18516" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18539" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18541" relation="include">
        </childnode>
        <childnode refid="18552" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
      </node>
      <node id="18533">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18547">
        <label>cmath</label>
      </node>
      <node id="18546">
        <label>cassert</label>
      </node>
      <node id="18538">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
      </node>
      <node id="18518">
        <label>string</label>
      </node>
      <node id="18532">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="18512">
        <label>unordered_set</label>
      </node>
      <node id="18530">
        <label>ostream</label>
      </node>
      <node id="18525">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="18521">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18526" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18539">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="18540" relation="include">
        </childnode>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18541">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18543" relation="include">
        </childnode>
        <childnode refid="18544" relation="include">
        </childnode>
        <childnode refid="18545" relation="include">
        </childnode>
        <childnode refid="18546" relation="include">
        </childnode>
        <childnode refid="18547" relation="include">
        </childnode>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18517" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18516" relation="include">
        </childnode>
        <childnode refid="18536" relation="include">
        </childnode>
        <childnode refid="18526" relation="include">
        </childnode>
        <childnode refid="18549" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18529" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
        <childnode refid="18551" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18545">
        <label>bitset</label>
      </node>
      <node id="18550">
        <label>tuple</label>
      </node>
      <node id="18513">
        <label>vector</label>
      </node>
      <node id="18537">
        <label>new</label>
      </node>
      <node id="18520">
        <label>utility</label>
      </node>
      <node id="18531">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18532" relation="include">
        </childnode>
      </node>
      <node id="18544">
        <label>array</label>
      </node>
      <node id="18555">
        <label>sstream</label>
      </node>
      <node id="18534">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18553">
        <label>parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18530" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18511" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18514" relation="include">
        </childnode>
        <childnode refid="18554" relation="include">
        </childnode>
      </node>
      <node id="18522">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="18528">
        <label>iosfwd</label>
      </node>
      <node id="18535">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18536" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18538" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18511">
        <label>unordered_map</label>
      </node>
      <node id="18536">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="18537" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18526" relation="include">
        </childnode>
      </node>
      <node id="18509">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18511" relation="include">
        </childnode>
        <childnode refid="18512" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18514" relation="include">
        </childnode>
        <childnode refid="18553" relation="include">
        </childnode>
      </node>
      <node id="18519">
        <label>type_traits</label>
      </node>
      <node id="18552">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18536" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18543">
        <label>algorithm</label>
      </node>
      <node id="18556">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18517">
        <label>cstring</label>
      </node>
      <node id="18554">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="18543" relation="include">
        </childnode>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18517" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18555" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18556" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
        <childnode refid="18514" relation="include">
        </childnode>
      </node>
      <node id="18529">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="18510" relation="include">
        </childnode>
        <childnode refid="18530" relation="include">
        </childnode>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18510">
        <label>memory</label>
      </node>
      <node id="18524">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="18515" relation="include">
        </childnode>
      </node>
      <node id="18551">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="18519" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18558">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="18557">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="18558" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structparquet_1_1arrow_1_1_schema_field" prot="public">parquet::arrow::SchemaField</innerclass>
    <innerclass refid="structparquet_1_1arrow_1_1_schema_manifest" prot="public">parquet::arrow::SchemaManifest</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <innernamespace refid="namespaceparquet_1_1arrow">parquet::arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2platform_8h" kindref="compound">parquet/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">parquet/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Field;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Schema;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ArrowReaderProperties;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ArrowWriterProperties;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WriterProperties;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__arrow-to-parquet-schema-conversion_1ga46ca510e421a89e717f9dc9968ef038c" kindref="member">FieldToNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;::arrow::Field&gt;&amp;<sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WriterProperties&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrowWriterProperties&amp;<sp/>arrow_properties,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1_1schema_1a7fe5ee27b1dd5f12098ce3f3e6200b9e" kindref="member">schema::NodePtr</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__arrow-to-parquet-schema-conversion_1ga0e5b1ecccddbc651dffc29fdd15b6e2e" kindref="member">ToParquetSchema</ref>(const<sp/>::arrow::Schema*<sp/>arrow_schema,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WriterProperties&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrowWriterProperties&amp;<sp/>arrow_properties,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SchemaDescriptor&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__arrow-to-parquet-schema-conversion_1ga0e5b1ecccddbc651dffc29fdd15b6e2e" kindref="member">ToParquetSchema</ref>(const<sp/>::arrow::Schema*<sp/>arrow_schema,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WriterProperties&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SchemaDescriptor&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__parquet-to-arrow-schema-conversion_1gac3a99e5eb4656861600c33e7d2bd03e0" kindref="member">FromParquetSchema</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDescriptor*<sp/>parquet_schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrowReaderProperties&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>::arrow::KeyValueMetadata&gt;&amp;<sp/><ref refid="namespacearrow_1ae2b06732381cac7996882e17c245290a" kindref="member">key_value_metadata</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;::arrow::Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__parquet-to-arrow-schema-conversion_1gac3a99e5eb4656861600c33e7d2bd03e0" kindref="member">FromParquetSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDescriptor*<sp/>parquet_schema,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrowReaderProperties&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;::arrow::Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">PARQUET_EXPORT</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">::arrow::Status</ref><sp/><ref refid="group__parquet-to-arrow-schema-conversion_1gac3a99e5eb4656861600c33e7d2bd03e0" kindref="member">FromParquetSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDescriptor*<sp/>parquet_schema,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;::arrow::Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"></codeline>
<codeline lineno="91" refid="structparquet_1_1arrow_1_1_schema_field" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="structparquet_1_1arrow_1_1_schema_field" kindref="compound">SchemaField</ref><sp/>{</highlight></codeline>
<codeline lineno="92" refid="structparquet_1_1arrow_1_1_schema_field_1a34447b603c736386b04c03b6d128fa51" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;::arrow::Field&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_field_1a34447b603c736386b04c03b6d128fa51" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="93" refid="structparquet_1_1arrow_1_1_schema_field_1aed0073dbc2fec2d5b3d334809baafd3c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;SchemaField&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_field_1aed0073dbc2fec2d5b3d334809baafd3c" kindref="member">children</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>set<sp/>for<sp/>leaf<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structparquet_1_1arrow_1_1_schema_field_1a65d09d40fc13e54246ce5c4aedfc3cd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structparquet_1_1arrow_1_1_schema_field_1a0d7a7ac7e480e5dbfbb4b52f61dd0f93" refkind="member"><highlight class="normal"><sp/><sp/>int16_t<sp/><ref refid="structparquet_1_1arrow_1_1_schema_field_1a0d7a7ac7e480e5dbfbb4b52f61dd0f93" kindref="member">max_definition_level</ref>;</highlight></codeline>
<codeline lineno="99" refid="structparquet_1_1arrow_1_1_schema_field_1aafb482221f487ba6e3381e739ccbc3b0" refkind="member"><highlight class="normal"><sp/><sp/>int16_t<sp/><ref refid="structparquet_1_1arrow_1_1_schema_field_1aafb482221f487ba6e3381e739ccbc3b0" kindref="member">max_repetition_level</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structparquet_1_1arrow_1_1_schema_field_1a56f076fdd34440f86fa0a4ce518b77c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1arrow_1_1_schema_field_1a56f076fdd34440f86fa0a4ce518b77c2" kindref="member">is_leaf</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_index<sp/>!=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structparquet_1_1arrow_1_1_schema_manifest" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest" kindref="compound">SchemaManifest</ref><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">static ::arrow::Status</ref><sp/>Make(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>::arrow::KeyValueMetadata&gt;&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_arrow_reader_properties" kindref="compound">ArrowReaderProperties</ref>&amp;<sp/>properties,<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest" kindref="compound">SchemaManifest</ref>*<sp/>manifest);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structparquet_1_1arrow_1_1_schema_manifest_1a858620a5744aa978df44fee02e1a5a62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_schema_descriptor" kindref="compound">SchemaDescriptor</ref>*<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1a858620a5744aa978df44fee02e1a5a62" kindref="member">descr</ref>;</highlight></codeline>
<codeline lineno="115" refid="structparquet_1_1arrow_1_1_schema_manifest_1aa0c55559a04e13c143b7fac1f27bab54" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;::arrow::Schema&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1aa0c55559a04e13c143b7fac1f27bab54" kindref="member">origin_schema</ref>;</highlight></codeline>
<codeline lineno="116" refid="structparquet_1_1arrow_1_1_schema_manifest_1a94fc82e328e2762c580f14609c3f9410" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;const<sp/>::arrow::KeyValueMetadata&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1a94fc82e328e2762c580f14609c3f9410" kindref="member">schema_metadata</ref>;</highlight></codeline>
<codeline lineno="117" refid="structparquet_1_1arrow_1_1_schema_manifest_1a779f1b4659be0370707c8e49bce9fa4b" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;SchemaField&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1a779f1b4659be0370707c8e49bce9fa4b" kindref="member">schema_fields</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structparquet_1_1arrow_1_1_schema_manifest_1aad7fcd4e578d6d801e1c580b5acac4c4" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;int,<sp/>const<sp/>SchemaField*&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1aad7fcd4e578d6d801e1c580b5acac4c4" kindref="member">column_index_to_field</ref>;</highlight></codeline>
<codeline lineno="120" refid="structparquet_1_1arrow_1_1_schema_manifest_1af480bcc0f5698c18badf317a53147068" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;const<sp/>SchemaField*,<sp/>const<sp/>SchemaField*&gt;<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1af480bcc0f5698c18badf317a53147068" kindref="member">child_to_parent</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structparquet_1_1arrow_1_1_schema_manifest_1aaf06857060d94bdaadb847142f6ebc98" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">::arrow::Status</ref><sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1aaf06857060d94bdaadb847142f6ebc98" kindref="member">GetColumnField</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1arrow_1_1_schema_field" kindref="compound">SchemaField</ref>**<sp/>out)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>column_index_to_field.find(column_index);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>column_index_to_field.end())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::arrow::Status::KeyError(</highlight><highlight class="stringliteral">&quot;Column<sp/>index<sp/>&quot;</highlight><highlight class="normal">,<sp/>column_index,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>schema<sp/>manifest,<sp/>may<sp/>be<sp/>malformed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::arrow::Status::OK();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structparquet_1_1arrow_1_1_schema_manifest_1a8ea4da5d49737b3579cc082b1c7c6e40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1arrow_1_1_schema_field" kindref="compound">SchemaField</ref>*<sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1a8ea4da5d49737b3579cc082b1c7c6e40" kindref="member">GetParent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1arrow_1_1_schema_field" kindref="compound">SchemaField</ref>*<sp/><ref refid="group__schema-factories_1gaf9f57798b5abe44d560a52887f28894c" kindref="member">field</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>nullptr<sp/>also<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>child_to_parent.find(field);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>child_to_parent.end())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structparquet_1_1arrow_1_1_schema_manifest_1ad7bdc87b3e0aaf1208987efa88f09ffa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structparquet_1_1arrow_1_1_schema_manifest_1ad7bdc87b3e0aaf1208987efa88f09ffa" kindref="member">GetFieldIndices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>column_indices,<sp/>std::vector&lt;int&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coalesce<sp/>a<sp/>list<sp/>of<sp/>schema<sp/>field<sp/>indices<sp/>which<sp/>are<sp/>the<sp/>roots<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>columns<sp/>referred<sp/>to<sp/>by<sp/>a<sp/>list<sp/>of<sp/>column<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1schema_1_1_group_node" kindref="compound">schema::GroupNode</ref>*<sp/>group<sp/>=<sp/>descr-&gt;<ref refid="classparquet_1_1_schema_descriptor_1a2847d78a5031d07706b6513c2b795364" kindref="member">group_node</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;int&gt;<sp/>already_added;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;clear();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>column_idx<sp/>:<sp/>column_indices)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field_node<sp/>=<sp/>descr-&gt;<ref refid="classparquet_1_1_schema_descriptor_1ad27c710f71205a1afad0c94fceb62710" kindref="member">GetColumnRoot</ref>(column_idx);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field_idx<sp/>=<sp/>group-&gt;<ref refid="classparquet_1_1schema_1_1_group_node_1a693fb1324170c4407185c79559e1c53c" kindref="member">FieldIndex</ref>(*field_node);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_idx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>insertion<sp/>=<sp/>already_added.insert(field_idx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insertion.second)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;push_back(field_idx);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/arrow/schema.h"/>
  </compounddef>
</doxygen>
