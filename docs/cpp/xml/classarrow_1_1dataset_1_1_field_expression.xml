<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1dataset_1_1_field_expression" kind="class" language="C++" prot="public" final="yes">
    <compoundname>arrow::dataset::FieldExpression</compoundname>
    <basecompoundref refid="classarrow_1_1dataset_1_1_expression" prot="public" virt="non-virtual">arrow::dataset::Expression</basecompoundref>
    <includes refid="arrow_2dataset_2filter_8h" local="no">arrow/dataset/filter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1dataset_1_1_field_expression_1ac3b34fdb0793594a40df6cd18cf2d6ad" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FieldExpression::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="431" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1adc11ee439a664380c612cc600ea32fd0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::dataset::FieldExpression::FieldExpression</definition>
        <argsstring>(std::string name)</argsstring>
        <name>FieldExpression</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="417" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="417" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1aa0ade5c1c568622871cc82a5199873d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FieldExpression::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="420" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1afb489412780876ed217cf6a81ff256cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string arrow::dataset::FieldExpression::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="classarrow_1_1dataset_1_1_expression_1acd37d50f9235db97d98299dedde5deb8">ToString</reimplements>
        <briefdescription>
<para>returns a debug string representing this expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1ad6071bd8d7747d7d33f2a135d403fc70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool arrow::dataset::FieldExpression::Equals</definition>
        <argsstring>(const Expression &amp;other) const override</argsstring>
        <name>Equals</name>
        <reimplements refid="classarrow_1_1dataset_1_1_expression_1a8c952a05b1090e1ec15adbe7ed712ea6">Equals</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true iff the expressions are identical; does not check for equivalence. </para>        </briefdescription>
        <detaileddescription>
<para>For example, (A and B) is not equal to (B and A) nor is (A and not A) equal to (false). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1ae3c0c467490c9a5428b52279cab501fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;DataType&gt; &gt; arrow::dataset::FieldExpression::Validate</definition>
        <argsstring>(const Schema &amp;schema) const override</argsstring>
        <name>Validate</name>
        <reimplements refid="classarrow_1_1dataset_1_1_expression_1a1073c67366c820875c3825e867419050">Validate</reimplements>
        <param>
          <type>const <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> &amp;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Validate this expression for execution against a schema. </para>        </briefdescription>
        <detaileddescription>
<para>This will check that all reference fields are present (fields not in the schema will be replaced with null) and all subexpressions are executable. Returns the type to which this expression will evaluate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1dataset_1_1_field_expression_1a8f1b716f7818cbd3220c439a2e79c29a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1dataset_1_1_expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Expression&gt; arrow::dataset::FieldExpression::Copy</definition>
        <argsstring>() const override</argsstring>
        <name>Copy</name>
        <reimplements refid="classarrow_1_1dataset_1_1_expression_1ab4baacac016afb9b00f41113dd05f602">Copy</reimplements>
        <briefdescription>
<para>Copy this expression into a shared pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="428" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a reference to a field. </para>    </briefdescription>
    <detaileddescription>
<para>Stores only the field&apos;s name (type and other information is known only when a <ref refid="classarrow_1_1_schema" kindref="compound">Schema</ref> is provided) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1537">
        <label>arrow::dataset::FieldExpression</label>
        <link refid="classarrow_1_1dataset_1_1_field_expression"/>
        <childnode refid="1538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1538">
        <label>arrow::dataset::Expression</label>
        <link refid="classarrow_1_1dataset_1_1_expression"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1539">
        <label>arrow::dataset::FieldExpression</label>
        <link refid="classarrow_1_1dataset_1_1_field_expression"/>
        <childnode refid="1540" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1540">
        <label>arrow::dataset::Expression</label>
        <link refid="classarrow_1_1dataset_1_1_expression"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/dataset/filter.h" line="415" column="1" bodyfile="/arrow/cpp/src/arrow/dataset/filter.h" bodystart="415" bodyend="432"/>
    <listofallmembers>
      <member refid="classarrow_1_1dataset_1_1_expression_1a5cf8311867209fd28af7f0fdf6b26b33" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>Assume</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1aa94bb5128873b3955ef1079dbfa59a05" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>Assume</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1aa3b8f7274bf46ffb4c9d63c54182eed3" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>CastLike</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1ab93e79be7899dc8a3aa063d92748d6d1" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>CastLike</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a67c73de7e4be70d94decb62d73d9679f" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>CastTo</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1a8f1b716f7818cbd3220c439a2e79c29a" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>Copy</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1ad6071bd8d7747d7d33f2a135d403fc70" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>Equals</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a2080b195e1999f973c7ceb7e0978a13e" prot="public" virt="non-virtual" ambiguityscope="arrow::dataset::Expression::"><scope>arrow::dataset::FieldExpression</scope><name>Equals</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a55f49c9a8081e757c4d399073785f171" prot="public" virt="non-virtual" ambiguityscope="arrow::dataset::Expression::"><scope>arrow::dataset::FieldExpression</scope><name>Equals</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1ace247255d88029192703e49bcb468c7a" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>Expression</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1adc11ee439a664380c612cc600ea32fd0" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>FieldExpression</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a5ce811a47927451199574abff5bab72a" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>In</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a8e5d308f61bdb2ec2074b662ea33f760" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>IsNull</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1ac665b2a07ec4247f0af1ada25340a294" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>IsValid</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1aa0ade5c1c568622871cc82a5199873d4" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>name</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1ac3b34fdb0793594a40df6cd18cf2d6ad" prot="private" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>name_</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1afb489412780876ed217cf6a81ff256cb" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>ToString</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a26c748fc0b8eb3ffa800bd957a019d39" prot="public" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>type</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1a4f70ea37a6b7d7e542b1d806e65305f4" prot="protected" virt="non-virtual"><scope>arrow::dataset::FieldExpression</scope><name>type_</name></member>
      <member refid="classarrow_1_1dataset_1_1_field_expression_1ae3c0c467490c9a5428b52279cab501fd" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>Validate</name></member>
      <member refid="classarrow_1_1dataset_1_1_expression_1aeadfb3da0cb488e984d342be1ed9ae36" prot="public" virt="virtual"><scope>arrow::dataset::FieldExpression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
