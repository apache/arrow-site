<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_thrift_serializer" kind="class" language="C++" prot="public">
    <compoundname>parquet::ThriftSerializer</compoundname>
    <includes refid="parquet_2thrift__internal_8h" local="no">parquet/thrift_internal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_thrift_serializer_1ac221b0f90e825759a7b439e344f4fa8a" prot="private" static="no" mutable="no">
        <type>shared_ptr&lt; <ref refid="namespaceparquet_1a84705fc892245d2e31b55c03fa6d5ddd" kindref="member">ThriftBuffer</ref> &gt;</type>
        <definition>shared_ptr&lt;ThriftBuffer&gt; parquet::ThriftSerializer::mem_buffer_</definition>
        <argsstring></argsstring>
        <name>mem_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="479" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_thrift_serializer_1a39362c32a592bc4a9dfe3d6eb5df4f6d" prot="private" static="no" mutable="no">
        <type>shared_ptr&lt; apache::thrift::protocol::TProtocol &gt;</type>
        <definition>shared_ptr&lt;apache::thrift::protocol::TProtocol&gt; parquet::ThriftSerializer::protocol_</definition>
        <argsstring></argsstring>
        <name>protocol_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="480" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1aa0a29a9706aa919c585d210c717b090a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>parquet::ThriftSerializer::ThriftSerializer</definition>
        <argsstring>(int initial_buffer_size=1024)</argsstring>
        <name>ThriftSerializer</name>
        <param>
          <type>int</type>
          <declname>initial_buffer_size</declname>
          <defval>1024</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="415" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="415" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1a9ce30219377881c7e4bd067c11c40308" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::ThriftSerializer::SerializeToBuffer</definition>
        <argsstring>(const T *obj, uint32_t *len, uint8_t **buffer)</argsstring>
        <name>SerializeToBuffer</name>
        <param>
          <type>const T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Serialize obj into a memory buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The result is returned in buffer/len. The memory returned is owned by this object and will be invalid when another object is serialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="425" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1ab6e3a970e3a555795cbdda0e53926fc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::ThriftSerializer::SerializeToString</definition>
        <argsstring>(const T *obj, std::string *result)</argsstring>
        <name>SerializeToString</name>
        <param>
          <type>const T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="431" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1af826adc797ff50a65d0d360a6b3b563c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int64_t</type>
        <definition>int64_t parquet::ThriftSerializer::Serialize</definition>
        <argsstring>(const T *obj, ArrowOutputStream *out, const std::shared_ptr&lt; Encryptor &gt; &amp;encryptor=NULLPTR)</argsstring>
        <name>Serialize</name>
        <param>
          <type>const T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespaceparquet_1ad02e9bf40eaac38e07be6cc973d8884e" kindref="member">ArrowOutputStream</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_encryptor" kindref="compound">Encryptor</ref> &gt; &amp;</type>
          <declname>encryptor</declname>
          <defval><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="437" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="437" bodyend="450"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1a16d34e9fd8e33aa45e39ec7a5ae73e31" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void parquet::ThriftSerializer::SerializeObject</definition>
        <argsstring>(const T *obj)</argsstring>
        <name>SerializeObject</name>
        <param>
          <type>const T *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="454" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="454" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_thrift_serializer_1a9b5606a4629e117cb2274a980cc5b1ca" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t parquet::ThriftSerializer::SerializeEncryptedObj</definition>
        <argsstring>(ArrowOutputStream *out, uint8_t *out_buffer, uint32_t out_length, const std::shared_ptr&lt; Encryptor &gt; &amp;encryptor)</argsstring>
        <name>SerializeEncryptedObj</name>
        <param>
          <type><ref refid="namespaceparquet_1ad02e9bf40eaac38e07be6cc973d8884e" kindref="member">ArrowOutputStream</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>out_length</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classparquet_1_1_encryptor" kindref="compound">Encryptor</ref> &gt; &amp;</type>
          <declname>encryptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="465" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="465" bodyend="477"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility class to serialize thrift objects to a binary format. </para>    </briefdescription>
    <detaileddescription>
<para>This object should be reused if possible to reuse the underlying memory. Note: thrift will encode NULLs into the serialized buffer so it is not valid to treat it as a string. </para>    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/thrift_internal.h" line="413" column="1" bodyfile="/arrow/cpp/src/parquet/thrift_internal.h" bodystart="413" bodyend="481"/>
    <listofallmembers>
      <member refid="classparquet_1_1_thrift_serializer_1ac221b0f90e825759a7b439e344f4fa8a" prot="private" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>mem_buffer_</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1a39362c32a592bc4a9dfe3d6eb5df4f6d" prot="private" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>protocol_</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1af826adc797ff50a65d0d360a6b3b563c" prot="public" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>Serialize</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1a9b5606a4629e117cb2274a980cc5b1ca" prot="private" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>SerializeEncryptedObj</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1a16d34e9fd8e33aa45e39ec7a5ae73e31" prot="private" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>SerializeObject</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1a9ce30219377881c7e4bd067c11c40308" prot="public" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>SerializeToBuffer</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1ab6e3a970e3a555795cbdda0e53926fc4" prot="public" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>SerializeToString</name></member>
      <member refid="classparquet_1_1_thrift_serializer_1aa0a29a9706aa919c585d210c717b090a" prot="public" virt="non-virtual"><scope>parquet::ThriftSerializer</scope><name>ThriftSerializer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
