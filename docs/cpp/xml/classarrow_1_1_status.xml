<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1_status" kind="class" language="C++" prot="public">
    <compoundname>arrow::Status</compoundname>
    <basecompoundref refid="classarrow_1_1util_1_1_equality_comparable" prot="public" virt="non-virtual">arrow::util::EqualityComparable&lt; Status &gt;</basecompoundref>
    <basecompoundref refid="classarrow_1_1util_1_1_to_string_ostreamable" prot="public" virt="non-virtual">arrow::util::ToStringOstreamable&lt; Status &gt;</basecompoundref>
    <includes refid="status_8h" local="no">arrow/status.h</includes>
    <innerclass refid="structarrow_1_1_status_1_1_state" prot="private">arrow::Status::State</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1_status_1aaacf01e17df90656ae4ca7ec0366d9bb" prot="private" static="no" mutable="no">
        <type>State *</type>
        <definition>State* arrow::Status::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="341" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1_status_1ade2a75789d86f4d85d90c43441134d9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::Status</definition>
        <argsstring>() noexcept</argsstring>
        <name>Status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="126" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa515c772dbdc40d4f655ebc119fc20b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::~Status</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="127" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a5797c518d168956b2141f956415c2b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::Status</definition>
        <argsstring>(StatusCode code, const std::string &amp;msg)</argsstring>
        <name>Status</name>
        <param>
          <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1abf7027d47acce62267954748572c30e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::Status</definition>
        <argsstring>(StatusCode code, std::string msg, std::shared_ptr&lt; StatusDetail &gt; detail)</argsstring>
        <name>Status</name>
        <param>
          <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_status_detail" kindref="compound">StatusDetail</ref> &gt;</type>
          <declname>detail</declname>
        </param>
        <briefdescription>
<para>Pluggable constructor for use by sub-systems. detail cannot be null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1af656fd9c82ea9bc846d58141fc5d3e36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::Status</definition>
        <argsstring>(const Status &amp;s)</argsstring>
        <name>Status</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="140" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="357" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a992a0204f5faa7eb65ed539ffd4861f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
        <definition>Status &amp; arrow::Status::operator=</definition>
        <argsstring>(const Status &amp;s)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="141" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a02a4b9e31ce8dfb491ed89f7821c2d20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::Status::Status</definition>
        <argsstring>(Status &amp;&amp;s) noexcept</argsstring>
        <name>Status</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="144" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a25ac7ebfa468e5fdc58e0018c2ce4436" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
        <definition>Status &amp; arrow::Status::operator=</definition>
        <argsstring>(Status &amp;&amp;s) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="145" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1abd18899fee1b0be031b70ae35023c118" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::Equals</definition>
        <argsstring>(const Status &amp;s) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="147" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="376" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1addda1df6b41b8e8184a2ce56a9ce19ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::Status::operator&amp;</definition>
        <argsstring>(const Status &amp;s) const noexcept</argsstring>
        <name>operator &amp;</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a8ab62eed15b70252d143ab66cc7012ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::Status::operator&amp;</definition>
        <argsstring>(Status &amp;&amp;s) const noexcept</argsstring>
        <name>operator &amp;</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ab3881d4d8beb2ec334bb4db116fd25bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
        <definition>Status&amp; arrow::Status::operator&amp;=</definition>
        <argsstring>(const Status &amp;s) noexcept</argsstring>
        <name>operator &amp;=</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a0cc294af74e5c6af163a919cba7f467e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
        <definition>Status&amp; arrow::Status::operator&amp;=</definition>
        <argsstring>(Status &amp;&amp;s) noexcept</argsstring>
        <name>operator &amp;=</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a2240d82ac632c582efc070af2fe9a5ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::ok</definition>
        <argsstring>() const</argsstring>
        <name>ok</name>
        <briefdescription>
<para>Return true iff the status indicates success. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="258" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa68adbba5eb1af6a3bbea812e932202e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsOutOfMemory</definition>
        <argsstring>() const</argsstring>
        <name>IsOutOfMemory</name>
        <briefdescription>
<para>Return true iff the status indicates an out-of-memory error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="261" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aecaae760cdbe63349166c5415c7d6405" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsKeyError</definition>
        <argsstring>() const</argsstring>
        <name>IsKeyError</name>
        <briefdescription>
<para>Return true iff the status indicates a key lookup error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="263" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a1473b7bf14ad50feab36b514b5af6484" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsInvalid</definition>
        <argsstring>() const</argsstring>
        <name>IsInvalid</name>
        <briefdescription>
<para>Return true iff the status indicates invalid data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="265" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a028972b0c7f807ebfabfb00b692c489e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsIOError</definition>
        <argsstring>() const</argsstring>
        <name>IsIOError</name>
        <briefdescription>
<para>Return true iff the status indicates an IO-related failure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="267" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ae8ee3e230331723c3d9d554ca68c4f9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsCapacityError</definition>
        <argsstring>() const</argsstring>
        <name>IsCapacityError</name>
        <briefdescription>
<para>Return true iff the status indicates a container reaching capacity limits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="269" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a782070e6182794e02278c6929b2d5359" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsIndexError</definition>
        <argsstring>() const</argsstring>
        <name>IsIndexError</name>
        <briefdescription>
<para>Return true iff the status indicates an out of bounds index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="271" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa508d180a205b08be3438f0b13209df5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsTypeError</definition>
        <argsstring>() const</argsstring>
        <name>IsTypeError</name>
        <briefdescription>
<para>Return true iff the status indicates a type error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="273" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a712fe45f53af49719298b6a69ca69fdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsUnknownError</definition>
        <argsstring>() const</argsstring>
        <name>IsUnknownError</name>
        <briefdescription>
<para>Return true iff the status indicates an unknown error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="275" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="275" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a772915ccb2d41372bf989da001195bcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsNotImplemented</definition>
        <argsstring>() const</argsstring>
        <name>IsNotImplemented</name>
        <briefdescription>
<para>Return true iff the status indicates an unimplemented operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="277" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aff56e112e3004e6f9f79a5e9e9d35d2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsSerializationError</definition>
        <argsstring>() const</argsstring>
        <name>IsSerializationError</name>
        <briefdescription>
<para>Return true iff the status indicates a (de)serialization failure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="279" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa94c1d729d9a98fadc5ec50cbdaa9887" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsRError</definition>
        <argsstring>() const</argsstring>
        <name>IsRError</name>
        <briefdescription>
<para>Return true iff the status indicates a R-originated error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="281" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a592fa0d4655d93facba6fdd616025852" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsCodeGenError</definition>
        <argsstring>() const</argsstring>
        <name>IsCodeGenError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="283" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1acaafb6c782e0df99242c2a810e48f7d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsExpressionValidationError</definition>
        <argsstring>() const</argsstring>
        <name>IsExpressionValidationError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="285" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a1447ff870c401b0b6f9c131a5296b3fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsExecutionError</definition>
        <argsstring>() const</argsstring>
        <name>IsExecutionError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="289" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a861305bea8c7722d0b9c0a260dc4509a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool arrow::Status::IsAlreadyExists</definition>
        <argsstring>() const</argsstring>
        <name>IsAlreadyExists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="290" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a5bccb726dc7a1989b9158b46bfb309b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::Status::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Return a string representation of this status suitable for printing. </para>        </briefdescription>
        <detaileddescription>
<para>The string &quot;OK&quot; is returned for success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a4b39130dbef68d6b20ee9baa41c76504" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::Status::CodeAsString</definition>
        <argsstring>() const</argsstring>
        <name>CodeAsString</name>
        <briefdescription>
<para>Return a string representation of the status code, without the message text or POSIX code information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a0006d966f821af5194a087806b121e80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
        <definition>StatusCode arrow::Status::code</definition>
        <argsstring>() const</argsstring>
        <name>code</name>
        <briefdescription>
<para>Return the StatusCode value attached to this status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="303" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ad67b92854b41e7f0c5951b114b195284" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string arrow::Status::message</definition>
        <argsstring>() const</argsstring>
        <name>message</name>
        <briefdescription>
<para>Return the specific error message attached to this status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="306" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a2daf52c50d15eb62bedbe6e8dbc18fff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::Status::WithDetail</definition>
        <argsstring>(std::shared_ptr&lt; StatusDetail &gt; new_detail) const</argsstring>
        <name>WithDetail</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_status_detail" kindref="compound">StatusDetail</ref> &gt;</type>
          <declname>new_detail</declname>
        </param>
        <briefdescription>
<para>Return a new <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> copying the existing status, but updating with the existing detail. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="315" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a5d18488120c4f0ae9ffeeb771106a66b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::Status::WithMessage</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>WithMessage</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return a new <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> with changed message, copying the existing status code and detail. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="322" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a2fe3b61bd3e54c243a01f0d540d3d9ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Status::Abort</definition>
        <argsstring>() const</argsstring>
        <name>Abort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a80ade9087e14056f7f70ee155894ded6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Status::Abort</definition>
        <argsstring>(const std::string &amp;message) const</argsstring>
        <name>Abort</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="327" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::OK</definition>
        <argsstring>()</argsstring>
        <name>OK</name>
        <briefdescription>
<para>Return a success status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="156" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ac7613be3081f01a9773a75681e044b26" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::FromArgs</definition>
        <argsstring>(StatusCode code, Args &amp;&amp;... args)</argsstring>
        <name>FromArgs</name>
        <param>
          <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="159" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a11049f6c5cbc558821d26cbedb3882e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::FromDetailAndArgs</definition>
        <argsstring>(StatusCode code, std::shared_ptr&lt; StatusDetail &gt; detail, Args &amp;&amp;... args)</argsstring>
        <name>FromDetailAndArgs</name>
        <param>
          <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_status_detail" kindref="compound">StatusDetail</ref> &gt;</type>
          <declname>detail</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="164" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ae39cb87196acb83e4eb921cf729248e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::OutOfMemory</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>OutOfMemory</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status for out-of-memory conditions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="172" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a9cb12a31b919deae25d1089da1cf21c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::KeyError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>KeyError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status for failed key lookups (e.g. column name in a table) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="178" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a0ff96a9163346d8af8abe40e9809a8ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::TypeError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>TypeError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status for type errors (such as mismatching data types) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="184" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a40dfa10f3910d85b4a8d9d5c2c043feb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::UnknownError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>UnknownError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status for unknown errors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="190" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::NotImplemented</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>NotImplemented</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status when an operation or a combination of operation and data types is unimplemented. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="197" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::Invalid</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>Invalid</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status for invalid data (for example a string that fails parsing) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="203" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a271ce890dfa95b2d9a29c181050b8d9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::IndexError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>IndexError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status when an index is out of bounds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="209" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a116186da015799d2efc8446ec709d4af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::CapacityError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>CapacityError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status when a container&apos;s capacity would exceed its limits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="215" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a4d6fc084d924c8297e35b9996c4171b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::IOError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>IOError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status when some IO-related operation failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="221" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a0852f0d35526dc31345154f92c955c00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::SerializationError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>SerializationError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Return an error status when some (de)serialization operation failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="227" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a50ea43e9554c08aeb849abb784bacd2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::RError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>RError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="232" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a80752bf1708405ae539ec11227754ce4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::CodeGenError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>CodeGenError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="237" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a89879fc61fa7874690b5859401328804" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::ExpressionValidationError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>ExpressionValidationError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="242" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a909de94e53dc33d5ea42171db72b7f36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::ExecutionError</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>ExecutionError</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="248" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a9b16667d3842f2a73ac6ef667923b55d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>static Status arrow::Status::AlreadyExists</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>AlreadyExists</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="253" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1a1596e9fd582f7ed022214c4183c5c720" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string arrow::Status::CodeAsString</definition>
        <argsstring>(StatusCode)</argsstring>
        <name>CodeAsString</name>
        <param>
          <type><ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188f" kindref="member">StatusCode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="300" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classarrow_1_1_status_1a3795d3dbf33902f6accc05dac076ce3f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Status::DeleteState</definition>
        <argsstring>()</argsstring>
        <name>DeleteState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="343" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1aa4298570fb944ea73b20a76f85d451e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Status::CopyFrom</definition>
        <argsstring>(const Status &amp;s)</argsstring>
        <name>CopyFrom</name>
        <param>
          <type>const <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1_status_1ac06b996ae4128dfb9ee6a0dec072f293" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arrow::Status::MoveFrom</definition>
        <argsstring>(Status &amp;s)</argsstring>
        <name>MoveFrom</name>
        <param>
          <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/status.h" line="348" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="351" bodyend="355"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> outcome object (success or error) </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classarrow_1_1_status" kindref="compound">Status</ref> object is an object holding the outcome of an operation. The outcome is represented as a StatusCode, either success (<ref refid="namespacearrow_1a331ad1dbd1c157c8be168cb6548d188fae0aa021e21dddbd6d8cecec71e9cf564" kindref="member">StatusCode::OK</ref>) or an error (any other of the StatusCode enumeration values).</para><para>Additionally, if an error occurred, a specific error message is generally attached. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4287">
        <label>arrow::util::ToStringOstreamable&lt; Status &gt;</label>
        <link refid="classarrow_1_1util_1_1_to_string_ostreamable"/>
      </node>
      <node id="4285">
        <label>arrow::Status</label>
        <link refid="classarrow_1_1_status"/>
        <childnode refid="4286" relation="public-inheritance">
        </childnode>
        <childnode refid="4287" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4286">
        <label>arrow::util::EqualityComparable&lt; Status &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4290">
        <label>arrow::util::ToStringOstreamable&lt; Status &gt;</label>
        <link refid="classarrow_1_1util_1_1_to_string_ostreamable"/>
      </node>
      <node id="4288">
        <label>arrow::Status</label>
        <link refid="classarrow_1_1_status"/>
        <childnode refid="4289" relation="public-inheritance">
        </childnode>
        <childnode refid="4290" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4289">
        <label>arrow::util::EqualityComparable&lt; Status &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/status.h" line="123" column="1" bodyfile="/arrow/cpp/src/arrow/status.h" bodystart="122" bodyend="349"/>
    <listofallmembers>
      <member refid="classarrow_1_1_status_1a2fe3b61bd3e54c243a01f0d540d3d9ff" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Abort</name></member>
      <member refid="classarrow_1_1_status_1a80ade9087e14056f7f70ee155894ded6" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Abort</name></member>
      <member refid="classarrow_1_1_status_1a9b16667d3842f2a73ac6ef667923b55d" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>AlreadyExists</name></member>
      <member refid="classarrow_1_1_status_1a116186da015799d2efc8446ec709d4af" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>CapacityError</name></member>
      <member refid="classarrow_1_1_status_1a0006d966f821af5194a087806b121e80" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>code</name></member>
      <member refid="classarrow_1_1_status_1a4b39130dbef68d6b20ee9baa41c76504" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>CodeAsString</name></member>
      <member refid="classarrow_1_1_status_1a1596e9fd582f7ed022214c4183c5c720" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>CodeAsString</name></member>
      <member refid="classarrow_1_1_status_1a80752bf1708405ae539ec11227754ce4" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>CodeGenError</name></member>
      <member refid="classarrow_1_1_status_1aa4298570fb944ea73b20a76f85d451e2" prot="private" virt="non-virtual"><scope>arrow::Status</scope><name>CopyFrom</name></member>
      <member refid="classarrow_1_1_status_1a3795d3dbf33902f6accc05dac076ce3f" prot="private" virt="non-virtual"><scope>arrow::Status</scope><name>DeleteState</name></member>
      <member refid="classarrow_1_1_status_1abd18899fee1b0be031b70ae35023c118" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Equals</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a140cfdea92ae17331d8db8f69aad082f" prot="public" virt="non-virtual" ambiguityscope="EqualityComparable&lt; Status &gt;::"><scope>arrow::Status</scope><name>Equals</name></member>
      <member refid="classarrow_1_1_status_1a909de94e53dc33d5ea42171db72b7f36" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>ExecutionError</name></member>
      <member refid="classarrow_1_1_status_1a89879fc61fa7874690b5859401328804" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>ExpressionValidationError</name></member>
      <member refid="classarrow_1_1_status_1ac7613be3081f01a9773a75681e044b26" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>FromArgs</name></member>
      <member refid="classarrow_1_1_status_1a11049f6c5cbc558821d26cbedb3882e6" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>FromDetailAndArgs</name></member>
      <member refid="classarrow_1_1_status_1a271ce890dfa95b2d9a29c181050b8d9c" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IndexError</name></member>
      <member refid="classarrow_1_1_status_1aa388393c060f3b44316876a630190576" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Invalid</name></member>
      <member refid="classarrow_1_1_status_1a4d6fc084d924c8297e35b9996c4171b3" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IOError</name></member>
      <member refid="classarrow_1_1_status_1a861305bea8c7722d0b9c0a260dc4509a" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsAlreadyExists</name></member>
      <member refid="classarrow_1_1_status_1ae8ee3e230331723c3d9d554ca68c4f9f" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsCapacityError</name></member>
      <member refid="classarrow_1_1_status_1a592fa0d4655d93facba6fdd616025852" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsCodeGenError</name></member>
      <member refid="classarrow_1_1_status_1a1447ff870c401b0b6f9c131a5296b3fe" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsExecutionError</name></member>
      <member refid="classarrow_1_1_status_1acaafb6c782e0df99242c2a810e48f7d1" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsExpressionValidationError</name></member>
      <member refid="classarrow_1_1_status_1a782070e6182794e02278c6929b2d5359" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsIndexError</name></member>
      <member refid="classarrow_1_1_status_1a1473b7bf14ad50feab36b514b5af6484" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsInvalid</name></member>
      <member refid="classarrow_1_1_status_1a028972b0c7f807ebfabfb00b692c489e" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsIOError</name></member>
      <member refid="classarrow_1_1_status_1aecaae760cdbe63349166c5415c7d6405" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsKeyError</name></member>
      <member refid="classarrow_1_1_status_1a772915ccb2d41372bf989da001195bcd" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsNotImplemented</name></member>
      <member refid="classarrow_1_1_status_1aa68adbba5eb1af6a3bbea812e932202e" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsOutOfMemory</name></member>
      <member refid="classarrow_1_1_status_1aa94c1d729d9a98fadc5ec50cbdaa9887" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsRError</name></member>
      <member refid="classarrow_1_1_status_1aff56e112e3004e6f9f79a5e9e9d35d2a" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsSerializationError</name></member>
      <member refid="classarrow_1_1_status_1aa508d180a205b08be3438f0b13209df5" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsTypeError</name></member>
      <member refid="classarrow_1_1_status_1a712fe45f53af49719298b6a69ca69fdd" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>IsUnknownError</name></member>
      <member refid="classarrow_1_1_status_1a9cb12a31b919deae25d1089da1cf21c7" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>KeyError</name></member>
      <member refid="classarrow_1_1_status_1ad67b92854b41e7f0c5951b114b195284" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>message</name></member>
      <member refid="classarrow_1_1_status_1ac06b996ae4128dfb9ee6a0dec072f293" prot="private" virt="non-virtual"><scope>arrow::Status</scope><name>MoveFrom</name></member>
      <member refid="classarrow_1_1_status_1ae63ddaaa7db5edef4e75a26b693351a1" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>NotImplemented</name></member>
      <member refid="classarrow_1_1_status_1a2240d82ac632c582efc070af2fe9a5ec" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>ok</name></member>
      <member refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>OK</name></member>
      <member refid="classarrow_1_1_status_1addda1df6b41b8e8184a2ce56a9ce19ce" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator &amp;</name></member>
      <member refid="classarrow_1_1_status_1a8ab62eed15b70252d143ab66cc7012ed" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator &amp;</name></member>
      <member refid="classarrow_1_1_status_1ab3881d4d8beb2ec334bb4db116fd25bf" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator &amp;=</name></member>
      <member refid="classarrow_1_1_status_1a0cc294af74e5c6af163a919cba7f467e" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator &amp;=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a1a7ff2c6f720209bc960524c47ad0535" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator!=</name></member>
      <member refid="classarrow_1_1_status_1a992a0204f5faa7eb65ed539ffd4861f4" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator=</name></member>
      <member refid="classarrow_1_1_status_1a25ac7ebfa468e5fdc58e0018c2ce4436" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1ac0e8ec25e77ece923689ee31c389200e" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>operator==</name></member>
      <member refid="classarrow_1_1_status_1ae39cb87196acb83e4eb921cf729248e3" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>OutOfMemory</name></member>
      <member refid="classarrow_1_1_status_1a50ea43e9554c08aeb849abb784bacd2e" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>RError</name></member>
      <member refid="classarrow_1_1_status_1a0852f0d35526dc31345154f92c955c00" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>SerializationError</name></member>
      <member refid="classarrow_1_1_status_1aaacf01e17df90656ae4ca7ec0366d9bb" prot="private" virt="non-virtual"><scope>arrow::Status</scope><name>state_</name></member>
      <member refid="classarrow_1_1_status_1ade2a75789d86f4d85d90c43441134d9f" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Status</name></member>
      <member refid="classarrow_1_1_status_1a5797c518d168956b2141f956415c2b7a" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Status</name></member>
      <member refid="classarrow_1_1_status_1abf7027d47acce62267954748572c30e2" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Status</name></member>
      <member refid="classarrow_1_1_status_1af656fd9c82ea9bc846d58141fc5d3e36" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Status</name></member>
      <member refid="classarrow_1_1_status_1a02a4b9e31ce8dfb491ed89f7821c2d20" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>Status</name></member>
      <member refid="classarrow_1_1_status_1a5bccb726dc7a1989b9158b46bfb309b6" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>ToString</name></member>
      <member refid="classarrow_1_1_status_1a0ff96a9163346d8af8abe40e9809a8ba" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>TypeError</name></member>
      <member refid="classarrow_1_1_status_1a40dfa10f3910d85b4a8d9d5c2c043feb" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>UnknownError</name></member>
      <member refid="classarrow_1_1_status_1a2daf52c50d15eb62bedbe6e8dbc18fff" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>WithDetail</name></member>
      <member refid="classarrow_1_1_status_1a5d18488120c4f0ae9ffeeb771106a66b" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>WithMessage</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a14c5ed61e030855eef29edebc6355806" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>~EqualityComparable</name></member>
      <member refid="classarrow_1_1_status_1aa515c772dbdc40d4f655ebc119fc20b7" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>~Status</name></member>
      <member refid="classarrow_1_1util_1_1_to_string_ostreamable_1a1516dfefcb93d1ef093906ac208ad6bd" prot="public" virt="non-virtual"><scope>arrow::Status</scope><name>~ToStringOstreamable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
