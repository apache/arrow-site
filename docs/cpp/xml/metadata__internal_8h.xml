<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="metadata__internal_8h" kind="file" language="C++">
    <compoundname>metadata_internal.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">flatbuffers/flatbuffers.h</includes>
    <includes refid="buffer_8h" local="yes">arrow/buffer.h</includes>
    <includes refid="message_8h" local="yes">arrow/ipc/message.h</includes>
    <includes refid="result_8h" local="yes">arrow/result.h</includes>
    <includes refid="sparse__tensor_8h" local="yes">arrow/sparse_tensor.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includes local="yes">generated/Message_generated.h</includes>
    <includes local="yes">generated/Schema_generated.h</includes>
    <includes local="yes">generated/SparseTensor_generated.h</includes>
    <incdepgraph>
      <node id="8531">
        <label>atomic</label>
      </node>
      <node id="8516">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
      </node>
      <node id="8545">
        <label>limits</label>
      </node>
      <node id="8502">
        <label>cstdint</label>
      </node>
      <node id="8526">
        <label>arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="8527" relation="include">
        </childnode>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8509" relation="include">
        </childnode>
        <childnode refid="8528" relation="include">
        </childnode>
        <childnode refid="8524" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8529" relation="include">
        </childnode>
        <childnode refid="8530" relation="include">
        </childnode>
        <childnode refid="8533" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8523">
        <label>arrow/ipc/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8524" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8501">
        <label>/arrow/cpp/src/arrow/ipc/metadata_internal.h</label>
        <link refid="metadata__internal_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8503" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8508" relation="include">
        </childnode>
        <childnode refid="8509" relation="include">
        </childnode>
        <childnode refid="8523" relation="include">
        </childnode>
        <childnode refid="8524" relation="include">
        </childnode>
        <childnode refid="8526" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
        <childnode refid="8549" relation="include">
        </childnode>
        <childnode refid="8550" relation="include">
        </childnode>
        <childnode refid="8551" relation="include">
        </childnode>
      </node>
      <node id="8509">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8503" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8511" relation="include">
        </childnode>
        <childnode refid="8512" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8521" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8539">
        <label>endian.h</label>
      </node>
      <node id="8517">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8503" relation="include">
        </childnode>
        <childnode refid="8518" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8516" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8519" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8546">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="8547" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
      </node>
      <node id="8513">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8544">
        <label>cmath</label>
      </node>
      <node id="8543">
        <label>cassert</label>
      </node>
      <node id="8533">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
      </node>
      <node id="8505">
        <label>string</label>
      </node>
      <node id="8522">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="8528">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8518" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8534">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="8535" relation="include">
        </childnode>
      </node>
      <node id="8551">
        <label>generated/SparseTensor_generated.h</label>
      </node>
      <node id="8550">
        <label>generated/Schema_generated.h</label>
      </node>
      <node id="8536">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8520">
        <label>ostream</label>
      </node>
      <node id="8515">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8511">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8512" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8516" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8538">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="8539" relation="include">
        </childnode>
        <childnode refid="8540" relation="include">
        </childnode>
        <childnode refid="8541" relation="include">
        </childnode>
        <childnode refid="8542" relation="include">
        </childnode>
        <childnode refid="8543" relation="include">
        </childnode>
        <childnode refid="8544" relation="include">
        </childnode>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8503" relation="include">
        </childnode>
        <childnode refid="8545" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8509" relation="include">
        </childnode>
        <childnode refid="8524" relation="include">
        </childnode>
        <childnode refid="8516" relation="include">
        </childnode>
        <childnode refid="8546" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8519" relation="include">
        </childnode>
        <childnode refid="8521" relation="include">
        </childnode>
        <childnode refid="8548" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8542">
        <label>bitset</label>
      </node>
      <node id="8547">
        <label>tuple</label>
      </node>
      <node id="8507">
        <label>vector</label>
      </node>
      <node id="8529">
        <label>arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8528" relation="include">
        </childnode>
        <childnode refid="8530" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8537" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8525">
        <label>new</label>
      </node>
      <node id="8506">
        <label>utility</label>
      </node>
      <node id="8521">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8522" relation="include">
        </childnode>
      </node>
      <node id="8541">
        <label>array</label>
      </node>
      <node id="8537">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8538" relation="include">
        </childnode>
      </node>
      <node id="8512">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="8518">
        <label>iosfwd</label>
      </node>
      <node id="8508">
        <label>flatbuffers/flatbuffers.h</label>
      </node>
      <node id="8527">
        <label>cstddef</label>
      </node>
      <node id="8535">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="8524">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8525" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8516" relation="include">
        </childnode>
      </node>
      <node id="8532">
        <label>climits</label>
      </node>
      <node id="8530">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="8531" relation="include">
        </childnode>
        <childnode refid="8532" relation="include">
        </childnode>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8518" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
        <childnode refid="8524" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8533" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8534" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
        <childnode refid="8536" relation="include">
        </childnode>
      </node>
      <node id="8510">
        <label>type_traits</label>
      </node>
      <node id="8549">
        <label>generated/Message_generated.h</label>
      </node>
      <node id="8540">
        <label>algorithm</label>
      </node>
      <node id="8503">
        <label>cstring</label>
      </node>
      <node id="8519">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8504" relation="include">
        </childnode>
        <childnode refid="8520" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
        <childnode refid="8506" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
      </node>
      <node id="8504">
        <label>memory</label>
      </node>
      <node id="8514">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8502" relation="include">
        </childnode>
      </node>
      <node id="8548">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="8510" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <innernamespace refid="namespacearrow_1_1ipc">arrow::ipc</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="metadata__internal_8h_1ad621afe7df4ce31c956a7744eef6b030" prot="public" static="no">
        <name>CHECK_FLATBUFFERS_NOT_NULL</name>
        <param><defname>fb_value</defname></param>
        <param><defname>name</defname></param>
        <initializer>if ((fb_value) == <ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>) {                                 \
    return Status::IOError(&quot;Unexpected null field &quot;, name,     \
                           &quot; in flatbuffer-encoded metadata&quot;); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/ipc/metadata_internal.h" line="102" column="9" bodyfile="/arrow/cpp/src/arrow/ipc/metadata_internal.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>metadata<sp/>serialization<sp/>matters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;flatbuffers/flatbuffers.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="buffer_8h" kindref="compound">arrow/buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message_8h" kindref="compound">arrow/ipc/message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="result_8h" kindref="compound">arrow/result.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sparse__tensor_8h" kindref="compound">arrow/sparse_tensor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;generated/Message_generated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;generated/Schema_generated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;generated/SparseTensor_generated.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flatbuf<sp/>=<sp/>org::apache::arrow::flatbuf;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataType;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet_1a4d90e7d201c4ddc81c98aa3c8f993c5b" kindref="member">KeyValueMetadata</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Schema;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OutputStream;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DictionaryMemo;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KeyValueOffset<sp/>=<sp/>flatbuffers::Offset&lt;flatbuf::KeyValue&gt;;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KVVector<sp/>=<sp/>flatbuffers::Vector&lt;KeyValueOffset&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>0xFFFFFFFF<sp/>value<sp/>is<sp/>the<sp/>first<sp/>4<sp/>bytes<sp/>of<sp/>a<sp/>valid<sp/>IPC<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">constexpr<sp/>int32_t<sp/>kIpcContinuationToken<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">flatbuf::MetadataVersion</ref><sp/>kCurrentMetadataVersion<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuf::MetadataVersion::V4;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">flatbuf::MetadataVersion</ref><sp/>kMinMetadataVersion<sp/>=</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuf::MetadataVersion::V4;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">MetadataVersion</ref><sp/>GetMetadataVersion(<ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">flatbuf::MetadataVersion</ref><sp/>version);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>kArrowMagicBytes<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ARROW1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FieldMetadata<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>int64_t<sp/>length;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>int64_t<sp/>null_count;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BufferMetadata<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>int64_t<sp/>length;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FileBlock<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>int32_t<sp/>metadata_length;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>int64_t<sp/>body_length;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Low-level<sp/>utilities<sp/>to<sp/>help<sp/>with<sp/>reading<sp/>Flatbuffers<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="metadata__internal_8h_1ad621afe7df4ce31c956a7744eef6b030" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_FLATBUFFERS_NOT_NULL(fb_value,<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/>if<sp/>((fb_value)<sp/>==<sp/>NULLPTR)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Status::IOError(&quot;Unexpected<sp/>null<sp/>field<sp/>&quot;,<sp/>name,<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>in<sp/>flatbuffer-encoded<sp/>metadata&quot;);<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>FlatBuffersVectorSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuffers::Vector&lt;T&gt;*<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(vec<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>?<sp/>0<sp/>:<sp/>vec-&gt;size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>StringFromFlatbuffers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuffers::String*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>s-&gt;str();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>interface<sp/>classes.<sp/>We<sp/>do<sp/>not<sp/>fully<sp/>deserialize<sp/>the<sp/>flatbuffers<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>individual<sp/>fields<sp/>metadata<sp/>can<sp/>be<sp/>retrieved<sp/>from<sp/>very<sp/>large<sp/>schema<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>complete<sp/>Schema<sp/>from<sp/>the<sp/>message<sp/>and<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dictionary-encoded<sp/>fields<sp/>to<sp/>a<sp/>DictionaryMemo<sp/>instance.<sp/>May<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expensive<sp/>for<sp/>very<sp/>large<sp/>schemas<sp/>if<sp/>you<sp/>are<sp/>only<sp/>interested<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>few<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>opaque_schema,<sp/>DictionaryMemo*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetTensorMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>&amp;<sp/>metadata,<sp/>std::shared_ptr&lt;DataType&gt;*<sp/>type,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>shape,<sp/>std::vector&lt;int64_t&gt;*<sp/>strides,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>dim_names);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPERIMENTAL:<sp/>Extracting<sp/>metadata<sp/>of<sp/>a<sp/>SparseCOOIndex<sp/>from<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetSparseCOOIndexMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuf::SparseTensorIndexCOO*<sp/>sparse_index,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>indices_type);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPERIMENTAL:<sp/>Extracting<sp/>metadata<sp/>of<sp/>a<sp/>SparseCSXIndex<sp/>from<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetSparseCSXIndexMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuf::SparseMatrixIndexCSX*<sp/>sparse_index,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>indptr_type,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>indices_type);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPERIMENTAL:<sp/>Extracting<sp/>metadata<sp/>of<sp/>a<sp/>SparseCSFIndex<sp/>from<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetSparseCSFIndexMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuf::SparseTensorIndexCSF*<sp/>sparse_index,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>axis_order,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>indices_size,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>indptr_type,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>indices_type);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPERIMENTAL:<sp/>Extracting<sp/>metadata<sp/>of<sp/>a<sp/>sparse<sp/>tensor<sp/>from<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetSparseTensorMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>&amp;<sp/>metadata,<sp/>std::shared_ptr&lt;DataType&gt;*<sp/>type,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;*<sp/>shape,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>dim_names,<sp/>int64_t*<sp/>length,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structarrow_1_1_sparse_tensor_format_1a0693b2fa5192ae86d525995fe6f64f3a" kindref="member">SparseTensorFormat::type</ref>*<sp/>sparse_tensor_format_id);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>GetKeyValueMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVVector*<sp/>fb_metadata,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>VerifyMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuf::Message**<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>flatbuffers::Verifier<sp/>verifier(data,<sp/>size,<sp/></highlight><highlight class="comment">/*max_depth=*/</highlight><highlight class="normal">128);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flatbuf::VerifyMessageBuffer(verifier))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a4d6fc084d924c8297e35b9996c4171b3" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>flatbuffers<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>*out<sp/>=<sp/>flatbuf::GetMessage(data);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Serialize<sp/>arrow::Schema<sp/>as<sp/>a<sp/>Flatbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in]<sp/>schema<sp/>a<sp/>Schema<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[in,out]<sp/>dictionary_memo<sp/>class<sp/>for<sp/>tracking<sp/>dictionaries<sp/>and<sp/>assigning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dictionary<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\param[out]<sp/>out<sp/>the<sp/>serialized<sp/>arrow::Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\return<sp/>Status<sp/>outcome</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteSchemaMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,<sp/>DictionaryMemo*<sp/>dictionary_memo,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>used<sp/>in<sp/>a<sp/>unit<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteRecordBatchMessage(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>body_length,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/>custom_metadata,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FieldMetadata&gt;&amp;<sp/>nodes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;BufferMetadata&gt;&amp;<sp/>buffers,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>WriteTensorMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>tensor,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>buffer_start_offset);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>WriteSparseTensorMessage(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SparseTensor&amp;<sp/>sparse_tensor,<sp/>int64_t<sp/>body_length,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;BufferMetadata&gt;&amp;<sp/>buffers);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteFileFooter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/>schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileBlock&gt;&amp;<sp/>dictionaries,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FileBlock&gt;&amp;<sp/>record_batches,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io::OutputStream*<sp/>out);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="namespacegandiva_1a9d5d996f2ef86ad9af06ccc89bbdb1f8" kindref="member">Status</ref><sp/>WriteDictionaryMessage(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>body_length,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/>custom_metadata,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FieldMetadata&gt;&amp;<sp/>nodes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;BufferMetadata&gt;&amp;<sp/>buffers,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Result&lt;std::shared_ptr&lt;Buffer&gt;&gt;<sp/>WriteFlatbufferBuilder(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::FlatBufferBuilder&amp;<sp/>fbb)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>int32_t<sp/>size<sp/>=<sp/>fbb.GetSize();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="result_8h_1aaf9efe9debc83022fad249a0fa56e680" kindref="member">ARROW_ASSIGN_OR_RAISE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result,<sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(size));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>dst<sp/>=<sp/>result-&gt;mutable_data();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>memcpy(dst,<sp/>fbb.GetBufferPointer(),<sp/>size);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(result);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ipc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/ipc/metadata_internal.h"/>
  </compounddef>
</doxygen>
