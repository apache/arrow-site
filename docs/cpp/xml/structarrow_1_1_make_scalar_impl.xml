<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_make_scalar_impl" kind="struct" language="C++" prot="public">
    <compoundname>arrow::MakeScalarImpl</compoundname>
    <includes refid="scalar_8h" local="no">arrow/scalar.h</includes>
    <templateparamlist>
      <param>
        <type>typename ValueRef</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structarrow_1_1_make_scalar_impl_1aaf8f72cc3be959ea018c3c520217f010" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::MakeScalarImpl&lt; ValueRef &gt;::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="423" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1_make_scalar_impl_1ab48709a8c7f2043e470688899719f988" prot="public" static="no" mutable="no">
        <type>ValueRef</type>
        <definition>ValueRef arrow::MakeScalarImpl&lt; ValueRef &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="424" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structarrow_1_1_make_scalar_impl_1aa5d92f1acf3e6d5cebd3232a0e62768b" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Scalar&gt; arrow::MakeScalarImpl&lt; ValueRef &gt;::out_</definition>
        <argsstring></argsstring>
        <name>out_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="425" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structarrow_1_1_make_scalar_impl_1a4ad2e5a596530c78ece67dc6f990d51e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ScalarType</type>
            <defval>typename <ref refid="structarrow_1_1_type_traits" kindref="compound">TypeTraits</ref>&lt;T&gt;::ScalarType</defval>
          </param>
          <param>
            <type>typename ValueType</type>
            <defval>typename ScalarType::ValueType</defval>
          </param>
          <param>
            <type>typename Enable</type>
            <defval>typename std::enable_if&lt;                std::is_constructible&lt;ScalarType, ValueType,                                      std::shared_ptr&lt;<ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref>&gt;&gt;::value &amp;&amp;                std::is_convertible&lt;ValueRef, ValueType&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::MakeScalarImpl&lt; ValueRef &gt;::Visit</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>Visit</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="407" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="407" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_make_scalar_impl_1a78612d36b7b560598628ac975d85231c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::MakeScalarImpl&lt; ValueRef &gt;::Visit</definition>
        <argsstring>(const DataType &amp;t)</argsstring>
        <name>Visit</name>
        <param>
          <type>const <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="414" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="structarrow_1_1_make_scalar_impl_1a5e5aced872764c66c2fc64d829657b65" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type><ref refid="classarrow_1_1_result" kindref="compound">Result</ref>&lt; std::shared_ptr&lt; <ref refid="structarrow_1_1_scalar" kindref="compound">Scalar</ref> &gt; &gt;</type>
        <definition>Result&lt;std::shared_ptr&lt;Scalar&gt; &gt; arrow::MakeScalarImpl&lt; ValueRef &gt;::Finish</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>Finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="418" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="418" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/arrow/scalar.h" line="400" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="400" bodyend="426"/>
    <listofallmembers>
      <member refid="structarrow_1_1_make_scalar_impl_1a5e5aced872764c66c2fc64d829657b65" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>Finish</name></member>
      <member refid="structarrow_1_1_make_scalar_impl_1aa5d92f1acf3e6d5cebd3232a0e62768b" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>out_</name></member>
      <member refid="structarrow_1_1_make_scalar_impl_1aaf8f72cc3be959ea018c3c520217f010" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>type_</name></member>
      <member refid="structarrow_1_1_make_scalar_impl_1ab48709a8c7f2043e470688899719f988" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>value_</name></member>
      <member refid="structarrow_1_1_make_scalar_impl_1a4ad2e5a596530c78ece67dc6f990d51e" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>Visit</name></member>
      <member refid="structarrow_1_1_make_scalar_impl_1a78612d36b7b560598628ac975d85231c" prot="public" virt="non-virtual"><scope>arrow::MakeScalarImpl</scope><name>Visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
