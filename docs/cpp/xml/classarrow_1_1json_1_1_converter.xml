<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1json_1_1_converter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>arrow::json::Converter</compoundname>
    <includes refid="json_2converter_8h" local="no">arrow/json/converter.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1json_1_1_converter_1af5a1cb872b3533b2efff9e706503d738" prot="protected" static="no" mutable="no">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::json::Converter::pool_</definition>
        <argsstring></argsstring>
        <name>pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="60" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1json_1_1_converter_1a309d1c092b7e119f7cf5d361cba307dd" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::json::Converter::out_type_</definition>
        <argsstring></argsstring>
        <name>out_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="61" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1a22d9a59f50a1ed6c3c61ed7f71bd7b62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual arrow::json::Converter::~Converter</definition>
        <argsstring>()=default</argsstring>
        <name>~Converter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1aa42aae068efda91ae972ed6c514010b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status arrow::json::Converter::Convert</definition>
        <argsstring>(const std::shared_ptr&lt; Array &gt; &amp;in, std::shared_ptr&lt; Array &gt; *out)=0</argsstring>
        <name>Convert</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_array" kindref="compound">Array</ref> &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>convert an array on failure, this converter may be promoted to another converter which <emphasis>can</emphasis> convert the given input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1a242905f8ec142ec9d92990a4cd4ace7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataType&gt; arrow::json::Converter::out_type</definition>
        <argsstring>() const</argsstring>
        <name>out_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="50" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1a18f212a1fe8c547106269f6b073f1d0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
        <definition>MemoryPool* arrow::json::Converter::pool</definition>
        <argsstring>()</argsstring>
        <name>pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="52" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1a8478a0562097b30863cd7b4869911890" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::json::Converter::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(Converter)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1json_1_1_converter" kindref="compound">Converter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1json_1_1_converter_1ab3643115f985bc38a563876a6e6d9d20" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>arrow::json::Converter::Converter</definition>
        <argsstring>(MemoryPool *pool, const std::shared_ptr&lt; DataType &gt; &amp;out_type)</argsstring>
        <name>Converter</name>
        <param>
          <type><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref> &gt; &amp;</type>
          <declname>out_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/json/converter.h" line="57" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="57" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>interface for conversion of Arrays </para>    </briefdescription>
    <detaileddescription>
<para>Converters are not required to be correct for arbitrary input- only for unconverted arrays emitted by a corresponding parser. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="714">
        <label>arrow::MemoryPool</label>
        <link refid="classarrow_1_1_memory_pool"/>
      </node>
      <node id="713">
        <label>arrow::json::Converter</label>
        <link refid="classarrow_1_1json_1_1_converter"/>
        <childnode refid="714" relation="usage">
          <edgelabel>pool_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/json/converter.h" line="40" column="1" bodyfile="/arrow/cpp/src/arrow/json/converter.h" bodystart="40" bodyend="62"/>
    <listofallmembers>
      <member refid="classarrow_1_1json_1_1_converter_1a8478a0562097b30863cd7b4869911890" prot="protected" virt="non-virtual"><scope>arrow::json::Converter</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1aa42aae068efda91ae972ed6c514010b9" prot="public" virt="pure-virtual"><scope>arrow::json::Converter</scope><name>Convert</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1ab3643115f985bc38a563876a6e6d9d20" prot="protected" virt="non-virtual"><scope>arrow::json::Converter</scope><name>Converter</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1a242905f8ec142ec9d92990a4cd4ace7b" prot="public" virt="non-virtual"><scope>arrow::json::Converter</scope><name>out_type</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1a309d1c092b7e119f7cf5d361cba307dd" prot="protected" virt="non-virtual"><scope>arrow::json::Converter</scope><name>out_type_</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1a18f212a1fe8c547106269f6b073f1d0a" prot="public" virt="non-virtual"><scope>arrow::json::Converter</scope><name>pool</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1af5a1cb872b3533b2efff9e706503d738" prot="protected" virt="non-virtual"><scope>arrow::json::Converter</scope><name>pool_</name></member>
      <member refid="classarrow_1_1json_1_1_converter_1a22d9a59f50a1ed6c3c61ed7f71bd7b62" prot="public" virt="virtual"><scope>arrow::json::Converter</scope><name>~Converter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
