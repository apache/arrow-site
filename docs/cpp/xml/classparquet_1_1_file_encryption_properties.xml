<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classparquet_1_1_file_encryption_properties" kind="class" language="C++" prot="public">
    <compoundname>parquet::FileEncryptionProperties</compoundname>
    <includes refid="encryption_8h" local="no">parquet/encryption.h</includes>
    <innerclass refid="classparquet_1_1_file_encryption_properties_1_1_builder" prot="public">parquet::FileEncryptionProperties::Builder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a0de32c481034df2bcde83a32ea9f34b6" prot="private" static="no" mutable="no">
        <type><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref></type>
        <definition>EncryptionAlgorithm parquet::FileEncryptionProperties::algorithm_</definition>
        <argsstring></argsstring>
        <name>algorithm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="495" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a989c788b6ba45134be5d0754721838e5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::footer_key_</definition>
        <argsstring></argsstring>
        <name>footer_key_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="496" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a766b48f6d0b755f21043a3a102818fc3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::footer_key_metadata_</definition>
        <argsstring></argsstring>
        <name>footer_key_metadata_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="497" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1aa8a94d806e458ac37b7d0f41c6dfad74" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileEncryptionProperties::encrypted_footer_</definition>
        <argsstring></argsstring>
        <name>encrypted_footer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="498" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a8077990411cd67f7eebe1c86c527a614" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::file_aad_</definition>
        <argsstring></argsstring>
        <name>file_aad_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="499" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a81252b7bd43b9f48d7f97025abb43fc4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::aad_prefix_</definition>
        <argsstring></argsstring>
        <name>aad_prefix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="500" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1ae363b0af00370f558b10a78db5c8e951" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileEncryptionProperties::utilized_</definition>
        <argsstring></argsstring>
        <name>utilized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="501" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a1efeb02d8189d71a6d00304877efcb75" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parquet::FileEncryptionProperties::store_aad_prefix_in_file_</definition>
        <argsstring></argsstring>
        <name>store_aad_prefix_in_file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="502" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classparquet_1_1_file_encryption_properties_1a8dc4ae296d2b4785228a97fb70c65a4e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref></type>
        <definition>ColumnPathToEncryptionPropertiesMap parquet::FileEncryptionProperties::encrypted_columns_</definition>
        <argsstring></argsstring>
        <name>encrypted_columns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="503" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a0c645711f0452ec75d42d678bea7c0db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::FileEncryptionProperties::encrypted_footer</definition>
        <argsstring>() const</argsstring>
        <name>encrypted_footer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="459" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1ab7146bf1f15bd324c36b5f63e2697fc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref></type>
        <definition>EncryptionAlgorithm parquet::FileEncryptionProperties::algorithm</definition>
        <argsstring>() const</argsstring>
        <name>algorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="461" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a9c0a90f378b71630d48694a55399662d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::footer_key</definition>
        <argsstring>() const</argsstring>
        <name>footer_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="463" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="463" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1aab8ec275d39eac10d6f38e0112209fcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::footer_key_metadata</definition>
        <argsstring>() const</argsstring>
        <name>footer_key_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="465" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="465" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a3b9aa90e62a44450e2790d747eb9df1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string parquet::FileEncryptionProperties::file_aad</definition>
        <argsstring>() const</argsstring>
        <name>file_aad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="467" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="467" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a3138603a2136ea548a79724dc9a1dd1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ColumnEncryptionProperties&gt; parquet::FileEncryptionProperties::column_encryption_properties</definition>
        <argsstring>(const std::string &amp;column_path)</argsstring>
        <name>column_encryption_properties</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>column_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1af765b030f37dbdb821613b8b1382c0cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool parquet::FileEncryptionProperties::is_utilized</definition>
        <argsstring>() const</argsstring>
        <name>is_utilized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="472" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="472" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a28d0699c7780de251c39714e5f9dec91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::FileEncryptionProperties::set_utilized</definition>
        <argsstring>()</argsstring>
        <name>set_utilized</name>
        <briefdescription>
<para><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> object can be used for writing one file only. </para>        </briefdescription>
        <detaileddescription>
<para>Mark <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> as utilized once it is used to write a file as the encryption keys will be wiped out upon completion of file writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="477" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a1e80834ea0010cb3813094a7887d489b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parquet::FileEncryptionProperties::WipeOutEncryptionKeys</definition>
        <argsstring>()</argsstring>
        <name>WipeOutEncryptionKeys</name>
        <briefdescription>
<para>Upon completion of file writing, the encryption keys will be wiped out (array values set to 0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a52a9962fc195411fe9ae298e62f209c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileEncryptionProperties&gt; parquet::FileEncryptionProperties::DeepClone</definition>
        <argsstring>(std::string new_aad_prefix=&quot;&quot;)</argsstring>
        <name>DeepClone</name>
        <param>
          <type>std::string</type>
          <declname>new_aad_prefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref> object can be used for writing one file only. </para>        </briefdescription>
        <detaileddescription>
<para>(at the end, keys are wiped out in the memory). This method allows to clone identical properties for another file, with an option to update the aadPrefix (if newAadPrefix is null, aadPrefix will be cloned too) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1abe5241e0e6e1b3a32f856341cc2b1873" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref></type>
        <definition>ColumnPathToEncryptionPropertiesMap parquet::FileEncryptionProperties::encrypted_columns</definition>
        <argsstring>() const</argsstring>
        <name>encrypted_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="490" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="490" bodyend="492"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classparquet_1_1_file_encryption_properties_1a60fd15497ea951fbe0757daa218a7df9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>parquet::FileEncryptionProperties::FileEncryptionProperties</definition>
        <argsstring>(ParquetCipher::type cipher, const std::string &amp;footer_key, const std::string &amp;footer_key_metadata, bool encrypted_footer, const std::string &amp;aad_prefix, bool store_aad_prefix_in_file, const ColumnPathToEncryptionPropertiesMap &amp;encrypted_columns)</argsstring>
        <name>FileEncryptionProperties</name>
        <param>
          <type><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref></type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>footer_key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>footer_key_metadata</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypted_footer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>aad_prefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>store_aad_prefix_in_file</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref> &amp;</type>
          <declname>encrypted_columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/parquet/encryption.h" line="505" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/parquet/encryption.h" line="397" column="1" bodyfile="/arrow/cpp/src/parquet/encryption.h" bodystart="397" bodyend="509"/>
    <listofallmembers>
      <member refid="classparquet_1_1_file_encryption_properties_1a81252b7bd43b9f48d7f97025abb43fc4" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>aad_prefix_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1ab7146bf1f15bd324c36b5f63e2697fc0" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>algorithm</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a0de32c481034df2bcde83a32ea9f34b6" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>algorithm_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a3138603a2136ea548a79724dc9a1dd1e" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>column_encryption_properties</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a52a9962fc195411fe9ae298e62f209c8" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>DeepClone</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1abe5241e0e6e1b3a32f856341cc2b1873" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>encrypted_columns</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a8dc4ae296d2b4785228a97fb70c65a4e" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>encrypted_columns_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a0c645711f0452ec75d42d678bea7c0db" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>encrypted_footer</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1aa8a94d806e458ac37b7d0f41c6dfad74" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>encrypted_footer_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a3b9aa90e62a44450e2790d747eb9df1a" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>file_aad</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a8077990411cd67f7eebe1c86c527a614" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>file_aad_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a60fd15497ea951fbe0757daa218a7df9" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>FileEncryptionProperties</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a9c0a90f378b71630d48694a55399662d" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>footer_key</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a989c788b6ba45134be5d0754721838e5" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>footer_key_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1aab8ec275d39eac10d6f38e0112209fcc" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>footer_key_metadata</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a766b48f6d0b755f21043a3a102818fc3" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>footer_key_metadata_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1af765b030f37dbdb821613b8b1382c0cd" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>is_utilized</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a28d0699c7780de251c39714e5f9dec91" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>set_utilized</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a1efeb02d8189d71a6d00304877efcb75" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>store_aad_prefix_in_file_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1ae363b0af00370f558b10a78db5c8e951" prot="private" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>utilized_</name></member>
      <member refid="classparquet_1_1_file_encryption_properties_1a1e80834ea0010cb3813094a7887d489b" prot="public" virt="non-virtual"><scope>parquet::FileEncryptionProperties</scope><name>WipeOutEncryptionKeys</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
