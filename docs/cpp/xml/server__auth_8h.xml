<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="server__auth_8h" kind="file" language="C++">
    <compoundname>server_auth.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="arrow_2flight_2visibility_8h" local="yes">arrow/flight/visibility.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includedby refid="flight_2api_8h" local="yes">/arrow/cpp/src/arrow/flight/api.h</includedby>
    <includedby refid="server_8h" local="yes">/arrow/cpp/src/arrow/flight/server.h</includedby>
    <incdepgraph>
      <node id="7822">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="7820" relation="include">
        </childnode>
        <childnode refid="7823" relation="include">
        </childnode>
        <childnode refid="7821" relation="include">
        </childnode>
        <childnode refid="7824" relation="include">
        </childnode>
      </node>
      <node id="7825">
        <label>cstdint</label>
      </node>
      <node id="7817">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7818" relation="include">
        </childnode>
        <childnode refid="7819" relation="include">
        </childnode>
        <childnode refid="7820" relation="include">
        </childnode>
        <childnode refid="7815" relation="include">
        </childnode>
        <childnode refid="7821" relation="include">
        </childnode>
        <childnode refid="7822" relation="include">
        </childnode>
        <childnode refid="7824" relation="include">
        </childnode>
        <childnode refid="7826" relation="include">
        </childnode>
        <childnode refid="7828" relation="include">
        </childnode>
      </node>
      <node id="7815">
        <label>string</label>
      </node>
      <node id="7827">
        <label>ostream</label>
      </node>
      <node id="7828">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="7816">
        <label>arrow/flight/visibility.h</label>
        <link refid="arrow_2flight_2visibility_8h"/>
      </node>
      <node id="7821">
        <label>utility</label>
      </node>
      <node id="7819">
        <label>iosfwd</label>
      </node>
      <node id="7814">
        <label>/arrow/cpp/src/arrow/flight/server_auth.h</label>
        <link refid="server__auth_8h"/>
        <childnode refid="7815" relation="include">
        </childnode>
        <childnode refid="7816" relation="include">
        </childnode>
        <childnode refid="7817" relation="include">
        </childnode>
      </node>
      <node id="7823">
        <label>type_traits</label>
      </node>
      <node id="7818">
        <label>cstring</label>
      </node>
      <node id="7826">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="7820" relation="include">
        </childnode>
        <childnode refid="7827" relation="include">
        </childnode>
        <childnode refid="7815" relation="include">
        </childnode>
        <childnode refid="7821" relation="include">
        </childnode>
        <childnode refid="7828" relation="include">
        </childnode>
      </node>
      <node id="7820">
        <label>memory</label>
      </node>
      <node id="7824">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="7825" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7831">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="7833">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="7830">
        <label>/arrow/cpp/src/arrow/flight/api.h</label>
        <link refid="flight_2api_8h"/>
        <childnode refid="7831" relation="include">
        </childnode>
      </node>
      <node id="7832">
        <label>/arrow/cpp/src/arrow/flight/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="7830" relation="include">
        </childnode>
        <childnode refid="7833" relation="include">
        </childnode>
      </node>
      <node id="7829">
        <label>/arrow/cpp/src/arrow/flight/server_auth.h</label>
        <link refid="server__auth_8h"/>
        <childnode refid="7830" relation="include">
        </childnode>
        <childnode refid="7832" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1flight_1_1_server_auth_reader" prot="public">arrow::flight::ServerAuthReader</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_server_auth_sender" prot="public">arrow::flight::ServerAuthSender</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_server_auth_handler" prot="public">arrow::flight::ServerAuthHandler</innerclass>
    <innerclass refid="classarrow_1_1flight_1_1_no_op_auth_handler" prot="public">arrow::flight::NoOpAuthHandler</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1flight">arrow::flight</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2flight_2visibility_8h" kindref="compound">arrow/flight/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flight<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classarrow_1_1flight_1_1_server_auth_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_server_auth_reader" kindref="compound">ServerAuthReader</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_server_auth_reader" kindref="compound">ServerAuthReader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Read(std::string*<sp/>token)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classarrow_1_1flight_1_1_server_auth_sender" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_server_auth_sender" kindref="compound">ServerAuthSender</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_server_auth_sender" kindref="compound">ServerAuthSender</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classarrow_1_1flight_1_1_server_auth_handler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_server_auth_handler" kindref="compound">ServerAuthHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1flight_1_1_server_auth_handler" kindref="compound">ServerAuthHandler</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Authenticate(<ref refid="classarrow_1_1flight_1_1_server_auth_sender" kindref="compound">ServerAuthSender</ref>*<sp/>outgoing,<sp/><ref refid="classarrow_1_1flight_1_1_server_auth_reader" kindref="compound">ServerAuthReader</ref>*<sp/>incoming)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>IsValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>token,<sp/>std::string*<sp/>peer_identity)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classarrow_1_1flight_1_1_no_op_auth_handler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_FLIGHT_EXPORT<sp/><ref refid="classarrow_1_1flight_1_1_no_op_auth_handler" kindref="compound">NoOpAuthHandler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1flight_1_1_server_auth_handler" kindref="compound">ServerAuthHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1flight_1_1_no_op_auth_handler" kindref="compound">NoOpAuthHandler</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Authenticate(<ref refid="classarrow_1_1flight_1_1_server_auth_sender" kindref="compound">ServerAuthSender</ref>*<sp/>outgoing,<sp/><ref refid="classarrow_1_1flight_1_1_server_auth_reader" kindref="compound">ServerAuthReader</ref>*<sp/>incoming)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>IsValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>token,<sp/>std::string*<sp/>peer_identity)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>flight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/flight/server_auth.h"/>
  </compounddef>
</doxygen>
