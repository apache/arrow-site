<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1flight_1_1_simple_flight_listing" kind="class" language="C++" prot="public">
    <compoundname>arrow::flight::SimpleFlightListing</compoundname>
    <basecompoundref refid="classarrow_1_1flight_1_1_flight_listing" prot="public" virt="non-virtual">arrow::flight::FlightListing</basecompoundref>
    <includes refid="arrow_2flight_2types_8h" local="no">arrow/flight/types.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classarrow_1_1flight_1_1_simple_flight_listing_1a4404732787114bce73b07cb9e10dd89d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int arrow::flight::SimpleFlightListing::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="489" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classarrow_1_1flight_1_1_simple_flight_listing_1aa2d126b58f28f411293d4fb93499d8a5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> &gt;</type>
        <definition>std::vector&lt;FlightInfo&gt; arrow::flight::SimpleFlightListing::flights_</definition>
        <argsstring></argsstring>
        <name>flights_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="490" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1flight_1_1_simple_flight_listing_1ad69b419670a052f79cb908ed59a4285d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::SimpleFlightListing::SimpleFlightListing</definition>
        <argsstring>(const std::vector&lt; FlightInfo &gt; &amp;flights)</argsstring>
        <name>SimpleFlightListing</name>
        <param>
          <type>const std::vector&lt; <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> &gt; &amp;</type>
          <declname>flights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_simple_flight_listing_1a569e67d4ca758e68ca7d443f37cd6112" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::flight::SimpleFlightListing::SimpleFlightListing</definition>
        <argsstring>(std::vector&lt; FlightInfo &gt; &amp;&amp;flights)</argsstring>
        <name>SimpleFlightListing</name>
        <param>
          <type>std::vector&lt; <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> &gt; &amp;&amp;</type>
          <declname>flights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1flight_1_1_simple_flight_listing_1a5a7451bd1e34fddd9a99adcc693c6f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::flight::SimpleFlightListing::Next</definition>
        <argsstring>(std::unique_ptr&lt; FlightInfo &gt; *info) override</argsstring>
        <name>Next</name>
        <reimplements refid="classarrow_1_1flight_1_1_flight_listing_1a4d341f57f093134d0a89c47084be5b05">Next</reimplements>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> &gt; *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Retrieve the next <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> from the iterator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">info</parametername>
</parameternamelist>
<parameterdescription>
<para>A single <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref>. Set to <emphasis>nullptr</emphasis> if there are none left. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classarrow_1_1_status" kindref="compound">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/flight/types.h" line="486" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classarrow_1_1flight_1_1_flight_listing" kindref="compound">FlightListing</ref> implementation based on a vector of <ref refid="classarrow_1_1flight_1_1_flight_info" kindref="compound">FlightInfo</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>This can be iterated once, then it is consumed. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4173">
        <label>arrow::flight::FlightListing</label>
        <link refid="classarrow_1_1flight_1_1_flight_listing"/>
      </node>
      <node id="4172">
        <label>arrow::flight::SimpleFlightListing</label>
        <link refid="classarrow_1_1flight_1_1_simple_flight_listing"/>
        <childnode refid="4173" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4175">
        <label>arrow::flight::FlightListing</label>
        <link refid="classarrow_1_1flight_1_1_flight_listing"/>
      </node>
      <node id="4174">
        <label>arrow::flight::SimpleFlightListing</label>
        <link refid="classarrow_1_1flight_1_1_simple_flight_listing"/>
        <childnode refid="4175" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/flight/types.h" line="481" column="1" bodyfile="/arrow/cpp/src/arrow/flight/types.h" bodystart="481" bodyend="491"/>
    <listofallmembers>
      <member refid="classarrow_1_1flight_1_1_simple_flight_listing_1aa2d126b58f28f411293d4fb93499d8a5" prot="private" virt="non-virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>flights_</name></member>
      <member refid="classarrow_1_1flight_1_1_simple_flight_listing_1a5a7451bd1e34fddd9a99adcc693c6f84" prot="public" virt="virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>Next</name></member>
      <member refid="classarrow_1_1flight_1_1_simple_flight_listing_1a4404732787114bce73b07cb9e10dd89d" prot="private" virt="non-virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>position_</name></member>
      <member refid="classarrow_1_1flight_1_1_simple_flight_listing_1ad69b419670a052f79cb908ed59a4285d" prot="public" virt="non-virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>SimpleFlightListing</name></member>
      <member refid="classarrow_1_1flight_1_1_simple_flight_listing_1a569e67d4ca758e68ca7d443f37cd6112" prot="public" virt="non-virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>SimpleFlightListing</name></member>
      <member refid="classarrow_1_1flight_1_1_flight_listing_1aa146d9b8fd1ad3d0d9b107ab5316fbf8" prot="public" virt="virtual"><scope>arrow::flight::SimpleFlightListing</scope><name>~FlightListing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
