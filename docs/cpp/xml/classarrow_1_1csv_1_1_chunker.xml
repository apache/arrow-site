<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classarrow_1_1csv_1_1_chunker" kind="class" language="C++" prot="public">
    <compoundname>arrow::csv::Chunker</compoundname>
    <includes refid="csv_2chunker_8h" local="no">arrow/csv/chunker.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classarrow_1_1csv_1_1_chunker_1a404f34173660ab8498be271ce192dce0" prot="protected" static="no" mutable="no">
        <type><ref refid="structarrow_1_1csv_1_1_parse_options" kindref="compound">ParseOptions</ref></type>
        <definition>ParseOptions arrow::csv::Chunker::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="63" column="1" bodyfile="/arrow/cpp/src/arrow/csv/chunker.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classarrow_1_1csv_1_1_chunker_1a1412c8389ff88d80e668302d95328dde" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::csv::Chunker::Chunker</definition>
        <argsstring>(ParseOptions options)</argsstring>
        <name>Chunker</name>
        <param>
          <type><ref refid="structarrow_1_1csv_1_1_parse_options" kindref="compound">ParseOptions</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_chunker_1ac9ccf9beed4ce2df8b4b69d55276800d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::csv::Chunker::Process</definition>
        <argsstring>(const char *data, uint32_t size, uint32_t *out_size)</argsstring>
        <name>Process</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>out_size</declname>
        </param>
        <briefdescription>
<para>Carve up a chunk in a block of data. </para>        </briefdescription>
        <detaileddescription>
<para>Process a block of CSV data, reading up to size bytes. The number of bytes in the chunk is returned in out_size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classarrow_1_1csv_1_1_chunker_1ab3ed0782c47348d33ac985c2c1a1f9a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>arrow::csv::Chunker::ARROW_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(Chunker)</argsstring>
        <name>ARROW_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classarrow_1_1csv_1_1_chunker" kindref="compound">Chunker</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_chunker_1aa4eed445b5b907210e59eeeb2d5dfe2a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>quoting</declname>
            <defname>quoting</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>escaping</declname>
            <defname>escaping</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classarrow_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status arrow::csv::Chunker::ProcessSpecialized</definition>
        <argsstring>(const char *data, uint32_t size, uint32_t *out_size)</argsstring>
        <name>ProcessSpecialized</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>out_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classarrow_1_1csv_1_1_chunker_1a34e94a7acc56baf2bf6bf1b91e463061" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>quoting</declname>
            <defname>quoting</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>escaping</declname>
            <defname>escaping</defname>
          </param>
        </templateparamlist>
        <type>const char *</type>
        <definition>const char* arrow::csv::Chunker::ReadLine</definition>
        <argsstring>(const char *data, const char *data_end)</argsstring>
        <name>ReadLine</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A reusable block-based chunker for CSV data. </para>    </briefdescription>
    <detaileddescription>
<para>The chunker takes a block of CSV data and finds a suitable place to cut it up without splitting a row. If the block is truncated (i.e. not all data can be chunked), it is up to the caller to arrange the next block to start with the trailing data.</para><para>Note: if the previous block ends with CR (0x0d) and a new block starts with LF (0x0a), the chunker will consider the leading newline as an empty line. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="592">
        <label>arrow::csv::Chunker</label>
        <link refid="classarrow_1_1csv_1_1_chunker"/>
        <childnode refid="593" relation="usage">
          <edgelabel>options_</edgelabel>
        </childnode>
      </node>
      <node id="593">
        <label>arrow::csv::ParseOptions</label>
        <link refid="structarrow_1_1csv_1_1_parse_options"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/csv/chunker.h" line="41" column="1" bodyfile="/arrow/cpp/src/arrow/csv/chunker.h" bodystart="41" bodyend="64"/>
    <listofallmembers>
      <member refid="classarrow_1_1csv_1_1_chunker_1ab3ed0782c47348d33ac985c2c1a1f9a0" prot="protected" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>ARROW_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classarrow_1_1csv_1_1_chunker_1a1412c8389ff88d80e668302d95328dde" prot="public" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>Chunker</name></member>
      <member refid="classarrow_1_1csv_1_1_chunker_1a404f34173660ab8498be271ce192dce0" prot="protected" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>options_</name></member>
      <member refid="classarrow_1_1csv_1_1_chunker_1ac9ccf9beed4ce2df8b4b69d55276800d" prot="public" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>Process</name></member>
      <member refid="classarrow_1_1csv_1_1_chunker_1aa4eed445b5b907210e59eeeb2d5dfe2a" prot="protected" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>ProcessSpecialized</name></member>
      <member refid="classarrow_1_1csv_1_1_chunker_1a34e94a7acc56baf2bf6bf1b91e463061" prot="protected" virt="non-virtual"><scope>arrow::csv::Chunker</scope><name>ReadLine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
