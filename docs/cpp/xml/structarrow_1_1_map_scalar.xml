<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structarrow_1_1_map_scalar" kind="struct" language="C++" prot="public">
    <compoundname>arrow::MapScalar</compoundname>
    <basecompoundref refid="structarrow_1_1_base_list_scalar" prot="public" virt="non-virtual">arrow::BaseListScalar</basecompoundref>
    <includes refid="scalar_8h" local="no">arrow/scalar.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structarrow_1_1_map_scalar_1af0ceb9ea9bb425a5cae6ab765f9b0ea2" prot="public" static="no">
        <type><ref refid="classarrow_1_1_map_type" kindref="compound">MapType</ref></type>
        <definition>using arrow::MapScalar::TypeClass =  MapType</definition>
        <argsstring></argsstring>
        <name>TypeClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/arrow/scalar.h" line="343" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2989">
        <label>arrow::BaseListScalar</label>
        <link refid="structarrow_1_1_base_list_scalar"/>
        <childnode refid="2990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2990">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="2991" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2988">
        <label>arrow::MapScalar</label>
        <link refid="structarrow_1_1_map_scalar"/>
        <childnode refid="2989" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2991">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2993">
        <label>arrow::BaseListScalar</label>
        <link refid="structarrow_1_1_base_list_scalar"/>
        <childnode refid="2994" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2994">
        <label>arrow::Scalar</label>
        <link refid="structarrow_1_1_scalar"/>
        <childnode refid="2995" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2992">
        <label>arrow::MapScalar</label>
        <link refid="structarrow_1_1_map_scalar"/>
        <childnode refid="2993" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2995">
        <label>arrow::util::EqualityComparable&lt; Scalar &gt;</label>
        <link refid="classarrow_1_1util_1_1_equality_comparable"/>
      </node>
    </collaborationgraph>
    <location file="/arrow/cpp/src/arrow/scalar.h" line="342" column="1" bodyfile="/arrow/cpp/src/arrow/scalar.h" bodystart="342" bodyend="345"/>
    <listofallmembers>
      <member refid="structarrow_1_1_base_list_scalar_1a3d7e553a05136cef283a178aff888d60" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>BaseListScalar</name></member>
      <member refid="structarrow_1_1_base_list_scalar_1a165d200c47cac450567cd446cc9210b0" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>BaseListScalar</name></member>
      <member refid="structarrow_1_1_scalar_1a3c91f8282f4f480813f2417f1e52366a" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>CastTo</name></member>
      <member refid="structarrow_1_1_scalar_1ae2831b0780d206f113707ae9d162778e" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>Equals</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a140cfdea92ae17331d8db8f69aad082f" prot="public" virt="non-virtual" ambiguityscope="EqualityComparable&lt; Scalar &gt;::"><scope>arrow::MapScalar</scope><name>Equals</name></member>
      <member refid="structarrow_1_1_scalar_1a42453c42084d0c9a955c8c398831a57e" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>is_valid</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a1a7ff2c6f720209bc960524c47ad0535" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>operator!=</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1ac0e8ec25e77ece923689ee31c389200e" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>operator==</name></member>
      <member refid="structarrow_1_1_scalar_1a1e0788ef6c5defa729c8703366adc815" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>Parse</name></member>
      <member refid="structarrow_1_1_scalar_1ad9fe0e6c79f98c6875a23ed8b27e5175" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_scalar_1aff32301b232ace9c6172685d88e68e97" prot="protected" virt="non-virtual"><scope>arrow::MapScalar</scope><name>Scalar</name></member>
      <member refid="structarrow_1_1_scalar_1a345c3828551c3614df492397f3b558d4" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>ToString</name></member>
      <member refid="structarrow_1_1_scalar_1ae3f8aa29da0a3f3ac9d3de6a97818328" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>type</name></member>
      <member refid="structarrow_1_1_map_scalar_1af0ceb9ea9bb425a5cae6ab765f9b0ea2" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>TypeClass</name></member>
      <member refid="structarrow_1_1_base_list_scalar_1aa283f213991b411e9835b93fd6d1dba9" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>value</name></member>
      <member refid="structarrow_1_1_base_list_scalar_1a27a191ecf126cb56d74a69e1387b3034" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>ValueType</name></member>
      <member refid="classarrow_1_1util_1_1_equality_comparable_1a14c5ed61e030855eef29edebc6355806" prot="public" virt="non-virtual"><scope>arrow::MapScalar</scope><name>~EqualityComparable</name></member>
      <member refid="structarrow_1_1_scalar_1a6410100776cd901718531f54738a32c2" prot="public" virt="virtual"><scope>arrow::MapScalar</scope><name>~Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
