<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="encryption_8h" kind="file" language="C++">
    <compoundname>encryption.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes refid="exception_8h" local="yes">parquet/exception.h</includes>
    <includes refid="schema_8h" local="yes">parquet/schema.h</includes>
    <includes refid="parquet_2types_8h" local="yes">parquet/types.h</includes>
    <includedby refid="internal__file__encryptor_8h" local="yes">/arrow/cpp/src/parquet/internal_file_encryptor.h</includedby>
    <includedby refid="properties_8h" local="yes">/arrow/cpp/src/parquet/properties.h</includedby>
    <incdepgraph>
      <node id="19122">
        <label>atomic</label>
      </node>
      <node id="19108">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
      </node>
      <node id="19130">
        <label>limits</label>
      </node>
      <node id="19100">
        <label>cstdint</label>
      </node>
      <node id="19103">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19104" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
        <childnode refid="19106" relation="include">
        </childnode>
        <childnode refid="19107" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19124">
        <label>endian.h</label>
      </node>
      <node id="19109">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="19104" relation="include">
        </childnode>
        <childnode refid="19110" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19108" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19111" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19131">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19132" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
      </node>
      <node id="19102">
        <label>parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19115" relation="include">
        </childnode>
        <childnode refid="19116" relation="include">
        </childnode>
        <childnode refid="19121" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19123" relation="include">
        </childnode>
        <childnode refid="19134" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
      </node>
      <node id="19097">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19115">
        <label>arrow/io/interfaces.h</label>
        <link refid="interfaces_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
        <childnode refid="19107" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19129">
        <label>cmath</label>
      </node>
      <node id="19128">
        <label>cassert</label>
      </node>
      <node id="19120">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
      </node>
      <node id="19091">
        <label>string</label>
      </node>
      <node id="19114">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="19089">
        <label>map</label>
      </node>
      <node id="19094">
        <label>parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="19095" relation="include">
        </childnode>
        <childnode refid="19096" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19102" relation="include">
        </childnode>
      </node>
      <node id="19095">
        <label>exception</label>
      </node>
      <node id="19112">
        <label>ostream</label>
      </node>
      <node id="19101">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="19106">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19107" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19108" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19121">
        <label>arrow/memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="19122" relation="include">
        </childnode>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19123">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="19124" relation="include">
        </childnode>
        <childnode refid="19125" relation="include">
        </childnode>
        <childnode refid="19126" relation="include">
        </childnode>
        <childnode refid="19127" relation="include">
        </childnode>
        <childnode refid="19128" relation="include">
        </childnode>
        <childnode refid="19129" relation="include">
        </childnode>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19104" relation="include">
        </childnode>
        <childnode refid="19130" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19118" relation="include">
        </childnode>
        <childnode refid="19108" relation="include">
        </childnode>
        <childnode refid="19131" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19111" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19133" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19127">
        <label>bitset</label>
      </node>
      <node id="19132">
        <label>tuple</label>
      </node>
      <node id="19098">
        <label>vector</label>
      </node>
      <node id="19119">
        <label>new</label>
      </node>
      <node id="19093">
        <label>utility</label>
      </node>
      <node id="19113">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19114" relation="include">
        </childnode>
      </node>
      <node id="19126">
        <label>array</label>
      </node>
      <node id="19096">
        <label>sstream</label>
      </node>
      <node id="19116">
        <label>arrow/io/memory.h</label>
        <link refid="io_2memory_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19117" relation="include">
        </childnode>
        <childnode refid="19115" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19135">
        <label>parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19112" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19092" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
        <childnode refid="19102" relation="include">
        </childnode>
        <childnode refid="19136" relation="include">
        </childnode>
      </node>
      <node id="19107">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="19110">
        <label>iosfwd</label>
      </node>
      <node id="19117">
        <label>arrow/io/concurrency.h</label>
        <link refid="concurrency_8h"/>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19115" relation="include">
        </childnode>
        <childnode refid="19118" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19120" relation="include">
        </childnode>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19092">
        <label>unordered_map</label>
      </node>
      <node id="19118">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="19119" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19108" relation="include">
        </childnode>
      </node>
      <node id="19105">
        <label>type_traits</label>
      </node>
      <node id="19134">
        <label>arrow/util/compression.h</label>
        <link refid="compression_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19130" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19118" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19125">
        <label>algorithm</label>
      </node>
      <node id="19137">
        <label>arrow/util/int_util.h</label>
        <link refid="int__util_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19130" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19088">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="19089" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19092" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19094" relation="include">
        </childnode>
        <childnode refid="19135" relation="include">
        </childnode>
        <childnode refid="19136" relation="include">
        </childnode>
      </node>
      <node id="19104">
        <label>cstring</label>
      </node>
      <node id="19136">
        <label>parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="19125" relation="include">
        </childnode>
        <childnode refid="19100" relation="include">
        </childnode>
        <childnode refid="19104" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19096" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19137" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19102" relation="include">
        </childnode>
      </node>
      <node id="19111">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19112" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19101" relation="include">
        </childnode>
      </node>
      <node id="19090">
        <label>memory</label>
      </node>
      <node id="19099">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="19100" relation="include">
        </childnode>
      </node>
      <node id="19133">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="19105" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19150">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="19148">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="19145">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="19144">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="19146">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="19142" relation="include">
        </childnode>
        <childnode refid="19143" relation="include">
        </childnode>
        <childnode refid="19147" relation="include">
        </childnode>
        <childnode refid="19148" relation="include">
        </childnode>
      </node>
      <node id="19152">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="19142" relation="include">
        </childnode>
        <childnode refid="19147" relation="include">
        </childnode>
        <childnode refid="19146" relation="include">
        </childnode>
        <childnode refid="19149" relation="include">
        </childnode>
        <childnode refid="19153" relation="include">
        </childnode>
      </node>
      <node id="19139">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="19140" relation="include">
        </childnode>
      </node>
      <node id="19141">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="19142" relation="include">
        </childnode>
        <childnode refid="19143" relation="include">
        </childnode>
        <childnode refid="19144" relation="include">
        </childnode>
        <childnode refid="19145" relation="include">
        </childnode>
        <childnode refid="19146" relation="include">
        </childnode>
        <childnode refid="19149" relation="include">
        </childnode>
        <childnode refid="19152" relation="include">
        </childnode>
        <childnode refid="19153" relation="include">
        </childnode>
      </node>
      <node id="19142">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="19140">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="19147">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="19149">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="19150" relation="include">
        </childnode>
        <childnode refid="19151" relation="include">
        </childnode>
      </node>
      <node id="19153">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="19151">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="19148" relation="include">
        </childnode>
      </node>
      <node id="19138">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="19139" relation="include">
        </childnode>
        <childnode refid="19141" relation="include">
        </childnode>
      </node>
      <node id="19143">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classparquet_1_1_decryption_key_retriever" prot="public">parquet::DecryptionKeyRetriever</innerclass>
    <innerclass refid="classparquet_1_1_integer_key_id_retriever" prot="public">parquet::IntegerKeyIdRetriever</innerclass>
    <innerclass refid="classparquet_1_1_string_key_id_retriever" prot="public">parquet::StringKeyIdRetriever</innerclass>
    <innerclass refid="classparquet_1_1_hidden_column_exception" prot="public">parquet::HiddenColumnException</innerclass>
    <innerclass refid="classparquet_1_1_key_access_denied_exception" prot="public">parquet::KeyAccessDeniedException</innerclass>
    <innerclass refid="classparquet_1_1_column_encryption_properties" prot="public">parquet::ColumnEncryptionProperties</innerclass>
    <innerclass refid="classparquet_1_1_column_encryption_properties_1_1_builder" prot="public">parquet::ColumnEncryptionProperties::Builder</innerclass>
    <innerclass refid="classparquet_1_1_column_decryption_properties" prot="public">parquet::ColumnDecryptionProperties</innerclass>
    <innerclass refid="classparquet_1_1_column_decryption_properties_1_1_builder" prot="public">parquet::ColumnDecryptionProperties::Builder</innerclass>
    <innerclass refid="classparquet_1_1_a_a_d_prefix_verifier" prot="public">parquet::AADPrefixVerifier</innerclass>
    <innerclass refid="classparquet_1_1_file_decryption_properties" prot="public">parquet::FileDecryptionProperties</innerclass>
    <innerclass refid="classparquet_1_1_file_decryption_properties_1_1_builder" prot="public">parquet::FileDecryptionProperties::Builder</innerclass>
    <innerclass refid="classparquet_1_1_file_encryption_properties" prot="public">parquet::FileEncryptionProperties</innerclass>
    <innerclass refid="classparquet_1_1_file_encryption_properties_1_1_builder" prot="public">parquet::FileEncryptionProperties::Builder</innerclass>
    <innernamespace refid="namespaceparquet">parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8h" kindref="compound">parquet/exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">parquet/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parquet_2types_8h" kindref="compound">parquet/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparquet" kindref="compound">parquet</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>kDefaultEncryptionAlgorithm<sp/>=</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4baf9ba0070ca729bff7c232e3ba5959d2a" kindref="member">ParquetCipher::AES_GCM_V1</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int32_t<sp/>kMaximalAadMetadataLength<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kDefaultEncryptedFooter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kDefaultCheckSignature<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kDefaultAllowPlaintextFiles<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int32_t<sp/>kAadFileUniqueLength<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColumnDecryptionProperties;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref><sp/>=</highlight></codeline>
<codeline lineno="42" refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;ColumnDecryptionProperties&gt;&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref><sp/>=</highlight></codeline>
<codeline lineno="46" refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;&gt;;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classparquet_1_1_decryption_key_retriever" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>GetKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51" refid="classparquet_1_1_decryption_key_retriever_1a7d5a7ea6aa6a63ce56bdf86a293b387a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_decryption_key_retriever_1a7d5a7ea6aa6a63ce56bdf86a293b387a" kindref="member">~DecryptionKeyRetriever</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classparquet_1_1_integer_key_id_retriever" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_integer_key_id_retriever" kindref="compound">IntegerKeyIdRetriever</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutKey(uint32_t<sp/>key_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>std::string<sp/>GetKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::map&lt;uint32_t,<sp/>std::string&gt;<sp/>key_map_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>string<sp/>key<sp/>retriever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classparquet_1_1_string_key_id_retriever" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_string_key_id_retriever" kindref="compound">StringKeyIdRetriever</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_decryption_key_retriever" kindref="compound">DecryptionKeyRetriever</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::string<sp/>GetKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>key_map_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classparquet_1_1_hidden_column_exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_hidden_column_exception" kindref="compound">HiddenColumnException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76" refid="classparquet_1_1_hidden_column_exception_1aa6ba41c6b4b17ec7eb1ea10a0117c7c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_hidden_column_exception_1aa6ba41c6b4b17ec7eb1ea10a0117c7c1" kindref="member">HiddenColumnException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>columnPath)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(columnPath.c_str())<sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classparquet_1_1_key_access_denied_exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_key_access_denied_exception" kindref="compound">KeyAccessDeniedException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82" refid="classparquet_1_1_key_access_denied_exception_1aa176658033d6e7ced705f03b5368866c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_key_access_denied_exception_1aa176658033d6e7ced705f03b5368866c" kindref="member">KeyAccessDeniedException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>columnPath)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classparquet_1_1_parquet_exception" kindref="compound">ParquetException</ref>(columnPath.c_str())<sp/>{}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespaceparquet_1a560c17a23c0104d301cf279f8d8022ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespaceparquet_1a560c17a23c0104d301cf279f8d8022ed" kindref="member">str2bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cbytes<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(str.c_str());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cbytes);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classparquet_1_1_column_encryption_properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classparquet_1_1_column_encryption_properties_1_1_builder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98" refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a42837095e1a38a6acd85173da7fcbe10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a42837095e1a38a6acd85173da7fcbe10" kindref="member">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>(name,<sp/>true)<sp/>{}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a08ff6a4547b38d09395b343fbfc47c55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a08ff6a4547b38d09395b343fbfc47c55" kindref="member">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;schema::ColumnPath&gt;&amp;<sp/>path)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>(path-&gt;ToDotString(),<sp/>true)<sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>key(std::string<sp/>column_key);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>key_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>key_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_id);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a5d3126e8c4c7604ea4fae417bbe1dc68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;<sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder_1a5d3126e8c4c7604ea4fae417bbe1dc68" kindref="member">build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>(encrypted_,<sp/>column_path_,<sp/>key_,<sp/>key_metadata_));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>column_path_;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key_metadata_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties_1_1_builder" kindref="compound">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>column_path_(path),<sp/>encrypted_(encrypted)<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classparquet_1_1_column_encryption_properties_1af015307fcc9a210f04b7fe0f942483fe" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_column_encryption_properties_1af015307fcc9a210f04b7fe0f942483fe" kindref="member">column_path</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_path_;<sp/>}</highlight></codeline>
<codeline lineno="139" refid="classparquet_1_1_column_encryption_properties_1af3928fcdf2e078b5068ab19754ab9550" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1af3928fcdf2e078b5068ab19754ab9550" kindref="member">is_encrypted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encrypted_;<sp/>}</highlight></codeline>
<codeline lineno="140" refid="classparquet_1_1_column_encryption_properties_1a4fade329caac7d8c91cafc7297f263c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1a4fade329caac7d8c91cafc7297f263c8" kindref="member">is_encrypted_with_footer_key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encrypted_with_footer_key_;<sp/>}</highlight></codeline>
<codeline lineno="141" refid="classparquet_1_1_column_encryption_properties_1a9f03145c7b9b83555131635c76886bf1" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_column_encryption_properties_1a9f03145c7b9b83555131635c76886bf1" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key_;<sp/>}</highlight></codeline>
<codeline lineno="142" refid="classparquet_1_1_column_encryption_properties_1aee50b92edb4dae631a546e4b02191bc6" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_column_encryption_properties_1aee50b92edb4dae631a546e4b02191bc6" kindref="member">key_metadata</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key_metadata_;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classparquet_1_1_column_encryption_properties_1a7826e73396f8e79bcddf691b1044f58c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1a7826e73396f8e79bcddf691b1044f58c" kindref="member">WipeOutEncryptionKey</ref>()<sp/>{<sp/>key_.clear();<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classparquet_1_1_column_encryption_properties_1ab4c1b8e8bea8fa801835a31f96dbfa0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1ab4c1b8e8bea8fa801835a31f96dbfa0c" kindref="member">is_utilized</ref>()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_.empty())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>re-use<sp/>column<sp/>properties<sp/>without<sp/>encryption<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilized_;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classparquet_1_1_column_encryption_properties_1ab9c8295dd273819bdb3a45f7c91e75c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties_1ab9c8295dd273819bdb3a45f7c91e75c0" kindref="member">set_utilized</ref>()<sp/>{<sp/>utilized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classparquet_1_1_column_encryption_properties_1a3f41130040dc9343dafd02d55848e641" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;<sp/><ref refid="classparquet_1_1_column_encryption_properties_1a3f41130040dc9343dafd02d55848e641" kindref="member">DeepClone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key_copy<sp/>=<sp/>key_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encrypted_,<sp/>column_path_,<sp/>key_copy,<sp/>key_metadata_));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>(<ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>&amp;&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>column_path_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_with_footer_key_;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>std::string<sp/>key_;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>std::string<sp/>key_metadata_;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>utilized_;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_encryption_properties" kindref="compound">ColumnEncryptionProperties</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_metadata);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classparquet_1_1_column_decryption_properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184" refid="classparquet_1_1_column_decryption_properties_1_1_builder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_column_decryption_properties_1_1_builder" kindref="compound">Builder</ref><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186" refid="classparquet_1_1_column_decryption_properties_1_1_builder_1a8ca599c6f440c3918256a67edeb08355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties_1_1_builder_1a8ca599c6f440c3918256a67edeb08355" kindref="member">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/>column_path_(name)<sp/>{}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classparquet_1_1_column_decryption_properties_1_1_builder_1a0de05bfb130deb20c90f8db298f1a746" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties_1_1_builder_1a0de05bfb130deb20c90f8db298f1a746" kindref="member">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;schema::ColumnPath&gt;&amp;<sp/>path)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classparquet_1_1_column_decryption_properties_1_1_builder" kindref="compound">Builder</ref>(path-&gt;ToDotString())<sp/>{}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_column_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ColumnDecryptionProperties&gt;<sp/>build();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>column_path_;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key_;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>(<ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>&amp;&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classparquet_1_1_column_decryption_properties_1a1a481532aa3bfc0208d6c59f56430248" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_column_decryption_properties_1a1a481532aa3bfc0208d6c59f56430248" kindref="member">column_path</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_path_;<sp/>}</highlight></codeline>
<codeline lineno="209" refid="classparquet_1_1_column_decryption_properties_1aae06e369747034c8a8d1234061f111bd" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_column_decryption_properties_1aae06e369747034c8a8d1234061f111bd" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key_;<sp/>}</highlight></codeline>
<codeline lineno="210" refid="classparquet_1_1_column_decryption_properties_1aa5f0a2ef9fa702519ec62e041fedf1d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties_1aa5f0a2ef9fa702519ec62e041fedf1d9" kindref="member">is_utilized</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilized_;<sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classparquet_1_1_column_decryption_properties_1ac78ee84bc2b22f7e47e7a112a5360866" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties_1ac78ee84bc2b22f7e47e7a112a5360866" kindref="member">set_utilized</ref>()<sp/>{<sp/>utilized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WipeOutDecryptionKey();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ColumnDecryptionProperties&gt;<sp/>DeepClone();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>column_path_;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::string<sp/>key_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>utilized_;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_column_decryption_properties" kindref="compound">ColumnDecryptionProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classparquet_1_1_a_a_d_prefix_verifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_a_a_d_prefix_verifier" kindref="compound">AADPrefixVerifier</ref><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad_prefix)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244" refid="classparquet_1_1_a_a_d_prefix_verifier_1abc56913e2d54cfe30e5554ab75f1912d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_a_a_d_prefix_verifier_1abc56913e2d54cfe30e5554ab75f1912d" kindref="member">~AADPrefixVerifier</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classparquet_1_1_file_decryption_properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249" refid="classparquet_1_1_file_decryption_properties_1_1_builder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251" refid="classparquet_1_1_file_decryption_properties_1_1_builder_1ad170f6461fac2b7c97e2c382e8b4ad55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder_1ad170f6461fac2b7c97e2c382e8b4ad55" kindref="member">Builder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_plaintext_footer_integrity_<sp/>=<sp/>kDefaultCheckSignature;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plaintext_files_allowed_<sp/>=<sp/>kDefaultAllowPlaintextFiles;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>footer_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>footer_key);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>column_keys(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref>&amp;<sp/>column_decryption_properties);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>key_retriever(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DecryptionKeyRetriever&gt;&amp;<sp/>key_retriever);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classparquet_1_1_file_decryption_properties_1_1_builder_1a4541253382f77b448d4fb7bc7745929d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder_1a4541253382f77b448d4fb7bc7745929d" kindref="member">disable_footer_signature_verification</ref>()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_plaintext_footer_integrity_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>aad_prefix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad_prefix);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>aad_prefix_verifier(std::shared_ptr&lt;AADPrefixVerifier&gt;<sp/>aad_prefix_verifier);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classparquet_1_1_file_decryption_properties_1_1_builder_1a4059d7f8a09c96480038f97695dfc91f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder_1a4059d7f8a09c96480038f97695dfc91f" kindref="member">plaintext_files_allowed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plaintext_files_allowed_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classparquet_1_1_file_decryption_properties_1_1_builder_1aa0fdb7e58a5ec402ffcecc898376b05c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FileDecryptionProperties&gt;<sp/><ref refid="classparquet_1_1_file_decryption_properties_1_1_builder_1aa0fdb7e58a5ec402ffcecc898376b05c" kindref="member">build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;FileDecryptionProperties&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref>(</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footer_key_,<sp/>key_retriever_,<sp/>check_plaintext_footer_integrity_,<sp/>aad_prefix_,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_prefix_verifier_,<sp/>column_decryption_properties_,<sp/>plaintext_files_allowed_));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>footer_key_;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>aad_prefix_;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AADPrefixVerifier&gt;<sp/>aad_prefix_verifier_;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref><sp/>column_decryption_properties_;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DecryptionKeyRetriever&gt;<sp/>key_retriever_;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_plaintext_footer_integrity_;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>plaintext_files_allowed_;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>std::string<sp/>column_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="classparquet_1_1_file_decryption_properties_1a868dbaa47a1ade7ce4023d116b8ae9e0" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_file_decryption_properties_1a868dbaa47a1ade7ce4023d116b8ae9e0" kindref="member">footer_key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>footer_key_;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classparquet_1_1_file_decryption_properties_1a09a3964f5f293a8cc3d7e5163828edd8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_file_decryption_properties_1a09a3964f5f293a8cc3d7e5163828edd8" kindref="member">aad_prefix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aad_prefix_;<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classparquet_1_1_file_decryption_properties_1a352c96d069301e68b89d843c319b7773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DecryptionKeyRetriever&gt;&amp;<sp/><ref refid="classparquet_1_1_file_decryption_properties_1a352c96d069301e68b89d843c319b7773" kindref="member">key_retriever</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key_retriever_;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classparquet_1_1_file_decryption_properties_1a7259c31aedfa62a759e139ff5fbf9c62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_decryption_properties_1a7259c31aedfa62a759e139ff5fbf9c62" kindref="member">check_plaintext_footer_integrity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check_plaintext_footer_integrity_;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classparquet_1_1_file_decryption_properties_1a5405f38a0a90c91bbd8f6d0bce8876ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_decryption_properties_1a5405f38a0a90c91bbd8f6d0bce8876ff" kindref="member">plaintext_files_allowed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plaintext_files_allowed_;<sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classparquet_1_1_file_decryption_properties_1a2f8e91fcdf7292a91538a8f43d1d43b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;AADPrefixVerifier&gt;&amp;<sp/><ref refid="classparquet_1_1_file_decryption_properties_1a2f8e91fcdf7292a91538a8f43d1d43b3" kindref="member">aad_prefix_verifier</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aad_prefix_verifier_;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WipeOutDecryptionKeys();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_utilized();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classparquet_1_1_file_decryption_properties_1acbb7649c7e760da7a3a6ae01cb0683a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_decryption_properties_1acbb7649c7e760da7a3a6ae01cb0683a5" kindref="member">set_utilized</ref>()<sp/>{<sp/>utilized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;FileDecryptionProperties&gt;<sp/>DeepClone(std::string<sp/>new_aad_prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>std::string<sp/>footer_key_;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>std::string<sp/>aad_prefix_;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;AADPrefixVerifier&gt;<sp/>aad_prefix_verifier_;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>empty_string_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref><sp/>column_decryption_properties_;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DecryptionKeyRetriever&gt;<sp/>key_retriever_;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_plaintext_footer_integrity_;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>plaintext_files_allowed_;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>utilized_;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_decryption_properties" kindref="compound">FileDecryptionProperties</ref>(</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DecryptionKeyRetriever&gt;<sp/>key_retriever,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_plaintext_footer_integrity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad_prefix,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AADPrefixVerifier&gt;<sp/>aad_prefix_verifier,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1a0c783ff11d8937fce7ec2fdc8b0b7743" kindref="member">ColumnPathToDecryptionPropertiesMap</ref>&amp;<sp/>column_decryption_properties,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>plaintext_files_allowed);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classparquet_1_1_file_encryption_properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="399" refid="classparquet_1_1_file_encryption_properties_1_1_builder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PARQUET_EXPORT<sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401" refid="classparquet_1_1_file_encryption_properties_1_1_builder_1ada7e6efc12dfdbe47f91bd81dbd967da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder_1ada7e6efc12dfdbe47f91bd81dbd967da" kindref="member">Builder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parquet_cipher_(kDefaultEncryptionAlgorithm),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encrypted_footer_(kDefaultEncryptedFooter)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>footer_key_<sp/>=<sp/>footer_key;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store_aad_prefix_in_file_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a95f88683b5c1175d149ec08ab942fc9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a95f88683b5c1175d149ec08ab942fc9f" kindref="member">set_plaintext_footer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encrypted_footer_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a51f717b835e87801df8514ca8554788a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a51f717b835e87801df8514ca8554788a" kindref="member">algorithm</ref>(<ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>parquet_cipher)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parquet_cipher_<sp/>=<sp/>parquet_cipher;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>footer_key_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_id);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>footer_key_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key_metadata);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>aad_prefix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad_prefix);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>disable_aad_prefix_storage();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder" kindref="compound">Builder</ref>*<sp/>encrypted_columns(</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref>&amp;<sp/>encrypted_columns);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a8dd5cda939433dc72f4ecdef92cafaa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FileEncryptionProperties&gt;<sp/><ref refid="classparquet_1_1_file_encryption_properties_1_1_builder_1a8dd5cda939433dc72f4ecdef92cafaa7" kindref="member">build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;FileEncryptionProperties&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parquet_cipher_,<sp/>footer_key_,<sp/>footer_key_metadata_,<sp/>encrypted_footer_,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_prefix_,<sp/>store_aad_prefix_in_file_,<sp/>encrypted_columns_));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>parquet_cipher_;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_footer_;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>footer_key_;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>footer_key_metadata_;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>aad_prefix_;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_aad_prefix_in_file_;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref><sp/>encrypted_columns_;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="459" refid="classparquet_1_1_file_encryption_properties_1a0c645711f0452ec75d42d678bea7c0db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_encryption_properties_1a0c645711f0452ec75d42d678bea7c0db" kindref="member">encrypted_footer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encrypted_footer_;<sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classparquet_1_1_file_encryption_properties_1ab7146bf1f15bd324c36b5f63e2697fc0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/><ref refid="classparquet_1_1_file_encryption_properties_1ab7146bf1f15bd324c36b5f63e2697fc0" kindref="member">algorithm</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>algorithm_;<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classparquet_1_1_file_encryption_properties_1a9c0a90f378b71630d48694a55399662d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_file_encryption_properties_1a9c0a90f378b71630d48694a55399662d" kindref="member">footer_key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>footer_key_;<sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="classparquet_1_1_file_encryption_properties_1aab8ec275d39eac10d6f38e0112209fcc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_file_encryption_properties_1aab8ec275d39eac10d6f38e0112209fcc" kindref="member">footer_key_metadata</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>footer_key_metadata_;<sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classparquet_1_1_file_encryption_properties_1a3b9aa90e62a44450e2790d747eb9df1a" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classparquet_1_1_file_encryption_properties_1a3b9aa90e62a44450e2790d747eb9df1a" kindref="member">file_aad</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_aad_;<sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ColumnEncryptionProperties&gt;<sp/>column_encryption_properties(</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>column_path);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="classparquet_1_1_file_encryption_properties_1af765b030f37dbdb821613b8b1382c0cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_encryption_properties_1af765b030f37dbdb821613b8b1382c0cd" kindref="member">is_utilized</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilized_;<sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classparquet_1_1_file_encryption_properties_1a28d0699c7780de251c39714e5f9dec91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparquet_1_1_file_encryption_properties_1a28d0699c7780de251c39714e5f9dec91" kindref="member">set_utilized</ref>()<sp/>{<sp/>utilized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WipeOutEncryptionKeys();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;FileEncryptionProperties&gt;<sp/>DeepClone(std::string<sp/>new_aad_prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="classparquet_1_1_file_encryption_properties_1abe5241e0e6e1b3a32f856341cc2b1873" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref><sp/><ref refid="classparquet_1_1_file_encryption_properties_1abe5241e0e6e1b3a32f856341cc2b1873" kindref="member">encrypted_columns</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encrypted_columns_;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="structparquet_1_1_encryption_algorithm" kindref="compound">EncryptionAlgorithm</ref><sp/>algorithm_;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>std::string<sp/>footer_key_;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>std::string<sp/>footer_key_metadata_;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_footer_;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>std::string<sp/>file_aad_;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>std::string<sp/>aad_prefix_;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>utilized_;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_aad_prefix_in_file_;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref><sp/>encrypted_columns_;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="classparquet_1_1_file_encryption_properties" kindref="compound">FileEncryptionProperties</ref>(<ref refid="structparquet_1_1_parquet_cipher_1a8ee1fdd51aecc2c2100a0bd99b5bca4b" kindref="member">ParquetCipher::type</ref><sp/>cipher,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>footer_key_metadata,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encrypted_footer,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>aad_prefix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>store_aad_prefix_in_file,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1ac06806d0b989044b3c15190d2b27523f" kindref="member">ColumnPathToEncryptionPropertiesMap</ref>&amp;<sp/>encrypted_columns);</highlight></codeline>
<codeline lineno="509"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>parquet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/parquet/encryption.h"/>
  </compounddef>
</doxygen>
