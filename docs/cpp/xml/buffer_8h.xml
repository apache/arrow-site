<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="buffer_8h" kind="file" language="C++">
    <compoundname>buffer.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="device_8h" local="yes">arrow/device.h</includes>
    <includes refid="io_2type__fwd_8h" local="yes">arrow/io/type_fwd.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="string__view_8h" local="yes">arrow/util/string_view.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="api_8h" local="yes">/arrow/cpp/src/arrow/api.h</includedby>
    <includedby refid="dict__internal_8h" local="yes">/arrow/cpp/src/arrow/array/dict_internal.h</includedby>
    <includedby refid="buffer__builder_8h" local="yes">/arrow/cpp/src/arrow/buffer_builder.h</includedby>
    <includedby refid="compute_2kernels_2util__internal_8h" local="yes">/arrow/cpp/src/arrow/compute/kernels/util_internal.h</includedby>
    <includedby refid="csv_2parser_8h" local="yes">/arrow/cpp/src/arrow/csv/parser.h</includedby>
    <includedby refid="file__base_8h" local="yes">/arrow/cpp/src/arrow/dataset/file_base.h</includedby>
    <includedby refid="cuda__arrow__ipc_8h" local="yes">/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h</includedby>
    <includedby refid="cuda__memory_8h" local="yes">/arrow/cpp/src/arrow/gpu/cuda_memory.h</includedby>
    <includedby refid="metadata__internal_8h" local="yes">/arrow/cpp/src/arrow/ipc/metadata_internal.h</includedby>
    <includedby refid="arrow_2pch_8h" local="yes">/arrow/cpp/src/arrow/pch.h</includedby>
    <includedby refid="arrow_2python_2common_8h" local="yes">/arrow/cpp/src/arrow/python/common.h</includedby>
    <includedby refid="numpy__convert_8h" local="yes">/arrow/cpp/src/arrow/python/numpy_convert.h</includedby>
    <includedby refid="sparse__tensor_8h" local="yes">/arrow/cpp/src/arrow/sparse_tensor.h</includedby>
    <includedby refid="bit__util_8h" local="yes">/arrow/cpp/src/arrow/util/bit_util.h</includedby>
    <includedby refid="hashing_8h" local="yes">/arrow/cpp/src/arrow/util/hashing.h</includedby>
    <includedby refid="parquet_2platform_8h" local="yes">/arrow/cpp/src/parquet/platform.h</includedby>
    <includedby refid="plasma_2client_8h" local="yes">/arrow/cpp/src/plasma/client.h</includedby>
    <incdepgraph>
      <node id="1897">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
      </node>
      <node id="1885">
        <label>cstdint</label>
      </node>
      <node id="1884">
        <label>/arrow/cpp/src/arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1891" relation="include">
        </childnode>
        <childnode refid="1892" relation="include">
        </childnode>
        <childnode refid="1893" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1898">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1894">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1891" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1888">
        <label>string</label>
      </node>
      <node id="1903">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="1901">
        <label>ostream</label>
      </node>
      <node id="1896">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="1892">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1893" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1891">
        <label>vector</label>
      </node>
      <node id="1890">
        <label>utility</label>
      </node>
      <node id="1902">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
      </node>
      <node id="1893">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="1899">
        <label>iosfwd</label>
      </node>
      <node id="1889">
        <label>type_traits</label>
      </node>
      <node id="1886">
        <label>cstring</label>
      </node>
      <node id="1900">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1887">
        <label>memory</label>
      </node>
      <node id="1895">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="1885" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2044">
        <label>/arrow/cpp/src/parquet/bloom_filter.h</label>
        <link refid="bloom__filter_8h"/>
      </node>
      <node id="1906">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="2049">
        <label>/arrow/cpp/src/parquet/api/writer.h</label>
        <link refid="parquet_2api_2writer_8h"/>
      </node>
      <node id="1957">
        <label>/arrow/cpp/src/gandiva/exported_funcs_registry.h</label>
        <link refid="exported__funcs__registry_8h"/>
        <childnode refid="1958" relation="include">
        </childnode>
      </node>
      <node id="2016">
        <label>/arrow/cpp/src/arrow/compute/kernels/filter.h</label>
        <link refid="arrow_2compute_2kernels_2filter_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="1956">
        <label>/arrow/cpp/src/gandiva/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="2074">
        <label>/arrow/cpp/src/plasma/client.h</label>
        <link refid="plasma_2client_8h"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2021">
        <label>/arrow/cpp/src/arrow/compute/kernels/sort_to_indices.h</label>
        <link refid="sort__to__indices_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="2048">
        <label>/arrow/cpp/src/parquet/column_writer.h</label>
        <link refid="column__writer_8h"/>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
      </node>
      <node id="2009">
        <label>/arrow/cpp/src/arrow/compute/kernels/aggregate.h</label>
        <link refid="aggregate_8h"/>
        <childnode refid="2010" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>/arrow/cpp/src/arrow/buffer_builder.h</label>
        <link refid="buffer__builder_8h"/>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
      </node>
      <node id="2068">
        <label>/arrow/cpp/src/parquet/internal_file_decryptor.h</label>
        <link refid="internal__file__decryptor_8h"/>
        <childnode refid="2058" relation="include">
        </childnode>
      </node>
      <node id="1961">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="2064">
        <label>/arrow/cpp/src/parquet/murmur3.h</label>
        <link refid="murmur3_8h"/>
      </node>
      <node id="1939">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="1981">
        <label>/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h</label>
        <link refid="cuda__arrow__ipc_8h"/>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
      <node id="1982">
        <label>/arrow/cpp/src/arrow/gpu/cuda_api.h</label>
        <link refid="cuda__api_8h"/>
      </node>
      <node id="1998">
        <label>/arrow/cpp/src/arrow/sparse_tensor.h</label>
        <link refid="sparse__tensor_8h"/>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
      </node>
      <node id="1969">
        <label>/arrow/cpp/src/arrow/array/builder_binary.h</label>
        <link refid="builder__binary_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1992">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="1984">
        <label>/arrow/cpp/src/arrow/ipc/metadata_internal.h</label>
        <link refid="metadata__internal_8h"/>
      </node>
      <node id="1904">
        <label>/arrow/cpp/src/arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="2037" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
      </node>
      <node id="2010">
        <label>/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</label>
        <link refid="sum__internal_8h"/>
      </node>
      <node id="1972">
        <label>/arrow/cpp/src/arrow/array/builder_primitive.h</label>
        <link refid="builder__primitive_8h"/>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2060">
        <label>/arrow/cpp/src/parquet/encryption_internal.h</label>
        <link refid="encryption__internal_8h"/>
      </node>
      <node id="2047">
        <label>/arrow/cpp/src/parquet/stream_reader.h</label>
        <link refid="stream__reader_8h"/>
      </node>
      <node id="1920">
        <label>/arrow/cpp/src/gandiva/llvm_generator.h</label>
        <link refid="llvm__generator_8h"/>
      </node>
      <node id="2043">
        <label>/arrow/cpp/src/parquet/arrow/writer.h</label>
        <link refid="parquet_2arrow_2writer_8h"/>
      </node>
      <node id="2022">
        <label>/arrow/cpp/src/arrow/compute/kernels/take.h</label>
        <link refid="take_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="1959">
        <label>/arrow/cpp/src/gandiva/function_ir_builder.h</label>
        <link refid="function__ir__builder_8h"/>
        <childnode refid="1960" relation="include">
        </childnode>
      </node>
      <node id="1947">
        <label>/arrow/cpp/src/gandiva/function_registry_arithmetic.h</label>
        <link refid="function__registry__arithmetic_8h"/>
      </node>
      <node id="1919">
        <label>/arrow/cpp/src/gandiva/annotator.h</label>
        <link refid="annotator_8h"/>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="2013">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2014" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
      </node>
      <node id="1968">
        <label>/arrow/cpp/src/gandiva/execution_context.h</label>
        <link refid="execution__context_8h"/>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
      </node>
      <node id="2071">
        <label>/arrow/cpp/src/parquet/column_page.h</label>
        <link refid="column__page_8h"/>
      </node>
      <node id="1995">
        <label>/arrow/cpp/src/arrow/python/iterators.h</label>
        <link refid="iterators_8h"/>
      </node>
      <node id="2037">
        <label>/arrow/cpp/src/parquet/platform.h</label>
        <link refid="parquet_2platform_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2039" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2061" relation="include">
        </childnode>
        <childnode refid="2062" relation="include">
        </childnode>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
      </node>
      <node id="1987">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="2061">
        <label>/arrow/cpp/src/parquet/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
      </node>
      <node id="1905">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="1973">
        <label>/arrow/cpp/src/arrow/array/builder_time.h</label>
        <link refid="builder__time_8h"/>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2032">
        <label>/arrow/cpp/src/arrow/util/formatting.h</label>
        <link refid="formatting_8h"/>
      </node>
      <node id="1926">
        <label>/arrow/cpp/src/gandiva/decimal_type_util.h</label>
        <link refid="decimal__type__util_8h"/>
      </node>
      <node id="1991">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="1943">
        <label>/arrow/cpp/src/gandiva/function_registry_common.h</label>
        <link refid="function__registry__common_8h"/>
        <childnode refid="1944" relation="include">
        </childnode>
      </node>
      <node id="1937">
        <label>/arrow/cpp/src/gandiva/func_descriptor.h</label>
        <link refid="func__descriptor_8h"/>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
      </node>
      <node id="1923">
        <label>/arrow/cpp/src/gandiva/filter_cache_key.h</label>
        <link refid="filter__cache__key_8h"/>
      </node>
      <node id="2035">
        <label>/arrow/cpp/src/arrow/util/bit_stream_utils.h</label>
        <link refid="bit__stream__utils_8h"/>
        <childnode refid="2036" relation="include">
        </childnode>
      </node>
      <node id="1980">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
      </node>
      <node id="1993">
        <label>/arrow/cpp/src/arrow/python/inference.h</label>
        <link refid="inference_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="1951">
        <label>/arrow/cpp/src/gandiva/function_registry_string.h</label>
        <link refid="function__registry__string_8h"/>
      </node>
      <node id="2024">
        <label>/arrow/cpp/src/arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
      </node>
      <node id="1933">
        <label>/arrow/cpp/src/gandiva/projector_cache_key.h</label>
        <link refid="projector__cache__key_8h"/>
      </node>
      <node id="2063">
        <label>/arrow/cpp/src/parquet/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2061" relation="include">
        </childnode>
        <childnode refid="2062" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
      </node>
      <node id="2028">
        <label>/arrow/cpp/src/arrow/compute/kernels/mean.h</label>
        <link refid="mean_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="1965">
        <label>/arrow/cpp/src/gandiva/compiled_expr.h</label>
        <link refid="compiled__expr_8h"/>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="2069">
        <label>/arrow/cpp/src/parquet/schema_internal.h</label>
        <link refid="schema__internal_8h"/>
      </node>
      <node id="2008">
        <label>/arrow/cpp/src/arrow/compute/kernels/add.h</label>
        <link refid="add_8h"/>
      </node>
      <node id="1942">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1997">
        <label>/arrow/cpp/src/arrow/python/numpy_convert.h</label>
        <link refid="numpy__convert_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="1985">
        <label>/arrow/cpp/src/arrow/pch.h</label>
        <link refid="arrow_2pch_8h"/>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
      </node>
      <node id="2055">
        <label>/arrow/cpp/src/parquet/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
      </node>
      <node id="1971">
        <label>/arrow/cpp/src/arrow/array/builder_nested.h</label>
        <link refid="builder__nested_8h"/>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2057">
        <label>/arrow/cpp/src/parquet/internal_file_encryptor.h</label>
        <link refid="internal__file__encryptor_8h"/>
        <childnode refid="2058" relation="include">
        </childnode>
      </node>
      <node id="2046">
        <label>/arrow/cpp/src/parquet/column_scanner.h</label>
        <link refid="column__scanner_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
      </node>
      <node id="2023">
        <label>/arrow/cpp/src/arrow/extension_type.h</label>
        <link refid="extension__type_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
      </node>
      <node id="2000">
        <label>/arrow/cpp/src/arrow/python/serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
      </node>
      <node id="1932">
        <label>/arrow/cpp/src/gandiva/projector.h</label>
        <link refid="gandiva_2projector_8h"/>
        <childnode refid="1933" relation="include">
        </childnode>
      </node>
      <node id="2019">
        <label>/arrow/cpp/src/arrow/compute/kernels/match.h</label>
        <link refid="match_8h"/>
      </node>
      <node id="1999">
        <label>/arrow/cpp/src/arrow/python/pyarrow.h</label>
        <link refid="pyarrow_8h"/>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1917">
        <label>/arrow/cpp/src/arrow/util/hashing.h</label>
        <link refid="hashing_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1988">
        <label>/arrow/cpp/src/arrow/python/pch.h</label>
        <link refid="arrow_2python_2pch_8h"/>
      </node>
      <node id="2059">
        <label>/arrow/cpp/src/parquet/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
        <childnode refid="2060" relation="include">
        </childnode>
        <childnode refid="2061" relation="include">
        </childnode>
        <childnode refid="2062" relation="include">
        </childnode>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
      </node>
      <node id="1912">
        <label>/arrow/cpp/src/arrow/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="2034">
        <label>/arrow/cpp/src/arrow/util/align_util.h</label>
        <link refid="align__util_8h"/>
      </node>
      <node id="2033">
        <label>/arrow/cpp/src/arrow/util/parsing.h</label>
        <link refid="parsing_8h"/>
      </node>
      <node id="1990">
        <label>/arrow/cpp/src/arrow/python/api.h</label>
        <link refid="python_2api_8h"/>
      </node>
      <node id="1955">
        <label>/arrow/cpp/src/gandiva/llvm_types.h</label>
        <link refid="llvm__types_8h"/>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
      </node>
      <node id="1941">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="2038">
        <label>/arrow/cpp/src/parquet/api/reader.h</label>
        <link refid="parquet_2api_2reader_8h"/>
      </node>
      <node id="2020">
        <label>/arrow/cpp/src/arrow/compute/kernels/nth_to_indices.h</label>
        <link refid="nth__to__indices_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="1977">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
      </node>
      <node id="1946">
        <label>/arrow/cpp/src/gandiva/native_function.h</label>
        <link refid="native__function_8h"/>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
      </node>
      <node id="1966">
        <label>/arrow/cpp/src/gandiva/selection_vector_impl.h</label>
        <link refid="selection__vector__impl_8h"/>
      </node>
      <node id="2051">
        <label>/arrow/cpp/src/parquet/deprecated_io.h</label>
        <link refid="deprecated__io_8h"/>
        <childnode refid="2052" relation="include">
        </childnode>
      </node>
      <node id="1954">
        <label>/arrow/cpp/src/gandiva/jni/module_holder.h</label>
        <link refid="module__holder_8h"/>
      </node>
      <node id="2014">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
      </node>
      <node id="2003">
        <label>/arrow/cpp/src/arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="2026" relation="include">
        </childnode>
        <childnode refid="2034" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
        <childnode refid="2037" relation="include">
        </childnode>
      </node>
      <node id="1911">
        <label>/arrow/cpp/src/arrow/array/builder_dict.h</label>
        <link refid="builder__dict_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1967">
        <label>/arrow/cpp/src/gandiva/simple_arena.h</label>
        <link refid="simple__arena_8h"/>
        <childnode refid="1968" relation="include">
        </childnode>
      </node>
      <node id="2076">
        <label>/arrow/cpp/src/plasma/hash_table_store.h</label>
        <link refid="hash__table__store_8h"/>
      </node>
      <node id="1934">
        <label>/arrow/cpp/src/gandiva/expression_registry.h</label>
        <link refid="expression__registry_8h"/>
      </node>
      <node id="1944">
        <label>/arrow/cpp/src/gandiva/function_registry.h</label>
        <link refid="function__registry_8h"/>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="2018">
        <label>/arrow/cpp/src/arrow/compute/kernels/isin.h</label>
        <link refid="isin_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="1918">
        <label>/arrow/cpp/src/gandiva/arrow.h</label>
        <link refid="arrow_8h"/>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1921" relation="include">
        </childnode>
        <childnode refid="1925" relation="include">
        </childnode>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1931" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
        <childnode refid="1923" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1963" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1925">
        <label>/arrow/cpp/src/gandiva/date_utils.h</label>
        <link refid="date__utils_8h"/>
      </node>
      <node id="1936">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="1928" relation="include">
        </childnode>
      </node>
      <node id="1910">
        <label>/arrow/cpp/src/arrow/array/builder_adaptive.h</label>
        <link refid="builder__adaptive_8h"/>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1924">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="2058">
        <label>/arrow/cpp/src/parquet/thrift_internal.h</label>
        <link refid="parquet_2thrift__internal_8h"/>
      </node>
      <node id="2007">
        <label>/arrow/cpp/src/arrow/compute/api.h</label>
        <link refid="compute_2api_8h"/>
        <childnode refid="1915" relation="include">
        </childnode>
      </node>
      <node id="1960">
        <label>/arrow/cpp/src/gandiva/decimal_ir.h</label>
        <link refid="decimal__ir_8h"/>
      </node>
      <node id="2045">
        <label>/arrow/cpp/src/parquet/column_reader.h</label>
        <link refid="column__reader_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
      </node>
      <node id="1938">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
      </node>
      <node id="2031">
        <label>/arrow/cpp/src/arrow/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
      </node>
      <node id="1935">
        <label>/arrow/cpp/src/gandiva/field_descriptor.h</label>
        <link refid="field__descriptor_8h"/>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1908">
        <label>/arrow/cpp/src/arrow/array/builder_base.h</label>
        <link refid="builder__base_8h"/>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2077">
        <label>/arrow/cpp/src/plasma/store.h</label>
        <link refid="store_8h"/>
      </node>
      <node id="1909">
        <label>/arrow/cpp/src/arrow/adapters/orc/adapter_util.h</label>
        <link refid="adapter__util_8h"/>
      </node>
      <node id="2005">
        <label>/arrow/cpp/src/arrow/array/concatenate.h</label>
        <link refid="concatenate_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>/arrow/cpp/src/arrow/array/builder_decimal.h</label>
        <link refid="builder__decimal_8h"/>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2065">
        <label>/arrow/cpp/src/parquet/printer.h</label>
        <link refid="printer_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
      </node>
      <node id="1994">
        <label>/arrow/cpp/src/arrow/python/io.h</label>
        <link refid="arrow_2python_2io_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="2041">
        <label>/arrow/cpp/src/parquet/arrow/reader_internal.h</label>
        <link refid="reader__internal_8h"/>
      </node>
      <node id="1916">
        <label>/arrow/cpp/src/arrow/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1949">
        <label>/arrow/cpp/src/gandiva/function_registry_hash.h</label>
        <link refid="function__registry__hash_8h"/>
      </node>
      <node id="1950">
        <label>/arrow/cpp/src/gandiva/function_registry_math_ops.h</label>
        <link refid="function__registry__math__ops_8h"/>
      </node>
      <node id="1928">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="2030">
        <label>/arrow/cpp/src/arrow/dataset/dataset_internal.h</label>
        <link refid="dataset__internal_8h"/>
        <childnode refid="2015" relation="include">
        </childnode>
      </node>
      <node id="2001">
        <label>/arrow/cpp/src/arrow/python/deserialize.h</label>
        <link refid="deserialize_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="2026">
        <label>/arrow/cpp/src/arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="2027" relation="include">
        </childnode>
        <childnode refid="2028" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="2029" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="2031" relation="include">
        </childnode>
        <childnode refid="2032" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
      </node>
      <node id="2015">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="2006">
        <label>/arrow/cpp/src/arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="2008" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
        <childnode refid="2017" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="2022" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="2012" relation="include">
        </childnode>
      </node>
      <node id="1931">
        <label>/arrow/cpp/src/gandiva/expression.h</label>
        <link refid="gandiva_2expression_8h"/>
        <childnode refid="1921" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1976">
        <label>/arrow/cpp/src/arrow/csv/parser.h</label>
        <link refid="csv_2parser_8h"/>
      </node>
      <node id="1979">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
      </node>
      <node id="1975">
        <label>/arrow/cpp/src/arrow/compute/kernels/util_internal.h</label>
        <link refid="compute_2kernels_2util__internal_8h"/>
      </node>
      <node id="2066">
        <label>/arrow/cpp/src/parquet/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="2067" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2062" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2057" relation="include">
        </childnode>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
      </node>
      <node id="2075">
        <label>/arrow/cpp/src/plasma/external_store.h</label>
        <link refid="external__store_8h"/>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
      </node>
      <node id="2011">
        <label>/arrow/cpp/src/arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="2012" relation="include">
        </childnode>
      </node>
      <node id="1913">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="1948">
        <label>/arrow/cpp/src/gandiva/function_registry_datetime.h</label>
        <link refid="function__registry__datetime_8h"/>
      </node>
      <node id="2012">
        <label>/arrow/cpp/src/arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2015" relation="include">
        </childnode>
      </node>
      <node id="1921">
        <label>/arrow/cpp/src/gandiva/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="1922" relation="include">
        </childnode>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1952">
        <label>/arrow/cpp/src/gandiva/function_registry_timestamp_arithmetic.h</label>
        <link refid="function__registry__timestamp__arithmetic_8h"/>
      </node>
      <node id="1962">
        <label>/arrow/cpp/src/gandiva/local_bitmaps_holder.h</label>
        <link refid="local__bitmaps__holder_8h"/>
        <childnode refid="1927" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>/arrow/cpp/src/arrow/gpu/cuda_memory.h</label>
        <link refid="cuda__memory_8h"/>
        <childnode refid="1982" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
      </node>
      <node id="2017">
        <label>/arrow/cpp/src/arrow/compute/kernels/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="2062">
        <label>/arrow/cpp/src/parquet/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
      </node>
      <node id="2004">
        <label>/arrow/cpp/src/arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="2006" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="2023" relation="include">
        </childnode>
        <childnode refid="2025" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="2053">
        <label>/arrow/cpp/src/parquet/encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="2054" relation="include">
        </childnode>
      </node>
      <node id="1964">
        <label>/arrow/cpp/src/gandiva/selection_vector.h</label>
        <link refid="selection__vector_8h"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1989">
        <label>/arrow/cpp/src/arrow/python/common.h</label>
        <link refid="arrow_2python_2common_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="1994" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
      </node>
      <node id="1953">
        <label>/arrow/cpp/src/gandiva/in_holder.h</label>
        <link refid="in__holder_8h"/>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="2070">
        <label>/arrow/cpp/src/parquet/statistics.h</label>
        <link refid="statistics_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
      </node>
      <node id="2042">
        <label>/arrow/cpp/src/parquet/arrow/schema.h</label>
        <link refid="arrow_2schema_8h"/>
        <childnode refid="2041" relation="include">
        </childnode>
      </node>
      <node id="2029">
        <label>/arrow/cpp/src/arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="2006" relation="include">
        </childnode>
        <childnode refid="2030" relation="include">
        </childnode>
        <childnode refid="2012" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
      </node>
      <node id="2067">
        <label>/arrow/cpp/src/parquet/api/schema.h</label>
        <link refid="api_2schema_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2049" relation="include">
        </childnode>
      </node>
      <node id="1958">
        <label>/arrow/cpp/src/gandiva/exported_funcs.h</label>
        <link refid="exported__funcs_8h"/>
      </node>
      <node id="1922">
        <label>/arrow/cpp/src/gandiva/filter.h</label>
        <link refid="gandiva_2filter_8h"/>
        <childnode refid="1923" relation="include">
        </childnode>
      </node>
      <node id="1996">
        <label>/arrow/cpp/src/arrow/python/python_to_arrow.h</label>
        <link refid="python__to__arrow_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="1940">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>/arrow/cpp/src/arrow/dataset/pch.h</label>
        <link refid="arrow_2dataset_2pch_8h"/>
      </node>
      <node id="1945">
        <label>/arrow/cpp/src/gandiva/function_signature.h</label>
        <link refid="function__signature_8h"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1946" relation="include">
        </childnode>
      </node>
      <node id="2027">
        <label>/arrow/cpp/src/arrow/compute/kernels/count.h</label>
        <link refid="count_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="2025">
        <label>/arrow/cpp/src/arrow/ipc/util.h</label>
        <link refid="ipc_2util_8h"/>
      </node>
      <node id="2054">
        <label>/arrow/cpp/src/parquet/pch.h</label>
        <link refid="parquet_2pch_8h"/>
      </node>
      <node id="2050">
        <label>/arrow/cpp/src/parquet/stream_writer.h</label>
        <link refid="stream__writer_8h"/>
        <childnode refid="2047" relation="include">
        </childnode>
      </node>
      <node id="2052">
        <label>/arrow/cpp/src/parquet/api/io.h</label>
        <link refid="parquet_2api_2io_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2049" relation="include">
        </childnode>
      </node>
      <node id="2073">
        <label>/arrow/cpp/src/parquet/hasher.h</label>
        <link refid="hasher_8h"/>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2064" relation="include">
        </childnode>
      </node>
      <node id="1927">
        <label>/arrow/cpp/src/gandiva/eval_batch.h</label>
        <link refid="eval__batch_8h"/>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1928" relation="include">
        </childnode>
      </node>
      <node id="1914">
        <label>/arrow/cpp/src/arrow/python/type_traits.h</label>
        <link refid="python_2type__traits_8h"/>
      </node>
      <node id="1929">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="2056">
        <label>/arrow/cpp/src/parquet/encryption.h</label>
        <link refid="encryption_8h"/>
        <childnode refid="2057" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
      </node>
      <node id="2072">
        <label>/arrow/cpp/src/parquet/types.h</label>
        <link refid="parquet_2types_8h"/>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2060" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
      </node>
      <node id="2002">
        <label>/arrow/cpp/src/arrow/tensor/converter.h</label>
        <link refid="tensor_2converter_8h"/>
      </node>
      <node id="1930">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="1963">
        <label>/arrow/cpp/src/gandiva/regex_util.h</label>
        <link refid="regex__util_8h"/>
      </node>
      <node id="1915">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
      <node id="1978">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
      <node id="1974">
        <label>/arrow/cpp/src/arrow/array/builder_union.h</label>
        <link refid="builder__union_8h"/>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="2039">
        <label>/arrow/cpp/src/parquet/arrow/path_internal.h</label>
        <link refid="path__internal_8h"/>
      </node>
      <node id="2036">
        <label>/arrow/cpp/src/arrow/util/rle_encoding.h</label>
        <link refid="rle__encoding_8h"/>
      </node>
      <node id="2040">
        <label>/arrow/cpp/src/parquet/arrow/reader.h</label>
        <link refid="parquet_2arrow_2reader_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_buffer" prot="public">arrow::Buffer</innerclass>
    <innerclass refid="classarrow_1_1_mutable_buffer" prot="public">arrow::MutableBuffer</innerclass>
    <innerclass refid="classarrow_1_1_resizable_buffer" prot="public">arrow::ResizableBuffer</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device_8h" kindref="compound">arrow/device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io_2type__fwd_8h" kindref="compound">arrow/io/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__view_8h" kindref="compound">arrow/util/string_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Buffer<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classarrow_1_1_buffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classarrow_1_1_buffer_1a801078c559b0c351f1ca5a6b6a04488f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_buffer_1a801078c559b0c351f1ca5a6b6a04488f" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>is_mutable_(false),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_cpu_(true),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_(data),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_data_(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(size),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity_(size)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>SetMemoryManager(<ref refid="namespacearrow_1a6945ae85a9bf9faebabefcb308098cc8" kindref="member">default_cpu_memory_manager</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classarrow_1_1_buffer_1aeedf5002e6f26bb2d9ca815889462619" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_buffer_1aeedf5002e6f26bb2d9ca815889462619" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;MemoryManager&gt;<sp/>mm,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>parent<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>is_mutable_(false),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_(data),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_data_(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(size),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity_(size),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_(parent)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>SetMemoryManager(std::move(mm));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classarrow_1_1_buffer_1aa65c1dfabef4c7a6ae3bf9b9adaa6bb4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_buffer_1aa65c1dfabef4c7a6ae3bf9b9adaa6bb4" kindref="member">Buffer</ref>(uintptr_t<sp/>address,<sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;MemoryManager&gt;<sp/>mm,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>parent<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(reinterpret_cast&lt;const<sp/>uint8_t*&gt;(address),<sp/>size,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(mm),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(parent))<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classarrow_1_1_buffer_1a5a918801b40b57a959dd9405f87948f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1a5a918801b40b57a959dd9405f87948f2" kindref="member">Buffer</ref>(<ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref><sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(reinterpret_cast&lt;const<sp/>uint8_t*&gt;(data.data()),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int64_t&gt;(data.size()))<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classarrow_1_1_buffer_1af694696afedb9313cf5dc874ffa9a453" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_buffer_1af694696afedb9313cf5dc874ffa9a453" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(parent-&gt;data_<sp/>+<sp/>offset,<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>SetMemoryManager(parent-&gt;memory_manager_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classarrow_1_1_buffer_1a90752e80fe0d4252d73da6e8c3658bd1" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="classarrow_1_1_buffer_1a90752e80fe0d4252d73da6e8c3658bd1" kindref="member">operator[]</ref>(std::size_t<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::string<sp/>ToHexString();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>other,<sp/>int64_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>CopySlice(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>nbytes,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>CopySlice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>nbytes,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>CopySlice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>nbytes,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classarrow_1_1_buffer_1a885f7b3329f3adb43a826e9403732a15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1a885f7b3329f3adb43a826e9403732a15" kindref="member">ZeroPadding</ref>()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckMutable();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>zero-capacity<sp/>buffer<sp/>can<sp/>have<sp/>a<sp/>null<sp/>data<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(mutable_data_<sp/>+<sp/>size_,<sp/>0,<sp/>static_cast&lt;size_t&gt;(capacity_<sp/>-<sp/>size_));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>FromString(std::string<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Buffer-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>data,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Buffer-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>data,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SizeType<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">64_t&gt;</highlight></codeline>
<codeline lineno="168" refid="classarrow_1_1_buffer_1abd877e4c900427798762d0abaa92b679" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_buffer_1abd877e4c900427798762d0abaa92b679" kindref="member">Wrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/>SizeType<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;Buffer&gt;(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int64_t&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>length));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="179" refid="classarrow_1_1_buffer_1a62d1926a69dd12ce6821dd8c96eafea2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_buffer_1a62d1926a69dd12ce6821dd8c96eafea2" kindref="member">Wrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;Buffer&gt;(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.data()),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int64_t&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>data.size()));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classarrow_1_1_buffer_1a3553bee276a12793c601d92789388052" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceparquet_1af53c3c244055490d5dd385dd8a874540" kindref="member">util::string_view</ref>(reinterpret_cast&lt;const<sp/>char*&gt;(data_),<sp/>size_);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classarrow_1_1_buffer_1a63f0eb8387cb5a9717c11e9d5e720cbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1a550cadd9d8d2f10f4b3c968065b9287b" kindref="member">util::bytes_view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1util_1a550cadd9d8d2f10f4b3c968065b9287b" kindref="member">util::bytes_view</ref>(data_,<sp/>size_);<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classarrow_1_1_buffer_1a81c3dd8c11dd804be2ada6df5ce8fad2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_buffer_1a81c3dd8c11dd804be2ada6df5ce8fad2" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckCPU();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(is_cpu_)<sp/>?<sp/>data_<sp/>:<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classarrow_1_1_buffer_1a5a9cb9324d3f7e323eb070b553c925aa" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_buffer_1a5a9cb9324d3f7e323eb070b553c925aa" kindref="member">mutable_data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckCPU();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckMutable();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macros_8h_1a1f418a9edc46d53e62732e7ccd06f329" kindref="member">ARROW_PREDICT_TRUE</ref>(is_cpu_)<sp/>?<sp/>mutable_data_<sp/>:<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classarrow_1_1_buffer_1a48683d9fd81454ba10ea0046775f38f3" refkind="member"><highlight class="normal"><sp/><sp/>uintptr_t<sp/><ref refid="classarrow_1_1_buffer_1a48683d9fd81454ba10ea0046775f38f3" kindref="member">address</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_);<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classarrow_1_1_buffer_1ab7a69ac4d88bd02c39fbe57225ff387a" refkind="member"><highlight class="normal"><sp/><sp/>uintptr_t<sp/><ref refid="classarrow_1_1_buffer_1ab7a69ac4d88bd02c39fbe57225ff387a" kindref="member">mutable_address</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckMutable();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mutable_data_);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classarrow_1_1_buffer_1a2a49871341c300996a39145d22aa8054" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1_buffer_1a2a49871341c300996a39145d22aa8054" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classarrow_1_1_buffer_1a4c75902129b5f2fb471fd166907361dc" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1_buffer_1a4c75902129b5f2fb471fd166907361dc" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>capacity_;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classarrow_1_1_buffer_1ad349be0b3ddf33c20e96501ad64e1ff6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1ad349be0b3ddf33c20e96501ad64e1ff6" kindref="member">is_cpu</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_cpu_;<sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classarrow_1_1_buffer_1a8244f9c354364788161f11bedc6f2ab9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1a8244f9c354364788161f11bedc6f2ab9" kindref="member">is_mutable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_mutable_;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classarrow_1_1_buffer_1aee84b1a0d5a0ff5e0f80f9bfcb05ffa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Device&gt;&amp;<sp/><ref refid="classarrow_1_1_buffer_1aee84b1a0d5a0ff5e0f80f9bfcb05ffa2" kindref="member">device</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memory_manager_-&gt;device();<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classarrow_1_1_buffer_1a41cea4c92d66087126036c81221ce7ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MemoryManager&gt;&amp;<sp/><ref refid="classarrow_1_1_buffer_1a41cea4c92d66087126036c81221ce7ea" kindref="member">memory_manager</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memory_manager_;<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classarrow_1_1_buffer_1ac58d818fa0d8a5db215ca858c5e6aece" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_buffer_1ac58d818fa0d8a5db215ca858c5e6aece" kindref="member">parent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent_;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::RandomAccessFile&gt;</ref>&gt;<sp/><ref refid="namespaceparquet_1_1arrow_1a34c9ba927562da578e2c1e5dce3343f0" kindref="member">GetReader</ref>(std::shared_ptr&lt;Buffer&gt;);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;io::OutputStream&gt;</ref>&gt;<sp/>GetWriter(std::shared_ptr&lt;Buffer&gt;);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>Copy(std::shared_ptr&lt;Buffer&gt;<sp/>source,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MemoryManager&gt;&amp;<sp/>to);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>View(std::shared_ptr&lt;Buffer&gt;<sp/>source,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MemoryManager&gt;&amp;<sp/>to);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/>ViewOrCopy(</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MemoryManager&gt;&amp;<sp/>to);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306" refid="classarrow_1_1_buffer_1acfefa777b4d7d6a2f7a8ea23549dac46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1acfefa777b4d7d6a2f7a8ea23549dac46" kindref="member">is_mutable_</ref>;</highlight></codeline>
<codeline lineno="307" refid="classarrow_1_1_buffer_1a5abed4a6cddccc03be462e84034800e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1a5abed4a6cddccc03be462e84034800e9" kindref="member">is_cpu_</ref>;</highlight></codeline>
<codeline lineno="308" refid="classarrow_1_1_buffer_1af468a7a1f346f9a6a29738bf585a3548" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_buffer_1af468a7a1f346f9a6a29738bf585a3548" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="309" refid="classarrow_1_1_buffer_1ad36e306b99bc8427865bcac9b2d4f7e5" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><ref refid="classarrow_1_1_buffer_1ad36e306b99bc8427865bcac9b2d4f7e5" kindref="member">mutable_data_</ref>;</highlight></codeline>
<codeline lineno="310" refid="classarrow_1_1_buffer_1a3500e42217635843b3b34bfe92b2f73a" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1_buffer_1a3500e42217635843b3b34bfe92b2f73a" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="311" refid="classarrow_1_1_buffer_1a45ee7f1e21f9f3f4cb8233be8d64731e" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classarrow_1_1_buffer_1a45ee7f1e21f9f3f4cb8233be8d64731e" kindref="member">capacity_</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>by<sp/>default,<sp/>but<sp/>may<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classarrow_1_1_buffer_1a3feb5a490cbd9699837067931476c65b" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_buffer_1a3feb5a490cbd9699837067931476c65b" kindref="member">parent_</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>so<sp/>that<sp/>subclasses<sp/>are<sp/>forced<sp/>to<sp/>call<sp/>SetMemoryManager()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;MemoryManager&gt;<sp/>memory_manager_;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CheckMutable()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CheckCPU()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classarrow_1_1_buffer_1a515a9dde11cae1363d61f9e42a6ad8f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer_1a515a9dde11cae1363d61f9e42a6ad8f5" kindref="member">SetMemoryManager</ref>(std::shared_ptr&lt;MemoryManager&gt;<sp/>mm)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>memory_manager_<sp/>=<sp/>std::move(mm);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>is_cpu_<sp/>=<sp/>memory_manager_-&gt;is_cpu();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1abad5a6612a34e123346ad35eb4933d80" kindref="member">Buffer</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"></codeline>
<codeline lineno="341"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>SliceBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;Buffer&gt;(buffer,<sp/>offset,<sp/>length);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>SliceBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>int64_t<sp/>length<sp/>=<sp/>buffer-&gt;size()<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliceBuffer(buffer,<sp/>offset,<sp/>length);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="361"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="group__buffer-slicing-functions_1ga44c8f98a2874248eb7d5658ccee5718e" kindref="member">SliceMutableBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>length);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="group__buffer-slicing-functions_1ga44c8f98a2874248eb7d5658ccee5718e" kindref="member">SliceMutableBuffer</ref>(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>int64_t<sp/>length<sp/>=<sp/>buffer-&gt;size()<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__buffer-slicing-functions_1ga44c8f98a2874248eb7d5658ccee5718e" kindref="member">SliceMutableBuffer</ref>(buffer,<sp/>offset,<sp/>length);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"></codeline>
<codeline lineno="378" refid="classarrow_1_1_mutable_buffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_mutable_buffer" kindref="compound">MutableBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380" refid="classarrow_1_1_mutable_buffer_1a541704eb0b7720aa712e294634cf58f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_mutable_buffer_1a541704eb0b7720aa712e294634cf58f9" kindref="member">MutableBuffer</ref>(uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size)<sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(data,<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>mutable_data_<sp/>=<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>is_mutable_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classarrow_1_1_mutable_buffer_1a4c28bbba3f48580174ca90b0042c6746" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_mutable_buffer_1a4c28bbba3f48580174ca90b0042c6746" kindref="member">MutableBuffer</ref>(uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;MemoryManager&gt;<sp/>mm)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(data,<sp/>size,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(mm))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>mutable_data_<sp/>=<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>is_mutable_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="namespaceparquet_1ace3d7b4a3efe54f6aff6b993d50fd139" kindref="member">MutableBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;&amp;<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SizeType<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">64_t&gt;</highlight></codeline>
<codeline lineno="399" refid="classarrow_1_1_mutable_buffer_1ae06e3a980614bc6db4239e337f721b33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="classarrow_1_1_mutable_buffer_1ae06e3a980614bc6db4239e337f721b33" kindref="member">Wrap</ref>(T*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>SizeType<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;MutableBuffer&gt;(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int64_t&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>length));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405" refid="classarrow_1_1_mutable_buffer_1a3b01c712ad660aea1b10a0ad2b232ac7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_mutable_buffer_1a3b01c712ad660aea1b10a0ad2b232ac7" kindref="member">MutableBuffer</ref>()<sp/>:<sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>(<ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="406"><highlight class="normal">};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classarrow_1_1_resizable_buffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_resizable_buffer" kindref="compound">ResizableBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_mutable_buffer" kindref="compound">MutableBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Resize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>new_size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shrink_to_fit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Reserve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>new_capacity)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="428" refid="classarrow_1_1_resizable_buffer_1a2dd63263ee81611a4c43a2da9abfb6ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_resizable_buffer_1a2dd63263ee81611a4c43a2da9abfb6ae" kindref="member">TypedResize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>new_nb_elements,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shrink_to_fit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Resize(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>new_nb_elements,<sp/>shrink_to_fit);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="433" refid="classarrow_1_1_resizable_buffer_1ade214c893245689bc51965c90c4cd739" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1_resizable_buffer_1ade214c893245689bc51965c90c4cd739" kindref="member">TypedReserve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>new_nb_elements)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Reserve(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>new_nb_elements);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="438" refid="classarrow_1_1_resizable_buffer_1a57de64a67003a42d06a4dc9d48c60857" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_resizable_buffer_1a57de64a67003a42d06a4dc9d48c60857" kindref="member">ResizableBuffer</ref>(uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size)<sp/>:<sp/><ref refid="classarrow_1_1_mutable_buffer" kindref="compound">MutableBuffer</ref>(data,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="439" refid="classarrow_1_1_resizable_buffer_1adb1fa222a0cb9c05f53981bea579bcfb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_resizable_buffer_1adb1fa222a0cb9c05f53981bea579bcfb" kindref="member">ResizableBuffer</ref>(uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;MemoryManager&gt;<sp/>mm)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_mutable_buffer" kindref="compound">MutableBuffer</ref>(data,<sp/>size,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(mm))<sp/>{}</highlight></codeline>
<codeline lineno="441"><highlight class="normal">};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"></codeline>
<codeline lineno="451"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Buffer&gt;</ref>&gt;<sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::unique_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gab7eeff2b27bb71cb821a1005d1d0a9be" kindref="member">AllocateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::unique_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;ResizableBuffer&gt;</ref>&gt;<sp/><ref refid="group__buffer-allocation-functions_1gaa44d72e6284de08b2171a710a01de2d6" kindref="member">AllocateResizableBuffer</ref>(</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gaa44d72e6284de08b2171a710a01de2d6" kindref="member">AllocateResizableBuffer</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ResizableBuffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gaa44d72e6284de08b2171a710a01de2d6" kindref="member">AllocateResizableBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::shared_ptr&lt;ResizableBuffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gaa44d72e6284de08b2171a710a01de2d6" kindref="member">AllocateResizableBuffer</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ResizableBuffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1gaa44d72e6284de08b2171a710a01de2d6" kindref="member">AllocateResizableBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>size,<sp/>std::unique_ptr&lt;ResizableBuffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/><ref refid="group__buffer-allocation-functions_1ga4726342b8bd298b7bf05f741076e7527" kindref="member">AllocateBitmap</ref>(int64_t<sp/>length,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1ga4726342b8bd298b7bf05f741076e7527" kindref="member">AllocateBitmap</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>int64_t<sp/>length,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/><ref refid="group__buffer-allocation-functions_1ga4bdacf00a6041fa3825f419698c7c40c" kindref="member">AllocateEmptyBitmap</ref>(int64_t<sp/>length,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1ga4bdacf00a6041fa3825f419698c7c40c" kindref="member">AllocateEmptyBitmap</ref>(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>int64_t<sp/>length,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1ga4bdacf00a6041fa3825f419698c7c40c" kindref="member">AllocateEmptyBitmap</ref>(int64_t<sp/>length,<sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Buffer&gt;</ref>&gt;<sp/><ref refid="group__buffer-allocation-functions_1ga614382b33dc47fa784c7a4b3be2c0f59" kindref="member">ConcatenateBuffers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a26e0360de3fc4b7120b6b50f14a22786" kindref="member">BufferVector</ref>&amp;<sp/>buffers,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="group__buffer-allocation-functions_1ga614382b33dc47fa784c7a4b3be2c0f59" kindref="member">ConcatenateBuffers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a26e0360de3fc4b7120b6b50f14a22786" kindref="member">BufferVector</ref>&amp;<sp/>buffers,<sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/buffer.h"/>
  </compounddef>
</doxygen>
