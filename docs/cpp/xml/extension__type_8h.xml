<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="extension__type_8h" kind="file" language="C++">
    <compoundname>extension_type.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="array_8h" local="yes">arrow/array.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="api_8h" local="yes">/arrow/cpp/src/arrow/api.h</includedby>
    <includedby refid="python_2extension__type_8h" local="yes">/arrow/cpp/src/arrow/python/extension_type.h</includedby>
    <includedby refid="visitor__inline_8h" local="yes">/arrow/cpp/src/arrow/visitor_inline.h</includedby>
    <incdepgraph>
      <node id="7073">
        <label>atomic</label>
      </node>
      <node id="7088">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
      </node>
      <node id="7104">
        <label>limits</label>
      </node>
      <node id="7074">
        <label>cstdint</label>
      </node>
      <node id="7105">
        <label>arrow/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7087" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7106" relation="include">
        </childnode>
        <childnode refid="7107" relation="include">
        </childnode>
        <childnode refid="7086" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7108" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7098">
        <label>endian.h</label>
      </node>
      <node id="7086">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="7087" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7089" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7110">
        <label>arrow/util/functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="7111" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
      </node>
      <node id="7091">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7103">
        <label>cmath</label>
      </node>
      <node id="7102">
        <label>cassert</label>
      </node>
      <node id="7092">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
      </node>
      <node id="7071">
        <label>string</label>
      </node>
      <node id="7109">
        <label>arrow/vendored/string_view.hpp</label>
      </node>
      <node id="7079">
        <label>arrow/compare.h</label>
        <link refid="compare_8h"/>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7093">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="7094" relation="include">
        </childnode>
      </node>
      <node id="7095">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="7086" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7090">
        <label>ostream</label>
      </node>
      <node id="7069">
        <label>/arrow/cpp/src/arrow/extension_type.h</label>
        <link refid="extension__type_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7081">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="7106">
        <label>arrow/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7107" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7097">
        <label>arrow/util/bit_util.h</label>
        <link refid="bit__util_8h"/>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7100" relation="include">
        </childnode>
        <childnode refid="7101" relation="include">
        </childnode>
        <childnode refid="7102" relation="include">
        </childnode>
        <childnode refid="7103" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7087" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7105" relation="include">
        </childnode>
        <childnode refid="7084" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
        <childnode refid="7110" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7089" relation="include">
        </childnode>
        <childnode refid="7108" relation="include">
        </childnode>
        <childnode refid="7112" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7101">
        <label>bitset</label>
      </node>
      <node id="7111">
        <label>tuple</label>
      </node>
      <node id="7078">
        <label>vector</label>
      </node>
      <node id="7085">
        <label>new</label>
      </node>
      <node id="7077">
        <label>utility</label>
      </node>
      <node id="7108">
        <label>arrow/util/string_view.h</label>
        <link refid="string__view_8h"/>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7109" relation="include">
        </childnode>
      </node>
      <node id="7100">
        <label>array</label>
      </node>
      <node id="7096">
        <label>arrow/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7097" relation="include">
        </childnode>
      </node>
      <node id="7107">
        <label>arrow/io/type_fwd.h</label>
        <link refid="io_2type__fwd_8h"/>
      </node>
      <node id="7075">
        <label>iosfwd</label>
      </node>
      <node id="7072">
        <label>arrow/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="7073" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7079" relation="include">
        </childnode>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7096" relation="include">
        </childnode>
        <childnode refid="7097" relation="include">
        </childnode>
        <childnode refid="7092" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7108" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7094">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="7084">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="7085" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7086" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7083">
        <label>climits</label>
      </node>
      <node id="7082">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="7073" relation="include">
        </childnode>
        <childnode refid="7083" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7084" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7092" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7093" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7095" relation="include">
        </childnode>
      </node>
      <node id="7076">
        <label>type_traits</label>
      </node>
      <node id="7099">
        <label>algorithm</label>
      </node>
      <node id="7087">
        <label>cstring</label>
      </node>
      <node id="7089">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7090" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
      </node>
      <node id="7070">
        <label>memory</label>
      </node>
      <node id="7080">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="7074" relation="include">
        </childnode>
      </node>
      <node id="7112">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="7076" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7117">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="7114">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="7115">
        <label>/arrow/cpp/src/arrow/python/extension_type.h</label>
        <link refid="python_2extension__type_8h"/>
      </node>
      <node id="7116">
        <label>/arrow/cpp/src/arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="7117" relation="include">
        </childnode>
        <childnode refid="7118" relation="include">
        </childnode>
      </node>
      <node id="7113">
        <label>/arrow/cpp/src/arrow/extension_type.h</label>
        <link refid="extension__type_8h"/>
        <childnode refid="7114" relation="include">
        </childnode>
        <childnode refid="7115" relation="include">
        </childnode>
        <childnode refid="7116" relation="include">
        </childnode>
      </node>
      <node id="7118">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_extension_type" prot="public">arrow::ExtensionType</innerclass>
    <innerclass refid="classarrow_1_1_extension_array" prot="public">arrow::ExtensionArray</innerclass>
    <innerclass refid="classarrow_1_1_extension_type_registry" prot="public">arrow::ExtensionTypeRegistry</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="array_8h" kindref="compound">arrow/array.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classarrow_1_1_extension_type" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classarrow_1_1_extension_type_1a941594575270b88e4892e73e3ee39e4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44" kindref="member">Type::type</ref><sp/>type_id<sp/>=<sp/><ref refid="structarrow_1_1_type_1a00a041cb19a3be373da8eec7d4bf1f44af62348e1483c0b1a1536853e35588dad" kindref="member">Type::EXTENSION</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classarrow_1_1_extension_type_1aadda8549c7cca187b72a42e8ed280482" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classarrow_1_1_extension_type_1aadda8549c7cca187b72a42e8ed280482" kindref="member">type_name</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;extension&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classarrow_1_1_extension_type_1affa30a5b5993a3e38d8ea27e20253ae1" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_extension_type_1affa30a5b5993a3e38d8ea27e20253ae1" kindref="member">storage_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_type_;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1_data_type_layout" kindref="compound">DataTypeLayout</ref><sp/>layout()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classarrow_1_1_extension_type_1a7db26a19117968f84d607a31b0f49322" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classarrow_1_1_extension_type_1a7db26a19117968f84d607a31b0f49322" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;extension&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>extension_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExtensionEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="namespacearrow_1a7edcc7f88dec3ddcfcd8ccf1882cb833" kindref="member">MakeArray</ref>(std::shared_ptr&lt;ArrayData&gt;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;DataType&gt;</ref>&gt;<sp/>Deserialize(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/>storage_type,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized_data)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Deserialize(std::shared_ptr&lt;DataType&gt;<sp/>storage_type,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>serialized_data,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;DataType&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>Serialize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="classarrow_1_1_extension_type_1a0c5142ee04cd6c089bbf67409f034d65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_type_1a0c5142ee04cd6c089bbf67409f034d65" kindref="member">ExtensionType</ref>(std::shared_ptr&lt;DataType&gt;<sp/>storage_type)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_data_type" kindref="compound">DataType</ref>(<ref refid="structarrow_1_1_type" kindref="compound">Type</ref>::EXTENSION),<sp/>storage_type_(storage_type)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classarrow_1_1_extension_type_1a09fc1e29ec03b24599f24dad5fb9e81f" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="classarrow_1_1_extension_type_1a09fc1e29ec03b24599f24dad5fb9e81f" kindref="member">storage_type_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classarrow_1_1_extension_array" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_array" kindref="compound">Array</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ArrayData&gt;&amp;<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_extension_array" kindref="compound">ExtensionArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Array&gt;&amp;<sp/>storage);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classarrow_1_1_extension_array_1ad093e00eb3e52d7d75c2a5100f12569c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>*<sp/><ref refid="classarrow_1_1_extension_array_1ad093e00eb3e52d7d75c2a5100f12569c" kindref="member">extension_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::checked_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_extension_type" kindref="compound">ExtensionType</ref>*&gt;(data_-&gt;type.get());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classarrow_1_1_extension_array_1a06d9fc02ac63d85369fb9f507bc46913" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="classarrow_1_1_extension_array_1a06d9fc02ac63d85369fb9f507bc46913" kindref="member">storage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ArrayData&gt;&amp;<sp/>data);</highlight></codeline>
<codeline lineno="111" refid="classarrow_1_1_extension_array_1a1850cc499aefd532ea159daff36f8f39" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="classarrow_1_1_extension_array_1a1850cc499aefd532ea159daff36f8f39" kindref="member">storage_</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1_extension_type_registry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_extension_type_registry" kindref="compound">ExtensionTypeRegistry</ref><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ExtensionTypeRegistry&gt;<sp/>GetGlobalRegistry();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1_extension_type_registry" kindref="compound">ExtensionTypeRegistry</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>RegisterType(std::shared_ptr&lt;ExtensionType&gt;<sp/>type)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>UnregisterType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ExtensionType&gt;<sp/>GetType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1aac71528443df3a53855482472db00f9d" kindref="member">RegisterExtensionType</ref>(std::shared_ptr&lt;ExtensionType&gt;<sp/>type);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1ab162fa7ed427af976c48637d541325be" kindref="member">UnregisterExtensionType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="146"><highlight class="normal">std::shared_ptr&lt;ExtensionType&gt;<sp/><ref refid="namespacearrow_1a2fb2b23cadfc295fdafbddb144f695ca" kindref="member">GetExtensionType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a0f613bf6f0e5a50bd9a89c767d8004d1" kindref="member">kExtensionTypeKeyName</ref>[];</highlight></codeline>
<codeline lineno="149"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ac532e4d8906ecf870014f5a4bbb1382c" kindref="member">kExtensionMetadataKeyName</ref>[];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/extension_type.h"/>
  </compounddef>
</doxygen>
