<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="message_8h" kind="file" language="C++">
    <compoundname>message.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes refid="result_8h" local="yes">arrow/result.h</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="serialization__internal_8h" local="yes">/arrow/cpp/src/arrow/flight/serialization_internal.h</includedby>
    <includedby refid="ipc_2api_8h" local="yes">/arrow/cpp/src/arrow/ipc/api.h</includedby>
    <includedby refid="metadata__internal_8h" local="yes">/arrow/cpp/src/arrow/ipc/metadata_internal.h</includedby>
    <includedby refid="arrow_2ipc_2reader_8h" local="yes">/arrow/cpp/src/arrow/ipc/reader.h</includedby>
    <includedby refid="arrow_2ipc_2writer_8h" local="yes">/arrow/cpp/src/arrow/ipc/writer.h</includedby>
    <incdepgraph>
      <node id="8481">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8477" relation="include">
        </childnode>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8482" relation="include">
        </childnode>
      </node>
      <node id="8471">
        <label>cstdint</label>
      </node>
      <node id="8470">
        <label>/arrow/cpp/src/arrow/ipc/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="8471" relation="include">
        </childnode>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8475" relation="include">
        </childnode>
        <childnode refid="8478" relation="include">
        </childnode>
        <childnode refid="8486" relation="include">
        </childnode>
        <childnode refid="8482" relation="include">
        </childnode>
        <childnode refid="8485" relation="include">
        </childnode>
      </node>
      <node id="8478">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="8479" relation="include">
        </childnode>
        <childnode refid="8480" relation="include">
        </childnode>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8481" relation="include">
        </childnode>
        <childnode refid="8482" relation="include">
        </childnode>
        <childnode refid="8483" relation="include">
        </childnode>
        <childnode refid="8485" relation="include">
        </childnode>
      </node>
      <node id="8486">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8487" relation="include">
        </childnode>
        <childnode refid="8482" relation="include">
        </childnode>
        <childnode refid="8485" relation="include">
        </childnode>
      </node>
      <node id="8473">
        <label>string</label>
      </node>
      <node id="8484">
        <label>ostream</label>
      </node>
      <node id="8485">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="8487">
        <label>vector</label>
      </node>
      <node id="8476">
        <label>new</label>
      </node>
      <node id="8474">
        <label>utility</label>
      </node>
      <node id="8480">
        <label>iosfwd</label>
      </node>
      <node id="8475">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="8476" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8477" relation="include">
        </childnode>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8478" relation="include">
        </childnode>
        <childnode refid="8481" relation="include">
        </childnode>
      </node>
      <node id="8477">
        <label>type_traits</label>
      </node>
      <node id="8479">
        <label>cstring</label>
      </node>
      <node id="8483">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8484" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8485" relation="include">
        </childnode>
      </node>
      <node id="8472">
        <label>memory</label>
      </node>
      <node id="8482">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="8471" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8488">
        <label>/arrow/cpp/src/arrow/ipc/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="8489" relation="include">
        </childnode>
        <childnode refid="8490" relation="include">
        </childnode>
        <childnode refid="8491" relation="include">
        </childnode>
        <childnode refid="8492" relation="include">
        </childnode>
        <childnode refid="8497" relation="include">
        </childnode>
      </node>
      <node id="8495">
        <label>/arrow/cpp/src/arrow/python/flight.h</label>
        <link refid="flight_8h"/>
      </node>
      <node id="8491">
        <label>/arrow/cpp/src/arrow/ipc/metadata_internal.h</label>
        <link refid="metadata__internal_8h"/>
      </node>
      <node id="8496">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="8494">
        <label>/arrow/cpp/src/arrow/flight/api.h</label>
        <link refid="flight_2api_8h"/>
        <childnode refid="8495" relation="include">
        </childnode>
      </node>
      <node id="8497">
        <label>/arrow/cpp/src/arrow/ipc/writer.h</label>
        <link refid="arrow_2ipc_2writer_8h"/>
        <childnode refid="8493" relation="include">
        </childnode>
        <childnode refid="8498" relation="include">
        </childnode>
        <childnode refid="8490" relation="include">
        </childnode>
      </node>
      <node id="8490">
        <label>/arrow/cpp/src/arrow/ipc/api.h</label>
        <link refid="ipc_2api_8h"/>
      </node>
      <node id="8492">
        <label>/arrow/cpp/src/arrow/ipc/reader.h</label>
        <link refid="arrow_2ipc_2reader_8h"/>
        <childnode refid="8493" relation="include">
        </childnode>
        <childnode refid="8490" relation="include">
        </childnode>
      </node>
      <node id="8489">
        <label>/arrow/cpp/src/arrow/flight/serialization_internal.h</label>
        <link refid="serialization__internal_8h"/>
      </node>
      <node id="8500">
        <label>/arrow/cpp/src/arrow/flight/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="8494" relation="include">
        </childnode>
        <childnode refid="8496" relation="include">
        </childnode>
      </node>
      <node id="8499">
        <label>/arrow/cpp/src/arrow/flight/internal.h</label>
        <link refid="internal_8h_source"/>
        <childnode refid="8489" relation="include">
        </childnode>
      </node>
      <node id="8493">
        <label>/arrow/cpp/src/arrow/flight/client.h</label>
        <link refid="arrow_2flight_2client_8h"/>
        <childnode refid="8494" relation="include">
        </childnode>
        <childnode refid="8496" relation="include">
        </childnode>
      </node>
      <node id="8498">
        <label>/arrow/cpp/src/arrow/flight/types.h</label>
        <link refid="arrow_2flight_2types_8h"/>
        <childnode refid="8494" relation="include">
        </childnode>
        <childnode refid="8493" relation="include">
        </childnode>
        <childnode refid="8499" relation="include">
        </childnode>
        <childnode refid="8496" relation="include">
        </childnode>
        <childnode refid="8489" relation="include">
        </childnode>
        <childnode refid="8500" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1ipc_1_1_message" prot="public">arrow::ipc::Message</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_message_decoder_listener" prot="public">arrow::ipc::MessageDecoderListener</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" prot="public">arrow::ipc::AssignMessageDecoderListener</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_message_decoder" prot="public">arrow::ipc::MessageDecoder</innerclass>
    <innerclass refid="classarrow_1_1ipc_1_1_message_reader" prot="public">arrow::ipc::MessageReader</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1io">arrow::io</innernamespace>
    <innernamespace refid="namespacearrow_1_1ipc">arrow::ipc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>object<sp/>model<sp/>and<sp/>user<sp/>API<sp/>for<sp/>interprocess<sp/>schema<sp/>messaging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="result_8h" kindref="compound">arrow/result.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileInterface;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputStream;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OutputStream;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RandomAccessFile;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IpcWriteOptions;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">MetadataVersion</ref><sp/>:<sp/>char<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77ab4daca084ad9eabfc8de231929477ed6" kindref="member">V1</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77aec765f1adc3b4253f2d3b131a4a8618f" kindref="member">V2</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77ad5b50b8cf96bcc8aba90f306f5e6189c" kindref="member">V3</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77ab354cab57768c7d4c1106eb4e82c75dc" kindref="member">V4</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>interface<sp/>classes.<sp/>We<sp/>do<sp/>not<sp/>fully<sp/>deserialize<sp/>the<sp/>flatbuffers<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>individual<sp/>fields<sp/>metadata<sp/>can<sp/>be<sp/>retrieved<sp/>from<sp/>very<sp/>large<sp/>schema<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classarrow_1_1ipc_1_1_message" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70" refid="classarrow_1_1ipc_1_1_message_1a6d6973b3b03de50d7be9dbab4db910db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message_1a6d6973b3b03de50d7be9dbab4db910db" kindref="member">Type</ref><sp/>{<sp/>NONE,<sp/>SCHEMA,<sp/>DICTIONARY_BATCH,<sp/>RECORD_BATCH,<sp/>TENSOR,<sp/>SPARSE_TENSOR<sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>(std::shared_ptr&lt;Buffer&gt;<sp/>metadata,<sp/>std::shared_ptr&lt;Buffer&gt;<sp/>body);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>~<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/>Open(std::shared_ptr&lt;Buffer&gt;<sp/>metadata,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>body);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88" refid="classarrow_1_1ipc_1_1_message_1ac5355af471fa5305790e959fe369f8cb" refkind="member"><highlight class="normal"><sp/><sp/>static<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Open(const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::shared_ptr&lt;<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&gt;&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::shared_ptr&lt;<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&gt;&amp;<sp/>body,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unique_ptr&lt;<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Open(metadata,<sp/>body).<ref refid="classarrow_1_1_result_1a4ba6599a83fc659b24e4336eb06b9ae4" kindref="member">Value</ref>(out);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/>ReadFrom(std::shared_ptr&lt;Buffer&gt;<sp/>metadata,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103" refid="classarrow_1_1ipc_1_1_message_1aafbce3ffcae83275e5f002d40de1b983" refkind="member"><highlight class="normal"><sp/><sp/>static<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadFrom(<ref refid="namespacestd" kindref="compound">std</ref>::shared_ptr&lt;<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&gt;<sp/>metadata,<sp/>io::InputStream*<sp/>stream,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::unique_ptr&lt;<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadFrom(std::move(metadata),<sp/>stream).<ref refid="classarrow_1_1_result_1a4ba6599a83fc659b24e4336eb06b9ae4" kindref="member">Value</ref>(out);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/>ReadFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>metadata,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121" refid="classarrow_1_1ipc_1_1_message_1a1120921c127a835c9c60e5871e58e8a0" refkind="member"><highlight class="normal"><sp/><sp/>static<sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadFrom(const<sp/>int64_t<sp/>offset,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::shared_ptr&lt;<ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&gt;<sp/>metadata,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io::RandomAccessFile*<sp/>file,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unique_ptr&lt;<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&gt;*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadFrom(offset,<sp/>std::move(metadata),<sp/>file).<ref refid="classarrow_1_1_result_1a4ba6599a83fc659b24e4336eb06b9ae4" kindref="member">Value</ref>(out);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/>custom_metadata()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>body()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>int64_t<sp/>body_length()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_1a6d6973b3b03de50d7be9dbab4db910db" kindref="member">Type</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1_1ipc_1aa5d7ec68a8c707271bab98af9bc0ac77" kindref="member">MetadataVersion</ref><sp/>metadata_version()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>header()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SerializeTo(<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref>*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_write_options" kindref="compound">IpcWriteOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>output_length)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Verify()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classarrow_1_1ipc_1_1_message_1a9656083cd5545252733857995aacf9ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message_1a9656083cd5545252733857995aacf9ae" kindref="member">HasBody</ref>(<ref refid="classarrow_1_1ipc_1_1_message_1a6d6973b3b03de50d7be9dbab4db910db" kindref="member">Type</ref><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>!=<sp/>NONE<sp/>&amp;&amp;<sp/>type<sp/>!=<sp/>SCHEMA;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>serialization<sp/>details<sp/>from<sp/>user<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MessageImpl;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;MessageImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">ARROW_EXPORT<sp/>std::string<sp/><ref refid="namespacearrow_1_1ipc_1a145c8c6c849532881aef6580d5b0c7f0" kindref="member">FormatMessageType</ref>(<ref refid="classarrow_1_1ipc_1_1_message_1a6d6973b3b03de50d7be9dbab4db910db" kindref="member">Message::Type</ref><sp/>type);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classarrow_1_1ipc_1_1_message_decoder_listener" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_listener" kindref="compound">MessageDecoderListener</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_message_decoder_listener" kindref="compound">MessageDecoderListener</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnMessageDecoded(std::unique_ptr&lt;Message&gt;<sp/>message)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnInitial();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnMetadataLength();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnMetadata();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnBody();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>OnEOS();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" kindref="compound">AssignMessageDecoderListener</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_listener" kindref="compound">MessageDecoderListener</ref><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256" refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a2bef6776103871664ffa2a84dc584728" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1a2bef6776103871664ffa2a84dc584728" kindref="member">AssignMessageDecoderListener</ref>(std::unique_ptr&lt;Message&gt;*<sp/>message)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>message_(message)<sp/>{}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" kindref="compound">AssignMessageDecoderListener</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1af9c204e1a659852102a0226147ab3f4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener_1af9c204e1a659852102a0226147ab3f4b" kindref="member">OnMessageDecoded</ref>(std::unique_ptr&lt;Message&gt;<sp/>message)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>*message_<sp/>=<sp/>std::move(message);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Message&gt;*<sp/>message_;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1ipc_1_1_assign_message_decoder_listener" kindref="compound">AssignMessageDecoderListener</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classarrow_1_1ipc_1_1_message_decoder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568" kindref="member">State</ref><sp/>{</highlight></codeline>
<codeline lineno="288" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a6dccfabf35e614745d646f3136f7f1ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a6dccfabf35e614745d646f3136f7f1ff" kindref="member">INITIAL</ref>,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568aa3b1e341626d50ca9a798fd1d4c923f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568aa3b1e341626d50ca9a798fd1d4c923f0" kindref="member">METADATA_LENGTH</ref>,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a1780f10f11d6461b1b5565bbb971d268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a1780f10f11d6461b1b5565bbb971d268" kindref="member">METADATA</ref>,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a3eff69ea1da7b0b4e2472499baee6932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a3eff69ea1da7b0b4e2472499baee6932" kindref="member">BODY</ref>,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a4bec84c31939999ba2b77e27d8f17d1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568a4bec84c31939999ba2b77e27d8f17d1c" kindref="member">EOS</ref>,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>(std::shared_ptr&lt;MessageDecoderListener&gt;<sp/>listener,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>(std::shared_ptr&lt;MessageDecoderListener&gt;<sp/>listener,<sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568" kindref="member">State</ref><sp/>initial_state,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>initial_next_required_size,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Consume(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="namespacemake__precompiled__bitcode_1a4be8fd83a685b255381089b8c3ecb5a0" kindref="member">data</ref>,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Consume(std::shared_ptr&lt;Buffer&gt;<sp/>buffer);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>int64_t<sp/>next_required_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1ipc_1_1_message_decoder_1a93f7666b3e1fed436c447a42f13ee568" kindref="member">State</ref><sp/>state()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MessageDecoderImpl;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;MessageDecoderImpl&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classarrow_1_1ipc_1_1_message_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1ipc_1_1_message_reader" kindref="compound">MessageReader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;MessageReader&gt;<sp/>Open(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;MessageReader&gt;<sp/>Open(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;io::InputStream&gt;&amp;<sp/>owned_stream);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/>ReadNextMessage()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="484" refid="classarrow_1_1ipc_1_1_message_reader_1a2afa836e40d0eb155759860dddd177eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadNextMessage(<ref refid="namespacestd" kindref="compound">std</ref>::unique_ptr&lt;<ref refid="classarrow_1_1ipc_1_1_message" kindref="compound">Message</ref>&gt;*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadNextMessage().Value(message);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal">};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a9cb8d4170270e9d596778268686585c8" kindref="member">ReadMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>metadata_length,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1ad20823257a9d5ff67cd9510c2adf57fd" kindref="member">AlignStream</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,<sp/>int32_t<sp/>alignment<sp/>=<sp/>8);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1ad20823257a9d5ff67cd9510c2adf57fd" kindref="member">AlignStream</ref>(<ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref>*<sp/>stream,<sp/>int32_t<sp/>alignment<sp/>=<sp/>8);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a88a35d513cfca55bff3228dbed860c17" kindref="member">CheckAligned</ref>(<ref refid="classarrow_1_1io_1_1_file_interface" kindref="compound">io::FileInterface</ref>*<sp/>stream,<sp/>int32_t<sp/>alignment<sp/>=<sp/>8);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::unique_ptr&lt;Message&gt;</ref>&gt;<sp/><ref refid="namespacearrow_1_1ipc_1a9cb8d4170270e9d596778268686585c8" kindref="member">ReadMessage</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a8aee21fb6d1922ed95d9efc9c3e4378f" kindref="member">DecodeMessage</ref>(<ref refid="classarrow_1_1ipc_1_1_message_decoder" kindref="compound">MessageDecoder</ref>*<sp/>decoder,<sp/><ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a119c0254fe92d2ac087e7aa9200ed525" kindref="member">WriteMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1ipc_1_1_ipc_write_options" kindref="compound">IpcWriteOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_output_stream" kindref="compound">io::OutputStream</ref>*<sp/>file,<sp/>int32_t*<sp/>message_length);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deprecated<sp/>APIs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a9cb8d4170270e9d596778268686585c8" kindref="member">ReadMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>metadata_length,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1io_1_1_random_access_file" kindref="compound">io::RandomAccessFile</ref>*<sp/>file,<sp/>std::unique_ptr&lt;Message&gt;*<sp/>message);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Deprecated<sp/>in<sp/>0.17.0.<sp/>Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespacearrow_1_1ipc_1a9cb8d4170270e9d596778268686585c8" kindref="member">ReadMessage</ref>(<ref refid="classarrow_1_1io_1_1_input_stream" kindref="compound">io::InputStream</ref>*<sp/>stream,<sp/>std::unique_ptr&lt;Message&gt;*<sp/>message);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ipc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/ipc/message.h"/>
  </compounddef>
</doxygen>
