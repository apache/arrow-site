<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="table_8h" kind="file" language="C++">
    <compoundname>table.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="record__batch_8h" local="yes">arrow/record_batch.h</includes>
    <includes refid="type_8h" local="yes">arrow/type.h</includes>
    <includes refid="type__fwd_8h" local="yes">arrow/type_fwd.h</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="api_8h" local="yes">/arrow/cpp/src/arrow/api.h</includedby>
    <includedby refid="kernel_8h" local="yes">/arrow/cpp/src/arrow/compute/kernel.h</includedby>
    <includedby refid="arrow_2pch_8h" local="yes">/arrow/cpp/src/arrow/pch.h</includedby>
    <includedby refid="stl_8h" local="yes">/arrow/cpp/src/arrow/stl.h</includedby>
    <incdepgraph>
      <node id="11340">
        <label>atomic</label>
      </node>
      <node id="11333">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11329" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
      </node>
      <node id="11321">
        <label>cstdint</label>
      </node>
      <node id="11330">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="11331" relation="include">
        </childnode>
        <childnode refid="11332" relation="include">
        </childnode>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11333" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
        <childnode refid="11335" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11338">
        <label>arrow/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11325" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11342">
        <label>arrow/util/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11329" relation="include">
        </childnode>
      </node>
      <node id="11323">
        <label>string</label>
      </node>
      <node id="11343">
        <label>arrow/util/variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="11344" relation="include">
        </childnode>
      </node>
      <node id="11320">
        <label>/arrow/cpp/src/arrow/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="11321" relation="include">
        </childnode>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11325" relation="include">
        </childnode>
        <childnode refid="11326" relation="include">
        </childnode>
        <childnode refid="11339" relation="include">
        </childnode>
        <childnode refid="11338" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11345">
        <label>arrow/visitor.h</label>
        <link refid="visitor_8h"/>
        <childnode refid="11330" relation="include">
        </childnode>
        <childnode refid="11338" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11336">
        <label>ostream</label>
      </node>
      <node id="11337">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="11325">
        <label>vector</label>
      </node>
      <node id="11328">
        <label>new</label>
      </node>
      <node id="11324">
        <label>utility</label>
      </node>
      <node id="11326">
        <label>arrow/record_batch.h</label>
        <link refid="record__batch_8h"/>
        <childnode refid="11321" relation="include">
        </childnode>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11325" relation="include">
        </childnode>
        <childnode refid="11327" relation="include">
        </childnode>
        <childnode refid="11330" relation="include">
        </childnode>
        <childnode refid="11338" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11332">
        <label>iosfwd</label>
      </node>
      <node id="11344">
        <label>arrow/vendored/variant.hpp</label>
      </node>
      <node id="11327">
        <label>arrow/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="11328" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11329" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11330" relation="include">
        </childnode>
        <childnode refid="11333" relation="include">
        </childnode>
      </node>
      <node id="11341">
        <label>climits</label>
      </node>
      <node id="11339">
        <label>arrow/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="11340" relation="include">
        </childnode>
        <childnode refid="11341" relation="include">
        </childnode>
        <childnode refid="11321" relation="include">
        </childnode>
        <childnode refid="11332" relation="include">
        </childnode>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11325" relation="include">
        </childnode>
        <childnode refid="11327" relation="include">
        </childnode>
        <childnode refid="11338" relation="include">
        </childnode>
        <childnode refid="11342" relation="include">
        </childnode>
        <childnode refid="11334" relation="include">
        </childnode>
        <childnode refid="11343" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
        <childnode refid="11345" relation="include">
        </childnode>
      </node>
      <node id="11329">
        <label>type_traits</label>
      </node>
      <node id="11331">
        <label>cstring</label>
      </node>
      <node id="11335">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="11322" relation="include">
        </childnode>
        <childnode refid="11336" relation="include">
        </childnode>
        <childnode refid="11323" relation="include">
        </childnode>
        <childnode refid="11324" relation="include">
        </childnode>
        <childnode refid="11337" relation="include">
        </childnode>
      </node>
      <node id="11322">
        <label>memory</label>
      </node>
      <node id="11334">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="11321" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11363">
        <label>/arrow/cpp/src/arrow/compute/kernels/filter.h</label>
        <link refid="arrow_2compute_2kernels_2filter_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11368">
        <label>/arrow/cpp/src/arrow/compute/kernels/sort_to_indices.h</label>
        <link refid="sort__to__indices_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11352">
        <label>/arrow/cpp/src/arrow/compute/kernels/aggregate.h</label>
        <link refid="aggregate_8h"/>
        <childnode refid="11353" relation="include">
        </childnode>
      </node>
      <node id="11375">
        <label>/arrow/cpp/src/gandiva/pch.h</label>
        <link refid="gandiva_2pch_8h"/>
      </node>
      <node id="11353">
        <label>/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</label>
        <link refid="sum__internal_8h"/>
      </node>
      <node id="11369">
        <label>/arrow/cpp/src/arrow/compute/kernels/take.h</label>
        <link refid="take_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11357">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="11358" relation="include">
        </childnode>
        <childnode refid="11359" relation="include">
        </childnode>
      </node>
      <node id="11373">
        <label>/arrow/cpp/src/arrow/flight/pch.h</label>
        <link refid="arrow_2flight_2pch_8h"/>
      </node>
      <node id="11347">
        <label>/arrow/cpp/src/arrow/api.h</label>
        <link refid="api_8h"/>
      </node>
      <node id="11361">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="11356" relation="include">
        </childnode>
      </node>
      <node id="11346">
        <label>/arrow/cpp/src/arrow/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="11347" relation="include">
        </childnode>
        <childnode refid="11348" relation="include">
        </childnode>
        <childnode refid="11371" relation="include">
        </childnode>
        <childnode refid="11350" relation="include">
        </childnode>
      </node>
      <node id="11351">
        <label>/arrow/cpp/src/arrow/compute/kernels/add.h</label>
        <link refid="add_8h"/>
      </node>
      <node id="11371">
        <label>/arrow/cpp/src/arrow/pch.h</label>
        <link refid="arrow_2pch_8h"/>
        <childnode refid="11372" relation="include">
        </childnode>
        <childnode refid="11373" relation="include">
        </childnode>
        <childnode refid="11374" relation="include">
        </childnode>
        <childnode refid="11375" relation="include">
        </childnode>
      </node>
      <node id="11366">
        <label>/arrow/cpp/src/arrow/compute/kernels/match.h</label>
        <link refid="match_8h"/>
      </node>
      <node id="11374">
        <label>/arrow/cpp/src/arrow/python/pch.h</label>
        <link refid="arrow_2python_2pch_8h"/>
      </node>
      <node id="11367">
        <label>/arrow/cpp/src/arrow/compute/kernels/nth_to_indices.h</label>
        <link refid="nth__to__indices_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11359">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="11356" relation="include">
        </childnode>
        <childnode refid="11360" relation="include">
        </childnode>
        <childnode refid="11361" relation="include">
        </childnode>
      </node>
      <node id="11358">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="11356" relation="include">
        </childnode>
      </node>
      <node id="11365">
        <label>/arrow/cpp/src/arrow/compute/kernels/isin.h</label>
        <link refid="isin_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11349">
        <label>/arrow/cpp/src/arrow/compute/api.h</label>
        <link refid="compute_2api_8h"/>
        <childnode refid="11350" relation="include">
        </childnode>
      </node>
      <node id="11362">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="11348">
        <label>/arrow/cpp/src/arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
        <childnode refid="11351" relation="include">
        </childnode>
        <childnode refid="11352" relation="include">
        </childnode>
        <childnode refid="11354" relation="include">
        </childnode>
        <childnode refid="11363" relation="include">
        </childnode>
        <childnode refid="11364" relation="include">
        </childnode>
        <childnode refid="11365" relation="include">
        </childnode>
        <childnode refid="11366" relation="include">
        </childnode>
        <childnode refid="11367" relation="include">
        </childnode>
        <childnode refid="11368" relation="include">
        </childnode>
        <childnode refid="11353" relation="include">
        </childnode>
        <childnode refid="11369" relation="include">
        </childnode>
        <childnode refid="11370" relation="include">
        </childnode>
        <childnode refid="11355" relation="include">
        </childnode>
      </node>
      <node id="11360">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="11356" relation="include">
        </childnode>
      </node>
      <node id="11370">
        <label>/arrow/cpp/src/arrow/compute/kernels/util_internal.h</label>
        <link refid="compute_2kernels_2util__internal_8h"/>
      </node>
      <node id="11354">
        <label>/arrow/cpp/src/arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
        <childnode refid="11355" relation="include">
        </childnode>
      </node>
      <node id="11355">
        <label>/arrow/cpp/src/arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="11356" relation="include">
        </childnode>
        <childnode refid="11357" relation="include">
        </childnode>
        <childnode refid="11362" relation="include">
        </childnode>
      </node>
      <node id="11364">
        <label>/arrow/cpp/src/arrow/compute/kernels/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="11349" relation="include">
        </childnode>
      </node>
      <node id="11372">
        <label>/arrow/cpp/src/arrow/dataset/pch.h</label>
        <link refid="arrow_2dataset_2pch_8h"/>
      </node>
      <node id="11350">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
      <node id="11356">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_chunked_array" prot="public">arrow::ChunkedArray</innerclass>
    <innerclass refid="classarrow_1_1_table" prot="public">arrow::Table</innerclass>
    <innerclass refid="classarrow_1_1_table_batch_reader" prot="public">arrow::TableBatchReader</innerclass>
    <innerclass refid="structarrow_1_1_concatenate_tables_options" prot="public">arrow::ConcatenateTablesOptions</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="record__batch_8h" kindref="compound">arrow/record_batch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">arrow/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__fwd_8h" kindref="compound">arrow/type_fwd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classarrow_1_1_chunked_array" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>(<ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref><sp/>chunks);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__concat-tables_1ga2d66448b2733e29fe02d6334defa7e47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="group__concat-tables_1ga2d66448b2733e29fe02d6334defa7e47" kindref="member">ChunkedArray</ref>(std::shared_ptr&lt;Array&gt;<sp/>chunk)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>(<ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref>{std::move(chunk)})<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>(<ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref><sp/>chunks,<sp/>std::shared_ptr&lt;DataType&gt;<sp/>type);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__concat-tables_1ga4df41bf1a05cd1083a2c4502e0a85f87" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga4df41bf1a05cd1083a2c4502e0a85f87" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length_;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__concat-tables_1ga962541b044ac5a7a6a87499cef7957bb" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga962541b044ac5a7a6a87499cef7957bb" kindref="member">null_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null_count_;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__concat-tables_1gafa477fd2e9a3ce9131d9d7f4391de52b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__concat-tables_1gafa477fd2e9a3ce9131d9d7f4391de52b" kindref="member">num_chunks</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(chunks_.size());<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__concat-tables_1ga92ec02f5904ac3e4dac5328e44ebf0fb" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/><ref refid="group__concat-tables_1ga92ec02f5904ac3e4dac5328e44ebf0fb" kindref="member">chunk</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chunks_[i];<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__concat-tables_1gaf53b92e2594cbe9d84710256e295586a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref>&amp;<sp/><ref refid="group__concat-tables_1gaf53b92e2594cbe9d84710256e295586a" kindref="member">chunks</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chunks_;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>Slice(int64_t<sp/>offset,<sp/>int64_t<sp/>length)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>Slice(int64_t<sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::vector&lt;std::shared_ptr&lt;ChunkedArray&gt;</ref>&gt;&gt;<sp/>Flatten(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Flatten(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>std::vector&lt;std::shared_ptr&lt;ChunkedArray&gt;&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;ChunkedArray&gt;</ref>&gt;<sp/>View(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>View(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DataType&gt;&amp;<sp/>type,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__concat-tables_1gadb15afa228802d9fab0f3993a4f82df2" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="group__concat-tables_1gadb15afa228802d9fab0f3993a4f82df2" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ChunkedArray&gt;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Validate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ValidateFull()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132" refid="group__concat-tables_1ga438707b92386f68a63348c30743bc159" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1ad77c54b51dac02d857f3a26d11ed58b3" kindref="member">ArrayVector</ref><sp/><ref refid="group__concat-tables_1ga438707b92386f68a63348c30743bc159" kindref="member">chunks_</ref>;</highlight></codeline>
<codeline lineno="133" refid="group__concat-tables_1ga4d2fc435340a18c488a3001ce88018c4" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga4d2fc435340a18c488a3001ce88018c4" kindref="member">length_</ref>;</highlight></codeline>
<codeline lineno="134" refid="group__concat-tables_1ga45ef30e6a7823f1666b0f50ecde903a7" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga45ef30e6a7823f1666b0f50ecde903a7" kindref="member">null_count_</ref>;</highlight></codeline>
<codeline lineno="135" refid="group__concat-tables_1ga42911a6e758dd14bcc47a2108eed7bd0" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataType&gt;<sp/><ref refid="group__concat-tables_1ga42911a6e758dd14bcc47a2108eed7bd0" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>MultipleChunkIterator<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>MultipleChunkIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>left_(left),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_(right),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_(0),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_(left.length()),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_idx_left_(0),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_idx_right_(0),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_pos_left_(0),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_pos_right_(0)<sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Next(std::shared_ptr&lt;Array&gt;*<sp/>next_left,<sp/>std::shared_ptr&lt;Array&gt;*<sp/>next_right);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>int64_t<sp/>position()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>left_;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>right_;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>of<sp/>the<sp/>entire<sp/>ChunkedArray<sp/>consumed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>int64_t<sp/>pos_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>the<sp/>chunked<sp/>array(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>int64_t<sp/>length_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>left<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_idx_left_;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>right<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_idx_right_;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>into<sp/>the<sp/>current<sp/>left<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>int64_t<sp/>chunk_pos_left_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>into<sp/>the<sp/>current<sp/>right<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>int64_t<sp/>chunk_pos_right_;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ApplyBinaryChunked(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_chunked_array" kindref="compound">ChunkedArray</ref>&amp;<sp/>right,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Action&amp;&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>MultipleChunkIterator<sp/>iterator(left,<sp/>right);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Array&gt;<sp/>left_piece,<sp/>right_piece;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iterator.Next(&amp;left_piece,<sp/>&amp;right_piece))<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(action(*left_piece,<sp/>*right_piece,<sp/>iterator.position()));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classarrow_1_1_table" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_table" kindref="compound">Table</ref><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classarrow_1_1_table" kindref="compound">Table</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Table&gt;<sp/>Make(std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;ChunkedArray&gt;&gt;<sp/>columns,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>num_rows<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Table&gt;<sp/>Make(std::shared_ptr&lt;Schema&gt;<sp/>schema,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Array&gt;&gt;&amp;<sp/>arrays,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>num_rows<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>FromRecordBatches(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;&amp;<sp/>batches);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FromRecordBatches(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;&amp;<sp/>batches,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>table);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>FromRecordBatches(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;&amp;<sp/>batches);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FromRecordBatches(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>schema,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;RecordBatch&gt;&gt;&amp;<sp/>batches,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>table);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>FromChunkedStructArray(</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ChunkedArray&gt;&amp;<sp/>array);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>FromChunkedStructArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ChunkedArray&gt;&amp;<sp/>array,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>table);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group__concat-tables_1ga8d8626acf4d00e2ac439c4f1cc7a054a" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__concat-tables_1ga8d8626acf4d00e2ac439c4f1cc7a054a" kindref="member">schema</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_;<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>column(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;ChunkedArray&gt;&gt;<sp/>columns()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__concat-tables_1gad9df57298bb216a45d106d77ffa06def" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Field&gt;<sp/><ref refid="group__concat-tables_1gad9df57298bb216a45d106d77ffa06def" kindref="member">field</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_-&gt;field(i);<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Field&gt;&gt;<sp/>fields()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Table&gt;<sp/>Slice(int64_t<sp/>offset,<sp/>int64_t<sp/>length)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group__concat-tables_1ga3948de704790a778f8568f22e08bca55" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Table&gt;<sp/><ref refid="group__concat-tables_1ga3948de704790a778f8568f22e08bca55" kindref="member">Slice</ref>(int64_t<sp/>offset)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__concat-tables_1ga3948de704790a778f8568f22e08bca55" kindref="member">Slice</ref>(offset,<sp/>num_rows_);<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__concat-tables_1gacb02268cc5b63206615c88f26194b88c" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/><ref refid="group__concat-tables_1gacb02268cc5b63206615c88f26194b88c" kindref="member">GetColumnByName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>schema_-&gt;GetFieldIndex(name);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>-1<sp/>?<sp/><ref refid="macros_8h_1a3ef7eab8cd0e570b6586628cc9d5ccab" kindref="member">NULLPTR</ref><sp/>:<sp/>column(i);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>RemoveColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>RemoveColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>AddColumn(</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>std::shared_ptr&lt;Field&gt;<sp/>field_arg,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>column)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>AddColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>std::shared_ptr&lt;Field&gt;<sp/>field_arg,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>column,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>SetColumn(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>std::shared_ptr&lt;Field&gt;<sp/>field_arg,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>column)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>SetColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>std::shared_ptr&lt;Field&gt;<sp/>field_arg,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ChunkedArray&gt;<sp/>column,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>ColumnNames()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>RenameColumns(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>RenameColumns(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Table&gt;<sp/>ReplaceSchemaMetadata(</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>KeyValueMetadata&gt;&amp;<sp/>metadata)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>Flatten(</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Flatten(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacearrow_1_1fs_1aae09319856c842fc30e6760f0ccb407a" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Validate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ValidateFull()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="group__concat-tables_1gabe71e003123973cdff9cfca40dc85e04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__concat-tables_1gabe71e003123973cdff9cfca40dc85e04" kindref="member">num_columns</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schema_-&gt;num_fields();<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="group__concat-tables_1ga14665d44a57c45343b54c7997d5c92e5" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga14665d44a57c45343b54c7997d5c92e5" kindref="member">num_rows</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_rows_;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_table" kindref="compound">Table</ref>&amp;<sp/>other,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_metadata<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/>CombineChunks(</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1aa2ec0a506575823661e32d0be213b070" kindref="member">ARROW_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>Result-returning<sp/>version&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>CombineChunks(<ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool,<sp/>std::shared_ptr&lt;Table&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_table" kindref="compound">Table</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="group__concat-tables_1ga40375f7767ae6caea748d87e53aacb45" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__concat-tables_1ga40375f7767ae6caea748d87e53aacb45" kindref="member">schema_</ref>;</highlight></codeline>
<codeline lineno="421" refid="group__concat-tables_1ga7b7b895c038e468dac1be8d27722ffa6" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="group__concat-tables_1ga7b7b895c038e468dac1be8d27722ffa6" kindref="member">num_rows_</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="macros_8h_1a40d72e185b1488b5659b761f0b6115bb" kindref="member">ARROW_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classarrow_1_1_table" kindref="compound">Table</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="classarrow_1_1_table_batch_reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_table_batch_reader" kindref="compound">TableBatchReader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_record_batch_reader" kindref="compound">RecordBatchReader</ref><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_table_batch_reader" kindref="compound">TableBatchReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_table" kindref="compound">Table</ref>&amp;<sp/>table);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>ReadNext(std::shared_ptr&lt;RecordBatch&gt;*<sp/>out)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_chunksize(int64_t<sp/>chunksize);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_table" kindref="compound">Table</ref>&amp;<sp/>table_;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>std::vector&lt;ChunkedArray*&gt;<sp/>column_data_;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>chunk_numbers_;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>chunk_offsets_;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>int64_t<sp/>absolute_row_position_;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>int64_t<sp/>max_chunksize_;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"></codeline>
<codeline lineno="461" refid="structarrow_1_1_concatenate_tables_options" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="structarrow_1_1_concatenate_tables_options" kindref="compound">ConcatenateTablesOptions</ref><sp/>{</highlight></codeline>
<codeline lineno="467" refid="group__concat-tables_1gac7c26f51a3023e3bc2eb6ae5a4510a9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unify_schemas<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="group__concat-tables_1ga20181bbcd6ae25ba49cadf11c636d4b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1_field_1_1_merge_options" kindref="compound">Field::MergeOptions</ref><sp/>field_merge_options<sp/>=<sp/><ref refid="structarrow_1_1_field_1_1_merge_options_1aad6ec10fe86793101bf688bbf9c9ad96" kindref="member">Field::MergeOptions::Defaults</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="group__concat-tables_1ga1f99414177f1507f6efa3471cb650bbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_concatenate_tables_options" kindref="compound">ConcatenateTablesOptions</ref><sp/><ref refid="group__concat-tables_1ga1f99414177f1507f6efa3471cb650bbb" kindref="member">Defaults</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1_concatenate_tables_options" kindref="compound">ConcatenateTablesOptions</ref>();<sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/><ref refid="group__concat-tables_1ga6272e4a6555d62afc43b2845d8616eb7" kindref="member">ConcatenateTables</ref>(</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Table&gt;&gt;&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarrow_1_1_concatenate_tables_options" kindref="compound">ConcatenateTablesOptions</ref><sp/>options<sp/>=<sp/><ref refid="group__concat-tables_1ga1f99414177f1507f6efa3471cb650bbb" kindref="member">ConcatenateTablesOptions::Defaults</ref>(),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>memory_pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">ARROW_EXPORT</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="classarrow_1_1_result" kindref="compound">Result&lt;std::shared_ptr&lt;Table&gt;</ref>&gt;<sp/><ref refid="group__concat-tables_1ga4b46a73d9d5aba02b66257039342c5a3" kindref="member">PromoteTableToSchema</ref>(</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Table&gt;&amp;<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Schema&gt;&amp;<sp/><ref refid="group__schema-factories_1gab03f1059d8776b1e85ee93c7cd03a078" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_memory_pool" kindref="compound">MemoryPool</ref>*<sp/>pool<sp/>=<sp/><ref refid="namespacearrow_1aebe81d544faaf827b8f32c5a80b99820" kindref="member">default_memory_pool</ref>());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/table.h"/>
  </compounddef>
</doxygen>
