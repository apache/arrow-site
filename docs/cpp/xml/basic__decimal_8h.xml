<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="basic__decimal_8h" kind="file" language="C++">
    <compoundname>basic_decimal.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">limits</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes refid="macros_8h" local="yes">arrow/util/macros.h</includes>
    <includes refid="util_2type__traits_8h" local="yes">arrow/util/type_traits.h</includes>
    <includes refid="arrow_2util_2visibility_8h" local="yes">arrow/util/visibility.h</includes>
    <includedby refid="util_2decimal_8h" local="yes">/arrow/cpp/src/arrow/util/decimal.h</includedby>
    <includedby refid="basic__decimal__scalar_8h" local="yes">/arrow/cpp/src/gandiva/basic_decimal_scalar.h</includedby>
    <incdepgraph>
      <node id="11721">
        <label>limits</label>
      </node>
      <node id="11720">
        <label>cstdint</label>
      </node>
      <node id="11722">
        <label>string</label>
      </node>
      <node id="11726">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="11719">
        <label>array</label>
      </node>
      <node id="11718">
        <label>/arrow/cpp/src/arrow/util/basic_decimal.h</label>
        <link refid="basic__decimal_8h"/>
        <childnode refid="11719" relation="include">
        </childnode>
        <childnode refid="11720" relation="include">
        </childnode>
        <childnode refid="11721" relation="include">
        </childnode>
        <childnode refid="11722" relation="include">
        </childnode>
        <childnode refid="11723" relation="include">
        </childnode>
        <childnode refid="11724" relation="include">
        </childnode>
        <childnode refid="11725" relation="include">
        </childnode>
        <childnode refid="11726" relation="include">
        </childnode>
      </node>
      <node id="11723">
        <label>type_traits</label>
      </node>
      <node id="11724">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="11720" relation="include">
        </childnode>
      </node>
      <node id="11725">
        <label>arrow/util/type_traits.h</label>
        <link refid="util_2type__traits_8h"/>
        <childnode refid="11723" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11755">
        <label>/arrow/cpp/src/arrow/array/dict_internal.h</label>
        <link refid="dict__internal_8h"/>
      </node>
      <node id="11745">
        <label>/arrow/cpp/src/arrow/compute/kernels/filter.h</label>
        <link refid="arrow_2compute_2kernels_2filter_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11750">
        <label>/arrow/cpp/src/arrow/compute/kernels/sort_to_indices.h</label>
        <link refid="sort__to__indices_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11734">
        <label>/arrow/cpp/src/arrow/compute/kernels/aggregate.h</label>
        <link refid="aggregate_8h"/>
        <childnode refid="11735" relation="include">
        </childnode>
      </node>
      <node id="11764">
        <label>/arrow/cpp/src/gandiva/function_holder_registry.h</label>
        <link refid="function__holder__registry_8h"/>
      </node>
      <node id="11770">
        <label>/arrow/cpp/src/gandiva/precompiled/decimal_ops.h</label>
        <link refid="decimal__ops_8h"/>
      </node>
      <node id="11735">
        <label>/arrow/cpp/src/arrow/compute/kernels/sum_internal.h</label>
        <link refid="sum__internal_8h"/>
      </node>
      <node id="11751">
        <label>/arrow/cpp/src/arrow/compute/kernels/take.h</label>
        <link refid="take_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11739">
        <label>/arrow/cpp/src/arrow/dataset/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="11740" relation="include">
        </childnode>
        <childnode refid="11741" relation="include">
        </childnode>
      </node>
      <node id="11743">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
        <childnode refid="11738" relation="include">
        </childnode>
      </node>
      <node id="11754">
        <label>/arrow/cpp/src/arrow/visitor_inline.h</label>
        <link refid="visitor__inline_8h"/>
        <childnode refid="11755" relation="include">
        </childnode>
        <childnode refid="11756" relation="include">
        </childnode>
      </node>
      <node id="11733">
        <label>/arrow/cpp/src/arrow/compute/kernels/add.h</label>
        <link refid="add_8h"/>
      </node>
      <node id="11767">
        <label>/arrow/cpp/src/gandiva/to_date_holder.h</label>
        <link refid="to__date__holder_8h"/>
        <childnode refid="11764" relation="include">
        </childnode>
      </node>
      <node id="11769">
        <label>/arrow/cpp/src/gandiva/basic_decimal_scalar.h</label>
        <link refid="basic__decimal__scalar_8h"/>
        <childnode refid="11757" relation="include">
        </childnode>
        <childnode refid="11770" relation="include">
        </childnode>
      </node>
      <node id="11748">
        <label>/arrow/cpp/src/arrow/compute/kernels/match.h</label>
        <link refid="match_8h"/>
      </node>
      <node id="11766">
        <label>/arrow/cpp/src/gandiva/random_generator_holder.h</label>
        <link refid="random__generator__holder_8h"/>
        <childnode refid="11764" relation="include">
        </childnode>
      </node>
      <node id="11749">
        <label>/arrow/cpp/src/arrow/compute/kernels/nth_to_indices.h</label>
        <link refid="nth__to__indices_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11741">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="11738" relation="include">
        </childnode>
        <childnode refid="11742" relation="include">
        </childnode>
        <childnode refid="11743" relation="include">
        </childnode>
      </node>
      <node id="11740">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="11738" relation="include">
        </childnode>
      </node>
      <node id="11747">
        <label>/arrow/cpp/src/arrow/compute/kernels/isin.h</label>
        <link refid="isin_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11759">
        <label>/arrow/cpp/src/gandiva/dex.h</label>
        <link refid="dex_8h"/>
        <childnode refid="11760" relation="include">
        </childnode>
      </node>
      <node id="11768">
        <label>/arrow/cpp/src/gandiva/tree_expr_builder.h</label>
        <link refid="tree__expr__builder_8h"/>
      </node>
      <node id="11731">
        <label>/arrow/cpp/src/arrow/compute/api.h</label>
        <link refid="compute_2api_8h"/>
        <childnode refid="11732" relation="include">
        </childnode>
      </node>
      <node id="11761">
        <label>/arrow/cpp/src/gandiva/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="11762" relation="include">
        </childnode>
        <childnode refid="11763" relation="include">
        </childnode>
        <childnode refid="11764" relation="include">
        </childnode>
        <childnode refid="11765" relation="include">
        </childnode>
        <childnode refid="11766" relation="include">
        </childnode>
        <childnode refid="11767" relation="include">
        </childnode>
      </node>
      <node id="11760">
        <label>/arrow/cpp/src/gandiva/bitmap_accumulator.h</label>
        <link refid="bitmap__accumulator_8h"/>
      </node>
      <node id="11753">
        <label>/arrow/cpp/src/arrow/dataset/dataset_internal.h</label>
        <link refid="dataset__internal_8h"/>
        <childnode refid="11744" relation="include">
        </childnode>
      </node>
      <node id="11727">
        <label>/arrow/cpp/src/arrow/util/basic_decimal.h</label>
        <link refid="basic__decimal_8h"/>
        <childnode refid="11728" relation="include">
        </childnode>
        <childnode refid="11769" relation="include">
        </childnode>
      </node>
      <node id="11744">
        <label>/arrow/cpp/src/arrow/dataset/scanner_internal.h</label>
        <link refid="scanner__internal_8h"/>
      </node>
      <node id="11730">
        <label>/arrow/cpp/src/arrow/compute/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
        <childnode refid="11733" relation="include">
        </childnode>
        <childnode refid="11734" relation="include">
        </childnode>
        <childnode refid="11736" relation="include">
        </childnode>
        <childnode refid="11745" relation="include">
        </childnode>
        <childnode refid="11746" relation="include">
        </childnode>
        <childnode refid="11747" relation="include">
        </childnode>
        <childnode refid="11748" relation="include">
        </childnode>
        <childnode refid="11749" relation="include">
        </childnode>
        <childnode refid="11750" relation="include">
        </childnode>
        <childnode refid="11735" relation="include">
        </childnode>
        <childnode refid="11751" relation="include">
        </childnode>
        <childnode refid="11752" relation="include">
        </childnode>
        <childnode refid="11737" relation="include">
        </childnode>
      </node>
      <node id="11742">
        <label>/arrow/cpp/src/arrow/dataset/file_ipc.h</label>
        <link refid="file__ipc_8h"/>
        <childnode refid="11738" relation="include">
        </childnode>
      </node>
      <node id="11752">
        <label>/arrow/cpp/src/arrow/compute/kernels/util_internal.h</label>
        <link refid="compute_2kernels_2util__internal_8h"/>
      </node>
      <node id="11728">
        <label>/arrow/cpp/src/arrow/util/decimal.h</label>
        <link refid="util_2decimal_8h"/>
        <childnode refid="11729" relation="include">
        </childnode>
        <childnode refid="11757" relation="include">
        </childnode>
      </node>
      <node id="11756">
        <label>/arrow/cpp/src/arrow/compute/kernels/take_internal.h</label>
        <link refid="take__internal_8h"/>
      </node>
      <node id="11736">
        <label>/arrow/cpp/src/arrow/compute/kernels/compare.h</label>
        <link refid="compute_2kernels_2compare_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
        <childnode refid="11737" relation="include">
        </childnode>
      </node>
      <node id="11757">
        <label>/arrow/cpp/src/gandiva/decimal_scalar.h</label>
        <link refid="decimal__scalar_8h"/>
        <childnode refid="11758" relation="include">
        </childnode>
        <childnode refid="11768" relation="include">
        </childnode>
      </node>
      <node id="11737">
        <label>/arrow/cpp/src/arrow/dataset/filter.h</label>
        <link refid="arrow_2dataset_2filter_8h"/>
        <childnode refid="11738" relation="include">
        </childnode>
        <childnode refid="11739" relation="include">
        </childnode>
        <childnode refid="11744" relation="include">
        </childnode>
      </node>
      <node id="11746">
        <label>/arrow/cpp/src/arrow/compute/kernels/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
      <node id="11758">
        <label>/arrow/cpp/src/gandiva/literal_holder.h</label>
        <link refid="literal__holder_8h"/>
        <childnode refid="11759" relation="include">
        </childnode>
        <childnode refid="11761" relation="include">
        </childnode>
      </node>
      <node id="11729">
        <label>/arrow/cpp/src/arrow/scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="11730" relation="include">
        </childnode>
        <childnode refid="11753" relation="include">
        </childnode>
        <childnode refid="11737" relation="include">
        </childnode>
        <childnode refid="11754" relation="include">
        </childnode>
      </node>
      <node id="11765">
        <label>/arrow/cpp/src/gandiva/like_holder.h</label>
        <link refid="like__holder_8h"/>
        <childnode refid="11764" relation="include">
        </childnode>
      </node>
      <node id="11762">
        <label>/arrow/cpp/src/gandiva/expr_decomposer.h</label>
        <link refid="expr__decomposer_8h"/>
      </node>
      <node id="11763">
        <label>/arrow/cpp/src/gandiva/expr_validator.h</label>
        <link refid="expr__validator_8h"/>
      </node>
      <node id="11732">
        <label>/arrow/cpp/src/arrow/stl.h</label>
        <link refid="stl_8h"/>
      </node>
      <node id="11738">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1_basic_decimal128" prot="public">arrow::BasicDecimal128</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8h" kindref="compound">arrow/util/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_2type__traits_8h" kindref="compound">arrow/util/type_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arrow_2util_2visibility_8h" kindref="compound">arrow/util/visibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2" kindref="member">DecimalStatus</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2a8c632159fa131f09d04f94e3cbcd8782" kindref="member">kSuccess</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2a41ef173591458a0b06e7f793fb7ed46c" kindref="member">kDivideByZero</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2aae5484a6f25ec42ff2fc33b0fc8bc2d5" kindref="member">kOverflow</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2ac1d48c17e57675d19e1fdb51b625e8c3" kindref="member">kRescaleDataLoss</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classarrow_1_1_basic_decimal128" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classarrow_1_1_basic_decimal128_1ab8dbd8183a4e271acf6810a2a220b846" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classarrow_1_1_basic_decimal128_1ab8dbd8183a4e271acf6810a2a220b846" kindref="member">BasicDecimal128</ref>(int64_t<sp/>high,<sp/>uint64_t<sp/>low)<sp/>noexcept</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>low_bits_(low),<sp/>high_bits_(high)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classarrow_1_1_basic_decimal128_1abd9623ff9a68dddc986d799669b755c6" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classarrow_1_1_basic_decimal128_1abd9623ff9a68dddc986d799669b755c6" kindref="member">BasicDecimal128</ref>()<sp/>noexcept<sp/>:<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>(0,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_integral&lt;T&gt;::value,<sp/>T&gt;::type&gt;</highlight></codeline>
<codeline lineno="55" refid="classarrow_1_1_basic_decimal128_1a5a2c65217e065edf4489d5d0577335ed" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classarrow_1_1_basic_decimal128_1a5a2c65217e065edf4489d5d0577335ed" kindref="member">BasicDecimal128</ref>(T<sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>(static_cast&lt;int64_t&gt;(value)<sp/>&gt;=<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-1,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;uint64_t&gt;(value))<sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>bytes);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>Negate();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>Abs();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/>Abs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2" kindref="member">DecimalStatus</ref><sp/><ref refid="namespacegandiva_1_1decimalops_1a7325e9f3f1c160ffc16e7c7dee3bda37" kindref="member">Divide</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>divisor,<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>*<sp/>result,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>*<sp/>remainder)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator|=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator&amp;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator&lt;&lt;=(uint32_t<sp/>bits);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operator&gt;&gt;=(uint32_t<sp/>bits);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classarrow_1_1_basic_decimal128_1a37cbf86250dd19b6e99bc2fcaf7faffe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classarrow_1_1_basic_decimal128_1a37cbf86250dd19b6e99bc2fcaf7faffe" kindref="member">high_bits</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>high_bits_;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classarrow_1_1_basic_decimal128_1aa666ec294a59f7f84ae7b1efa29d8f1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classarrow_1_1_basic_decimal128_1aa666ec294a59f7f84ae7b1efa29d8f1b" kindref="member">low_bits</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>low_bits_;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>std::array&lt;uint8_t,<sp/>16&gt;<sp/>ToBytes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToBytes(uint8_t*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetWholeAndFraction(int32_t<sp/>scale,<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>*<sp/>whole,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>*<sp/>fraction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>GetScaleMultiplier(int32_t<sp/>scale);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="namespacearrow_1a57a966e51cab768580c6f9a9427f34d2" kindref="member">DecimalStatus</ref><sp/>Rescale(int32_t<sp/>original_scale,<sp/>int32_t<sp/>new_scale,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>*<sp/>out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/>IncreaseScaleBy(int32_t<sp/>increase_by)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/>ReduceScaleBy(int32_t<sp/>reduce_by,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>round<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>for<sp/>positive<sp/>and<sp/>zero<sp/>decimal<sp/>values,<sp/>-1<sp/>for<sp/>negative<sp/>decimal<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classarrow_1_1_basic_decimal128_1a57946ec32781f328df74209d9b88253e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classarrow_1_1_basic_decimal128_1a57946ec32781f328df74209d9b88253e" kindref="member">Sign</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>|<sp/>(high_bits_<sp/>&gt;&gt;<sp/>63);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>int32_t<sp/>CountLeadingBinaryZeros()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>GetMaxValue();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>uint64_t<sp/>low_bits_;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>int64_t<sp/>high_bits_;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acbf9e156c4a8a01745d20c33a22f1f28" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1ae7e5d5239907d98d4d80c80616f8bee7" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a193e2bb54c6f5de5e388b2edd534a57c" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1acb54a5f01d82053eb4779c29aabd9a89" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a80697b084df40ebe8094fee62e8e5192" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1a92b97ff62146c0a0e2aeb702b9fddb77" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1a4ae9b9602fea3bcd4bf6d9a45c011f4d" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operand);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1a7cf501b98a8ee4d346febfa3e96bc8e7" kindref="member">operator~</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>operand);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1ae8e15d3146feab799b2bac1848f2df94" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1a4ae9b9602fea3bcd4bf6d9a45c011f4d" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1ab6773885c4f560a78057a4455d422a7f" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1a79a236ea3b1930a4f78adcbdf0832ba8" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref><sp/><ref refid="namespacearrow_1a52f812806d0a240278b246de398438bc" kindref="member">operator%</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>left,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_basic_decimal128" kindref="compound">BasicDecimal128</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/util/basic_decimal.h"/>
  </compounddef>
</doxygen>
