<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgandiva_1_1_exported_funcs_registry" kind="class" language="C++" prot="public">
    <compoundname>gandiva::ExportedFuncsRegistry</compoundname>
    <includes refid="exported__funcs__registry_8h" local="no">gandiva/exported_funcs_registry.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgandiva_1_1_exported_funcs_registry_1a01dd725f04d1f14b8a0d9eb5996d9110" prot="public" static="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classgandiva_1_1_exported_funcs_base" kindref="compound">ExportedFuncsBase</ref> &gt; &gt;</type>
        <definition>using gandiva::ExportedFuncsRegistry::list_type =  std::vector&lt;std::shared_ptr&lt;ExportedFuncsBase&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>list_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/exported_funcs_registry.h" line="33" column="1" bodyfile="/arrow/cpp/src/gandiva/exported_funcs_registry.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgandiva_1_1_exported_funcs_registry_1aa9329c6c6aa7e223984fbca2584d2b68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gandiva::ExportedFuncsRegistry::AddMappings</definition>
        <argsstring>(Engine *engine)</argsstring>
        <name>AddMappings</name>
        <param>
          <type><ref refid="classgandiva_1_1_engine" kindref="compound">Engine</ref> *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/exported_funcs_registry.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgandiva_1_1_exported_funcs_registry_1acbcdf55353584a2fc6d0c5f9991d7250" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gandiva::ExportedFuncsRegistry::Register</definition>
        <argsstring>(std::shared_ptr&lt; ExportedFuncsBase &gt; entry)</argsstring>
        <name>Register</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classgandiva_1_1_exported_funcs_base" kindref="compound">ExportedFuncsBase</ref> &gt;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/exported_funcs_registry.h" line="38" column="1" bodyfile="/arrow/cpp/src/gandiva/exported_funcs_registry.h" bodystart="38" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classgandiva_1_1_exported_funcs_registry_1aeb0559ce77f79858ecc4b31f571c1fcb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgandiva_1_1_exported_funcs_registry_1a01dd725f04d1f14b8a0d9eb5996d9110" kindref="member">list_type</ref> &amp;</type>
        <definition>static list_type&amp; gandiva::ExportedFuncsRegistry::registered</definition>
        <argsstring>()</argsstring>
        <name>registered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/arrow/cpp/src/gandiva/exported_funcs_registry.h" line="44" column="1" bodyfile="/arrow/cpp/src/gandiva/exported_funcs_registry.h" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Registry for classes that export functions which can be accessed by LLVM/IR code. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/arrow/cpp/src/gandiva/exported_funcs_registry.h" line="31" column="1" bodyfile="/arrow/cpp/src/gandiva/exported_funcs_registry.h" bodystart="31" bodyend="48"/>
    <listofallmembers>
      <member refid="classgandiva_1_1_exported_funcs_registry_1aa9329c6c6aa7e223984fbca2584d2b68" prot="public" virt="non-virtual"><scope>gandiva::ExportedFuncsRegistry</scope><name>AddMappings</name></member>
      <member refid="classgandiva_1_1_exported_funcs_registry_1a01dd725f04d1f14b8a0d9eb5996d9110" prot="public" virt="non-virtual"><scope>gandiva::ExportedFuncsRegistry</scope><name>list_type</name></member>
      <member refid="classgandiva_1_1_exported_funcs_registry_1acbcdf55353584a2fc6d0c5f9991d7250" prot="public" virt="non-virtual"><scope>gandiva::ExportedFuncsRegistry</scope><name>Register</name></member>
      <member refid="classgandiva_1_1_exported_funcs_registry_1aeb0559ce77f79858ecc4b31f571c1fcb" prot="private" virt="non-virtual"><scope>gandiva::ExportedFuncsRegistry</scope><name>registered</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
