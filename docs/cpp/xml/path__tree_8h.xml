<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="path__tree_8h" kind="file" language="C++">
    <compoundname>path_tree.h</compoundname>
    <includes refid="filesystem_8h" local="yes">arrow/filesystem/filesystem.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="status_8h" local="yes">arrow/status.h</includes>
    <includedby refid="discovery_8h" local="yes">/arrow/cpp/src/arrow/dataset/discovery.h</includedby>
    <includedby refid="file__base_8h" local="yes">/arrow/cpp/src/arrow/dataset/file_base.h</includedby>
    <incdepgraph>
      <node id="5823">
        <label>arrow/util/compare.h</label>
        <link refid="util_2compare_8h"/>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5825" relation="include">
        </childnode>
      </node>
      <node id="5815">
        <label>cstdint</label>
      </node>
      <node id="5820">
        <label>arrow/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="5821" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5825" relation="include">
        </childnode>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5818">
        <label>string</label>
      </node>
      <node id="5827">
        <label>ostream</label>
      </node>
      <node id="5828">
        <label>arrow/util/visibility.h</label>
        <link refid="arrow_2util_2visibility_8h"/>
      </node>
      <node id="5819">
        <label>vector</label>
      </node>
      <node id="5822">
        <label>utility</label>
      </node>
      <node id="5816">
        <label>iosfwd</label>
      </node>
      <node id="5814">
        <label>chrono</label>
      </node>
      <node id="5824">
        <label>type_traits</label>
      </node>
      <node id="5829">
        <label>algorithm</label>
      </node>
      <node id="5813">
        <label>arrow/filesystem/filesystem.h</label>
        <link refid="filesystem_8h"/>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5812">
        <label>/arrow/cpp/src/arrow/filesystem/path_tree.h</label>
        <link refid="path__tree_8h"/>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
      </node>
      <node id="5821">
        <label>cstring</label>
      </node>
      <node id="5826">
        <label>arrow/util/string_builder.h</label>
        <link refid="string__builder_8h"/>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5817">
        <label>memory</label>
      </node>
      <node id="5825">
        <label>arrow/util/macros.h</label>
        <link refid="macros_8h"/>
        <childnode refid="5815" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5837">
        <label>/arrow/cpp/src/arrow/dataset/file_parquet.h</label>
        <link refid="file__parquet_8h"/>
      </node>
      <node id="5834">
        <label>/arrow/cpp/src/arrow/dataset/file_csv.h</label>
        <link refid="file__csv_8h"/>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5833">
        <label>/arrow/cpp/src/arrow/dataset/file_base.h</label>
        <link refid="file__base_8h"/>
        <childnode refid="5832" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5835" relation="include">
        </childnode>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5837" relation="include">
        </childnode>
      </node>
      <node id="5831">
        <label>/arrow/cpp/src/arrow/dataset/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5835">
        <label>/arrow/cpp/src/arrow/dataset/file_feather.h</label>
        <link refid="file__feather_8h"/>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5836">
        <label>/arrow/cpp/src/arrow/dataset/file_json.h</label>
        <link refid="file__json_8h"/>
      </node>
      <node id="5830">
        <label>/arrow/cpp/src/arrow/filesystem/path_tree.h</label>
        <link refid="path__tree_8h"/>
        <childnode refid="5831" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
      </node>
      <node id="5832">
        <label>/arrow/cpp/src/arrow/dataset/api.h</label>
        <link refid="dataset_2api_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classarrow_1_1fs_1_1_path_tree" prot="public">arrow::fs::PathTree</innerclass>
    <innernamespace refid="namespacearrow">arrow</innernamespace>
    <innernamespace refid="namespacearrow_1_1fs">arrow::fs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filesystem_8h" kindref="compound">arrow/filesystem/filesystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">arrow/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearrow" kindref="compound">arrow</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/>PathTree;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacearrow_1_1fs_1aa6da16a5d04ee7f671fbae87fb988731" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1fs_1aa6da16a5d04ee7f671fbae87fb988731" kindref="member">PathForest</ref><sp/>=<sp/>std::vector&lt;std::shared_ptr&lt;PathTree&gt;&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classarrow_1_1fs_1_1_path_tree" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ARROW_EXPORT<sp/><ref refid="classarrow_1_1fs_1_1_path_tree" kindref="compound">PathTree</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classarrow_1_1fs_1_1_path_tree_1a34f9c2843286a8c2bdef67d131547e2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a34f9c2843286a8c2bdef67d131547e2f" kindref="member">PathTree</ref>(<ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref><sp/>stats)<sp/>:<sp/>stats_(stats)<sp/>{}</highlight></codeline>
<codeline lineno="44" refid="classarrow_1_1fs_1_1_path_tree_1a75e85b0eb1b31bad9d602f2663790bac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a75e85b0eb1b31bad9d602f2663790bac" kindref="member">PathTree</ref>(<ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref><sp/>stats,<sp/>std::vector&lt;std::shared_ptr&lt;PathTree&gt;&gt;<sp/>subtrees)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stats_(stats),<sp/>subtrees_(<ref refid="namespacestd" kindref="compound">std</ref>::move(subtrees))<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Make(std::vector&lt;FileStats&gt;<sp/>stats,<sp/><ref refid="namespacearrow_1_1fs_1aa6da16a5d04ee7f671fbae87fb988731" kindref="member">PathForest</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/>Make(std::vector&lt;FileStats&gt;<sp/>stats,<sp/>std::shared_ptr&lt;PathTree&gt;*<sp/>out);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classarrow_1_1fs_1_1_path_tree_1a8e402764301e5701b977ce28170e7cf9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a8e402764301e5701b977ce28170e7cf9" kindref="member">stats</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats_;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="classarrow_1_1fs_1_1_path_tree_1a7a2b50276487e2c4afff23833845b808" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;PathTree&gt;&gt;<sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a7a2b50276487e2c4afff23833845b808" kindref="member">subtrees</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subtrees_;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Matcher&gt;</highlight></codeline>
<codeline lineno="62" refid="classarrow_1_1fs_1_1_path_tree_1aea2ac06aa75ab63957b54fe6ce0d992e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1aea2ac06aa75ab63957b54fe6ce0d992e" kindref="member">Visit</ref>(Visitor&amp;&amp;<sp/>v,<sp/>Matcher&amp;&amp;<sp/>m)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(m(stats_,<sp/>&amp;match));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!match)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(v(stats_));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>t<sp/>:<sp/>subtrees_)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="status_8h_1a4a98c16fff26a2c4cf8c26d9244c1cb4" kindref="member">ARROW_RETURN_NOT_OK</ref>(t-&gt;Visit(v,<sp/>m));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="79" refid="classarrow_1_1fs_1_1_path_tree_1a097a8d48c40bdd1329d8ae7752f603a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classarrow_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a097a8d48c40bdd1329d8ae7752f603a1" kindref="member">Visit</ref>(Visitor&amp;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>always_match<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref>&amp;<sp/>t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>match)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1_status_1a5c0b0031db6eeec3dcc70485d24cfe03" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Visit(v,<sp/>always_match);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classarrow_1_1fs_1_1_path_tree_1aeb19ea37959ab1e6f4c00bfdaa7750d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1aeb19ea37959ab1e6f4c00bfdaa7750d9" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_path_tree" kindref="compound">PathTree</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats_<sp/>==<sp/>other.<ref refid="classarrow_1_1fs_1_1_path_tree_1a57996ea51e225f74ad6e8dbe2c20f3e5" kindref="member">stats_</ref><sp/>&amp;&amp;<sp/>subtrees_<sp/>==<sp/>other.<ref refid="classarrow_1_1fs_1_1_path_tree_1afe0868e3223d43f16b185a32cb53c518" kindref="member">subtrees_</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classarrow_1_1fs_1_1_path_tree_1a57996ea51e225f74ad6e8dbe2c20f3e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structarrow_1_1fs_1_1_file_stats" kindref="compound">FileStats</ref><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a57996ea51e225f74ad6e8dbe2c20f3e5" kindref="member">stats_</ref>;</highlight></codeline>
<codeline lineno="93" refid="classarrow_1_1fs_1_1_path_tree_1afe0868e3223d43f16b185a32cb53c518" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;PathTree&gt;&gt;<sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1afe0868e3223d43f16b185a32cb53c518" kindref="member">subtrees_</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>AddChild<sp/>method<sp/>is<sp/>convenient<sp/>to<sp/>create<sp/>trees<sp/>in<sp/>a<sp/>top-down<sp/>fashion,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>the<sp/>Make<sp/>factory<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classarrow_1_1fs_1_1_path_tree_1a919483a888e023f6f281af99fc40b5d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_path_tree_1a919483a888e023f6f281af99fc40b5d8" kindref="member">AddChild</ref>(std::shared_ptr&lt;PathTree&gt;<sp/>child)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>subtrees_.push_back(std::move(child));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">ARROW_EXPORT<sp/>std::ostream&amp;<sp/><ref refid="namespacearrow_1_1fs_1a5d0258ac07dca9fc4234115b2d6a4985" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PathTree&gt;&amp;<sp/>tree);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">ARROW_EXPORT<sp/>std::ostream&amp;<sp/><ref refid="namespacearrow_1_1fs_1a5d0258ac07dca9fc4234115b2d6a4985" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classarrow_1_1fs_1_1_path_tree" kindref="compound">PathTree</ref>&amp;<sp/>tree);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ARROW_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacearrow_1_1fs_1a63c79f98d2fa0151ee2e9fb68cef9c1a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PathTree&gt;&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PathTree&gt;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/arrow/cpp/src/arrow/filesystem/path_tree.h"/>
  </compounddef>
</doxygen>
